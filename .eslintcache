[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\CheckedInPatients.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"17","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"18","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"19","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"20","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"21","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js":"22","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"23","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"24","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js":"25","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js":"26","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"27","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"28","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"29","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js":"30","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js":"31","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js":"32","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js":"33","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js":"34","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"35","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"36","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js":"37","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js":"38","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js":"39","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js":"40","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"41","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js":"42","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"43","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js":"44","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js":"45","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"46","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"47","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js":"48","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js":"49","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js":"50","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"51","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js":"52","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"53","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js":"54","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"55","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"56","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"57","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"58","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"59","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"60","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"61","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"62","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"63","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"64","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"65","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"66","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js":"67","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"68","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js":"69","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"70","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"71","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"72","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"73","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"74","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"75"},{"size":715,"mtime":1712310613394,"results":"76","hashOfConfig":"77"},{"size":1506,"mtime":1721916148929,"results":"78","hashOfConfig":"77"},{"size":362,"mtime":1712310614538,"results":"79","hashOfConfig":"77"},{"size":8947,"mtime":1712310614565,"results":"80","hashOfConfig":"77"},{"size":4358,"mtime":1722780974332,"results":"81","hashOfConfig":"77"},{"size":4416,"mtime":1721916149040,"results":"82","hashOfConfig":"77"},{"size":26298,"mtime":1722634702897,"results":"83","hashOfConfig":"77"},{"size":2920,"mtime":1712310614581,"results":"84","hashOfConfig":"77"},{"size":13914,"mtime":1718870139807,"results":"85","hashOfConfig":"77"},{"size":10066,"mtime":1721637734680,"results":"86","hashOfConfig":"77"},{"size":483,"mtime":1722780298109,"results":"87","hashOfConfig":"77"},{"size":8692,"mtime":1721916148954,"results":"88","hashOfConfig":"77"},{"size":10750,"mtime":1721916149038,"results":"89","hashOfConfig":"77"},{"size":25151,"mtime":1722634629550,"results":"90","hashOfConfig":"77"},{"size":9782,"mtime":1721648178693,"results":"91","hashOfConfig":"77"},{"size":130882,"mtime":1721916148988,"results":"92","hashOfConfig":"77"},{"size":6540,"mtime":1712310696855,"results":"93","hashOfConfig":"77"},{"size":7139,"mtime":1722634473087,"results":"94","hashOfConfig":"77"},{"size":29186,"mtime":1722633313216,"results":"95","hashOfConfig":"77"},{"size":38919,"mtime":1722634142196,"results":"96","hashOfConfig":"77"},{"size":84361,"mtime":1722632359253,"results":"97","hashOfConfig":"77"},{"size":68217,"mtime":1721916149023,"results":"98","hashOfConfig":"77"},{"size":73646,"mtime":1722550005233,"results":"99","hashOfConfig":"77"},{"size":72569,"mtime":1722631307111,"results":"100","hashOfConfig":"77"},{"size":8939,"mtime":1713955453347,"results":"101","hashOfConfig":"77"},{"size":100573,"mtime":1722626794602,"results":"102","hashOfConfig":"77"},{"size":57072,"mtime":1722631145958,"results":"103","hashOfConfig":"77"},{"size":12541,"mtime":1712310696150,"results":"104","hashOfConfig":"77"},{"size":2102,"mtime":1712310696381,"results":"105","hashOfConfig":"77"},{"size":90118,"mtime":1722627157574,"results":"106","hashOfConfig":"77"},{"size":8685,"mtime":1713879620172,"results":"107","hashOfConfig":"77"},{"size":3172,"mtime":1713872942672,"results":"108","hashOfConfig":"77"},{"size":1245,"mtime":1719092692515,"results":"109","hashOfConfig":"77"},{"size":12536,"mtime":1722780915944,"results":"110","hashOfConfig":"77"},{"size":7778,"mtime":1712310696406,"results":"111","hashOfConfig":"77"},{"size":40569,"mtime":1712310696366,"results":"112","hashOfConfig":"77"},{"size":10912,"mtime":1714468215943,"results":"113","hashOfConfig":"77"},{"size":10623,"mtime":1713883031176,"results":"114","hashOfConfig":"77"},{"size":66792,"mtime":1718870139907,"results":"115","hashOfConfig":"77"},{"size":29000,"mtime":1714468215928,"results":"116","hashOfConfig":"77"},{"size":40569,"mtime":1712310695935,"results":"117","hashOfConfig":"77"},{"size":7903,"mtime":1718870139823,"results":"118","hashOfConfig":"77"},{"size":29656,"mtime":1722631395744,"results":"119","hashOfConfig":"77"},{"size":5229,"mtime":1718870139807,"results":"120","hashOfConfig":"77"},{"size":7618,"mtime":1721916148949,"results":"121","hashOfConfig":"77"},{"size":2530,"mtime":1712310696934,"results":"122","hashOfConfig":"77"},{"size":1137,"mtime":1712310697139,"results":"123","hashOfConfig":"77"},{"size":109943,"mtime":1721916149006,"results":"124","hashOfConfig":"77"},{"size":50316,"mtime":1722634996413,"results":"125","hashOfConfig":"77"},{"size":90240,"mtime":1721916149010,"results":"126","hashOfConfig":"77"},{"size":31946,"mtime":1722635809323,"results":"127","hashOfConfig":"77"},{"size":2353,"mtime":1718870139860,"results":"128","hashOfConfig":"77"},{"size":38681,"mtime":1722636142330,"results":"129","hashOfConfig":"77"},{"size":10518,"mtime":1722250472546,"results":"130","hashOfConfig":"77"},{"size":12541,"mtime":1712310696598,"results":"131","hashOfConfig":"77"},{"size":111336,"mtime":1722635464781,"results":"132","hashOfConfig":"77"},{"size":82310,"mtime":1722635314557,"results":"133","hashOfConfig":"77"},{"size":35700,"mtime":1722635167511,"results":"134","hashOfConfig":"77"},{"size":2177,"mtime":1712310696802,"results":"135","hashOfConfig":"77"},{"size":43165,"mtime":1722631693755,"results":"136","hashOfConfig":"77"},{"size":46499,"mtime":1722631162363,"results":"137","hashOfConfig":"77"},{"size":31053,"mtime":1722633498827,"results":"138","hashOfConfig":"77"},{"size":77405,"mtime":1722632802800,"results":"139","hashOfConfig":"77"},{"size":2199,"mtime":1712310695950,"results":"140","hashOfConfig":"77"},{"size":12541,"mtime":1712310695818,"results":"141","hashOfConfig":"77"},{"size":35697,"mtime":1722634193120,"results":"142","hashOfConfig":"77"},{"size":127409,"mtime":1721916148984,"results":"143","hashOfConfig":"77"},{"size":80774,"mtime":1722632347330,"results":"144","hashOfConfig":"77"},{"size":64480,"mtime":1721916148963,"results":"145","hashOfConfig":"77"},{"size":1172,"mtime":1712310697234,"results":"146","hashOfConfig":"77"},{"size":1163,"mtime":1712310697108,"results":"147","hashOfConfig":"77"},{"size":1540,"mtime":1712310697218,"results":"148","hashOfConfig":"77"},{"size":7777,"mtime":1712310696833,"results":"149","hashOfConfig":"77"},{"size":41058,"mtime":1712310696787,"results":"150","hashOfConfig":"77"},{"size":7777,"mtime":1712310695966,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},"1cxhekk",{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"155"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"155"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"155"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"178","usedDeprecatedRules":"155"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"155"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"155"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"155"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"192","usedDeprecatedRules":"155"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"155"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"201","usedDeprecatedRules":"155"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"155"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":6,"source":"207","usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"155"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"155"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"155"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"155"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"155"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"155"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"155"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"155"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"155"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"155"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"155"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"155"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"155"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"155"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"155"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"155"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"155"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"155"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"155"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"155"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"155"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"155"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"281","usedDeprecatedRules":"155"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"155"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"155"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"155"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"155"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"155"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"155"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":6,"source":"304","usedDeprecatedRules":"155"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"307","usedDeprecatedRules":"155"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"155"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"155"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"155"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"155"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"155"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"155"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"155"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"155"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"155"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"155"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"155"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":"341","usedDeprecatedRules":"155"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"155"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"155"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"155"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"155"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"155"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"155"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"155"},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js",["366"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["367","368"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js",["369"],"import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport RegisterPatient from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\n//import RegisterPatientEnrollment from './main/webapp/jsx/components/Patient/RegisterPatientEnrollment';\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\n// import HIVSTPatientRegistration from './main/webapp/jsx/components/Patient/HIVST/HIVSTPatientRegistration';\r\nimport HIVSTPatient from \"./main/webapp/jsx/components/Patient/HIVST/HIVSTPatient\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route path=\"/patient-history\">\r\n          <PatientDetail />\r\n        </Route>\r\n        <Route path=\"/register-patient\">\r\n          <RegisterPatient />\r\n        </Route>\r\n        <Route path=\"/register-hivst-patient\">\r\n          <HIVSTPatient />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js",["370","371","372"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["373","374"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport PatientHtsEnrollment from \"./PatientHtsEnrollment\";\r\nimport ViewEditHivst from \"../Patient/HIVST/ViewEditHivst\";\r\nimport { calculate_age } from \"../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  let history = useHistory();\r\n  const patientObject =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObject\r\n      : {};\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const clientCode =\r\n    history.location && history.location.state\r\n      ? history.location.state.clientCode\r\n      : \"\";\r\n\r\n  const [activePage, setActivePage] = useState({\r\n    activePage: \"home\",\r\n    activeObject: {},\r\n    actionType: \"\",\r\n  });\r\n  useEffect(() => {}, [activePage]);\r\n  const patientAge = calculate_age(\r\n    moment(patientObj.dateOfBirth).format(\"YYYY-MM-DD\")\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>HTS /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            clientCode={clientCode}\r\n            patientObject={patientObject}\r\n          />\r\n          {activePage.activePage === \"home\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              activePage={\r\n                history?.location?.state?.activepage\r\n                  ? history?.location?.state?.activepage\r\n                  : \"home\"\r\n              }\r\n              checkedInPatient={\r\n                history?.location?.state?.checkedInPatient\r\n                  ? history?.location?.state?.checkedInPatient\r\n                  : \"\"\r\n              }\r\n              setActivePage={setActivePage}\r\n              clientCode={clientCode}\r\n              patientAge={patientAge}\r\n              patientObject={patientObject}\r\n            />\r\n          )}\r\n          {activePage.activePage === \"view\" && (\r\n            <PatientHtsEnrollment\r\n              patientObj={patientObj}\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              clientCode={clientCode}\r\n              patientAge={patientAge}\r\n              patientObject={patientObject}\r\n            />\r\n          )}\r\n\r\n          {activePage.activePage === \"hivst_view\" && (\r\n            <ViewEditHivst\r\n              patientObj={patientObj}\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              clientCode={clientCode}\r\n              patientAge={patientAge}\r\n              patientObject={patientObject}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["375","376","377","378","379","380","381","382","383","384","385","386","387"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport BasicInfo from \"./NewRegistration/BasicInfo\";\r\nimport PreTest from \"./NewRegistration/PreTest\";\r\nimport HivTestResult from \"./NewRegistration/HivTestResult\";\r\nimport IndexingContactTracing from \"./NewRegistration/Elicitation/Index\";\r\nimport Others from \"./NewRegistration/Others\";\r\nimport PostTest from \"./NewRegistration/PostTest\";\r\nimport RecencyTesting from \"./NewRegistration/RecencyTesting\";\r\nimport RiskStratification from \"./NewRegistration/RiskStratification\";\r\nimport ClientRefferalForm from \"./NewRegistration/RefferalForm\";\r\nimport { getAcount } from \"../../../utility\";\r\nimport { getCheckModality } from \"../../../utility\";\r\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\r\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\r\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\r\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\r\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  //const classes = useStyles();\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeItem, setactiveItem] = useState(\"risk\");\r\n  const [completed, setCompleted] = useState([]);\r\n  const [basicInfo, setBasicInfo] = useState({});\r\n  const [organizationInfo, setOrganizationInfo] = useState({});\r\n  const [patientObjAge, setPatientObjAge] = useState(0);\r\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n  const [row, setRow] = useState({});\r\n  const handleItemClick = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  const [permissions, setPermission] = useState(\r\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\r\n  );\r\n\r\nconsole.log(permissions);\r\n  const getFacilityAccount = () => {\r\n    getAcount()\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const [extra, setExtra] = useState({\r\n    risk: \"\",\r\n    index: \"\",\r\n    pre: \"\",\r\n    post: \"\",\r\n    recency: \"\",\r\n    elicitation: \"\",\r\n  });\r\n  const [patientObj, setPatientObj] = useState({\r\n    breastFeeding: \"\",\r\n    capturedBy: \"\",\r\n    riskStratificationCode: \"\",\r\n    cd4: {},\r\n    clientCode: \"\",\r\n    confirmatoryTest: {},\r\n    dateVisit: \"\",\r\n    extra: {},\r\n    firstTimeVisit: \"\",\r\n    hepatitisTesting: {},\r\n    hivTestResult: \"\",\r\n    id: \"\",\r\n    indexClient: \"\",\r\n    indexClientCode: \"\",\r\n    indexElicitation: [\r\n      {\r\n        address: \"\",\r\n        altPhoneNumber: \"\",\r\n        archived: 0,\r\n        currentlyLiveWithPartner: true,\r\n        datePartnerCameForTesting: \"\",\r\n        dob: \"\",\r\n        extra: {},\r\n        facilityId: 0,\r\n        firstName: \"\",\r\n        hangOutSpots: \"\",\r\n        htsClient: {\r\n          archived: 0,\r\n          breastFeeding: 0,\r\n          capturedBy: \"\",\r\n          cd4: {},\r\n          clientCode: \"\",\r\n          confirmatoryTest: {},\r\n          dateVisit: \"\",\r\n          extra: {},\r\n          facilityId: 0,\r\n          firstTimeVisit: true,\r\n          hepatitisTesting: {},\r\n          hivTestResult: \"\",\r\n          id: 0,\r\n          indexClient: true,\r\n          indexClientCode: \"\",\r\n          indexNotificationServicesElicitation: {},\r\n          knowledgeAssessment: {},\r\n          numChildren: 0,\r\n          numWives: 0,\r\n          others: {},\r\n          person: {\r\n            active: \"\",\r\n            address: {},\r\n            archived: 0,\r\n            contact: {},\r\n            contactPoint: {},\r\n            createdDate: \"\",\r\n            dateOfBirth: \"\",\r\n            dateOfRegistration: \"\",\r\n            deceased: true,\r\n            deceasedDateTime: \"\",\r\n            education: {},\r\n            employmentStatus: {},\r\n            emrId: \"\",\r\n            facilityId: 0,\r\n            firstName: \"string\",\r\n            gender: {},\r\n            hospitalNumber: \"\",\r\n            id: \"\",\r\n            identifier: {},\r\n            isDateOfBirthEstimated: true,\r\n            lastModifiedDate: \"\",\r\n            maritalStatus: {},\r\n            new: true,\r\n            ninNumber: \"\",\r\n            organization: {},\r\n            otherName: \"\",\r\n            sex: \"\",\r\n            surname: \"\",\r\n            uuid: \"\",\r\n          },\r\n          personUuid: \"\",\r\n          postTestCounselingKnowledgeAssessment: {},\r\n          pregnant: \"\",\r\n          previouslyTested: true,\r\n          recency: {},\r\n          referredFrom: \"\",\r\n          relationWithIndexClient: \"\",\r\n          riskAssessment: {},\r\n          sexPartnerRiskAssessment: {},\r\n          stiScreening: {},\r\n          syphilisTesting: {},\r\n          targetGroup: 0,\r\n          tbScreening: {},\r\n          test1: {},\r\n          testingSetting: \"\",\r\n          tieBreakerTest: {},\r\n          typeCounseling: \"\",\r\n          uuid: \"\",\r\n        },\r\n        htsClientUuid: \"\",\r\n        id: \"\",\r\n        isDateOfBirthEstimated: true,\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        notificationMethod: \"\",\r\n        partnerTestedPositive: \"\",\r\n        phoneNumber: \"\",\r\n        physicalHurt: \"\",\r\n        relationshipToIndexClient: \"\",\r\n        sex: \"\",\r\n        sexuallyUncomfortable: \"\",\r\n        threatenToHurt: \"\",\r\n        uuid: \"\",\r\n      },\r\n    ],\r\n    indexNotificationServicesElicitation: {},\r\n    knowledgeAssessment: {},\r\n    numChildren: \"\",\r\n    numWives: \"\",\r\n    others: {},\r\n    personId: \"\",\r\n    personResponseDto: {\r\n      active: true,\r\n\r\n      address: {\r\n        address: [\r\n          {\r\n            city: \"\",\r\n            line: [\"\"],\r\n            stateId: \"\",\r\n            district: \"\",\r\n            countryId: 1,\r\n            postalCode: \"\",\r\n            organisationUnitId: 0,\r\n          },\r\n        ],\r\n      },\r\n      biometricStatus: true,\r\n      checkInDate: \"\",\r\n      contact: {},\r\n      contactPoint: {\r\n        contactPoint: [\r\n          {\r\n            type: \"phone\",\r\n            value: \"\",\r\n          },\r\n        ],\r\n      },\r\n      dateOfBirth: \"\",\r\n      dateOfRegistration: \"\",\r\n      deceased: true,\r\n      deceasedDateTime: \"\",\r\n      education: {},\r\n      employmentStatus: {},\r\n      emrId: \"\",\r\n      encounterDate: \"\",\r\n      facilityId: \"\",\r\n      firstName: \"\",\r\n      gender: {},\r\n      id: \"\",\r\n      identifier: {},\r\n      isDateOfBirthEstimated: true,\r\n      maritalStatus: {},\r\n      ninNumber: \"\",\r\n      organization: {},\r\n      otherName: \"\",\r\n      sex: \"\",\r\n      surname: \"\",\r\n      visitId: \"\",\r\n    },\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    pregnant: \"\",\r\n    previouslyTested: \"\",\r\n    recency: {},\r\n    referredFrom: \"\",\r\n    relationWithIndexClient: \"\",\r\n    riskAssessment: {},\r\n    sexPartnerRiskAssessment: {},\r\n    stiScreening: {},\r\n    syphilisTesting: {},\r\n    targetGroup: \"\",\r\n    tbScreening: {},\r\n    test1: {},\r\n    testingSetting: \"\",\r\n    tieBreakerTest: {},\r\n    typeCounseling: \"\",\r\n    riskStratificationResponseDto: null,\r\n  });\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n\r\n  console.log(patientObj);\r\n  useEffect(() => {\r\n    getFacilityAccount();\r\n    if (locationState && locationState.patientObj) {\r\n      setPatientObj(locationState.patientObj);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  \r\n    setModalityCheck(\r\n      getCheckModality(patientObj?.riskStratificationResponseDto?.modality)\r\n    );\r\n  }, [patientObj]);\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              HTS /{\" \"}\r\n              <span\r\n                style={{\r\n                  color: \"#014D88\",\r\n                  fontSize: \"1.1rem\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                NEW HTS CLIENT\r\n              </span>\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h3>\r\n                HIV COUNSELLING AND TESTING\r\n                <Link to={\"/\"}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end\"\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                    style={{ backgroundColor: \"#014d88\" }}\r\n                  >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                  </Button>\r\n                </Link>\r\n              </h3>\r\n              <br />\r\n              <br />\r\n\r\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                <Menu\r\n                  size=\"large\"\r\n                  vertical\r\n                  style={{ backgroundColor: \"#014D88\" }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"risk\"}\r\n                    onClick={() => handleItemClick(\"risk\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\r\n                    }}\r\n                    disabled={activeItem !== \"risk\" ? true : false}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Risk Stratification\r\n                      {completed.includes(\"risk\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  {hideOtherMenu == false && (\r\n                    <>\r\n                      <Menu.Item\r\n                        name=\"inbox\"\r\n                        active={activeItem === \"basic\"}\r\n                        onClick={() => handleItemClick(\"basic\")}\r\n                        style={{\r\n                          backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\r\n                        }}\r\n                        disabled={activeItem !== \"basic\" ? true : false}\r\n                      >\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          {\" \"}\r\n                          Basic Information\r\n                          {completed.includes(\"basic\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n\r\n                      {patientObj?.riskStratificationResponseDto?.age >= 15 &&\r\n                        modalityCheck == \"fill\" && (\r\n                          <Menu.Item\r\n                            name=\"spam\"\r\n                            active={activeItem === \"pre-test-counsel\"}\r\n                            onClick={() => handleItemClick(\"pre-test-counsel\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\r\n                            }}\r\n                            disabled={\r\n                              activeItem !== \"pre-test-counsel\" ? true : false\r\n                            }\r\n                          >\r\n                            {/* <Label>2</Label> */}\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              Pre Test Counseling\r\n                              {completed.includes(\"pre-test-counsel\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n\r\n                      {permissions.includes(\"Request_and_Result_Form\") && (\r\n                        <Menu.Item\r\n                          name=\"inbox\"\r\n                          active={activeItem === \"hiv-test\"}\r\n                          onClick={() => handleItemClick(\"hiv-test\")}\r\n                          style={{\r\n                            backgroundColor:\r\n                              activeItem === \"hiv-test\" ? \"#000\" : \"\",\r\n                          }}\r\n                          disabled={activeItem !== \"hiv-test\" ? true : false}\r\n                        >\r\n                          <span style={{ color: \"#fff\" }}>\r\n                            Request {\"&\"} Result Form\r\n                            {completed.includes(\"hiv-test\") && (\r\n                              <Icon name=\"check\" color=\"green\" />\r\n                            )}\r\n                          </span>\r\n                        </Menu.Item>\r\n                      )}\r\n                      <Menu.Item\r\n                        name=\"spam\"\r\n                        active={activeItem === \"post-test\"}\r\n                        onClick={() => handleItemClick(\"post-test\")}\r\n                        style={{\r\n                          backgroundColor:\r\n                            activeItem === \"post-test\" ? \"#000\" : \"\",\r\n                        }}\r\n                        disabled={activeItem !== \"post-test\" ? true : false}\r\n                      >\r\n                        {/* <Label>4</Label> */}\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          Post Test Counseling\r\n                          {completed.includes(\"post-test\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n                      {patientObj.hivTestResult &&\r\n                        patientObj.hivTestResult.toLowerCase() === \"positive\" &&\r\n                        patientObj?.riskStratificationResponseDto?.age >= 15 && (\r\n                          <Menu.Item\r\n                            name=\"spam\"\r\n                            active={activeItem === \"recency-testing\"}\r\n                            onClick={() => handleItemClick(\"recency-testing\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"recency-testing\" ? \"#000\" : \"\",\r\n                            }}\r\n                            disabled={\r\n                              activeItem !== \"recency-testing\" ? true : false\r\n                            }\r\n                          >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              HIV Recency Testing\r\n                              {completed.includes(\"recency-testing\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n\r\n                      {/* {patientObj.hivTestResult &&\r\n                        patientObj.hivTestResult.toLowerCase() ===\r\n                          \"positive\" && (\r\n                          <Menu.Item\r\n                            name=\"inbox\"\r\n                            active={activeItem === \"fit\"}\r\n                            onClick={() => handleItemClick(\"fit\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"fit\" ? \"#000\" : \"\",\r\n                            }}\r\n                            disabled={completed.includes(\"fit\") ? true : false}\r\n                          >\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              Family Index Testing form\r\n                              {completed.includes(\"fit\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )} */}\r\n\r\n                      {/* uncomment this after  */}\r\n\r\n                      {permissions.includes(\"Nigeria_PNS_Form\") &&\r\n                        patientObj.hivTestResult &&\r\n                        patientObj.hivTestResult.toLowerCase() ===\r\n                          \"positive\" && (\r\n                          <Menu.Item\r\n                            name=\"inbox\"\r\n                            active={activeItem === \"pns\"}\r\n                            onClick={() => handleItemClick(\"pns\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"pns\" ? \"#000\" : \"\",\r\n                            }}\r\n                          >\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              {\" \"}\r\n                              Partner Notification Services\r\n                              {completed.includes(\"pns\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n\r\n                      {permissions.includes(\"Referral_Form\") && (\r\n                        <Menu.Item\r\n                          name=\"inbox\"\r\n                          active={activeItem === \"refferal-history\"}\r\n                          onClick={() => handleItemClick(\"refferal-history\")}\r\n                          style={{\r\n                            backgroundColor:\r\n                              activeItem === \"refferal-history\" ? \"#000\" : \"\",\r\n                          }}\r\n                        >\r\n                          <span style={{ color: \"#fff\" }}>\r\n                            {\" \"}\r\n                            Client Referral Service\r\n                            {completed.includes(\"refferal\") && (\r\n                              <Icon name=\"check\" color=\"green\" />\r\n                            )}\r\n                          </span>\r\n                        </Menu.Item>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  margingLeft: \"-50px\",\r\n                  paddingLeft: \"-20px\",\r\n                }}\r\n              >\r\n                {activeItem === \"risk\" && (\r\n                  <RiskStratification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setPatientObjAge={setPatientObjAge}\r\n                    setHideOtherMenu={setHideOtherMenu}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    setOrganizationInfo={setOrganizationInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"basic\" && (\r\n                  <BasicInfo\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setPatientObjAge={setPatientObjAge}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    setBasicInfo={setBasicInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"pre-test-counsel\" && (\r\n                  <PreTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"hiv-test\" && (\r\n                  <HivTestResult\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"post-test\" && (\r\n                  <PostTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"indexing\" && (\r\n                  <IndexingContactTracing\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"recency-testing\" && (\r\n                  <RecencyTesting\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"others\" && (\r\n                  <Others\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                  />\r\n                )}\r\n                {activeItem === \"fit\" && (\r\n                  <FamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    history={false}\r\n                  />\r\n                )}\r\n                {activeItem === \"pns\" && (\r\n                  <PnsForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"client-referral\" && (\r\n                  <RefferralUnit\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                  />\r\n                )}\r\n                {activeItem === \"refferal-history\" && (\r\n                  <ClientReferralHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n                {activeItem === \"view-referral\" && (\r\n                  <ViewClientReferral\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js",["388","389"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\n// import { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n//import moment from \"moment\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n        <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n        <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nconst HIVSTPatient = () => {\r\n    //const [patientList, setPatientList] = useState([])\r\n    //const [loading, setLoading] = useState(false)\r\n    const [showPPI, setShowPPI] = useState(true);\r\n    //const baseUrl2 = \"http://localhost:8282/api/v2/\"\r\n    useEffect(() => {\r\n        //patients()\r\n    }, []);\r\n\r\n    const handleCheckBox = (e) => {\r\n        if (e.target.checked) {\r\n            setShowPPI(false);\r\n        } else {\r\n            setShowPPI(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Find HTS Patient \"\r\n                columns={[\r\n                    // { title: \" ID\", field: \"Id\" },\r\n                    {\r\n                        title: \"Patient Name\",\r\n                        field: \"name\",\r\n                        hidden: showPPI,\r\n                    },\r\n                    // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                    { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n                    // { title: \"Sex\", field: \"gender\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n                    //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                    { title: \"HIVST Count\", field: \"count\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                data={(query) =>\r\n                    new Promise((resolve, reject) =>\r\n                        axios\r\n                            .get(\r\n                                `${baseUrl}hivst/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                                { headers: { Authorization: `Bearer ${token}` } }\r\n                            )\r\n                            .then((response) => response)\r\n                            .then((result) => {\r\n                                //setLoading(false)\r\n                                resolve({\r\n                                    data:\r\n                                        result?.data?.records &&\r\n                                        result?.data?.records\r\n                                            .filter((client) => {\r\n                                                return client.clientCode !== null;\r\n                                            })\r\n                                            .map((row) => ({\r\n                                                //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                                                name: row.firstName + \" \" + row.surname,\r\n                                                // hospital_number: row.hospitalNumber,\r\n                                                clientCode: row.clientCode,\r\n                                                gender: row.gender,\r\n                                                age: row.age,\r\n                                                count: (\r\n                                                    <Label color=\"blue\" size=\"mini\">\r\n                                                        {row.hivstCount}\r\n                                                    </Label>\r\n                                                ),\r\n                                                actions: (\r\n                                                    <div>\r\n                                                        {row.hivstCount >= 0 && (\r\n                                                            <>\r\n                                                                <Link\r\n                                                                    to={{\r\n                                                                        pathname: \"/patient-history\",\r\n                                                                        state: {\r\n                                                                            patientObject: row,\r\n                                                                            patientObj: row,\r\n                                                                            clientCode: row.clientCode,\r\n                                                                        },\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <ButtonGroup\r\n                                                                        variant=\"contained\"\r\n                                                                        aria-label=\"split button\"\r\n                                                                        style={{\r\n                                                                            backgroundColor: \"rgb(153, 46, 98)\",\r\n                                                                            height: \"30px\",\r\n                                                                            width: \"215px\",\r\n                                                                        }}\r\n                                                                        size=\"large\"\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            color=\"primary\"\r\n                                                                            size=\"small\"\r\n                                                                            aria-label=\"select merge strategy\"\r\n                                                                            aria-haspopup=\"menu\"\r\n                                                                            style={{\r\n                                                                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <MdDashboard />\r\n                                                                        </Button>\r\n                                                                        <Button\r\n                                                                            style={{\r\n                                                                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <span\r\n                                                                                style={{\r\n                                                                                    fontSize: \"12px\",\r\n                                                                                    color: \"#fff\",\r\n                                                                                    fontWeight: \"bolder\",\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Patient Dashboard\r\n                                                                            </span>\r\n                                                                        </Button>\r\n                                                                    </ButtonGroup>\r\n                                                                </Link>\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                ),\r\n                                            })),\r\n                                    page: query.page,\r\n                                    totalCount: result.data.totalRecords,\r\n                                });\r\n                                //setLoading(false)\r\n                            })\r\n                    )\r\n                }\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: \"200%\",\r\n                        margingLeft: \"250px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400,\r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                        <div>\r\n                            <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    name=\"showPP!\"\r\n                                    id=\"showPP\"\r\n                                    value=\"showPP\"\r\n                                    checked={showPPI === true ? false : true}\r\n                                    onChange={handleCheckBox}\r\n                                    style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                />\r\n                                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                                    <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                                        SHOW PII\r\n                                    </b>\r\n                                </label>\r\n                            </div>\r\n                            <MTableToolbar {...props} />\r\n                        </div>\r\n                    ),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default HIVSTPatient","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js",["390","391"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst HTSList = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find HTS Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/only/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                //setLoading(false)\n                resolve({\n                  data:\n                    result?.data?.records &&\n                    result?.data?.records\n                      .filter((client) => {\n                        return client.clientCode !== null;\n                      })\n                      .map((row) => ({\n                        //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                        name: row.firstName + \" \" + row.surname,\n                        // hospital_number: row.hospitalNumber,\n                        clientCode: row.clientCode,\n                        gender: row.gender,\n                        age: row.age,\n                        count: (\n                          <Label color=\"blue\" size=\"mini\">\n                            {row.htsCount}\n                          </Label>\n                        ),\n                        actions: (\n                          <div>\n                            {row.htsCount >= 0 && (\n                              <>\n                                <Link\n                                  to={{\n                                    pathname: \"/patient-history\",\n                                    state: {\n                                      patientObject: row,\n                                      patientObj: row,\n                                      clientCode: row.clientCode,\n                                    },\n                                  }}\n                                >\n                                  <ButtonGroup\n                                    variant=\"contained\"\n                                    aria-label=\"split button\"\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                      height: \"30px\",\n                                      width: \"215px\",\n                                    }}\n                                    size=\"large\"\n                                  >\n                                    <Button\n                                      color=\"primary\"\n                                      size=\"small\"\n                                      aria-label=\"select merge strategy\"\n                                      aria-haspopup=\"menu\"\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <MdDashboard />\n                                    </Button>\n                                    <Button\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          fontSize: \"12px\",\n                                          color: \"#fff\",\n                                          fontWeight: \"bolder\",\n                                        }}\n                                      >\n                                        Patient Dashboard\n                                      </span>\n                                    </Button>\n                                  </ButtonGroup>\n                                </Link>\n                              </>\n                            )}\n                          </div>\n                        ),\n                      })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HTSList;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\CheckedInPatients.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { calculate_age } from \"../../components/utils\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { TiArrowForward } from \"react-icons/ti\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CheckedInPatients = (props) => {\r\n  const permissions = localStorage.getItem(\"permissions\")?.split(\",\");\r\n  const [patientList, setPatientList] = useState([]);\r\n\r\n  const getServiceCode = () => {\r\n    axios\r\n      .get(`${baseUrl}opd-setting`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        let data = response.data;\r\n        let htsCode = data.find(\r\n          (item) => item.moduleServiceName.toUpperCase() === \"HTS\"\r\n        )?.moduleServiceCode;\r\n        if (htsCode !== null || htsCode !== null) {\r\n          patients(htsCode);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    getServiceCode();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients(htsCode) {\r\n    axios\r\n      .get(`${baseUrl}patient/checked-in-by-service/${htsCode}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"look for me \", response.data);\r\n\r\n        setPatientList(response.data.reverse());\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Checked In Patients \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          //   { title: \"ART Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={patientList.map((row) => ({\r\n          name: row.fullname,\r\n          hospital_number: row.hospitalNumber,\r\n          gender: row.sex,\r\n          age:\r\n            row.dateOfBirth === 0 ||\r\n            row.dateOfBirth === undefined ||\r\n            row.dateOfBirth === null ||\r\n            row.dateOfBirth === \"\"\r\n              ? 0\r\n              : calculate_age(row.dateOfBirth),\r\n\r\n          actions: (\r\n            <div>\r\n              <>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-history\",\r\n                    state: {\r\n                      patientObject: row,\r\n                      patientObj: row,\r\n                      clientCode: row?.clientCode,\r\n                      activepage: \"NEW HTS\",\r\n                      checkedInPatient: true\r\n                    },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                      }}\r\n                    >\r\n                      <TiArrowForward />\r\n                    </Button>\r\n                    <Button\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"12px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Enroll Patient\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          search: true,\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckedInPatients;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["406","407","408","409","410","411"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\n//import Divider from '@material-ui/core/Divider';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Label, Sticky } from \"semantic-ui-react\";\r\nimport { calculate_age } from \"../utils\";\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  console.log(props.patientObj);\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {};\r\n  //const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setPatientObj] = useState(null);\r\n  const [hivStatus, setHivStatus] = useState(\"false\");\r\n  const [htscount, setHtscount] = useState(0);\r\n  const [htsResult, setHtsResult] = useState(\"\");\r\n  const [htsResult2, setHtsResult2] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    PatientCurrentObject();\r\n    console.log(\"look for me props\", props);\r\n  }, []);\r\n\r\n  ///GET LIST OF Patients\r\n  async function PatientCurrentObject() {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts/persons/${\r\n          patientObjs.personId ? patientObjs.personId : patientObjs.id\r\n        }`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        //console.log(\"data\", response.data);\r\n        setPatientObj(response.data);\r\n\r\n        setHtscount(response.data.htsCount);\r\n        setHtsResult(\r\n          response.data.htsClientDtoList[\r\n            response.data.htsClientDtoList.length - 1\r\n          ].hivTestResult\r\n        );\r\n        setHtsResult2(\r\n          response.data.htsClientDtoList[\r\n            response.data.htsClientDtoList.length - 1\r\n          ].hivTestResult2\r\n        );\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find(\r\n      (obj) => obj.type == \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <Sticky>\r\n      <div className={classes.root}>\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className={\"mt-1\"}>\r\n                  {patientObj && patientObj !== null ? (\r\n                    <>\r\n                      <Col md={12} className={classes.root2}>\r\n                        <b\r\n                          style={{\r\n                            fontSize: \"25px\",\r\n                            color: \"rgb(153, 46, 98)\",\r\n                          }}\r\n                        >\r\n                          {patientObj.personResponseDto.firstName +\r\n                            \" \" +\r\n                            patientObj.personResponseDto.surname}\r\n                        </b>\r\n                        <Link to={\"/\"}>\r\n                          <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              color: \"#fff\",\r\n                              height: \"35px\",\r\n                            }}\r\n                          >\r\n                            <span style={{ textTransform: \"capitalize\" }}>\r\n                              Back\r\n                            </span>\r\n                          </ButtonMui>\r\n                        </Link>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Patient ID :\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getHospitalNumber(\r\n                              patientObj.personResponseDto.identifier\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          Date Of Birth :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj.personResponseDto.dateOfBirth}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Age :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {calculate_age(\r\n                              moment(\r\n                                patientObj.personResponseDto.dateOfBirth\r\n                              ).format(\"YYYY-MM-DD\")\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Gender :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj.personResponseDto &&\r\n                            patientObj.personResponseDto.sex !== null\r\n                              ? patientObj.personResponseDto.sex\r\n                              : \"\"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Phone Number :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getPhoneNumber(\r\n                              patientObj.personResponseDto.contactPoint\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Address :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getAddress(patientObj.personResponseDto.address)}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Client Code :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj && patientObj?.clientCode\r\n                              ? patientObj?.clientCode\r\n                              : \"\"}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            {htscount < 1 ? (\r\n                              <Label color=\"blue\" size={\"mini\"}>\r\n                                STATUS : Not Tested\r\n                              </Label>\r\n                            ) : patientObj &&\r\n                              (htsResult === \"Positive\" ||\r\n                                htsResult === \"Positive\") ? (\r\n                              <Label color={\"red\"} size={\"mini\"}>\r\n                                STATUS : Positive\r\n                              </Label>\r\n                            ) : (\r\n                              <Label color=\"teal\" size={\"mini\"}>\r\n                                STATUS : Negative\r\n                              </Label>\r\n                            )}\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    </>\r\n                  ) : (\r\n                    <p>Loading Please wait...</p>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </ExpansionPanelSummary>\r\n        </ExpansionPanel>\r\n      </div>\r\n    </Sticky>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCheckModality } from \"../../../utility\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport BasicInfo from \"./NewRegistrationEnrollement/BasicInfo\";\r\nimport PreTest from \"./NewRegistrationEnrollement/PreTest\";\r\nimport HivTestResult from \"./NewRegistrationEnrollement/HivTestResult\";\r\nimport IndexingContactTracing from \"./NewRegistrationEnrollement/Elicitation/Index\";\r\nimport Others from \"./NewRegistrationEnrollement/Others\";\r\nimport PostTest from \"./NewRegistrationEnrollement/PostTest\";\r\nimport RecencyTesting from \"./NewRegistrationEnrollement/RecencyTesting\";\r\nimport RiskStratification from \"./NewRegistrationEnrollement/RiskStratification\";\r\n// import FamilyIndexTesting from \"./NewRegistrationEnrollement/familyIndexTesting\";\r\n// import PartnerNotificationService from \"./NewRegistrationEnrollement/partnerNotificationService\";\r\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\r\nimport PNSHistory from \"./NewRegistration/PartnerNotificationServices/PNSHistory\";\r\nimport ViewPNSForm from \"./NewRegistration/PartnerNotificationServices/ViewPnsForm\";\r\nimport ViewFamilyIndexTestingForm from \"./NewRegistration/PartnerNotificationServices/ViewFamilyIndexForm\";\r\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\r\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\r\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\r\nimport FamilyIndexHistory from \"./NewRegistration/PartnerNotificationServices/FamilyIndexhIstory\";\r\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const classes = useStyles();\r\n  const [activeItem, setactiveItem] = useState(\"basic\");\r\n  const [completed, setCompleted] = useState([]);\r\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n  const [patientObj, setPatientObj] = useState(props.activePage.activeObject);\r\n  const [extra, setExtra] = useState({\r\n    risk: \"\",\r\n    index: \"\",\r\n    pre: \"\",\r\n    post: \"\",\r\n    recency: \"\",\r\n    elicitation: \"\",\r\n    familyIndexTesting: \"\",\r\n    pns: \"\",\r\n  });\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n  const [permissions, setPermission] = useState(\r\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\r\n  );\r\n\r\n  const [basicInfo, setBasicInfo] = useState({});\r\n  const [organizationInfo, setOrganizationInfo] = useState({});\r\n  const [row, setRow] = useState({});\r\n  const [action, setAction] = useState(\"\");\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const handleItemClick = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  const handleAction = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"home\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModalityCheck(\r\n      getCheckModality(patientObj?.riskStratificationResponseDto?.modality)\r\n    );\r\n  }, [patientObj]);\r\n  console.log(familyIndexList);\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h3>\r\n                HIV COUNSELLING AND TESTING -{\" \"}\r\n                {patientObj && patientObj.dateVisit ? patientObj.dateVisit : \"\"}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\" float-end\"\r\n                  //startIcon={<FaUserPlus size=\"10\"/>}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={LoadViewPage}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                </Button>\r\n              </h3>\r\n              <br />\r\n              <br />\r\n\r\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                <Menu\r\n                  size=\"large\"\r\n                  vertical\r\n                  style={{ backgroundColor: \"#014D88\" }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"risk\"}\r\n                    onClick={() => handleItemClick(\"risk\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Risk Stratification\r\n                      {completed.includes(\"risk\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"basic\"}\r\n                    onClick={() => handleItemClick(\"basic\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Basic Information\r\n                      {completed.includes(\"basic\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  {props.patientAge >= 15 && modalityCheck == \"fill\" && (\r\n                    <Menu.Item\r\n                      name=\"spam\"\r\n                      active={activeItem === \"pre-test-counsel\"}\r\n                      onClick={() => handleItemClick(\"pre-test-counsel\")}\r\n                      style={{\r\n                        backgroundColor:\r\n                          activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\r\n                      }}\r\n                      //disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                    >\r\n                      {/* <Label>2</Label> */}\r\n                      <span style={{ color: \"#fff\" }}>\r\n                        Pre Test Counseling\r\n                        {completed.includes(\"pre-test-counsel\") && (\r\n                          <Icon name=\"check\" color=\"green\" />\r\n                        )}\r\n                      </span>\r\n                    </Menu.Item>\r\n                  )}\r\n                  {permissions.includes(\"Request_and_Result_Form\") && (\r\n                    <Menu.Item\r\n                      name=\"inbox\"\r\n                      active={activeItem === \"hiv-test\"}\r\n                      onClick={() => handleItemClick(\"hiv-test\")}\r\n                      style={{\r\n                        backgroundColor:\r\n                          activeItem === \"hiv-test\" ? \"#000\" : \"\",\r\n                      }}\r\n                      //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                    >\r\n                      <span style={{ color: \"#fff\" }}>\r\n                        Request {\"&\"} Result Form\r\n                        {completed.includes(\"hiv-test\") && (\r\n                          <Icon name=\"check\" color=\"green\" />\r\n                        )}\r\n                      </span>\r\n                      {/* <Label color='teal'>3</Label> */}\r\n                    </Menu.Item>\r\n                  )}\r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"post-test\"}\r\n                    onClick={() => handleItemClick(\"post-test\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"post-test\" ? \"#000\" : \"\",\r\n                    }}\r\n                    //disabled={activeItem !== 'post-test' ? true : false}\r\n                  >\r\n                    {/* <Label>4</Label> */}\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      Post Test Counseling\r\n                      {completed.includes(\"post-test\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  {patientObj.hivTestResult &&\r\n                    patientObj.hivTestResult.toLowerCase() === \"positive\" &&\r\n                    patientObj.riskStratificationResponseDto?.age >= 15 && (\r\n                      <Menu.Item\r\n                        name=\"spam\"\r\n                        active={activeItem === \"recency-testing\"}\r\n                        onClick={() => handleItemClick(\"recency-testing\")}\r\n                        style={{\r\n                          backgroundColor:\r\n                            activeItem === \"recency-testing\" ? \"#000\" : \"\",\r\n                        }}\r\n                        //disabled={activeItem !== 'recency-testing' ? true : false}\r\n                      >\r\n                        {/* <Label>4</Label> */}\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          HIV Recency Testing\r\n                          {completed.includes(\"recency-testing\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n                    )}\r\n                  {/* \r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"indexing\"}\r\n                    onClick={() => handleItemClick(\"indexing\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"indexing\" ? \"#000\" : \"\",\r\n                    }}\r\n                  > */}\r\n                  {/* <Label>4</Label> */}\r\n                  {/* <span style={{ color: \"#fff\" }}>\r\n                      Index Notification Services - Elicitation\r\n                      {completed.includes(\"indexing\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item> */}\r\n\r\n                  {/* <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pns-history\"}\r\n                    onClick={() => handleItemClick(\"pns-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"pns-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Partner Notification Services\r\n                      {completed.includes(\"pns\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item> */}\r\n                  {/* Family Index Testing form */}\r\n                  {/* {patientObj.hivTestResult && patientObj.hivTestResult.toLowerCase() ===\r\n                    \"positive\" &&  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"fit-history\"}\r\n                    onClick={() => handleItemClick(\"fit-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"fit-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Family Index Testing form\r\n                      {completed.includes(\"fit\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>}  */}\r\n\r\n                  {permissions.includes(\"Nigeria_PNS_Form\") &&\r\n                    patientObj.hivTestResult &&\r\n                    patientObj.hivTestResult.toLowerCase() === \"positive\" && (\r\n                      <Menu.Item\r\n                        name=\"inbox\"\r\n                        active={activeItem === \"pns-history\"}\r\n                        onClick={() => handleItemClick(\"pns-history\")}\r\n                        style={{\r\n                          backgroundColor:\r\n                            activeItem === \"pns-history\" ? \"#000\" : \"\",\r\n                        }}\r\n                      >\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          {\" \"}\r\n                          Partner Notification Services\r\n                          {completed.includes(\"pns\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n                    )}\r\n                  {permissions.includes(\"Referral_Form\") && (\r\n                    <Menu.Item\r\n                      name=\"inbox\"\r\n                      active={activeItem === \"refferal-history\"}\r\n                      onClick={() => handleItemClick(\"refferal-history\")}\r\n                      style={{\r\n                        backgroundColor:\r\n                          activeItem === \"refferal-history\" ? \"#000\" : \"\",\r\n                      }}\r\n                    >\r\n                      <span style={{ color: \"#fff\" }}>\r\n                        {\" \"}\r\n                        Client Referral Service\r\n                        {completed.includes(\"refferal\") && (\r\n                          <Icon name=\"check\" color=\"green\" />\r\n                        )}\r\n                      </span>\r\n                    </Menu.Item>\r\n                  )}\r\n                </Menu>\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  margingLeft: \"-50px\",\r\n                  paddingLeft: \"-20px\",\r\n                }}\r\n              >\r\n                {activeItem === \"risk\" && (\r\n                  <RiskStratification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setHideOtherMenu={setHideOtherMenu}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                    setOrganizationInfo={setOrganizationInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"basic\" && (\r\n                  <BasicInfo\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                    setBasicInfo={setBasicInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"pre-test-counsel\" && (\r\n                  <PreTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"hiv-test\" && (\r\n                  <HivTestResult\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"post-test\" && (\r\n                  <PostTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"indexing\" && (\r\n                  <IndexingContactTracing\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"recency-testing\" && (\r\n                  <RecencyTesting\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"others\" && (\r\n                  <Others\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                  />\r\n                )}\r\n                {activeItem === \"pns-history\" && (\r\n                  <PNSHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"pns\" && (\r\n                  <PnsForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    history={true}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"view-pns\" && (\r\n                  <ViewPNSForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"view-fit\" && (\r\n                  <ViewFamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    action={action}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"fit-history\" && (\r\n                  <FamilyIndexHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                    setAction={setAction}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"fit\" && (\r\n                  <FamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    history={true}\r\n                  />\r\n                )}\r\n                {activeItem === \"view-referral\" && (\r\n                  <ViewClientReferral\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n                {activeItem === \"refferal-history\" && (\r\n                  <ClientReferralHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n                {activeItem === \"client-referral\" && (\r\n                  <RefferralUnit\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>{\" \"}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["425","426"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n//import moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  //const [patientList, setPatientList] = useState([])\r\n  //const [loading, setLoading] = useState(false)\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\r\n  useEffect(() => {\r\n    //patients()\r\n  }, []);\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"HTS Count\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}hts/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result.data.records\r\n                    .filter((a) => {\r\n                      return a.personId !== null;\r\n                    })\r\n                    .map((row) => ({\r\n                      name: row.firstName + \" \" + row.surname,\r\n                      // hospital_number: row.hospitalNumber,\r\n\r\n                      clientCode: row.clientCode,\r\n                      gender: row.gender,\r\n                      age: row.age,\r\n                      count: (\r\n                        <Label color=\"blue\" size=\"mini\">\r\n                          {row.htsCount}\r\n                        </Label>\r\n                      ),\r\n                      actions: (\r\n                        <div>\r\n                          {row.htsCount >= 0 && (\r\n                            <>\r\n                              {console.log(row)}\r\n                              <Link\r\n                                to={{\r\n                                  pathname: \"/patient-history\",\r\n                                  state: {\r\n                                    patientObject: row,\r\n                                    patientObj: row,\r\n                                    clientCode: row.clientCode,\r\n                                  },\r\n                                }}\r\n                              >\r\n                                <ButtonGroup\r\n                                  variant=\"contained\"\r\n                                  aria-label=\"split button\"\r\n                                  style={{\r\n                                    backgroundColor: \"rgb(153, 46, 98)\",\r\n                                    height: \"30px\",\r\n                                    width: \"215px\",\r\n                                  }}\r\n                                  size=\"large\"\r\n                                >\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    aria-label=\"select merge strategy\"\r\n                                    aria-haspopup=\"menu\"\r\n                                    style={{\r\n                                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                                    }}\r\n                                  >\r\n                                    <MdDashboard />\r\n                                  </Button>\r\n                                  <Button\r\n                                    style={{\r\n                                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                                    }}\r\n                                  >\r\n                                    <span\r\n                                      style={{\r\n                                        fontSize: \"12px\",\r\n                                        color: \"#fff\",\r\n                                        fontWeight: \"bolder\",\r\n                                      }}\r\n                                    >\r\n                                      Patient Dashboard\r\n                                    </span>\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </Link>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n                //setLoading(false)\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React, {useEffect, useState} from \"react\";\r\nimport {CardBody, FormGroup, Input, Label} from \"reactstrap\";\r\nimport * as moment from \"moment/moment\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Select from 'react-select';\r\n\r\n\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Button, Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Modal, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport {calculate_age} from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n        \"& .card-title\": {\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: \"0.25rem\",\r\n            height: \"41px\",\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\",\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\",\r\n        },\r\n        \"& p\": {\r\n            color: \"red\",\r\n        },\r\n        \"& label\": {\r\n            fontSize: \"14px\",\r\n            color: \"#014d88\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n    success: {\r\n        color: \"green\",\r\n        fontSize: \"12.8px\",\r\n        fontWeight: \"bold\",\r\n    },\r\n}));\r\n\r\nconst ViewEditHivst = (props) => {\r\n    // console.log(props.patientObject)\r\n    // console.log(\"active page row\", props.activePage.activeObject)\r\n    const patient = props.patientObject;\r\n    const hivstObj = props.activePage.activeObject\r\n    const [saving, setSaving] = useState(false)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors };\r\n    const [serialNumber, setSerialNumber] = useState(null);\r\n    const [createdCode, setCreatedCode] = useState(\"\");\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [showUserInfo, setShowUserInfo] = useState(false);\r\n    const [otherText, setOtherText] = useState('');\r\n    const [otherTestKitUserInfoAvailable, setIsUserInformationAvailable] = useState(false);\r\n    const [kitUserInformation, setKitUserInformation] = useState([]);\r\n    const [serviceNeeded, setServiceNeeded] = useState([]);\r\n    const [hasConductedHIVST, setHasConductedHIVST] = useState(false);\r\n    const [maritalStatus, setMaritalStatus] = useState([]);\r\n    const [sexs, setSexs] = useState([]);\r\n    const [userInformationList, setUserInformationList] = useState([])\r\n    const [userInformationErrors, setUserInformationErrors] = useState({});\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const isView = props.activePage.actionType === 'view' ? true : false;\r\n    const toggle = () => setOpen(!open);\r\n\r\n    const [objValues, setObjValues] = useState(hivstObj);\r\n\r\n    const [testKitUserDetails, setUserInformation] = useState(hivstObj.testKitUserDetails[0]);\r\n\r\n    // const [objValues, setObjValues] = useState({\r\n    //     patientId: patient?.personId ? patient.personId : \"\",\r\n    //     // patientObject: {\r\n    //     //     surname: patient?.surname ? patient.surname : \"\",\r\n    //     //     firstName: patient?.firstName ? patient.firstName : \"\",\r\n    //     //     otherName: patient?.otherName ? patient.otherName : \"\",\r\n    //     //     dateOfBirth: patient?.dateOfBirth ? patient.dateOfBirth : \"\",\r\n    //     //     maritalStatusId: \"1\",\r\n    //     //     genderId: patient.gender ? patient.gender : \"\",\r\n    //     //     sexId: patient.personResponseDto && patient.personResponseDto.sex !== null\r\n    //     //         ? patient.personResponseDto.sex\r\n    //     //         : \"\",\r\n    //     //     address: \"\",\r\n    //     //     dateOfRegistration: \"\",\r\n    //     //     hospitalNumber: patient?.hospitalNumber ? patient?.hospitalNumber : \"\",\r\n    //     // },\r\n    //     dateOfVisit: \"\",\r\n    //     serviceDeliveryPoint: \"\",\r\n    //     userType: \"\",\r\n    //     serialNumber: \"\",\r\n    //     clientCode: \"\",\r\n    //     previouslyTestedWithin12Months: \"\",\r\n    //     resultOfPreviouslyTestedWithin12Months: \"\",\r\n    //     consentForFollowUpCalls: \"\",\r\n    //     typeOfHivstKitReceived: \"\",\r\n    //     numberOfHivstKitsReceived: \"\",\r\n    //     nameOfTestKit: \"\",\r\n    //     lotNumber: \"\",\r\n    //     expiryDate: \"\",\r\n    //     testKitUsers: null,\r\n    //     testKitUserDetails: [],\r\n    //     otherTestKitUserInfoAvailable: \"\",\r\n    //     hasConductedHIVST: \"\",\r\n    // });\r\n\r\n    // const [testKitUserDetails, setUserInformation] = useState(\r\n    //     {\r\n    //         basicUserInfo: {\r\n    //             id: \"\",\r\n    //             firstName:\"\",\r\n    //             surname:\"\",\r\n    //             otherName:\"\",\r\n    //             dateOfRegistration:\"\",\r\n    //             otherCategory: \"\",\r\n    //             clientCode: \"\",\r\n    //             dateOfBirth: \"\",\r\n    //             age: \"\",\r\n    //             sex: \"\",\r\n    //             maritalStatusId: \"\",\r\n    //             typeOfHivst: \"\",\r\n    //             userCategory: \"\",\r\n    //             isDateOfBirthEstimated: \"\"\r\n    //         },\r\n    //         postTestAssessment: {\r\n    //             everUsedHivstKit: \"\",\r\n    //             everUsedHivstKitForSelfOrOthers: \"\",\r\n    //             otherHivstKitUserCategory: \"\",\r\n    //             otherHivstKitUserCategoryText: \"\",\r\n    //             resultOfHivstTest: \"\",\r\n    //             accessConfirmatoryHts: \"\",\r\n    //             referPreventionServices: \"\",\r\n    //             referralInformation: {\r\n    //                 referredForConfirmatoryHts: \"\",\r\n    //                 dateReferredForConfirmatoryHts: \"\",\r\n    //                 referredForPreventionServices: \"\",\r\n    //                 dateReferredForPreventionServices: \"\"\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // );\r\n\r\n\r\n    // // console.log(\"Selected Options\", selectedUsers);\r\n    const options = [\r\n        {value: 'myself', label: 'For myself'},\r\n        {value: 'spouse', label: 'Spouse'},\r\n        {value: 'children', label: 'Children'},\r\n        {value: 'sexual partner', label: 'Sexual Partner'},\r\n        {value: 'social network', label: 'Social Network'},\r\n        {value: 'others', label: 'Others (Please specify)'},\r\n    ];\r\n\r\n    const matches = useMediaQuery('(max-width:600px)');\r\n    const style = {fontSize: matches ? '12px' : '16px',};\r\n\r\n\r\n    const SERVICE_NEEDED = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    // create array of objects from the response\r\n                    const serviceNeeded = response.data.map((service) => {\r\n                        return {\r\n                            value: service.display,\r\n                            label: service.display\r\n                        }\r\n                    });\r\n                    setServiceNeeded(serviceNeeded);\r\n                    // // console.log(\"serviceNeeded\", serviceNeeded)\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                // handle error\r\n            });\r\n    };\r\n\r\n    // // console.log(\"selectedUsers\", selectedUsers);\r\n    // console.log(\"showUserInfo\", showUserInfo);\r\n    useEffect(() => {\r\n        SERVICE_NEEDED();\r\n    }, []);\r\n\r\n    const validateObjValues = () => {\r\n        temp.dateOfVisit = objValues.dateOfVisit ? \"\" : \"This field is required.\";\r\n        temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n        temp.serviceDeliveryPoint = objValues.serviceDeliveryPoint ? \"\" : \"This field is required.\";\r\n        temp.userType = objValues.userType ? \"\" : \"This field is required.\";\r\n        // temp.serialNumber = objValues.serialNumber ? \"\" : \"This field is required.\";\r\n        temp.previouslyTestedWithin12Months = objValues.previouslyTestedWithin12Months ? \"\" : \"This field is required.\";\r\n        temp.consentForFollowUpCalls = objValues.consentForFollowUpCalls ? \"\" : \"This field is required.\";\r\n        if (objValues.previouslyTestedWithin12Months !== \"\" && objValues.previouslyTestedWithin12Months !== \"No\") {\r\n            temp.resultOfPreviouslyTestedWithin12Months = objValues.resultOfPreviouslyTestedWithin12Months ? \"\" : \"This field is required.\";\r\n        }\r\n        temp.nameOfTestKit = objValues.nameOfTestKit ? \"\" : \"This field is required.\";\r\n        temp.typeOfHivstKitReceived = objValues.typeOfHivstKitReceived ? \"\" : \"This field is required.\";\r\n        temp.numberOfHivstKitsReceived = objValues.numberOfHivstKitsReceived ? \"\" : \"This field is required.\";\r\n        // temp.expiryDate = objValues.expiryDate ? \"\" : \"This field is required.\";\r\n        temp.lotNumber = objValues.lotNumber ? \"\" : \"This field is required.\";\r\n        if(selectedUsers.length === 0) {\r\n            temp.selectedUsers =   objValues.testKitUsers ? \"\" : \"Please select at least one user\"\r\n        }\r\n        // console.log(\"temp\", temp);\r\n        setErrors({ ...temp });\r\n        return Object.values(temp).every((x) => x == \"\");\r\n    }\r\n\r\n    // validate testKitUserDetails\r\n    const validateUserInformation = () => {\r\n        // if (objValues.otherTestKitUserInfoAvailable === \"Yes\") {\r\n        let temp = {};\r\n        temp.firstName = testKitUserDetails.basicUserInfo.firstName ?  \"\" : \"This field is required.\";\r\n        // temp.surname = testKitUserDetails.basicUserInfo.surname ?  \"\" : \"This field is required.\";\r\n        // temp.userCategory = testKitUserDetails.basicUserInfo.userCategory ? \"\" : \"This field is required.\";\r\n        // temp.otherCategory = testKitUserDetails.basicUserInfo.userCategory === \"Others\" ? testKitUserDetails.basicUserInfo.otherCategory ? \"\" : \"This field is required.\" : \"\";\r\n        temp.clientCode = testKitUserDetails.basicUserInfo.clientCode ? \"\" : \"This field is required.\";\r\n        // temp.dateOfBirth = testKitUserDetails.basicUserInfo.dateOfBirth ? \"\" : \"This field is required.\";\r\n        temp.typeOfHivst = testKitUserDetails.basicUserInfo.typeOfHivst ? \"\" : \"This field is required.\";\r\n        // Check if the selected user category is in the selectedUsers array\r\n        // if (!selectedUsers.includes(testKitUserDetails.basicUserInfo.userCategory) && testKitUserDetails.basicUserInfo.userCategory !== \"\" ) {\r\n        //     temp.userCategory = \"The selected user category does not match the selected kit users.\";\r\n        // }\r\n        // the number of kit is empty\r\n        setUserInformationErrors({...temp});\r\n        return Object.values(temp).every((x) => x == \"\");\r\n        // }\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        let newObjectValues = {...objValues};\r\n        if (name in objValues) {\r\n            newObjectValues[name] = value;\r\n        } else if (name in objValues.postTestAssessment) {\r\n            newObjectValues.postTestAssessment[name] = value;\r\n        } else if (name in objValues.postTestAssessment.referralInformation) {\r\n            newObjectValues.postTestAssessment.referralInformation[name] = value;\r\n        }\r\n\r\n        // Check if the name is \"previouslyTestedWithin12Months\"\r\n        if (name === \"previouslyTestedWithin12Months\") {\r\n            newObjectValues.resultOfPreviouslyTestedWithin12Months = \"\";\r\n        }\r\n        if (name === \"typeOfHivstKitReceived\") {\r\n            newObjectValues.numberOfHivstKitsReceived = \"\";\r\n            newObjectValues.nameOfTestKit = \"\";\r\n            newObjectValues.lotNumber = \"\";\r\n            newObjectValues.expiryDate = \"\";\r\n        }\r\n        // Check if the name is \"hasConductedHIVST\" and objValues.hasConductedHIVST is \"No\"\r\n        if (name === \"hasConductedHIVST\") {\r\n            testKitUserDetails.postTestAssessment = {\r\n                ...testKitUserDetails.postTestAssessment,\r\n                everUsedHivstKitForSelfOrOthers: \"\",\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\",\r\n                resultOfHivstTest: \"\",\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n        }\r\n// Validate the field and remove the error message if the field is filled\r\n        if (value) {\r\n            let tempErrors = {...errors};\r\n            tempErrors[name] = \"\";\r\n            setErrors(tempErrors);\r\n        }\r\n\r\n        setObjValues(newObjectValues);\r\n    }\r\n\r\n    // console.log(\"action type\", props.activePage.actionType)\r\n\r\n    const handleUserInformationInputChange = (e, section) => {\r\n        const {name, value} = e.target;\r\n        let newUserInformation = {...testKitUserDetails};\r\n\r\n        if (section === 'postTestAssessment' && name in newUserInformation[section].referralInformation) {\r\n            newUserInformation[section].referralInformation[name] = value;\r\n        } else {\r\n            newUserInformation[section][name] = value;\r\n        }\r\n\r\n        // if everUsedHivstKitForSelfOrOthers  clear otherHivstKitUserCategory\r\n        if (name === \"everUsedHivstKitForSelfOrOthers\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\"\r\n            };\r\n        }\r\n\r\n        // if  resultOfHivstTestchnages clear all the feilds below\r\n        if (name === \"resultOfHivstTest\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n\r\n        }\r\n        // if  accessConfirmatoryHtschnages clear all the feilds below\r\n        if (name === \"accessConfirmatoryHts\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n\r\n        }\r\n        // if  referPreventionServiceschnages clear all the feilds below\r\n        if (name === \"referPreventionServices\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n        }\r\n\r\n        // any change in referredForPreventionServices clear dateReferredForPreventionServices\r\n        if (name === \"referredForPreventionServices\") {\r\n            newUserInformation.postTestAssessment.referralInformation = {\r\n                ...newUserInformation.postTestAssessment.referralInformation,\r\n                dateReferredForPreventionServices: \"\"\r\n            };\r\n        }\r\n\r\n        if (name === \"hasConductedHIVST\" && value === \"No\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                everUsedHivstKitForSelfOrOthers: \"\",\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\",\r\n                resultOfHivstTest: \"\",\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                }\r\n            };\r\n        }\r\n        // if userCategory changes clear all other fields in basicUserInfo\r\n        if (name === \"userCategory\") {\r\n            newUserInformation.basicUserInfo = {\r\n                ...newUserInformation.basicUserInfo,\r\n                otherCategory: \"\",\r\n                clientCode: \"\",\r\n                dateOfBirth: \"\",\r\n                age: \"\",\r\n            }\r\n        }\r\n        // validate and remove error message if the field is filled\r\n        if (value) {\r\n            let tempErrors = {...userInformationErrors};\r\n            tempErrors[name] = \"\";\r\n            setUserInformationErrors(tempErrors);\r\n        }\r\n\r\n        setUserInformation(newUserInformation);\r\n    };\r\n\r\n\r\n// Function to add a testKitUserDetails object to the list\r\n\r\n    const addUserInformation = () => {\r\n        if(validateUserInformation()) {\r\n            if(userInformationList.length <= objValues.numberOfHivstKitsReceived) {\r\n                let newUserInformation = {\r\n                    basicUserInfo: {\r\n                        id: \"\",\r\n                        firstName:testKitUserDetails.basicUserInfo.firstName,\r\n                        surname:testKitUserDetails.basicUserInfo.surname,\r\n                        otherName:testKitUserDetails.basicUserInfo.otherName,\r\n                        dateOfRegistration:testKitUserDetails.basicUserInfo.dateOfRegistration,\r\n                        otherCategory: testKitUserDetails.basicUserInfo.otherCategory,\r\n                        clientCode: testKitUserDetails.basicUserInfo.clientCode,\r\n                        dateOfBirth: testKitUserDetails.basicUserInfo.dateOfBirth,\r\n                        age: testKitUserDetails.basicUserInfo.age,\r\n                        sex: testKitUserDetails.basicUserInfo.sex,\r\n                        maritalStatusId: testKitUserDetails.basicUserInfo.maritalStatusId,\r\n                        typeOfHivst: testKitUserDetails.basicUserInfo.typeOfHivst,\r\n                        userCategory: testKitUserDetails.basicUserInfo.userCategory\r\n                    },\r\n                    postTestAssessment: {\r\n                        everUsedHivstKit: testKitUserDetails.postTestAssessment.everUsedHivstKit,\r\n                        everUsedHivstKitForSelfOrOthers: testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers,\r\n                        otherHivstKitUserCategory: testKitUserDetails.postTestAssessment.otherHivstKitUserCategory,\r\n                        otherHivstKitUserCategoryText: testKitUserDetails.postTestAssessment.otherHivstKitUserCategoryText,\r\n                        resultOfHivstTest: testKitUserDetails.postTestAssessment.resultOfHivstTest,\r\n                        accessConfirmatoryHts: testKitUserDetails.postTestAssessment.accessConfirmatoryHts,\r\n                        referPreventionServices: testKitUserDetails.postTestAssessment.referPreventionServices,\r\n                        referralInformation: {\r\n                            referredForConfirmatoryHts: testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts,\r\n                            dateReferredForConfirmatoryHts: testKitUserDetails.postTestAssessment.referralInformation.dateReferredForConfirmatoryHts,\r\n                            referredForPreventionServices: testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices,\r\n                            dateReferredForPreventionServices: testKitUserDetails.postTestAssessment.referralInformation.dateReferredForPreventionServices\r\n                        }\r\n                    }\r\n                }\r\n                setUserInformationList([...userInformationList, newUserInformation]);\r\n                setObjValues({...objValues, testKitUserDetails: [...userInformationList, newUserInformation]});\r\n\r\n                // clear testKitUserDetails after adding to the list and also set the hasConductedHIVST to No\r\n                setUserInformation({\r\n                    basicUserInfo: {\r\n                        firstName:\"\",\r\n                        surname:\"\",\r\n                        otherName:\"\",\r\n                        dateOfRegistration:\"\",\r\n                        otherCategory: \"\",\r\n                        clientCode: \"\",\r\n                        dateOfBirth: \"\",\r\n                        age: \"\",\r\n                        sex: \"\",\r\n                        maritalStatusId: \"\",\r\n                        typeOfHivst: \"\",\r\n                        userCategory: \"\",\r\n                        isDateOfBirthEstimated: \"\"\r\n                    },\r\n                    postTestAssessment: {\r\n                        everUsedHivstKit: \"\",\r\n                        everUsedHivstKitForSelfOrOthers: \"\",\r\n                        otherHivstKitUserCategory: \"\",\r\n                        otherHivstKitUserCategoryText: \"\",\r\n                        resultOfHivstTest: \"\",\r\n                        accessConfirmatoryHts: \"\",\r\n                        referPreventionServices: \"\",\r\n                        referralInformation: {\r\n                            referredForConfirmatoryHts: \"\",\r\n                            dateReferredForConfirmatoryHts: \"\",\r\n                            referredForPreventionServices: \"\",\r\n                            dateReferredForPreventionServices: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                setObjValues({...objValues, hasConductedHIVST: \"No\"});\r\n            } else {\r\n                // console.log(\"Cannot add more user information as it exceeds the number of HIVST kits received.\");\r\n            }\r\n\r\n        } else{\r\n            toast.error(\"Please fill all the required fields\");\r\n        }\r\n\r\n    }\r\n// Function to remove a testKitUserDetails object from the list based on index\r\n    const removeUserInformation = (index) => {\r\n        const updatedUserInformationList = userInformationList.filter((_, i) => i !== index);\r\n        setUserInformationList(updatedUserInformationList);\r\n        setObjValues({...objValues, testKitUserDetails: updatedUserInformationList});\r\n    };\r\n\r\n// Function to update a testKitUserDetails object in the list based on index\r\n    const updateUserInformation = (index, updatedUserInformation) => {\r\n        const updatedUserInformationList = userInformationList.map((testKitUserDetails, i) =>\r\n            i === index ? updatedUserInformation : testKitUserDetails\r\n        );\r\n        setUserInformationList(updatedUserInformationList);\r\n        setObjValues({...objValues, testKitUserDetails: updatedUserInformationList});\r\n    };\r\n\r\n// Function to clear the testKitUserDetails list\r\n    const clearUserInformationList = () => {\r\n        setUserInformationList([]);\r\n        setObjValues({...objValues, testKitUserDetails: []});\r\n    };\r\n\r\n    // // console.log(\"Obj\", objValues)\r\n\r\n    const handleKitSelectUserChange = selectedUsers => {\r\n        setSelectedUsers(selectedUsers);\r\n        let newValues = {...objValues, testKitUsers: selectedUsers};\r\n        if (!selectedUsers || selectedUsers.length === 0) {\r\n            setShowUserInfo(false);\r\n            newValues = {...newValues, otherTestKitUserInfoAvailable: \"\"};\r\n        } else if (selectedUsers.length === 1 && selectedUsers[0] === 'myself') {\r\n            setShowUserInfo(false);\r\n            newValues = {...newValues, otherTestKitUserInfoAvailable: \"\"};\r\n        } else {\r\n            setShowUserInfo(true);\r\n        }\r\n        if (!showUserInfo) {\r\n            testKitUserDetails.userCategory = \"\";\r\n            testKitUserDetails.otherCategory = \"\";\r\n            testKitUserDetails.clientCode = \"\";\r\n            testKitUserDetails.dateOfBirth = \"\";\r\n            testKitUserDetails.age = \"\";\r\n            testKitUserDetails.sex = \"\";\r\n            testKitUserDetails.maritalStatus = \"\";\r\n            testKitUserDetails.clientCode = \"\";\r\n            testKitUserDetails.typeOfHivSelfTest = \"\";\r\n        }\r\n        // always clear the userInformationList when the user selects a new user\r\n        // setUserInformationList([]);\r\n        setObjValues(newValues);\r\n        // }\r\n    };\r\n    const checkClientCode = (e) => {\r\n        let code = \"\";\r\n        if (e.target.name === \"serialNumber\") {\r\n            code = createdCode + e.target.value;\r\n            setCreatedCode(code);\r\n            // // console.log(\"Code created is &&&& \", createdCode);\r\n            setObjValues({...objValues, clientCode: code});\r\n        }\r\n\r\n        async function getIndexClientCode() {\r\n            const indexClientCode = objValues.clientCode;\r\n            // // console.log(indexClientCode);\r\n            const response = await axios.get(\r\n                `${baseUrl}hts/client/${indexClientCode}`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"text/plain\",\r\n                    },\r\n                }\r\n            );\r\n        }\r\n\r\n        getIndexClientCode();\r\n    };\r\n\r\n\r\n    const Sex = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n                headers: {Authorization: `Bearer ${token}`},\r\n            })\r\n            .then((response) => {\r\n                //// console.log(response.data);\r\n                setSexs(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //// console.log(error);\r\n            });\r\n    };\r\n\r\n    const MARITALSTATUS = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n                headers: {Authorization: `Bearer ${token}`},\r\n            })\r\n            .then((response) => {\r\n                //// console.log(response.data);\r\n                setMaritalStatus(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //// console.log(error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        Sex();\r\n        MARITALSTATUS();\r\n    }, []);\r\n\r\n\r\n    const setAge = () => {\r\n        const age = calculate_age(testKitUserDetails.basicUserInfo?.dateOfBirth);\r\n        setUserInformation(prevState => ({\r\n            ...prevState,\r\n            basicUserInfo: {\r\n                ...prevState.basicUserInfo,\r\n                age: age\r\n            }\r\n        }));\r\n        return age;\r\n    }\r\n\r\n    const handleDateOfBirthChange1 = (e) => {\r\n        let newUserInformation = {...testKitUserDetails};\r\n        newUserInformation.basicUserInfo[e.target.name] = e.target.value;\r\n        if (e.target.value && new Date(e.target.value) <= new Date()) {\r\n            const age_now = calculate_age(e.target.value);\r\n            newUserInformation.basicUserInfo.age = age_now;\r\n        } else {\r\n            newUserInformation.basicUserInfo.age = \"\";\r\n        }\r\n        setUserInformation(newUserInformation);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (validateObjValues()) {\r\n            // const userInfoList = userInformationList;\r\n            objValues.testKitUserDetails = [testKitUserDetails] ;\r\n            setSaving(true)\r\n            axios\r\n                .put(`${baseUrl}hivst/${props.activePage.activeObject.id}`, objValues, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        setSaving(false)\r\n                        toast.success(\"HIVST Updated Successful\");\r\n                        history.push(\"/patient/hivst\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    toast.error(\"An error occurred. Please try again.\");\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n                age_now--;\r\n            }\r\n            // objValues.age = age_now;\r\n            testKitUserDetails.basicUserInfo.age = age_now;\r\n        } else {\r\n            setUserInformation({ ...testKitUserDetails, age: \"\" });\r\n            // setObjValues({ ...objValues, age: \"\" });\r\n        }\r\n        // setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n        setUserInformation({ ...testKitUserDetails, [e.target.name]: e.target.value });\r\n        setUserInformation({ ...testKitUserDetails, dateOfBirth: e.target.value });\r\n        // setObjValues({ ...objValues, dob: e.target.value });\r\n        if (testKitUserDetails.basicUserInfo.age !== \"\" && testKitUserDetails.basicUserInfo.age >= 85) {\r\n            toggle();\r\n        }\r\n    };\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            testKitUserDetails.basicUserInfo.isDateOfBirthEstimated = false;\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            // objValues.isDateOfBirthEstimated = true;\r\n            testKitUserDetails.basicUserInfo.isDateOfBirthEstimated = true;\r\n            setAgeDisabled(false);\r\n        }\r\n    };\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if (e.target.value !== \"\" && e.target.value >= 85) {\r\n                toggle();\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n            setUserInformation({ ...testKitUserDetails, dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n            // setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n            // objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\")\r\n            testKitUserDetails.basicUserInfo.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n        }\r\n        // setObjValues({ ...objValues, age: e.target.value });\r\n        setUserInformation({ ...testKitUserDetails, age: e.target.value });\r\n    };\r\n\r\n    // console.log(\"selectedUsers\", selectedUsers)\r\n    // console.log(\"objValues\", objValues)\r\n    // console.log(\"testKitUserDetails\", testKitUserDetails)\r\n    // console.log(\"userInformationList\", userInformationList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2 style={{color: \"#000\"}}>\r\n                        HIV SELF - TEST AND RESPONSE CARD {isView ? \" - View\" : \" - Update\"} </h2>\r\n                    <br/>\r\n                    <form>\r\n                        <div className=\"row mb-7\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Visit Date <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfVisit\"\r\n                                        id=\"dateOfVisit\"\r\n                                        // value={objValues.dateOfVisit}\r\n                                        value={hivstObj.dateOfVisit}\r\n                                        onChange={handleInputChange}\r\n                                        min=\"1929-12-31\"\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {errors.dateOfVisit !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfVisit}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        Service Delivery Point\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"serviceDeliveryPoint\"\r\n                                        id=\"serviceDeliveryPoint\"\r\n                                        value={objValues.serviceDeliveryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Health Facility\">Health Facility</option>\r\n                                        <option value=\"Comunity Pharmacy\">Community Pharmacy</option>\r\n                                        <option value=\"PPMV\">PPMV</option>\r\n                                        <option value=\"Mobile Distribution\">Mobile Distribution</option>\r\n                                        <option value=\"Workplace\">WorkPlace</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        <option value=\"Home based\">Home based</option>\r\n                                        <option value=\"Door to Door\">Door to Door</option>\r\n                                    </select>\r\n                                    {errors.serviceDeliveryPoint !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.serviceDeliveryPoint}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        User Type\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"userType\"\r\n                                        id=\"userType\"\r\n                                        value={objValues.userType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Primary User\">Primary User (collector)</option>\r\n                                        <option value=\"Secondary User\">secondary user\r\n                                        </option>\r\n                                    </select>\r\n                                    {errors.userType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.userType}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Serial Number\r\n                                        {/*<span style={{color: \"red\"}}> *</span> */}\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"serialNumber\"\r\n                                        id=\"serialNumber\"\r\n                                        value={serialNumber}\r\n                                        //value={Math.floor(Math.random() * 1093328)}\r\n                                        onBlur={checkClientCode}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {/*{errors.serialNumber !== \"\" ? (*/}\r\n                                    {/*    <span className={classes.error}>{errors.serialNumber}</span>*/}\r\n                                    {/*) : (*/}\r\n                                    {/*    \"\"*/}\r\n                                    {/*)}*/}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Client Code <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"clientCode\"\r\n                                        id=\"clientCode\"\r\n                                        value={objValues.clientCode}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {errors.clientCode !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.clientCode}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Have you previously tested for HIV in the last 12 months?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTestedWithin12Months\"\r\n                                        id=\"previouslyTestedWithin12Months\"\r\n                                        value={objValues.previouslyTestedWithin12Months}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">YES</option>\r\n                                        <option value=\"No\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTestedWithin12Months !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTestedWithin12Months}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues?.previouslyTestedWithin12Months === \"Yes\" ? (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label >\r\n                                            What was the test result?\r\n                                            <span style={{color: \"red\"}}> *</span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"resultOfPreviouslyTestedWithin12Months\"\r\n                                            id=\"resultOfPreviouslyTestedWithin12Months\"\r\n                                            value={objValues.resultOfPreviouslyTestedWithin12Months}\r\n                                            onChange={handleInputChange}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            disabled={isView}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Positive\">Positive</option>\r\n                                            <option value=\"Negative\">Negative</option>\r\n                                            <option value=\"Unknown\">Unknown</option>\r\n                                        </select>\r\n                                        {errors.resultOfPreviouslyTestedWithin12Months !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.resultOfPreviouslyTestedWithin12Months}</span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            ) : \"\"}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        Do you consent to be followed-up via phone calls?\r\n                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consentForFollowUpCalls\"\r\n                                        id=\"consentForFollowUpCalls\"\r\n                                        value={objValues.consentForFollowUpCalls}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">YES</option>\r\n                                        <option value=\"No\">NO</option>\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        What type of HIVST kit did you receive/purchase today?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeOfHivstKitReceived\"\r\n                                        id=\"typeOfHivstKitReceived\"\r\n                                        value={objValues.typeOfHivstKitReceived}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Oral fluid\">Oral fluid</option>\r\n                                        <option value=\"Blood\">Blood</option>\r\n                                    </select>\r\n                                    {errors.typeOfHivstKitReceived !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.typeOfHivstKitReceived}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Number of individual HIV self-test kits received? {\" \"}\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numberOfHivstKitsReceived\"\r\n                                        id=\"numberOfHivstKitsReceived\"\r\n                                        value={objValues.numberOfHivstKitsReceived}\r\n                                        min=\"1\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"providerNameCompletingForm\">\r\n                                        Name of Test Kit ?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"nameOfTestKit\"\r\n                                        id=\"nameOfTestKit\"\r\n                                        value={objValues.nameOfTestKit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {errors.nameOfTestKit !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.nameOfTestKit}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"providerNameCompletingForm\">\r\n                                        Lot No\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"lotNumber\"\r\n                                        id=\"\" lotNumber\r\n                                        value={objValues.lotNumber}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {errors.lotNumber !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.lotNumber}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Expiry Date\r\n                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"expiryDate\"\r\n                                        id=\"expirtyDate\"\r\n                                        value={objValues.expiryDate}\r\n                                        onChange={handleInputChange}\r\n                                        min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        max={moment(new Date()).add(5, 'years').format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        disabled={isView}\r\n                                    />\r\n                                    {/*{errors.expiryDate !== \"\" ? (*/}\r\n                                    {/*    <span className={classes.error}>{errors.expiryDate}</span>*/}\r\n                                    {/*) : (*/}\r\n                                    {/*    \"\"*/}\r\n                                    {/*)}*/}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"dualListBox\">\r\n                                        Who do you want to use the kit for?\r\n                                    </Label>\r\n                                    <DualListBox\r\n                                        options={options}\r\n                                        // selected={selectedUsers}\r\n                                        selected = {objValues.testKitUsers}\r\n                                        onChange={handleKitSelectUserChange}\r\n                                        disabled={isView}\r\n                                        // disabled={objValues.userType === \"Secondary User\" ? true : false}\r\n                                    />\r\n                                    {errors.testKitUsers !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.testKitUsers}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/*<div className=\"form-group mb-7 col-md-4\">*/}\r\n                            {/*    <FormGroup>*/}\r\n                            {/*        <Label for=\"testKitUsers\">*/}\r\n                            {/*            Who do you want to use the kit for?*/}\r\n                            {/*        </Label>*/}\r\n                            {/*        <Select*/}\r\n                            {/*            isMulti*/}\r\n                            {/*            name=\"whoDoYouWantToUseTheKitFor\"*/}\r\n                            {/*            options={options}*/}\r\n                            {/*            className=\"basic-multi-select\"*/}\r\n                            {/*            classNamePrefix=\"select\"*/}\r\n                            {/*            onChange={handleKitSelectUserChange}*/}\r\n                            {/*            styles={{*/}\r\n                            {/*                control: (provided) => ({*/}\r\n                            {/*                    ...provided,*/}\r\n                            {/*                    border: \"1px solid #014D88\",*/}\r\n                            {/*                    borderRadius: \"0.25rem\",*/}\r\n                            {/*                }),*/}\r\n                            {/*            }}*/}\r\n                            {/*        />*/}\r\n                            {/*    </FormGroup>*/}\r\n                            {/*</div>*/}\r\n\r\n                            {selectedUsers && selectedUsers.length === 1 && selectedUsers[0] === 'others' &&\r\n                                <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"testKitUsers\">\r\n                                            Please Specify\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"otherText\"\r\n                                            id=\"otherText\"\r\n                                            value={otherText}\r\n                                            onChange={e => setOtherText(e.target.value)}\r\n                                            placeholder=\"Please specify\"\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.25rem\",\r\n                                            }}\r\n                                            disabled={isView}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            }\r\n                            {showUserInfo &&\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label >\r\n                                            Is user information available?\r\n                                            <span style={{color: \"red\"}}> *</span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"otherTestKitUserInfoAvailable\"\r\n                                            id=\"otherTestKitUserInfoAvailable\"\r\n                                            value={objValues.otherTestKitUserInfoAvailable}\r\n                                            onChange={handleInputChange}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            disabled={isView}\r\n                                            // disabled={objValues.userType === \"Secondary User\" ? true : false}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Yes\">YES</option>\r\n                                            <option value=\"No\">NO</option>\r\n                                        </select>\r\n                                        {/*                {errors.firstTimeVisit !== \"\" ? (*/}\r\n                                        {/*                    <span className={classes.error}>*/}\r\n                                        {/*  {errors.firstTimeVisit}*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                ) : (*/}\r\n                                        {/*                    \"\"*/}\r\n                                        {/*                )}*/}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            }\r\n                            {/*{objValues?.otherTestKitUserInfoAvailable === \"Yes\" &&*/}\r\n                            {/*{selectedUsers.length === 0 ? (\"\") :*/}\r\n                                {objValues && objValues.testKitUserDetails &&\r\n                                (\r\n                                  <>\r\n                                    <div className=\"row center\">\r\n                                        <div\r\n                                            className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                            style={{\r\n                                                backgroundColor: \"#992E62\",\r\n                                                width: \"125%\",\r\n                                                height: \"35px\",\r\n                                                color: \"#fff\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            Intended Kit User Information\r\n                                        </div>\r\n                                    </div>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group mb-3 col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label for=\"\">\r\n                                                      Registration Date\r\n                                                      {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                  </Label>\r\n                                                  <Input\r\n                                                      type=\"date\"\r\n                                                      name=\"dateOfRegistration\"\r\n                                                      id=\"dateOfRegistration\"\r\n                                                      min=\"1929-12-31\"\r\n                                                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                      value={testKitUserDetails.basicUserInfo.dateOfRegistration}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n\r\n                                                  />\r\n                                                  {/*{errors.dateOfVisit !== \"\" ? (*/}\r\n                                                  {/*    <span className={classes.error}>{errors.dateOfVisit}</span>*/}\r\n                                                  {/*) : (*/}\r\n                                                  {/*    \"\"*/}\r\n                                                  {/*)}*/}\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      First Name\r\n                                                      <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      name=\"firstName\"\r\n                                                      id=\"firstName\"\r\n                                                      value={testKitUserDetails.basicUserInfo.firstName}\r\n                                                      // onChange={handleInputChange1}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  />\r\n                                                  {userInformationErrors.firstName !== \"\" ? (\r\n                                                      <span\r\n                                                          className={classes.error}>{userInformationErrors.firstName}</span>\r\n                                                  ) : (\r\n                                                      \"\"\r\n                                                  )}\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Surname\r\n                                                      <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      name=\"surname\"\r\n                                                      id=\"surname\"\r\n                                                      value={testKitUserDetails.basicUserInfo.surname}\r\n                                                      // onChange={handleInputChange1}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  />\r\n                                                  {userInformationErrors.surname !== \"\" ? (\r\n                                                      <span\r\n                                                          className={classes.error}>{userInformationErrors.surname}</span>\r\n                                                  ) : (\r\n                                                      \"\"\r\n                                                  )}\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Other name\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      name=\"otherName\"\r\n                                                      id=\"otherName\"\r\n                                                      value={testKitUserDetails.basicUserInfo.otherName}\r\n                                                      // onChange={handleInputChange1}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  />\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      user Category\r\n                                                      <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      name=\"userCategory\"\r\n                                                      id=\"userCategory\"\r\n                                                      value={testKitUserDetails.basicUserInfo.userCategory}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  >\r\n                                                      <option value={\"\"}></option>\r\n                                                      {/*{options.map(option => (*/}\r\n                                                      {/*    <option key={option.value} value={option.value}>*/}\r\n                                                      {/*        {option.label}*/}\r\n                                                      {/*    </option>*/}\r\n                                                      {/*))}*/}\r\n                                                      {selectedUsers.map((user, index) => (\r\n                                                          <option key={index} value={user}>{user}</option>\r\n                                                      ))}\r\n                                                      ))\r\n                                                  </select>\r\n                                                  {userInformationErrors.userCategory !== \"\" ? (\r\n                                                      <span\r\n                                                          className={classes.error}>{userInformationErrors.userCategory}</span>\r\n                                                  ) : (\r\n                                                      \"\"\r\n                                                  )}\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          {testKitUserDetails.basicUserInfo.userCategory === \"others\" ? (\r\n                                              <div className=\"form-group col-md-4\">\r\n                                                  <FormGroup>\r\n                                                      <Label>\r\n                                                          Specify Other Category\r\n                                                          {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                      </Label>\r\n                                                      <input\r\n                                                          type=\"text\"\r\n                                                          className=\"form-control\"\r\n                                                          name=\"otherCategory\"\r\n                                                          id=\"otherCategory\"\r\n                                                          value={testKitUserDetails.basicUserInfo.otherCategory}\r\n                                                          // onChange={handleInputChange1}\r\n                                                          onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                          style={{\r\n                                                              border: \"1px solid #014D88\",\r\n                                                              borderRadius: \"0.2rem\",\r\n                                                          }}\r\n                                                          disabled={isView}\r\n                                                      />\r\n                                                  </FormGroup>\r\n                                              </div>\r\n                                          ) : \"\"}\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Client Code\r\n                                                      <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      type=\"text\"\r\n                                                      className=\"form-control\"\r\n                                                      name=\"clientCode\"\r\n                                                      id=\"clientCode\"\r\n                                                      value={testKitUserDetails.basicUserInfo.clientCode}\r\n                                                      // onChange={handleInputChange1}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  />\r\n                                                  {userInformationErrors.clientCode !== \"\" ? (\r\n                                                      <span\r\n                                                          className={classes.error}>{userInformationErrors.clientCode}</span>\r\n                                                  ) : (\r\n                                                      \"\"\r\n                                                  )}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group mb-2 col-md-2\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Date Of Birth <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <div className=\"radio\">\r\n                                                      <label>\r\n                                                          <input\r\n                                                              type=\"radio\"\r\n                                                              value=\"Actual\"\r\n                                                              name=\"dateOfBirth\"\r\n                                                              defaultChecked\r\n                                                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                              style={{\r\n                                                                  border: \"1px solid #014D88\",\r\n                                                                  borderRadius: \"0.2rem\",\r\n                                                              }}\r\n                                                          />{\" \"}\r\n                                                          Actual\r\n                                                      </label>\r\n                                                  </div>\r\n                                                  <div className=\"radio\">\r\n                                                      <label>\r\n                                                          <input\r\n                                                              type=\"radio\"\r\n                                                              value=\"Estimated\"\r\n                                                              name=\"dateOfBirth\"\r\n                                                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                              style={{\r\n                                                                  border: \"1px solid #014D88\",\r\n                                                                  borderRadius: \"0.2rem\",\r\n                                                              }}\r\n                                                          />{\" \"}\r\n                                                          Estimated\r\n                                                      </label>\r\n                                                  </div>\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          <div className=\"form-group mb-3 col-md-3\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Date <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"date\"\r\n                                                      name=\"dob\"\r\n                                                      id=\"dob\"\r\n                                                      min=\"1929-12-31\"\r\n                                                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                      value={testKitUserDetails.basicUserInfo.dateOfBirth}\r\n                                                      onChange={handleDobChange}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                  />\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          <div className=\"form-group mb-3 col-md-3\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Age <span style={{color: \"red\"}}> *</span>\r\n                                                  </Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"number\"\r\n                                                      name=\"age\"\r\n                                                      id=\"age\"\r\n                                                      value={testKitUserDetails.basicUserInfo.age}\r\n                                                      disabled={ageDisabled}\r\n                                                      onChange={handleAgeChange}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                  />\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>\r\n                                                      Sex\r\n                                                      {/*<span style={{color: \"red\"}}> *</span> */}\r\n                                                  </Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      name=\"sex\"\r\n                                                      id=\"sex\"\r\n                                                      value={testKitUserDetails.basicUserInfo.sex}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  >\r\n                                                      <option value={\"\"}></option>\r\n                                                      {sexs.map((value) => (\r\n                                                          <option key={value.id} value={value.display}>\r\n                                                              {value.display}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          {testKitUserDetails.basicUserInfo.age > 9 && (\r\n                                              <div className=\"form-group  col-md-4\">\r\n                                                  <FormGroup>\r\n                                                      <Label>Marital Status</Label>\r\n                                                      <select\r\n                                                          className=\"form-control\"\r\n                                                          name=\"maritalStatusId\"\r\n                                                          id=\"maritalStatusId\"\r\n                                                          value={testKitUserDetails.basicUserInfo.maritalStatusId}\r\n                                                          // onChange={handleInputChange1}\r\n                                                          onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                          style={{\r\n                                                              border: \"1px solid #014D88\",\r\n                                                              borderRadius: \"0.2rem\",\r\n                                                          }}\r\n                                                          disabled={isView}\r\n                                                      >\r\n                                                          <option value={\"\"}></option>\r\n                                                          {maritalStatus.map((value) => (\r\n                                                              <option key={value.id} value={value.id}>\r\n                                                                  {value.display}\r\n                                                              </option>\r\n                                                          ))}\r\n                                                      </select>\r\n                                                  </FormGroup>\r\n                                              </div>\r\n                                          )}\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label> Type of HIV Self-Test </Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      name=\"typeOfHivst\"\r\n                                                      id=\"typeOfHivst\"\r\n                                                      value={testKitUserDetails.basicUserInfo.typeOfHivst}\r\n                                                      onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                      style={{\r\n                                                          border: \"1px solid #014D88\",\r\n                                                          borderRadius: \"0.2rem\",\r\n                                                      }}\r\n                                                      disabled={isView}\r\n                                                  >\r\n                                                      <option value={\"\"}></option>\r\n                                                      <option value=\"Assisted\">\r\n                                                          Assisted\r\n                                                      </option>\r\n                                                      <option value=\"Unassisted\">\r\n                                                          Unassisted\r\n                                                      </option>\r\n                                                  </select>\r\n                                                  {\r\n                                                      userInformationErrors.typeOfHivst !== \"\" ? (\r\n                                                          <span\r\n                                                              className={classes.error}>{userInformationErrors.typeOfHivst}</span>\r\n                                                      ) : (\"\")\r\n\r\n                                                  }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                          {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n                                          {/*    <LabelSui*/}\r\n                                          {/*        as=\"a\"*/}\r\n                                          {/*        color=\"black\"*/}\r\n                                          {/*        // onClick={handleSubmitfamilyIndexRequestDto}*/}\r\n                                          {/*        size=\"small\"*/}\r\n                                          {/*        style={{marginTop: 35}}*/}\r\n                                          {/*    >*/}\r\n                                          {/*        <Icon name=\"plus\"/> Add*/}\r\n                                          {/*    </LabelSui>*/}\r\n                                          {/*</div>*/}\r\n                                      </div>\r\n\r\n\r\n                                  </>\r\n                                )\r\n                                }\r\n\r\n                            {/*Checkbox to select if the User has conducted the HIVST – if checked, display the*/}\r\n                            {/*following questions, else the user should be able to save the form.*/}\r\n                            {/*<div className=\"row mb-7\">*/}\r\n                            {/*    <div className=\"form-group mb-3 col-md-4\">*/}\r\n                            {/*        <FormGroup>*/}\r\n                            {/*            <label>*/}\r\n                            {/*                <input*/}\r\n                            {/*                    type=\"checkbox\"*/}\r\n                            {/*                    checked={objValues.hasConductedHIVST}*/}\r\n                            {/*                    onChange={() => {*/}\r\n                            {/*                        setObjValues(prevState => ({*/}\r\n                            {/*                            ...prevState,*/}\r\n                            {/*                            hasConductedHIVST: !prevState.hasConductedHIVST*/}\r\n                            {/*                        }));*/}\r\n                            {/*                        // // console.log(\"Has Conducted HIVST\", !objValues.hasConductedHIVST);*/}\r\n                            {/*                    }}*/}\r\n                            {/*                    style={{marginRight: \"10px\"}}*/}\r\n                            {/*                />*/}\r\n                            {/*                Have you conducted the HIVST ?*/}\r\n                            {/*            </label>*/}\r\n                            {/*        </FormGroup>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</div>*/}\r\n                            {objValues?.otherTestKitUserInfoAvailable === \"No\" &&\r\n                                <div className=\"row mb-7\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <Button\r\n                                            content=\"Save wihout user Info\"\r\n                                            icon=\"save\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            {objValues && objValues.otherTestKitUserInfoAvailable === \"Yes\" &&\r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <hr style={{width: '100%'}}/>\r\n                                </div>\r\n                            }\r\n                            {/*{objValues && selectedUsers.length > 0 &&*/}\r\n                            {objValues && objValues.testKitUserDetails &&\r\n                                <div className=\"row mb-7\">\r\n                                    <div className=\"form-group  col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Have you conducted the HIVST ?\r\n                                                {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"hasConductedHIVST\"\r\n                                                id=\"hasConductedHIVST\"\r\n                                                value={objValues.hasConductedHIVST}\r\n                                                onChange={handleInputChange}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.2rem\",\r\n                                                }}\r\n                                                disabled={isView}\r\n                                            >\r\n                                                <option value={\"\"}></option>\r\n                                                <option value=\"Yes\">YES</option>\r\n                                                <option value=\"No\">NO</option>\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"row mb-7\">\r\n                                {/*{objValues.hasConductedHIVST === \"Yes\" ? (*/}\r\n                                {objValues && objValues.testKitUserDetails.postTestAssessment !== null ? (\r\n                                    // Display the following questions if the checkbox is checked\r\n                                    <>\r\n                                        <div className=\"row center\">\r\n                                            <div\r\n                                                className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                                style={{\r\n                                                    backgroundColor: \"green\",\r\n                                                    width: \"125%\",\r\n                                                    height: \"35px\",\r\n                                                    color: \"#fff\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n\r\n                                                Section B : HIVST Post Test Assessment\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        Have you ever used HIVST kit?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"everUsedHivstKit\"\r\n                                                        id=\"everUsedHivstKitl\"\r\n                                                        // value={objValues.hasConductedHIVST ? \"Yes\" : \"No\"}\r\n                                                        value={testKitUserDetails?.postTestAssessment?.everUsedHivstKit}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={isView}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Yes\">YES</option>\r\n                                                        <option value=\"No\">NO</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        Did you use the HIVST kit for yourself or someone else?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"everUsedHivstKitForSelfOrOthers\"\r\n                                                        id=\"everUsedHivstKitForSelfOrOthers\"\r\n                                                        value={testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={isView}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Self\">Self</option>\r\n                                                        <option value=\"Someone else\">Someone else</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers === \"Someone else\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Who did you give it to?\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"otherHivstKitUserCategory\"\r\n                                                            id=\"otherHivstKitUserCategory\"\r\n                                                            value={testKitUserDetails.postTestAssessment.otherHivstKitUserCategory}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={isView}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            {options.map(option => (\r\n                                                                <option key={option.value} value={option.value}>\r\n                                                                    {option.label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n                                            {testKitUserDetails.postTestAssessment?.otherHivstKitUserCategory === \"others\" ? (\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Please Specify Other Category\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"otherHivstKitUserCategoryText\"\r\n                                                            id=\"otherHivstKitUserCategoryText\"\r\n                                                            value={testKitUserDetails.postTestAssessment.otherHivstKitUserCategoryText}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={isView}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            ) : \"\"}\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        What was the result of the HIVST?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"resultOfHivstTest\"\r\n                                                        id=\"resultOfHivstTest\"\r\n                                                        value={testKitUserDetails.postTestAssessment.resultOfHivstTest}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={isView}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Reactive\">Reactive</option>\r\n                                                        <option value=\"Non-Reactive\">Non Reactive</option>\r\n                                                        <option value=\"Indeterminate\">Indeterminate</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {testKitUserDetails?.postTestAssessment?.resultOfHivstTest === \"Reactive\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Would you like to access HIV testing to confirm my HIVST\r\n                                                            result?\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"accessConfirmatoryHts\"\r\n                                                            id=\"accessConfirmatoryHts\"\r\n                                                            value={testKitUserDetails.postTestAssessment.accessConfirmatoryHts}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={isView}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"Yes\">YES</option>\r\n                                                            <option value=\"No\">NO</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n                                            {testKitUserDetails?.postTestAssessment?.resultOfHivstTest === \"Non-Reactive\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Would you like to be referred for prevention services\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"referPreventionServices\"\r\n                                                            id=\"referPreventionServices\"\r\n                                                            value={testKitUserDetails.postTestAssessment.referPreventionServices}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={isView}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"Yes\">YES</option>\r\n                                                            <option value=\"No\">NO</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        {\r\n                                            testKitUserDetails.postTestAssessment\r\n                                            && testKitUserDetails.postTestAssessment.accessConfirmatoryHts === \"Yes\"\r\n                                            || testKitUserDetails.postTestAssessment.referPreventionServices === \"Yes\" ?\r\n                                                (\r\n                                                    <div className=\"row center\">\r\n                                                        <div\r\n                                                            className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                                            style={{\r\n                                                                backgroundColor: \"rgba(25, 96, 176, 0.8)\",\r\n                                                                width: \"125%\",\r\n                                                                height: \"35px\",\r\n                                                                color: \"#fff\",\r\n                                                                fontWeight: \"bold\",\r\n                                                            }}\r\n                                                        >\r\n                                                            Section C : Referral Information\r\n                                                        </div>\r\n                                                        {testKitUserDetails.postTestAssessment.accessConfirmatoryHts === \"Yes\" && <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                <Label >\r\n                                                                    Referred for Confirmatory HTS Testing\r\n                                                                    {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                </Label>\r\n                                                                <select\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"referredForConfirmatoryHts\"\r\n                                                                    id=\"referredForConfirmatoryHts\"\r\n                                                                    value={testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts}\r\n                                                                    onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                                    style={{\r\n                                                                        border: \"1px solid #014D88\",\r\n                                                                        borderRadius: \"0.2rem\",\r\n                                                                    }}\r\n                                                                    disabled={isView}\r\n                                                                >\r\n                                                                    <option value={\"\"}></option>\r\n                                                                    <option value=\"Yes\">YES</option>\r\n                                                                    <option value=\"No\">NO</option>\r\n                                                                </select>\r\n                                                            </FormGroup>\r\n                                                        </div>}\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts === \"Yes\" &&\r\n                                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\">\r\n                                                                        Date referred for confirmatory HTS testing\r\n                                                                        field\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"dateReferredForConfirmatoryHts\"\r\n                                                                        id=\"dateReferredForConfirmatoryHts\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.dateReferredForConfirmatoryHts}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n\r\n                                                                        min={objValues.dateOfVisit}\r\n                                                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        disabled={isView}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>}\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails?.postTestAssessment?.referPreventionServices === \"Yes\" &&\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label >\r\n                                                                        Referred for Prevention Services\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"referredForPreventionServices\"\r\n                                                                        id=\"referredForPreventionServices\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={isView}\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">YES</option>\r\n                                                                        <option value=\"No\">NO</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        }\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices === \"Yes\" &&\r\n                                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\">\r\n                                                                        Date referred for prevention services\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"dateReferredForPreventionServices\"\r\n                                                                        id=\"dateReferredForPreventionServices\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.dateReferredForPreventionServices}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                                        min={objValues.dateOfVisit}\r\n                                                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        disabled={isView}\r\n                                                                    />\r\n                                                                    {/*{errors.dateOfVisit !== \"\" ? (*/}\r\n                                                                    {/*    <span className={classes.error}>{errors.dateOfVisit}</span>*/}\r\n                                                                    {/*) : (*/}\r\n                                                                    {/*    \"\"*/}\r\n                                                                    {/*)}*/}\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        }\r\n\r\n                                                    </div>) : \"\"}\r\n                                    </>\r\n                                ) : ( \"\"\r\n                                    // Display the save form button if the checkbox is not checked\r\n                                    // <div className=\"row\">\r\n                                    //     {// if selected user  is myself only show save button and save secondary user information\r\n                                    //         selectedUsers && selectedUsers.length === 1 && selectedUsers[0] === \"myself\" &&\r\n                                    //         <div className=\"form-group mb-3 col-md-6\">\r\n                                    //             <Button\r\n                                    //                 content=\"save myself information\"\r\n                                    //                 icon=\"save\"\r\n                                    //                 labelPosition=\"right\"\r\n                                    //                 style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                    //                 onClick={handleSubmit}\r\n                                    //                 disabled={saving}\r\n                                    //             />\r\n                                    //         </div>\r\n                                    //     }\r\n                                    //\r\n                                    // </div>\r\n                                )}\r\n                            </div>\r\n                            {selectedUsers.length > 0 && <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <LabelSui\r\n                                        as=\"a\"\r\n                                        color=\"black\"\r\n                                        onClick={addUserInformation}\r\n                                        size=\"small\"\r\n                                        style={{marginTop: 35}}\r\n                                    >\r\n                                        <Icon name=\"plus\"/> Add\r\n                                    </LabelSui>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                            {/*added kit user */}\r\n                            {userInformationList.length > 0 ? (\r\n                                <div class=\"row\">\r\n                                    <List className=\"mb-5\">\r\n                                        <Table striped responsive>\r\n                                            <thead style={{\r\n                                                backgroundColor: \"#014D88\",\r\n                                                color: \"white\",\r\n                                                fontSize: \"10px\"\r\n                                            }}>\r\n                                            <tr>\r\n                                                <th>Client Code</th>\r\n                                                <th>HIV Self Test Type</th>\r\n                                                {/*<th>Ever used HIVST Kit</th>*/}\r\n                                                <th>User Category</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {userInformationList.map((item, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{item.basicUserInfo.clientCode}</td>\r\n                                                    <td>{item.basicUserInfo.typeOfHivst}</td>\r\n                                                    {/*<th>{item.postTestAssessment.everUsedHivstKit}</th>*/}\r\n                                                    <td>{item.basicUserInfo.userCategory}</td>\r\n                                                    <td>\r\n                                                        <IconButton\r\n                                                            aria-label=\"delete\"\r\n                                                            size=\"small\"\r\n                                                            color=\"error\"\r\n                                                            onClick={() => removeUserInformation(index)}\r\n                                                        >\r\n                                                            <DeleteIcon fontSize=\"inherit\"/>\r\n                                                        </IconButton>\r\n                                                        <IconButton>\r\n                                                            <EditIcon fontSize=\"inherit\"/>\r\n                                                        </IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </List>\r\n                                </div>\r\n                            ) : \" \"}\r\n                            {/*{selectedUsers.length > 0 &&*/}\r\n                            { !isView &&\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <Button\r\n                                            content=\"update\"\r\n                                            icon=\"save\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            // disabled={saving}\r\n                                            disabled={userInformationList.length === 0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n                show={open}\r\n                toggle={toggle}\r\n                className=\"fade\"\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        onClick={toggle}\r\n                        style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default ViewEditHivst;","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["455","456","457","458","459","460","461","462","463","464"],"import React, { Fragment } from \"react\";\n// BS\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Link } from \"react-router-dom\";\n// images\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\n\nconst options = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [20, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [200, 45, 30,20]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 10, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst options2 = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [200, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [2000, 450, 300,200]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 100, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst Widget = () => {\n  return (\n    <Fragment>     \n      <div className=\"row\">\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-primary text-danger\">\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY TESTED</p>\n                  <h4 className=\"mb-0\">3280</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-warning text-warning\">\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENT ON ART</p>\n                  <h4 className=\"mb-0\">2570</h4>\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body  p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-danger text-danger\">\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\n                  <h4 className=\"mb-0\">50</h4>\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-success text-success\">\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\n                  <h4 className=\"mb-0\">2340</h4>\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <SummaryView />\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n          />\n        </div> */}\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options2}\n          />\n        </div> */}\n        \n      </div>\n    </Fragment>\n  );\n};\n\nexport default Widget;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["465","466","467","468","469","470"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport History from \"./History\";\r\nimport ContineousRegistrationTesting from \"./../Patient/ContineousRegistrationTesting\";\r\n//import CheckedInPatients from './Patient/CheckedInPatients'\r\nimport * as moment from \"moment\";\r\nimport ExistenceClientHIVSTRegistration from \"../Patient/HIVST/ExistenceClientHIVSTRegistration\";\r\nimport HIVSTPatientHistory from \"../Patient/HIVST/HIVSTPatientHistory\";\r\nimport { getCheckModalityForHTS } from \"../../../utility\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const patientId =\r\n    props.patientObj && props.patientObj.personId\r\n      ? props.patientObj.personId\r\n      : props.patientObj.id\r\n      ? props.patientObj.id\r\n      : \"\";\r\n\r\n  const [key, setKey] = useState(\r\n    props.activePage === \"NEW HTS\" ? \"new\" : \"home\"\r\n  );\r\n\r\n  const [patientInfo, setPatientInfo] = useState(null);\r\n  const [permissions, setPermission] = useState(\r\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\r\n  );\r\n  const [lastVisitCount, setLastVisitCount] = useState(null);\r\n  const [checkModality, setCheckModality] = useState(\"\");\r\n  const [lastVistAndModality, setLastVistAndModality] = useState(\"\");\r\n  const [lastVisitModalityAndCheckedIn, setLastVisitModalityAndCheckedIn] =\r\n    useState(lastVistAndModality || props.checkedInPatient ? true : false);\r\n\r\n  //Calculate last date of visit\r\n  const calculateLastVisitDate = (visitDate) => {\r\n    const monthDifference = moment(\r\n      new Date(moment(new Date()).format(\"YYYY-MM-DD\"))\r\n    ).diff(new Date(visitDate), \"months\", true);\r\n    console.log(monthDifference);\r\n    return monthDifference;\r\n  };\r\n  useEffect(() => {\r\n    patients();\r\n    patientsCurrentHts();\r\n    if (props.activePage.activePage === \"home\") {\r\n      setKey(\"home\");\r\n    }\r\n    if (props.activePage.activePage === \"NEW HTS\") {\r\n      setKey(\"new\");\r\n    }\r\n  }, [props.patientObj, props.activePage]);\r\n  ///GET LIST OF Patients\r\n\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setPatientList(response.data.htsClientDtoList);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n  async function patientsCurrentHts() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientId}/current-hts`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //set the last date of visit after the response\r\n        console.log(response.data);\r\n        setPatientInfo(response.data);\r\n        setLastVisitCount(\r\n          Math.round(calculateLastVisitDate(response.data.dateVisit))\r\n        );\r\n        setCheckModality(\r\n          getCheckModalityForHTS(\r\n            response.data.riskStratificationResponseDto?.modality\r\n          )\r\n        );\r\n\r\n        // new adjustment-- for patient with pmtct modality, they should skip the 3 month\r\n        console.log(\"check last hts\", response.data);\r\n        let condition =\r\n          Math.round(calculateLastVisitDate(response.data.dateVisit)) >= 3 ||\r\n          getCheckModalityForHTS(\r\n            response.data.riskStratificationResponseDto?.modality\r\n          ) === \"show\"\r\n            ? true\r\n            : false;\r\n\r\n        setLastVistAndModality(condition);\r\n        setLastVisitModalityAndCheckedIn(\r\n          condition || props.checkedInPatient ? true : false\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //setLoading(false)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"HTS HISTORY\">\r\n                    <History\r\n                      patientObj={props.patientObj}\r\n                      setPatientObj={props.setPatientObj}\r\n                      activePage={props.activePage}\r\n                      setActivePage={props.setActivePage}\r\n                      clientCode={props.clientCode}\r\n                      patientAge={props.patientAge}\r\n                      patients={patients}\r\n                      patientList={patientList}\r\n                      loading={loading}\r\n                    />\r\n                  </Tab>\r\n                  {/* lastVistAndModality */}\r\n\r\n                  {lastVisitModalityAndCheckedIn && (\r\n                    <Tab eventKey=\"new\" title=\"NEW HTS\">\r\n                      <ContineousRegistrationTesting\r\n                        patientObj={patientInfo}\r\n                        activePage={props.activePage}\r\n                        setActivePage={props.setActivePage}\r\n                        clientCode={props.clientCode}\r\n                        patientAge={props.patientAge}\r\n                        patients={patients}\r\n                        patientList={patientList}\r\n                        checkedInPatient={props.checkedInPatient}\r\n                      />\r\n                    </Tab>\r\n                  )}\r\n                  {/* uncomment E001 */}\r\n                  <Tab eventKey=\"hivst-history\" title=\"HIVST HISTORY\">\r\n                    <HIVSTPatientHistory\r\n                      patientObj={props.patientObj}\r\n                      setPatientObj={props.setPatientObj}\r\n                      activePage={props.activePage}\r\n                      setActivePage={props.setActivePage}\r\n                      clientCode={props.clientCode}\r\n                      patientAge={props.patientAge}\r\n                      patients={patients}\r\n                      patientList={patientList}\r\n                      loading={loading}\r\n                    />\r\n                  </Tab>\r\n                  <Tab eventKey=\"new-hivst\" title=\"NEW HIVST\">\r\n                    <ExistenceClientHIVSTRegistration\r\n                      patientObj={props.patientObj}\r\n                      activePage={props.activePage}\r\n                      setActivePage={props.setActivePage}\r\n                      clientCode={props.clientCode}\r\n                      patientAge={props.patientAge}\r\n                      patients={patients}\r\n                    />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["471","472","473","474","475","476","477","478","479"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PostTest = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n  const [nextForm, setNextForm] = useState([]);\r\n  ///const [errors, setErrors] = useState({});\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    personId: patientID,\r\n  });\r\n  const [postTest, setPostTest] = useState({\r\n    hivTestResult: \"\",\r\n    hivTestBefore:\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.lastHivTestDone !== \"Never\" &&\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.whatWasTheResult === \"Positive\"\r\n        ? \"Previously tested positive in HIV care\"\r\n        : \"\",\r\n    hivRequestResult: \"\",\r\n    hivRequestResultCt: \"\",\r\n    clientReceivedHivTestResult: \"\",\r\n    postTestCounseling: \"\",\r\n    riskReduction: \"\",\r\n    postTestDisclosure: \"\",\r\n    bringPartnerHivtesting: \"\",\r\n    childrenHivtesting: \"\",\r\n    informationFp: \"\",\r\n    partnerFpThanCondom: \"\",\r\n    partnerFpUseCondom: \"\",\r\n    correctCondomUse: \"\",\r\n    condomProvidedToClient: \"\",\r\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\r\n    referredToServices: \"\",\r\n    condomProvidedToClientCount: \"\",\r\n    lubricantProvidedToClientCount: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (\r\n      props.patientObj &&\r\n      props.patientObj.postTestCounselingKnowledgeAssessment\r\n    ) {\r\n      setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment);\r\n    } else {\r\n      ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {})\r\n      if (\r\n        postTest.hivTestResult === \"\" &&\r\n        props.patientObj.hivTestResult2 !== \"\" &&\r\n        props.patientObj.hivTestResult2 !== null &&\r\n        props.patientObj.hivTestResult2 === \"Positive\"\r\n      ) {\r\n        postTest.hivTestResult = \"true\";\r\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n      } else if (\r\n        postTest.hivTestResult === \"\" &&\r\n        props.patientObj.hivTestResult2 !== \"\" &&\r\n        props.patientObj.hivTestResult2 !== null &&\r\n        props.patientObj.hivTestResult2 === \"Negative\"\r\n      ) {\r\n        postTest.hivTestResult = \"false\";\r\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n      } else if (\r\n        postTest.hivTestResult === \"\" &&\r\n        props.patientObj.hivTestResult !== \"\" &&\r\n        props.patientObj.hivTestResult !== null &&\r\n        props.patientObj.hivTestResult === \"Positive\"\r\n      ) {\r\n        postTest.hivTestResult = \"true\";\r\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n      } else if (\r\n        postTest.hivTestResult === \"\" &&\r\n        props.patientObj.hivTestResult !== \"\" &&\r\n        props.patientObj.hivTestResult !== null &&\r\n        props.patientObj.hivTestResult === \"Negative\"\r\n      ) {\r\n        postTest.hivTestResult = \"false\";\r\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n      }\r\n    }\r\n  }, [props.patientObj, postTest.hivTestResult]);\r\n  const handleInputChangePostTest = (e) => {\r\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"condomProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      } else {\r\n        setPostTest({ ...postTest, [e.target.name]: 0 });\r\n      }\r\n    } else {\r\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n     let latestForm = getNextForm(\r\n       \"Post_Test_Counseling\",\r\n       props?.patientObj?.riskStratificationResponseDto?.age,\r\n       '',\r\n       props?.patientObj?.hivTestResult\r\n     );\r\n\r\n    objValues.htsClientId = props.patientObj.id;\r\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\r\n    objValues.personId = props.patientObj.personResponseDto.id;\r\n    axios\r\n      .put(\r\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\r\n        objValues,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setSaving(false);\r\n        props.setPatientObj(response.data);\r\n        toast.success(\"Post test  successful\");\r\n        \r\n      handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        console.log(error);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n    // }else{\r\n    //     toast.error(\"All post test fields are required\")\r\n\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>POST TEST COUNSELING</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n              </LabelRibbon>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={postTest.hivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={true}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Positive</option>\r\n                    <option value=\"false\">Negative</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been tested for HIV before within this year?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestBefore\"\r\n                    id=\"hivTestBefore\"\r\n                    value={postTest.hivTestBefore}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Not previously tested\">\r\n                      Not previously tested\r\n                    </option>\r\n                    <option value=\"Previously tested negative\">\r\n                      Previously tested negative\r\n                    </option>\r\n                    <option value=\"Previously tested positive in HIV care\">\r\n                      Previously tested positive in HIV care\r\n                    </option>\r\n                    <option value=\"Previously tested positive not in HIV care\">\r\n                      Previously tested positive not in HIV care\r\n                    </option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV Request and Result form signed by tester </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResult\"\r\n                    id=\"hivRequestResult\"\r\n                    value={postTest.hivRequestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResultCt\"\r\n                    id=\"hivRequestResultCt\"\r\n                    value={postTest.hivRequestResultCt}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client received HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientReceivedHivTestResult\"\r\n                    id=\"clientReceivedHivTestResult\"\r\n                    value={postTest.clientReceivedHivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test counseling done </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestCounseling\"\r\n                    id=\"postTestCounseling\"\r\n                    value={postTest.postTestCounseling}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Risk reduction plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"riskReduction\"\r\n                    id=\"riskReduction\"\r\n                    value={postTest.riskReduction}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test disclosure plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestDisclosure\"\r\n                    id=\"postTestDisclosure\"\r\n                    value={postTest.postTestDisclosure}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Will bring partner(s) for HIV testing </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"bringPartnerHivtesting\"\r\n                    id=\"bringPartnerHivtesting\"\r\n                    value={postTest.bringPartnerHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"childrenHivtesting\"\r\n                    id=\"childrenHivtesting\"\r\n                    value={postTest.childrenHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Provided with information on FP and dual contraception{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informationFp\"\r\n                    id=\"informationFp\"\r\n                    value={postTest.informationFp}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client/Partner use FP methods (other than condom)\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpThanCondom\"\r\n                    id=\"partnerFpThanCondom\"\r\n                    value={postTest.partnerFpThanCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpUseCondom\"\r\n                    id=\"partnerFpUseCondom\"\r\n                    value={postTest.partnerFpUseCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Correct condom use demonstrated </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"correctCondomUse\"\r\n                    id=\"correctCondomUse\"\r\n                    value={postTest.correctCondomUse}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Condoms provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"condomProvidedToClient\"\r\n                    id=\"condomProvidedToClient\"\r\n                    value={postTest.condomProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.condomProvidedToClient !== null &&\r\n                postTest.condomProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many condoms were provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomProvidedToClientCount\"\r\n                        id=\"condomProvidedToClientCount\"\r\n                        value={postTest.condomProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lubricant were provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lubricantProvidedToClient\"\r\n                    id=\"lubricantProvidedToClient\"\r\n                    value={postTest.lubricantProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.lubricantProvidedToClient !== null &&\r\n                postTest.lubricantProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many lubricant provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantProvidedToClientCount\"\r\n                        id=\"lubricantProvidedToClientCount\"\r\n                        value={postTest.lubricantProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client referred to other services </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredToServices\"\r\n                    id=\"referredToServices\"\r\n                    value={postTest.referredToServices}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <Message success>\r\n                <h4>\r\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\r\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\r\n                  re-testing after 3 months\r\n                </h4>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\r\n                  /> */}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTest;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nimport { calculate_age } from \"../../utils\";\r\nimport { Modal } from \"react-bootstrap\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst Recency = (props) => {\r\n  console.log(\"recency new\", props.patientObj);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [nextForm, setNextForm] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"permissions\")?.split(\",\")\r\n  );\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    recency: {},\r\n    personId: patientID,\r\n  });\r\n  const [recency, setRecency] = useState({\r\n    optOutRTRI:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRI\r\n        : \"\",\r\n    optOutRTRITestName:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestName\r\n        : \"\",\r\n    optOutRTRITestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestDate\r\n        : \"\",\r\n    rencencyId:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyId\r\n        : \"\",\r\n    controlLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.controlLine\r\n        : \"\",\r\n    verififcationLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.verififcationLine\r\n        : \"\",\r\n    longTermLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.longTermLine\r\n        : \"\",\r\n    rencencyInterpretation:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyInterpretation\r\n        : \"\",\r\n    hasViralLoad:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.hasViralLoad\r\n        : \"\",\r\n    sampleCollectedDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleCollectedDate\r\n        : \"\",\r\n    sampleReferanceNumber:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleReferanceNumber\r\n        : \"\",\r\n    dateSampleSentToPCRLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.dateSampleSentToPCRLab\r\n        : \"\",\r\n    sampleTestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleTestDate\r\n        : \"\",\r\n    sampleType:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleType\r\n        : \"\",\r\n    receivingPcrLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivingPcrLab\r\n        : \"\",\r\n    viralLoadResultClassification:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadResultClassification\r\n        : \"\",\r\n    recencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.recencyResult\r\n        : \"\",\r\n    finalRecencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.finalRecencyResult\r\n        : \"\",\r\n    viralLoadConfirmationResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadConfirmationResult\r\n        : \"\",\r\n  });\r\n\r\n  const handleDone = () => {\r\n    toggle();\r\n    //commenting this out for release\r\n    // handleItemClick(\"pns\", \"recency-testing\");\r\n    handleItemClick(nextForm[0], nextForm[1]);\r\n  };\r\n  const loadOtherForm = (row) => {\r\n    toggle();\r\n  };\r\n\r\n  const loadNextForm = (row) => {\r\n    // setSaving(true);\r\n    handleItemClick(nextForm[0], nextForm[1]);\r\n\r\n    // else if (permissions.includes(\"Nigeria_PNS_Form\")) {\r\n    // }\r\n\r\n    toggle();\r\n  };\r\n  useEffect(() => {\r\n\r\n    if (props.patientObj && props.patientObj.recency !== null) {\r\n      console.log(props.patientObj.recency);\r\n      setRecency(props.patientObj.recency);\r\n    }\r\n    if (props.patientObj) {\r\n      if (\r\n        props.patientObj.confirmatoryTest2 &&\r\n        props.patientObj.confirmatoryTest2.date2 !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest2.date2);\r\n      } else if (\r\n        props.patientObj.confirmatoryTest &&\r\n        props.patientObj.confirmatoryTest.date !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest.date);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n    if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Long Term\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Long Term\" });\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Recent\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Recent\" });\r\n      //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Negative\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Negative\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"false\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else {\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"\" });\r\n    }\r\n    if (recency.optOutRTRI === \"true\") {\r\n      setRecency({\r\n        optOutRTRI:\r\n          props.patientObj && props.patientObj.recency !== null\r\n            ? props.patientObj.recency.optOutRTRI\r\n            : \"\",\r\n        optOutRTRITestName: \"\",\r\n        optOutRTRITestDate: \"\",\r\n        rencencyId: \"\",\r\n        controlLine: \"\",\r\n        verififcationLine: \"\",\r\n        longTermLine: \"\",\r\n        rencencyInterpretation: \"\",\r\n        hasViralLoad: \"\",\r\n        sampleCollectedDate: \"\",\r\n        sampleReferanceNumber: \"\",\r\n        dateSampleSentToPCRLab: \"\",\r\n        sampleTestDate: \"\",\r\n        sampleType: \"\",\r\n        receivingPcrLab: \"\",\r\n        viralLoadResultClassification: \"\",\r\n        recencyResult: \"\",\r\n        finalRecencyResult: \"\",\r\n        viralLoadConfirmationResult: \"\",\r\n      });\r\n    }\r\n  }, [\r\n    recency.longTermLine,\r\n    recency.verififcationLine,\r\n    recency.controlLine,\r\n    props.patientObj,\r\n  ]);\r\n  //console.log(props.patientObj)\r\n  const handleInputChangeRecency = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"viralLoadConfirmationResult\") {\r\n      if (e.target.value >= 1000) {\r\n        recency.viralLoadResultClassification = \">=1000\";\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value < 1000) {\r\n        recency.viralLoadResultClassification = \"<1000\";\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n    if (e.target.name === \"viralLoadResultClassification\") {\r\n      if (e.target.value === \">=1000\") {\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"<1000\") {\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Failed run\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Invalid viral load result\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"rencencyId\" && e.target.value !== \"\") {\r\n      const recencyIdNumberValue = checkRecencyLimit(e.target.value);\r\n      setRecency({ ...recency, [e.target.name]: recencyIdNumberValue });\r\n    } else {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkRecencyLimit = (e) => {\r\n    const limit = 10;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleReferanceNumber = recency.sampleReferanceNumber\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    }\r\n    // {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\");\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let  age = calculate_age(props?.patientObj?.personResponseDto?.dateOfBirth)\r\n           let latestForm = getNextForm(\r\n             \"HIV_Recency_Testing\",\r\n             age,\r\n             \"\",\r\n             props?.patientObj?.hivTestResult\r\n           );\r\n           setNextForm(latestForm);\r\n    objValues.htsClientId = clientId;\r\n    objValues.recency = recency;\r\n    objValues.personId = patientID;\r\n    //console.log(recency)\r\n    if (validate()) {\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/recency`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          loadOtherForm();\r\n          //toast.success(\"Risk Assesment successful\");\r\n          // history.push('/')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>RECENCY FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>RECENCY</h5>\r\n              </LabelRibbon>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Opt Out of RTRI? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"optOutRTRI\"\r\n                    id=\"optOutRTRI\"\r\n                    value={recency.optOutRTRI}\r\n                    onChange={handleInputChangeRecency}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8\"></div>\r\n              {recency.optOutRTRI === \"false\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"optOutRTRITestName\"\r\n                        id=\"optOutRTRITestName\"\r\n                        value={recency.optOutRTRITestName}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Asante\">Asante</option>\r\n                        <option value=\"Others\">Others</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Date <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"optOutRTRITestDate\"\r\n                        id=\"optOutRTRITestDate\"\r\n                        value={recency.optOutRTRITestDate}\r\n                        onChange={handleInputChangeRecency}\r\n                        min={\r\n                          hivTestDate !== \"\" && hivTestDate !== null\r\n                            ? hivTestDate\r\n                            : \"\"\r\n                        }\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency ID <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyId\"\r\n                        id=\"rencencyId\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyId}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Control Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"controlLine\"\r\n                        id=\"controlLine\"\r\n                        value={recency.controlLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Verification Line{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"verififcationLine\"\r\n                        id=\"verififcationLine\"\r\n                        value={recency.verififcationLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Long Term Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"longTermLine\"\r\n                        id=\"longTermLine\"\r\n                        value={recency.longTermLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency Interpretation{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyInterpretation\"\r\n                        id=\"rencencyInterpretation\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyInterpretation}\r\n                        disabled\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {recency.rencencyInterpretation === \"RTRI Recent\" && (\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Has Viral Load been ordered? </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hasViralLoad\"\r\n                          id=\"hasViralLoad\"\r\n                          value={recency.hasViralLoad}\r\n                          onChange={handleInputChangeRecency}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {recency.hasViralLoad === \"true\" && (\r\n                    <>\r\n                      <div className=\"row\">\r\n                        <h4>Recency Viral Load Classification :</h4>\r\n                        <br />\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Collected Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleCollectedDate\"\r\n                              id=\"sampleCollectedDate\"\r\n                              type=\"date\"\r\n                              value={recency.sampleCollectedDate}\r\n                              min={recency.optOutRTRITestDate}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Reference Number{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleReferanceNumber\"\r\n                              id=\"sampleReferanceNumber\"\r\n                              type=\"text\"\r\n                              value={recency.sampleReferanceNumber}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.sampleReferanceNumber !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleReferanceNumber}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Type{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"sampleType\"\r\n                              id=\"sampleType\"\r\n                              value={recency.sampleType}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"DBS\">DBS</option>\r\n                              <option value=\"Plasma\">Plasma</option>\r\n                            </select>\r\n                            {errors.sampleType !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleType}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Date Recency Sample Sent to PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"dateSampleSentToPCRLab\"\r\n                              id=\"dateSampleSentToPCRLab\"\r\n                              type=\"date\"\r\n                              min={recency.sampleCollectedDate}\r\n                              value={recency.dateSampleSentToPCRLab}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateSampleSentToPCRLab !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateSampleSentToPCRLab}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Test Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleTestDate\"\r\n                              id=\"sampleTestDate\"\r\n                              type=\"date\"\r\n                              // min={recency.optOutRTRITestDate}\r\n                              min={recency.dateSampleSentToPCRLab}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              value={recency.sampleTestDate}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Receiving PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"receivingPcrLab\"\r\n                              id=\"receivingPcrLab\"\r\n                              type=\"text\"\r\n                              value={recency.receivingPcrLab}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Confirmation Result (copies/ml)\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadConfirmationResult\"\r\n                              id=\"viralLoadConfirmationResult\"\r\n                              type=\"number\"\r\n                              value={recency.viralLoadConfirmationResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Received Date\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"receivedResultDate\"\r\n                              id=\"receivedResultDate\"\r\n                              type=\"date\"\r\n                              // min={recency.optOutRTRITestDate}\r\n                              min={recency.sampleTestDate}\r\n                              value={recency?.receivedResultDate}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              value={recency.receivedResultDate}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Classification and\r\n                              Result (copies/ml)\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadResultClassification\"\r\n                              id=\"viralLoadResultClassification\"\r\n                              disabled\r\n                              value={recency.viralLoadResultClassification}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value=\">=1000\">{\">= \"} 1000</option>\r\n                              <option value=\"<1000\">{\"< \"} 1000</option>\r\n                              <option value=\"Failed run\">Failed run</option>\r\n                              <option value=\"Invalid viral load result\">\r\n                                Invalid Recency viral load result\r\n                              </option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Final Recency Result</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"finalRecencyResult\"\r\n                              id=\"finalRecencyResult\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              value={recency.finalRecencyResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"form-group mb-3 \"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <div className=\"\">\r\n                    <Button\r\n                      content=\"Back\"\r\n                      icon=\"left arrow\"\r\n                      labelPosition=\"left\"\r\n                      style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                      onClick={() => handleItemClick(\"post-test\", \"post-test\")}\r\n                    />\r\n                    <Button\r\n                      content=\"Done\"\r\n                      icon=\"right arrowrr\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        history.push(\"/\");\r\n                      }}\r\n                      disabled={\r\n                        props.patientObj?.postTestCounselingKnowledgeAssessment\r\n                          ?.hivTestResult === \"true\" &&\r\n                        recency.optOutRTRI === \"\"\r\n                          ? true\r\n                          : false\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    {\" \"}\r\n                    <Button\r\n                      content=\"Save & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={\r\n                        props.patientObj?.postTestCounselingKnowledgeAssessment\r\n                          ?.hivTestResult === \"true\" &&\r\n                        recency.optOutRTRI === \"\"\r\n                          ? true\r\n                          : false\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Would you like to fill the next form ?\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => loadNextForm()}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={handleDone}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Skip\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recency;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  CardBody,\r\n  Spinner,\r\n  Badge,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PanToolIcon from \"@mui/icons-material/PanTool\";\r\n//import * as moment from 'moment';\r\nimport { getCheckModality } from \"../../../../utility\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  const [predictionValue, setPredictionValue] = useState(0);\r\n\r\n  const predictionRanges = (prediction) => {\r\n    if (parseFloat(prediction) <= 0.2) {\r\n      return <Badge color=\"success\">Low Risk</Badge>;\r\n    } else if (\r\n      parseFloat(prediction) >= 0.21 &&\r\n      parseFloat(prediction) <= 0.4\r\n    ) {\r\n      return <Badge color=\"info\">Medium Risk</Badge>;\r\n    } else if (\r\n      parseFloat(prediction) >= 0.41 &&\r\n      parseFloat(prediction) <= 0.8\r\n    ) {\r\n      return <Badge color=\"warning\">High Risk</Badge>;\r\n    } else if (parseFloat(prediction) >= 0.81) {\r\n      return <Badge color=\"danger\">Highest Risk</Badge>;\r\n    } else {\r\n      return <Badge color=\"dark\">No Prediction Result</Badge>;\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  //let patientAge=\"\"\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [savingPrediction, setSavingPrediction] = useState(false);\r\n  const [savingResult, setSavingRsult] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n  //console.log(\"data_pre_test\", props.patientObj);\r\n  // const calculate_age = dob => {\r\n  //     var today = new Date();\r\n  //     var dateParts = dob.split(\"-\");\r\n  //     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //     var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //     var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //     var m = today.getMonth() - birthDate.getMonth();\r\n  //         if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //                 age_now--;\r\n  //             }\r\n  //         if (age_now === 0) {\r\n  //                 return m + \" month(s)\";\r\n  //             }\r\n  //             return age_now ;\r\n  // };\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n  const [knowledgeAssessment, setKnowledgeAssessment] = useState({\r\n    previousTestedHIVNegative: \"\",\r\n    timeLastHIVNegativeTestResult: \"\",\r\n    clientPregnant: \"\",\r\n    clientInformHivTransRoutes: \"\",\r\n    clientInformRiskkHivTrans: \"\",\r\n    clientInformPreventingsHivTrans: \"\",\r\n    clientInformPossibleTestResult: \"\",\r\n    informConsentHivTest: \"\",\r\n  });\r\n  useEffect(() => {\r\n\r\n        \r\n\r\n    if (props.patientObj) {\r\n      setKnowledgeAssessment(\r\n        props.patientObj.knowledgeAssessment &&\r\n          props.patientObj.knowledgeAssessment !== null\r\n          ? props.patientObj.knowledgeAssessment\r\n          : {}\r\n      );\r\n      setRiskAssessment(\r\n        props.patientObj.riskAssessment &&\r\n          props.patientObj.riskAssessment !== null\r\n          ? props.patientObj.riskAssessment\r\n          : {}\r\n      );\r\n      setRiskAssessmentPartner(\r\n        props.patientObj.sexPartnerRiskAssessment &&\r\n          props.patientObj.sexPartnerRiskAssessment !== null\r\n          ? props.patientObj.sexPartnerRiskAssessment\r\n          : {}\r\n      );\r\n      setStiScreening(\r\n        props.patientObj.stiScreening && props.patientObj.stiScreening !== null\r\n          ? props.patientObj.stiScreening\r\n          : {}\r\n      );\r\n      setTbScreening(\r\n        props.patientObj.tbScreening && props.patientObj.tbScreening !== null\r\n          ? props.patientObj.tbScreening\r\n          : {}\r\n      );\r\n      //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n      //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n      if (\r\n        props.patientObj.riskStratificationResponseDto &&\r\n        Object.keys(\r\n          props.patientObj.riskStratificationResponseDto.riskAssessment\r\n        ).length !== 0 &&\r\n        props.patientObj.riskAssessment === null\r\n      ) {\r\n        //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n        props.patientObj.riskStratificationResponseDto.riskAssessment\r\n          .whatWasTheResult !== \"\" &&\r\n        props.patientObj.riskStratificationResponseDto.riskAssessment\r\n          .whatWasTheResult === \"Positive\"\r\n          ? (knowledgeAssessment.previousTestedHIVNegative = \"false\")\r\n          : (knowledgeAssessment.previousTestedHIVNegative = \"true\");\r\n      } else {\r\n        setRiskAssessment({\r\n          ...riskAssessment,\r\n          ...props.patientObj.riskAssessment,\r\n        });\r\n      }\r\n      knowledgeAssessment.clientPregnant =\r\n        props.patientObj.pregnant === 73 ? \"true\" : \"\";\r\n\r\n      setModalityCheck(\r\n        getCheckModality(\r\n          props.patientObj?.riskStratificationResponseDto?.modality\r\n        )\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n    props.handleItemClick(page);\r\n  };\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    knowledgeAssessment: {},\r\n    personId: patientID,\r\n    riskAssessment: {},\r\n    stiScreening: {},\r\n    tbScreening: {},\r\n    sexPartnerRiskAssessment: {},\r\n  });\r\n\r\n  const handleInputChangeKnowledgeAssessment = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n\r\n    setKnowledgeAssessment({\r\n      ...knowledgeAssessment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    everHadSexualIntercourse: \"\",\r\n    bloodtransInlastThreeMonths: \"\",\r\n    uprotectedSexWithCasualLastThreeMonths: \"\",\r\n    uprotectedSexWithRegularPartnerLastThreeMonths: \"\",\r\n    unprotectedVaginalSex: \"\",\r\n    uprotectedAnalSex: \"\",\r\n    stiLastThreeMonths: \"\",\r\n    sexUnderInfluence: \"\",\r\n    moreThanOneSexPartnerLastThreeMonths: \"\",\r\n    experiencePain: \"\",\r\n    haveSexWithoutCondom: \"\",\r\n    abuseDrug: \"\",\r\n    bloodTransfusion: \"\",\r\n    consistentWeightFeverNightCough: \"\",\r\n    soldPaidVaginalSex: \"\",\r\n    consistentWeightFeverNightCough: \"\",\r\n    soldPaidVaginalSex: \"\",\r\n    haveCondomBurst: \"\",\r\n  });\r\n\r\n  // const postPredictions = (name, value) => {\r\n  //   if (name === \"soldPaidVaginalSex\" && value !== \"null\") {\r\n  //     setSavingRsult(true);\r\n  //     let mlData = {\r\n  //       modelConfigs: {\r\n  //         debug: \"true\",\r\n  //         encounterDate: props.patientObj?.dateVisit,\r\n  //         facilityId: \"LBgwDTw2C8u\",\r\n  //         modelId: \"hts_v1\",\r\n  //       },\r\n  //       variableValues: {\r\n  //         age: props.patientObj?.riskStratificationResponseDto.age,\r\n  //         client_pregnant_X0: props.patientObj?.pregnant === null ? 0 : 1,\r\n  //         first_time_visit_Y:\r\n  //           props.patientObj?.firstTimeVisit === false ? 0 : 1,\r\n  //         hts_setting_Other: 0,\r\n  //         hts_setting_Others: 0,\r\n  //         hts_setting_Outreach: 1,\r\n  //         marital_status_Divorced: 0,\r\n  //         marital_status_Married:\r\n  //           props.patientObj?.personResponseDto?.maritalStatus === null ? 0 : 1,\r\n  //         marital_status_Widowed: 0,\r\n  //         previously_tested_hiv_negative_Missing: 0,\r\n  //         previously_tested_hiv_negative_TRUE: 0,\r\n  //         referred_from_Other: 0,\r\n  //         referred_from_Self: 1,\r\n  //         session_type_Individual: 0,\r\n  //         sex_F: props.patientObj?.personResponseDto?.sex === \"Female\" ? 1 : 0,\r\n  //         sex_M: props.patientObj?.personResponseDto?.sex === \"Male\" ? 1 : 0,\r\n  //         tested_for_hiv_before_within_this_year_NotPreviouslyTested: 1,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedNegative: 0,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveInHIVCare: 0,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveNotInHIVCare: 0,\r\n  //       },\r\n  //     };\r\n  //     //ML Post\r\n  //     axios\r\n  //       .post(`${baseUrl}machine-learning/evaluate`, mlData, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((resp) => {\r\n  //         console.log(\"ML\", resp);\r\n  //         let predictions = Object.values(resp.data.result.predictions);\r\n  //         setPredictionValue(predictions);\r\n  //         setSavingPrediction(true);\r\n  //         setSavingRsult(false);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.error(\"ML_err\", err);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n    //postPredictions(e.target.name, e.target.value);\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    sexPartnerHivPositive: \"\",\r\n    newDiagnosedHivlastThreeMonths: \"\",\r\n    currentlyArvForPmtct: \"\",\r\n    knowHivPositiveOnArv: \"\",\r\n    knowHivPositiveAfterLostToFollowUp: \"\",\r\n    uprotectedAnalSex: \"\",\r\n  });\r\n  const handleInputChangeRiskAssessmentPartner = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    // if(riskAssessmentPartner.sexPartnerHivPositive==='false' || (e.target.name==='sexPartnerHivPositive' &&  e.target.value==='false')){\r\n    //     setRiskAssessmentPartner ({\r\n    //         sexPartnerHivPositive:'false',\r\n    //         newDiagnosedHivlastThreeMonths:\"\",\r\n    //         currentlyArvForPmtct :\"\",\r\n    //         knowHivPositiveOnArv :\"\",\r\n    //         knowHivPositiveAfterLostToFollowUp:\"\",\r\n    //         uprotectedAnalSex  :\"\",\r\n    //     })\r\n    // }\r\n  };\r\n  // Getting the number count of sexPartRiskCount True\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(\r\n    (x) => x === \"true\"\r\n  );\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: \"\",\r\n    lowerAbdominalPains: \"\",\r\n    urethralDischarge: \"\",\r\n    complaintsOfScrotal: \"\",\r\n    complaintsGenitalSore: \"\",\r\n  });\r\n  const handleInputChangeStiScreening = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of STI True\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter((x) => x === \"true\");\r\n  const [tbScreening, setTbScreening] = useState({\r\n    currentCough: \"\",\r\n    weightLoss: \"\",\r\n    lymphadenopathy: \"\",\r\n    fever: \"\",\r\n    nightSweats: \"\",\r\n  });\r\n  const handleInputChangeTbScreening = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTbScreening({ ...tbScreening, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of TB True\r\n  const actualTBTrue = Object.values(tbScreening);\r\n  const newTbTrue = actualTBTrue.filter((x) => x === \"true\");\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n    //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n    //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n    //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\r\n\r\n    //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n    //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n    //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n    //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n    //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n\r\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.bloodtransInlastThreeMonths =\r\n        riskAssessment.bloodtransInlastThreeMonths\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n    // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.experiencePain = riskAssessment.experiencePain\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.abuseDrug = riskAssessment.abuseDrug\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.bloodTransfusion = riskAssessment.bloodTransfusion\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.consistentWeightFeverNightCough =\r\n        riskAssessment.consistentWeightFeverNightCough\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      let latestForm = getNextForm(\r\n        \"Pre_Test_Counseling\",\r\n        objValues.age,\r\n        modalityCheck,\r\n        \"unknown\"\r\n      );\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.htsClientId = clientId;\r\n      objValues.knowledgeAssessment = knowledgeAssessment;\r\n      objValues.personId = patientID;\r\n      objValues.riskAssessment = riskAssessment;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.tbScreening = tbScreening;\r\n      objValues.sexPartnerRiskAssessment = riskAssessmentPartner;\r\n\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/pre-test-counseling`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);    \r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n          \r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"All fields are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>PRE TEST COUNSELING</h2>\r\n          {savingPrediction ? (\r\n            <Stack sx={{ width: \"50%\" }} spacing={2}>\r\n              <Alert severity=\"info\" style={{ fontSize: \"16px\", color: \"000\" }}>\r\n                <b>ML Prediction Result for HTS Patient :</b>{\" \"}\r\n                {predictionRanges(predictionValue[1])}\r\n              </Alert>\r\n            </Stack>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"rgb(0,181,173)\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Knowledge Assessment\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Previously tested HIV negative{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previousTestedHIVNegative\"\r\n                    id=\"previousTestedHIVNegative\"\r\n                    value={knowledgeAssessment.previousTestedHIVNegative}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.previousTestedHIVNegative !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previousTestedHIVNegative}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {knowledgeAssessment.previousTestedHIVNegative === \"true\" && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Time of last HIV Negative test Result</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"timeLastHIVNegativeTestResult\"\r\n                      id=\"timeLastHIVNegativeTestResult\"\r\n                      value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                      onChange={handleInputChangeKnowledgeAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"<1\"> {\"< 1\"} month</option>\r\n                      <option value=\"1-3 Months\">1-3 Months</option>\r\n                      <option value=\"4-6 Months\">4-6 Months</option>\r\n                      <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                      {knowledgeAssessment.previousTestedHIVNegative !==\r\n                        \"true\" && <option value=\"Never\"> Never</option>}\r\n                    </select>\r\n                    {errors.timeLastHIVNegativeTestResult !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.timeLastHIVNegativeTestResult}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {props.patientObj &&\r\n                (props.patientObj.personResponseDto.sex === \"Female\" ||\r\n                  props.patientObj.personResponseDto.sex === \"female\" ||\r\n                  props.patientObj.personResponseDto.sex === \"FEMALE\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Client pregnant </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"clientPregnant\"\r\n                        id=\"clientPregnant\"\r\n                        value={knowledgeAssessment.clientPregnant}\r\n                        onChange={handleInputChangeKnowledgeAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.clientPregnant !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.clientPregnant}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client informed about HIV transmission routes </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformHivTransRoutes\"\r\n                    id=\"clientInformHivTransRoutes\"\r\n                    value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformHivTransRoutes !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformHivTransRoutes}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client informed about risk factors for HIV transmission{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformRiskkHivTrans\"\r\n                    id=\"clientInformRiskkHivTrans\"\r\n                    value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformRiskkHivTrans !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformRiskkHivTrans}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client informed on preventing HIV transmission methods{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformPreventingsHivTrans\"\r\n                    id=\"clientInformPreventingsHivTrans\"\r\n                    value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformPreventingsHivTrans !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformPreventingsHivTrans}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client informed about possible test results </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformPossibleTestResult\"\r\n                    id=\"clientInformPossibleTestResult\"\r\n                    value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformPossibleTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformPossibleTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Informed consent for HIV testing given </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informConsentHivTest\"\r\n                    id=\"informConsentHivTest\"\r\n                    value={knowledgeAssessment.informConsentHivTest}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.informConsentHivTest !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.informConsentHivTest}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              {savingResult ? (\r\n                <div\r\n                  style={{\r\n                    display: \"block\",\r\n                    width: 1000,\r\n                    padding: 10,\r\n                  }}\r\n                >\r\n                  <Spinner style={{ width: \"2rem\", height: \"2rem\" }} />\r\n                  <b style={{ color: \"#992E62\", fontSize: \"14px\" }}>\r\n                    {\" \"}\r\n                    <PanToolIcon /> requesting HTS ML predictions...\r\n                  </b>\r\n                </div>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n              {props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" && (\r\n                <>\r\n                  <div\r\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    HIV Risk Assessment (Last 3 months)\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Ever had sexual intercourse{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"everHadSexualIntercourse\"\r\n                        id=\"everHadSexualIntercourse\"\r\n                        value={riskAssessment.everHadSexualIntercourse}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.everHadSexualIntercourse !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.everHadSexualIntercourse}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Blood transfusion in last 3 months{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"bloodtransInlastThreeMonths\"\r\n                        id=\"bloodtransInlastThreeMonths\"\r\n                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.bloodtransInlastThreeMonths !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.bloodtransInlastThreeMonths}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected sex with casual partner in last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                            id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.uprotectedSexWithCasualLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedSexWithCasualLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.uprotectedSexWithCasualLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected sex with regular partner in the last\r\n                            3months <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                            id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {\r\n                                errors.uprotectedSexWithRegularPartnerLastThreeMonths\r\n                              }\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected vaginal sex{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"unprotectedVaginalSex\"\r\n                            id=\"unprotectedVaginalSex\"\r\n                            value={riskAssessment.unprotectedVaginalSex}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.unprotectedVaginalSex !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.unprotectedVaginalSex}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected Anal sex{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedAnalSex\"\r\n                            id=\"uprotectedAnalSex\"\r\n                            value={riskAssessment.uprotectedAnalSex}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedAnalSex !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.uprotectedAnalSex}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            STI in last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"stiLastThreeMonths\"\r\n                            id=\"stiLastThreeMonths\"\r\n                            value={riskAssessment.stiLastThreeMonths}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.stiLastThreeMonths !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stiLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex under the influence of drugs or alcohol{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexUnderInfluence\"\r\n                            id=\"sexUnderInfluence\"\r\n                            value={riskAssessment.sexUnderInfluence}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.sexUnderInfluence !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexUnderInfluence}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            More than 1 sex partner during last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                            id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.moreThanOneSexPartnerLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.moreThanOneSexPartnerLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                  <Message warning>\r\n                    <h4> Risk assessment score (sum of all 7 answers)</h4>\r\n                    <b>Score : {riskCount.length}</b>\r\n                  </Message>\r\n                  <hr />\r\n                  <br />\r\n                </>\r\n              )}\r\n              {props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" && (\r\n                <>\r\n                  <div\r\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    HIV Risk Assessment (Last 3 months)\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/your partner experienced lower abdominal pain,\r\n                        smelly discharge, blisters and wounds around you/partner\r\n                        vagina, penis anus or mouth?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"experiencePain\"\r\n                        id=\"experiencePain\"\r\n                        value={riskAssessment.experiencePain}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.experiencePain !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.experiencePain}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner had sex without a condom with someone\r\n                        of unknown HIV status, or you/partner raped by person\r\n                        with unknown HIV status?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"haveSexWithoutCondom\"\r\n                        id=\"haveSexWithoutCondom\"\r\n                        value={riskAssessment.haveSexWithoutCondom}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.haveSexWithoutCondom !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.haveSexWithoutCondom}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you had a condom burst with your partner during\r\n                        sexual intercourse?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"haveCondomBurst\"\r\n                        id=\"haveCondomBurst\"\r\n                        value={riskAssessment.haveCondomBurst}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.haveCondomBurst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.haveCondomBurst}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Do you/partner share needles/syringes, other sharp\r\n                        objects or used abuse drug substances of any kind?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"abuseDrug\"\r\n                        id=\"abuseDrug\"\r\n                        value={riskAssessment.abuseDrug}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.abuseDrug !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.abuseDrug}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner had any blood or blood product\r\n                        transfusion? <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"bloodTransfusion\"\r\n                        id=\"bloodTransfusion\"\r\n                        value={riskAssessment.bloodTransfusion}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.bloodTransfusion !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.bloodTransfusion}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner experienced coughing, weight loss,\r\n                        fever, night sweats consistently?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"consistentWeightFeverNightCough\"\r\n                        id=\"consistentWeightFeverNightCough\"\r\n                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.consistentWeightFeverNightCough !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.consistentWeightFeverNightCough}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner paid or sold vaginal, anal or oral sex?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"soldPaidVaginalSex\"\r\n                        id=\"soldPaidVaginalSex\"\r\n                        value={riskAssessment.soldPaidVaginalSex}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.soldPaidVaginalSex !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.soldPaidVaginalSex}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <Message warning>\r\n                    <h4> HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                    <b>Score :{riskCount.length}</b>\r\n                  </Message>\r\n                  <hr />\r\n                  <br />\r\n                </>\r\n              )}\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#000\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Clinical TB screening\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Current cough </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"currentCough\"\r\n                    id=\"currentCough\"\r\n                    value={tbScreening.currentCough}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.currentCough !== \"\" ? (\r\n                    <span className={classes.error}>{errors.currentCough}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Weight loss </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"weightLoss\"\r\n                    id=\"weightLoss\"\r\n                    value={tbScreening.weightLoss}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.weightLoss !== \"\" ? (\r\n                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lymphadenopathy\"\r\n                    id=\"lymphadenopathy\"\r\n                    value={tbScreening.lymphadenopathy}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.lymphadenopathy !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.lymphadenopathy}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Fever </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={tbScreening.fever}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.fever !== \"\" ? (\r\n                    <span className={classes.error}>{errors.fever}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Night sweats</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"nightSweats\"\r\n                    id=\"nightSweats\"\r\n                    value={tbScreening.nightSweats}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.nightSweats !== \"\" ? (\r\n                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  TB Screening score (calculate the sum of the TB assessment) If\r\n                  score {\">= 1\"}, test for Xper MTB RIF or refer to TB service{\" \"}\r\n                </h4>\r\n                <b>Score : {newTbTrue.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartnerHivPositive\"\r\n                    id=\"sexPartnerHivPositive\"\r\n                    value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexPartnerHivPositive !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexPartnerHivPositive}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {riskAssessmentPartner.sexPartnerHivPositive === \"true\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Is sex partner newly diagnosed with HIV and started\r\n                        treatment less than 3-6 months ago?\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                        value={\r\n                          riskAssessmentPartner.newDiagnosedHivlastThreeMonths\r\n                        }\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.newDiagnosedHivlastThreeMonths !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.newDiagnosedHivlastThreeMonths}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Is sex partner pregnant and currently receiving ARV for\r\n                        PMTCT?\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentlyArvForPmtct\"\r\n                        id=\"currentlyArvForPmtct\"\r\n                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.currentlyArvForPmtct !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.currentlyArvForPmtct}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Known HIV positive partner on ARV with an unsurpressed\r\n                        VL\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"knowHivPositiveOnArv\"\r\n                        id=\"knowHivPositiveOnArv\"\r\n                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.knowHivPositiveOnArv !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.knowHivPositiveOnArv}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Known HIV positive recently returned to treatment after\r\n                        being lost to follow up\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                        value={\r\n                          riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp\r\n                        }\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.knowHivPositiveAfterLostToFollowUp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.knowHivPositiveAfterLostToFollowUp}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Unprotected Anal sex</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"uprotectedAnalSex\"\r\n                        id=\"uprotectedAnalSex\"\r\n                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.uprotectedAnalSex !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.uprotectedAnalSex}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score :{sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#014D88\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientObj.personResponseDto.sex === \"Female\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientObj.personResponseDto.sex === \"Male\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {\">= \"}1, should be\r\n                  referred for STI test{\" \"}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                  /> */}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js",["511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllStateByCountryId,\r\n  getAllCountry,\r\n  getAllProvinces,\r\n  getAllGenders,\r\n  alphabetOnly,\r\n} from \"../../../../utility\";\r\nimport { calculate_age } from \"../../utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DualListBox from \"react-dual-listbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RefferralUnit = (props) => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [allFacilities, setAllFacilities] = useState([]);\r\n  const [statesOfTheReceivingFacility, setStateOfTheReceivingFacility] =\r\n    useState([]);\r\n  const [lgasOfTheReceivingFacility, setLgasOfTheReceivingFacility] = useState(\r\n    []\r\n  );\r\n  const [receivingFacilities, setReceivingFacilities] = useState([]);\r\n  const [receivingFacility, setReceivingFacility] = useState([]);\r\n  const [selectedReceivingState, setSelectedReceivingState] = useState({});\r\n  const [selectedReceivingFacility, setSelectedReceivingFacility] = useState(\r\n    {}\r\n  );\r\n  const [selectedReceivingLga, setSelectedReceivingLga] = useState({});\r\n  const history = useHistory();\r\n  const [serviceNeeded, setServiceNeeded] = useState([]);\r\n  const [selectedServiceNeeded, setSelectServiceNeeded] = useState([]);\r\n\r\n  const [payload, setPayload] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province:\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ,\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: {},\r\n    comments: \"\",\r\n    receivingFacilityStateName: \"\",\r\n    receivingFacilityLgaNam: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  const loadGenders = useCallback(async () => {\r\n    getSex()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  const getProvincesWithId = (id) => {\r\n    getAllProvinces(id)\r\n      .then((res) => {\r\n        let ans = res.filter((each, index) => {\r\n          return (\r\n            each.name ===\r\n            props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n          );\r\n        });\r\n        setPayload({\r\n          ...payload,\r\n          province: ans[0].id,\r\n        });\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    getCountry();\r\n    getStateByCountryId();\r\n    console.log(props?.patientObj);\r\n\r\n    console.log(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    );\r\n    if (props?.patientObj?.personResponseDto?.address?.address[0]?.stateId) {\r\n      getProvincesWithId(\r\n        props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const getSex = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/GENDER`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (e) {}\r\n  };\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfReceivingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfReceivingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    setPayload({\r\n      ...payload,\r\n      nameOfReceivingFacility: e.name,\r\n      addressOfReceivingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfReceivingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setPayload({ ...payload, [inputName]: NumberValue });\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"phoneNoOfReferringFacility\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"phoneNoOfReceivingFacility\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n  };\r\n\r\n  // ########################################################################\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStateOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLgasOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setReceivingFacilities(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const SERVICE_NEEDED = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          // create array of objects from the response\r\n          const serviceNeeded = response.data.map((service) => {\r\n            return {\r\n              value: service.display,\r\n              label: service.display,\r\n            };\r\n          });\r\n          setServiceNeeded(serviceNeeded);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // handle error\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStates();\r\n    SERVICE_NEEDED();\r\n  }, []);\r\n\r\n  // ###########################################################################\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonReferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dob: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({ ...payload, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      payload.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.dateVisit = payload.dateVisit ? \"\" : \"This field is required.\";\r\n    temp.firstName = payload.firstName ? \"\" : \"This field is required.\";\r\n    temp.lastName = payload.lastName ? \"\" : \"This field is required.\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.province = payload.province ? \"\" : \"This field is required.\";\r\n    // temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    // temp.sexId = payload.sexId ? \"\" : \"This field is required.\";\r\n    temp.dob = payload.dob ? \"\" : \"This field is required.\";\r\n    // temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    // temp.stateTransferTo = payload.receivingStateFacility? \"\" : \"This field is required.\";\r\n    temp.receivingFacilityLgaName = payload.receivingFacilityLgaName\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.receivingFacilityStateName = payload.receivingFacilityStateName\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    // temp.referredFromFacility = payload.referredFromFacility\r\n    //     ? \"\"\r\n    //     : \"This field is required.\";\r\n    temp.nameOfPersonReferringClient = payload.nameOfPersonReferringClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    temp.nameOfReferringFacility = payload.nameOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReferringFacility = payload.addressOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReferringFacility = payload.phoneNoOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfContactPerson = payload.nameOfContactPerson\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfReceivingFacility = payload.nameOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReceivingFacility = payload.addressOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReceivingFacility = payload.phoneNoOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    // temp.serviceNeeded = payload.serviceNeeded ? \"\" : \"This field is required.\";\r\n\r\n    temp.serviceNeeded =\r\n      selectedServiceNeeded.length > 0\r\n        ? \"\"\r\n        : \"At least one service must be selected.\";\r\n    // temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      try {\r\n        setSaving(true);\r\n        await axios.post(`${baseUrl}hts-client-referral`, payload, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setSaving(false);\r\n        toast.success(\"Record saved successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n\r\n        // history.push(\"/\");\r\n\r\n        handleItemClick(\"refferal-history\", \"refferal\");\r\n        // props.handleItemClick();\r\n      } catch (error) {\r\n        setSaving(false);\r\n        const errorMessage =\r\n          error.response?.data?.apierror?.message ||\r\n          \"Something went wrong, please try again\";\r\n        toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>Client Referral Form </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Referral Form For Referring Unit\r\n              </div>\r\n\r\n              <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                <i>\r\n                  Note: This form is to be filed by the organization making the\r\n                  referal (Referring unit or organization)\r\n                </i>\r\n              </p>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateVisit\"\r\n                      id=\"dateVisit\"\r\n                      value={payload.dateVisit}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      value={payload.firstName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.firstName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.firstName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Middle Name</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"middleName\"\r\n                      id=\"middleName\"\r\n                      value={payload.middleName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Last Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      value={payload.lastName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.lastName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.lastName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"patientId\">\r\n                      Hospital Number <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"hospitalNumber\"\r\n                      id=\"hospitalNumber\"\r\n                      value={payload.hospitalNumber}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.hospitalNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hospitalNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {hospitalNumStatus === true ? (\r\n                      <span className={classes.error}>\r\n                        {\"Hospital number already exist\"}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Country <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"countryId\"\r\n                      id=\"countryId\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      value={payload.countryId}\r\n                      disabled\r\n                      //onChange={getStates}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {countries.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      State <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"stateId\"\r\n                      id=\"stateId\"\r\n                      value={payload.stateId}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={getProvinces}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {states.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.stateId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.stateId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {console.log(payload.province, payload.province)}\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Province/District/LGA{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"province\"\r\n                      id=\"province\"\r\n                      value={payload.province}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {provinces.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.province !== \"\" ? (\r\n                      <span className={classes.error}>{errors.province}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Street Address <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={payload.address}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                      <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Landmark</Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"landmark\"\r\n                      id=\"landmark\"\r\n                      value={payload.landmark}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/*          <div className=\"form-group  col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label>*/}\r\n                {/*                      Phone Number <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      disabled={true}*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNumber\"*/}\r\n                {/*                      id=\"phoneNumber\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNumber}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNumber !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNumber}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                      }}\r\n                      value={payload.phoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      // required\r\n                    />\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Sex</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sexId\"\r\n                      id=\"sexId\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.sexId}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                        genders.map((gender, index) => (\r\n                          <option key={gender.id} value={gender.id}>\r\n                            {gender.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      name=\"dob\"\r\n                      id=\"dob\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      value={payload.dob}\r\n                      onChange={handleDobChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dob !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dob}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      id=\"age\"\r\n                      disabled={ageDisabled}\r\n                      onChange={payload.age}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      value={calculate_age(\r\n                        props?.patientObj.personResponseDto?.dateOfBirth\r\n                          ? props?.patientObj?.personResponseDto?.dateOfBirth\r\n                          : props?.patientObj?.personResponseDto?.dateOfBirth\r\n                      )}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV Status<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"hivStatus\"\r\n                      id=\"hivStatus\"\r\n                      value={payload.hivStatus}\r\n                      disabled={ageDisabled}\r\n                      onChange={handleAgeChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {/*<select*/}\r\n                    {/*  className=\"form-control\"*/}\r\n                    {/*  name=\"hivStatus\"*/}\r\n                    {/*  id=\"hivStatus\"*/}\r\n                    {/*  onChange={handleInputChange}*/}\r\n                    {/*  value={payload.hivStatus}*/}\r\n                    {/*  style={{*/}\r\n                    {/*    border: \"1px solid #014D88\",*/}\r\n                    {/*    borderRadius: \"0.2rem\",*/}\r\n                    {/*  }}*/}\r\n                    {/*>*/}\r\n                    {/*<option value={\"\"}>Select</option>*/}\r\n                    {/*{hivStatus.map((gender, index) => (*/}\r\n                    {/*  <option key={gender.id} value={gender.id}>*/}\r\n                    {/*    {gender.display}*/}\r\n                    {/*  </option>*/}\r\n                    {/*))}*/}\r\n                    {/*</select>*/}\r\n                    {errors.hivStatus !== \"\" ? (\r\n                      <span className={classes.error}>{errors.hivStatus}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Referred from (Department):\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"referredFromFacility\"\r\n                      id=\"referredFromFacility\"\r\n                      value={payload.referredFromFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n\r\n                    {errors.referredFromFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referredFromFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Person Referring Client\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfPersonReferringClient\"\r\n                      id=\"nameOfPersonReferringClient\"\r\n                      value={payload.nameOfPersonReferringClient}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.nameOfPersonReferringClient !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfPersonReferringClient}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      <span style={{ color: \"red\" }}> *</span>Name of Referring\r\n                      Facility\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfReferringFacility\"\r\n                      id=\"nameOfReferringFacility\"\r\n                      value={payload.nameOfReferringFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.nameOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of Referring Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"addressOfReferringFacility\"\r\n                      id=\"addressOfReferringFacility\"\r\n                      value={payload.addressOfReferringFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.addressOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.addressOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*          <div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label for=\"firstName\">*/}\r\n                {/*                      Phone Number of Referring Facility*/}\r\n                {/*                      /!* <span style={{ color: \"red\" }}> *</span> *!/*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNoOfReferringFacility\"*/}\r\n                {/*                      id=\"phoneNoOfReferringFacility\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNoOfReferringFacility}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNoOfReferringFacility\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNoOfReferringFacility !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNoOfReferringFacility}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number of Referring Facility{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNoOfReferringFacility\"\r\n                      id=\"phoneNoOfReferringFacility\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(\r\n                          e,\r\n                          \"phoneNoOfReferringFacility\"\r\n                        );\r\n                      }}\r\n                      value={payload.phoneNoOfReferringFacility}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.phoneNoOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNoOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">Referred to (Department)</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"referredTo\"\r\n                      id=\"referredTo\"\r\n                      value={payload.referredTo}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Contact Person:\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfContactPerson\"\r\n                      id=\"nameOfContactPerson\"\r\n                      value={payload.nameOfContactPerson}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.nameOfContactPerson !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfContactPerson}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Receiving Facility State{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stateId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      // onChange={loadLGA1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterState =\r\n                            statesOfTheReceivingFacility.filter((st) => {\r\n                              return Number(st.id) === Number(e.target.value);\r\n                            });\r\n                          setSelectedReceivingState(filterState);\r\n\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            receivingFacilityStateName: filterState[0].name,\r\n                          }));\r\n                        }\r\n                        loadLGA(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option>Select State</option>\r\n                      {states.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.receivingFacilityStateName !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.receivingFacilityStateName}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Receiving Facility LGA{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lgaId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      // onChange={loadFacilities1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterlga = lgasOfTheReceivingFacility.filter(\r\n                            (lg) => {\r\n                              return Number(lg.id) === Number(e.target.value);\r\n                            }\r\n                          );\r\n                          setSelectedReceivingLga(filterlga);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            receivingFacilityLgaName: filterlga[0].name,\r\n                          }));\r\n                        }\r\n                        loadFacilities(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option>Select LGA</option>\r\n                      {lgasOfTheReceivingFacility.map((lga) => (\r\n                        <option key={lga.id} value={lga.id}>\r\n                          {lga.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.receivingFacilityLgaName !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.receivingFacilityLgaName}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Name of Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"nameOfReceivingFacility\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      onChange={(e) => {\r\n                        // setPayload(prevPayload => ({ ...prevPayload, facilityTransferTo: e.target.value }));\r\n                        if (e.target.value !== \"\") {\r\n                          const filterFacility = receivingFacilities.filter(\r\n                            (fa) => {\r\n                              return Number(fa.id) === Number(e.target.value);\r\n                            }\r\n                          );\r\n                          setSelectedReceivingFacility(filterFacility);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            nameOfReceivingFacility: filterFacility[0].name,\r\n                          }));\r\n                        }\r\n                      }}\r\n                    >\r\n                      <option>Select Facility</option>\r\n                      {receivingFacilities.map((facility) => (\r\n                        <option key={facility.id} value={facility.id}>\r\n                          {facility.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.nameOfReceivingFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of the Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"addressOfReceivingFacility\"\r\n                      id=\"addressOfReceivingFacility\"\r\n                      value={payload.addressOfReceivingFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                {/*          <div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label for=\"firstName\">*/}\r\n                {/*                      Phone No of Receiving Facility*/}\r\n                {/*                      <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNoOfReceivingFacility\"*/}\r\n                {/*                      id=\"phoneNoOfReceivingFacility\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNoOfReceivingFacility}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNoOfReceivingFacility\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNoOfReceivingFacility !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNoOfReceivingFacility}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone No of Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNoOfReceivingFacility\"\r\n                      id=\"phoneNoOfReceivingFacility\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(\r\n                          e,\r\n                          \"phoneNoOfReceivingFacility\"\r\n                        );\r\n                      }}\r\n                      value={payload.phoneNoOfReceivingFacility}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.phoneNoOfReceivingFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNoOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label for=\"firstName\">*/}\r\n                {/*      Services needed*/}\r\n                {/*      <span style={{ color: \"red\" }}> *</span>*/}\r\n                {/*    </Label>*/}\r\n                {/*    <select*/}\r\n                {/*      className=\"form-control\"*/}\r\n                {/*      name=\"serviceNeeded\"*/}\r\n                {/*      id=\"serviceNeeded\"*/}\r\n                {/*      onChange={handleInputChange}*/}\r\n                {/*      value={payload.serviceNeeded}*/}\r\n                {/*      style={{*/}\r\n                {/*        border: \"1px solid #014D88\",*/}\r\n                {/*        borderRadius: \"0.2rem\",*/}\r\n                {/*      }}*/}\r\n                {/*    >*/}\r\n                {/*      <option value={\"\"}>Select Service</option>*/}\r\n                {/*      {serviceNeeded.map((value, index) => (*/}\r\n                {/*        <option key={value.id} value={value.code}>*/}\r\n                {/*          {value.display}*/}\r\n                {/*        </option>*/}\r\n                {/*      ))}*/}\r\n                {/*    </select>*/}\r\n\r\n                {/*    {errors.serviceNeeded !== \"\" ? (*/}\r\n                {/*      <span className={classes.error}>*/}\r\n                {/*        {errors.serviceNeeded}*/}\r\n                {/*      </span>*/}\r\n                {/*    ) : (*/}\r\n                {/*      \"\"*/}\r\n                {/*    )}*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"form-group mb-3 col-md-12\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label>*/}\r\n                {/*      Services needed{\" \"}*/}\r\n                {/*      <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*    </Label>*/}\r\n                {/*    <DualListBox*/}\r\n                {/*        //canFilter*/}\r\n                {/*        // options={indicationForClientVerification}*/}\r\n                {/*        // onChange={(value) => setSelected(value)}*/}\r\n                {/*        // selected={selected}*/}\r\n                {/*    />*/}\r\n                {/*    /!*{errors.indicationForClientVerification !== \"\" ? (*!/*/}\r\n                {/*    /!*    <span className={classes.error}>*!/*/}\r\n                {/*    /!*  {errors.indicationForClientVerification}*!/*/}\r\n                {/*    /!*</span>*!/*/}\r\n                {/*    /!*) : (*!/*/}\r\n                {/*    /!*    \"\"*!/*/}\r\n                {/*    /!*)}*!/*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label for=\"dualListBox\">Services Needed</Label>\r\n                    <DualListBox\r\n                      options={serviceNeeded}\r\n                      selected={selectedServiceNeeded}\r\n                      onChange={(value) => {\r\n                        // Update selectedServiceNeeded state\r\n                        setSelectServiceNeeded(value);\r\n                        // Convert selectedServiceNeeded array into an object\r\n                        const serviceNeededObject = value.reduce(\r\n                          (obj, item, index) => {\r\n                            obj[index] = item;\r\n                            return obj;\r\n                          },\r\n                          {}\r\n                        );\r\n                        // Update serviceNeeded in payload\r\n                        setPayload({\r\n                          ...payload,\r\n                          serviceNeeded: serviceNeededObject,\r\n                        });\r\n                      }}\r\n                      // disabled={props.row.action === \"view\" ? true : false}\r\n                      // disabled\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Comments\r\n                      {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"textarea\"\r\n                      rows=\"4\"\r\n                      cols=\"7\"\r\n                      name=\"comments\"\r\n                      id=\"comments\"\r\n                      value={payload.comments}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              <br />\r\n\r\n              {/* <hr /> */}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"form-group mb-3 col-md-12\"\r\n                  style={{ display: \"flex\" }}\r\n                >\r\n                  <Button\r\n                    content=\"Done\"\r\n                    type=\"submit\"\r\n                    // icon=\"right arrow\"\r\n                    // labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      history.push(\"/\");\r\n                    }}\r\n                    disabled={saving}\r\n                  />\r\n                  <Button\r\n                    content=\"Add Form\"\r\n                    type=\"submit\"\r\n                    // icon=\"right arrow\"\r\n                    // labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n        {/* <CardBody>\r\n          <ServicesProvided />\r\n        </CardBody> */}\r\n\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RefferralUnit;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  console.log(\"data2\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n  const [nextForm, setNextForm] = useState([]);\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n\r\n  const [finalResult, setFinalResult] = useState(\"\");\r\n\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setErrors({ date: \"\", prepOffered: \"\", prepAccepted: \"\" });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    console.log(e.target.value);\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  function CheckTestResult() {\r\n    //Logic to show CD4 Count\r\n    // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n    //     objValues.hivTestResult=\"Negative\"\r\n    // }\r\n  }\r\n  function CheckTestResult2() {\r\n    //Logic to show CD4 Count\r\n    if (initialTest12.result2 === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else if (\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    }\r\n    // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n    //     objValues.hivTestResult2=\"Negative\"\r\n    // }\r\n    else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    } else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  }\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      (temp.prepOffered = objValues.prepOffered\r\n        ? \"\"\r\n        : \"The Prep Offered field is required.\");\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      objValues.prepOffered === \"true\" &&\r\n      (temp.prepAccepted = objValues.prepAccepted\r\n        ? \"\"\r\n        : \"The Prep Accepted field is required.\");\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    //  initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // track and set final result\r\n  useEffect(() => {\r\n    let result = \"\";\r\n\r\n    if (initialTest1.result === \"No\") {\r\n      result = \"Negative\";\r\n    } else if (\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"No\" &&\r\n      (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    }\r\n\r\n    setFinalResult(result);\r\n  }, [\r\n    initialTest1.result,\r\n    confirmatoryTest.result,\r\n    tieBreakerTest.result,\r\n    initialTest12.result2,\r\n    confirmatoryTest2.result2,\r\n    tieBreakerTest2.result2,\r\n  ]);\r\n  // clear the all other fields if there changes in initialTest1 result is changes\r\n  useEffect(() => {\r\n    setConfirmatoryTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    // clear the prepOffered and prepAccepted fields\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [initialTest1.result]);\r\n\r\n  // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [confirmatoryTest.result]);\r\n\r\n  // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n  useEffect(() => {\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [tieBreakerTest.result]);\r\n\r\n  useEffect(() => {\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [initialTest12.result2]);\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [confirmatoryTest2.result2]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let latestForm = getNextForm(\r\n      \"Request_and_Result_Form\",\r\n      objValues.age,\r\n      \"\",\r\n      \"unknown\"\r\n    );\r\n\r\n    if (finalResult === \"\") {\r\n      toast.error(\"Final result is required for submission.\");\r\n      return;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //logic to get Hiv result test\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      objValues.htsClientId = clientId;\r\n      objValues.confirmatoryTest = confirmatoryTest;\r\n      objValues.confirmatoryTest2 = confirmatoryTest2;\r\n      objValues.personId = patientID;\r\n      objValues.test1 = initialTest1;\r\n      objValues.test2 = initialTest12;\r\n      objValues.tieBreakerTest = tieBreakerTest;\r\n      objValues.tieBreakerTest2 = tieBreakerTest2;\r\n      objValues.syphilisTesting = syphills;\r\n      objValues.hepatitisTesting = hepatitis;\r\n\r\n      objValues.cd4 = cd4Count;\r\n      objValues.others = others;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //console.log(response.data)\r\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n          //toast.success(\"HIV test successful\");\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    onChange={handleInputChangeInitial}\r\n                    min={props?.patientObj?.dateVisit}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                    <>\r\n                      <b> Result : </b>\r\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                    </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                    confirmatoryTest.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {errors.prepOffered !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepOffered}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {errors.prepAccepted !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepAccepted}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <>\r\n                          <b> Result : </b>\r\n                          <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                          <b> Final Result : </b>\r\n                          <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                        </>\r\n                        <br />\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                              <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                  <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Offered{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepOffered\"\r\n                              id=\"prepOffered\"\r\n                              value={objValues.prepOffered}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                          objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Prep Accepted{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"prepAccepted\"\r\n                                  id=\"prepAccepted\"\r\n                                  value={objValues.prepAccepted}\r\n                                  onChange={handleInputChange}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                >\r\n                                  <option value={\"\"}></option>\r\n                                  <option value=\"true\">Yes</option>\r\n                                  <option value=\"false\">No</option>\r\n                                </select>\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() =>\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </>\r\n                  )} */}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { fontWeight } from \"@mui/system\";\r\nimport { getCheckModality } from \"../../../../utility\";\r\nimport { getDoubleSkipForm } from \"../../../../utility\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n  const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [clientCodeetail, setclientCodeetail] = useState(\"\");\r\n  const [clientCodeetail2, setclientCodeetail2] = useState(\"\");\r\n  const [clientCodeCheck, setClientCodeCheck] = useState(\"\");\r\n  const [createdCode, setCreatedCode] = useState(\"\");\r\n  const [facilityCode, setFacilityCode] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(null);\r\n  const [showPregancy, setShowPregnancy] = useState(false);\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n\r\n\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type == \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    return address ? address.city : \"\";\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //   age_now--;\r\n    // }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const address = props.patientObj.personResponseDto.address;\r\n  const country =\r\n    address && address.address && address.address.length > 0\r\n      ? address.address[0]\r\n      : null;\r\n  const patientAge = calculate_age(\r\n    //moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")\r\n    props.patientObj.personResponseDto.dateOfBirth\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    clientCode:\r\n      props.patientObj && props.patientObj.clientCode\r\n        ? props.patientObj.clientCode\r\n        : \"\",\r\n    age:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj?.riskStratificationResponseDto?.age\r\n        : \"\",\r\n    dob:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : \"\",\r\n    breastFeeding:\r\n      props.patientObj && props.patientObj.breastFeeding\r\n        ? props.patientObj.breastFeeding\r\n        : \"\",\r\n    dateVisit:\r\n      props.patientObj && props.patientObj.dateVisit\r\n        ? props.patientObj.dateVisit\r\n        : \"\",\r\n    firstTimeVisit:\r\n      props.patientObj && props.patientObj.firstTimeVisit\r\n        ? props.patientObj.firstTimeVisit\r\n        : \"\",\r\n    indexClient:\r\n      props.patientObj && props.patientObj.indexClient\r\n        ? props.patientObj.indexClient\r\n        : \"\",\r\n    numChildren:\r\n      props.patientObj && props.patientObj.numChildren\r\n        ? props.patientObj.numChildren\r\n        : \"\",\r\n    numWives:\r\n      props.patientObj && props.patientObj.numWives\r\n        ? props.patientObj.numWives\r\n        : \"\",\r\n    pregnant:\r\n      props.patientObj && props.patientObj.pregnant\r\n        ? props.patientObj.pregnant\r\n        : \"\",\r\n    dateOfBirth:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : \"\",\r\n    dateOfRegistration:\r\n      props.patientObj && props.patientObj.dateOfRegistration\r\n        ? props.patientObj.dateOfRegistration\r\n        : \"\",\r\n    deceased: \"\",\r\n    deceasedDateTime: \"\",\r\n    educationId:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.educationId\r\n        ? props.patientObj.personResponseDto.educationId\r\n        : \"\",\r\n    employmentStatusId:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.employmentStatusId\r\n        ? props.patientObj.personResponseDto.employmentStatusId\r\n        : \"\",\r\n    facilityId: \"\",\r\n    firstName:\r\n      props.patientObj && props.patientObj.personResponseDto\r\n        ? props.patientObj.personResponseDto.firstName\r\n        : \"\",\r\n    genderId:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.genderId\r\n        ? props.patientObj.personResponseDto.genderId\r\n        : \"\",\r\n    address:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.address\r\n        ? getAddress(props.patientObj.personResponseDto.address)\r\n        : \"\",\r\n    phoneNumber:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.contactPoint\r\n        ? getPhoneNumber(props.patientObj.personResponseDto.contactPoint)\r\n        : \"\",\r\n    isDateOfBirthEstimated:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n        ? props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n        : \"\",\r\n    maritalStatusId:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.maritalStatus\r\n        ? props.patientObj.personResponseDto.maritalStatus.id\r\n        : \"\",\r\n    organizationId:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.genderId\r\n        ? props.patientObj.personResponseDto.genderId\r\n        : \"\",\r\n    otherName:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.otherName\r\n        ? props.patientObj.personResponseDto.otherName\r\n        : \"\",\r\n    sex:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.sex\r\n        ? props.patientObj.personResponseDto.sex\r\n        : \"\",\r\n    stateId: country && country.stateId ? country.stateId : \"\",\r\n    riskAssessment:\r\n      props.extra && props.extra.riskAssessment\r\n        ? props.extra.riskAssessment\r\n        : {},\r\n    riskStratificationCode:\r\n      props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n    lga: country && country.district ? country.district : \"\",\r\n    surname:\r\n      props.patientObj.personResponseDto &&\r\n      props.patientObj.personResponseDto.surname\r\n        ? props.patientObj.personResponseDto.surname\r\n        : \"\",\r\n    previouslyTested: props.patientObj ? props.patientObj.previouslyTested : \"\",\r\n    referredFrom: props.patientObj ? props.patientObj.referredFrom : \"\",\r\n    targetGroup:\r\n      props.patientObj && props.patientObj.targetGroup\r\n        ? props.patientObj.targetGroup\r\n        : \"\",\r\n    testingSetting: props.patientObj ? props.patientObj.testingSetting : \"\",\r\n    typeCounseling: props.patientObj ? props.patientObj.typeCounseling : \"\",\r\n    relationWithIndexClient: props.patientObj\r\n      ? props.patientObj.relationWithIndexClient\r\n      : \"\",\r\n    indexClientCode: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  const CreateClientCode = () => {\r\n    let facilityShortCode = \"\";\r\n    axios\r\n      .get(`${baseUrl}hts/get-facility-code`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilityCode(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let visitDate = new Date(props.patientObj.dateVisit);\r\n\r\n    let modality = props.patientObj.modality;\r\n    let modalityCode = \"\";\r\n    if (modality?.includes(\"STI\")) {\r\n      modalityCode = \"STI\";\r\n    } else if (modality?.includes(\"EMERGENCY\")) {\r\n      modalityCode = \"EME\";\r\n    } else if (modality?.includes(\"INDEX\")) {\r\n      modalityCode = \"IND\";\r\n    } else if (modality?.includes(\"INPATIENT\")) {\r\n      modalityCode = \"INP\";\r\n    } else if (modality?.includes(\"PMTCT\")) {\r\n      modalityCode = \"PMTCT\";\r\n    } else if (modality?.includes(\"TB\")) {\r\n      modalityCode = \"TB\";\r\n    } else if (modality?.includes(\"VCT\")) {\r\n      modalityCode = \"VCT\";\r\n    } else if (modality?.includes(\"MOBILE\")) {\r\n      modalityCode = \"MOB\";\r\n    } else if (modality?.includes(\"SNS\")) {\r\n      modalityCode = \"SNS\";\r\n    } else if (modality?.includes(\"OTHER\")) {\r\n      modalityCode = \"OTH\";\r\n    }\r\n\r\n    let month = visitDate.getMonth();\r\n    let year = visitDate.getFullYear();\r\n    let codeCreated =\r\n      \"C\" + facilityCode + \"/\" + modalityCode + \"/\" + month + \"/\" + year + \"/\";\r\n    setCreatedCode(codeCreated);\r\n    setObjValues({ ...objValues, clientCode: createdCode });\r\n  };\r\n\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    getStates();\r\n    MaterialStatus();\r\n    Sex();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    CreateClientCode();\r\n\r\n    //objValues.dateVisit=moment(new Date()).format(\"YYYY-MM-DD\")\r\n    //setObjValues(props.patientObj)\r\n    setModalityCheck(\r\n      getCheckModality(\r\n        props?.patientObj?.riskStratificationResponseDto?.modality\r\n      )\r\n    );\r\n    if (objValues.age !== \"\") {\r\n      props.setPatientObjAge(objValues.age);\r\n    }\r\n    if (props.extra && props.extra.age !== \"\") {\r\n      props.setPatientObjAge(props.extra.age);\r\n    }\r\n    if (country && country.stateId !== \"\") {\r\n      getProvincesId(country.stateId);\r\n    }\r\n\r\n    if (\r\n      props.extra.modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      props.extra.modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      props.extra.modality ===\r\n        \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n      props.extra.modality === \"TEST_SETTING_CPMTCT\" ||\r\n      props.extra.modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n      props.extra.modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      props.extra.modality === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n      props.extra.modality === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n      props.extra.modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      props.extra.modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\"\r\n    ) {\r\n      let sexDetetrmined = \"Female\";\r\n      setObjValues({ ...objValues, sex: \"Female\", pregnant: 73 });\r\n\r\n      if (\r\n        sexDetetrmined.toLowerCase() === \"female\" ||\r\n        props.extra.modality !==\r\n          \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n        props.extra.modality !== \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"\r\n      ) {\r\n        setShowPregnancy(true);\r\n      }\r\n    }\r\n  }, [objValues.age, props.patientObj, props.extra.age, facilityCode]);\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const MaterialStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get States from selected country\r\n  const getStates = () => {\r\n    setStateByCountryId(\"1\");\r\n    setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    } else if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    } else if (e.target.name === \"numChildren\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"numWives\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"indexClientCode\" && e.target.value !== \"\") {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      async function getIndexClientCode() {\r\n        const indexClientCode = e.target.value;\r\n        const response = await axios.get(\r\n          `${baseUrl}hts/client?code=${indexClientCode}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== \"Record Not Found\") {\r\n          setclientCodeetail2(\"\");\r\n          setclientCodeetail(response.data);\r\n          //setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        } else {\r\n          setclientCodeetail(\"\");\r\n          setclientCodeetail2(response.data);\r\n        }\r\n      }\r\n      getIndexClientCode();\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    if (e.target.name === \"sex\" && e.target.value.toLowerCase() === \"female\") {\r\n      setShowPregnancy(true);\r\n    }\r\n  };\r\n  //checkClientCode\r\n  const checkClientCode = (e) => {\r\n    let code = \"\";\r\n    if (e.target.name === \"serialNumber\") {\r\n      code = createdCode + e.target.value;\r\n      setCreatedCode(code);\r\n      setObjValues({ ...objValues, clientCode: code });\r\n    }\r\n    async function getIndexClientCode() {\r\n      const indexClientCode = objValues.clientCode;\r\n      const response = await axios.get(\r\n        `${baseUrl}hts/client/${indexClientCode}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"text/plain\",\r\n          },\r\n        }\r\n      );\r\n      // if(response.data!=='Record Not Found'){\r\n      //     setClientCodeCheck(\"Client code already exist\")\r\n      // }else{\r\n      //     setClientCodeCheck(\"\")\r\n      // }\r\n    }\r\n    getIndexClientCode();\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n    if (objValues.age !== \"\" && objValues.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setObjValues({ ...objValues, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingx = objValues.testingSetting ? \"\" : \"This field is required.\";\r\n    temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\";\r\n    temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested = objValues.previouslyTested\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.surname = objValues.surname ? \"\" : \"This field is required.\";\r\n    temp.sex = objValues.sex ? \"\" : \"This field is required.\";\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = objValues.phoneNumber ? \"\" : \"This field is required.\";\r\n    // temp.isDateOfBirthEstimated = objValues.isDateOfBirthEstimated ? \"\" : \"This field is required.\"\r\n    temp.firstName = objValues.firstName ? \"\" : \"This field is required.\";\r\n    //temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"This field is required.\"\r\n    //temp.numChildren = objValues.numChildren ? \"\" : \"This field is required.\"\r\n    temp.address = objValues.address ? \"\" : \"This field is required.\";\r\n    temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit = objValues.firstTimeVisit\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    temp.dob = objValues.dob ? \"\" : \"This field is required.\";\r\n    temp.age = objValues.age ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setObjValues({ ...objValues, [inputName]: NumberValue });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // check next form \r\n    let latestForm = getNextForm(\r\n      \"Client_intake_form\",\r\n      objValues.age,\r\n      modalityCheck,\r\n      \"unknown\"\r\n    );\r\n\r\n    console.log(\r\n      \"getPemission\",\r\n      latestForm,\r\n      \"value =>\",\r\n      \"Client_intake_form\",\r\n      objValues.age,\r\n      \"fill\",\r\n      \"unknown\"\r\n    );\r\n  \r\n\r\n \r\n    if (validate()) {\r\n      setSaving(true);\r\n      const getSexId = sexs.find((x) => x.display === objValues.sex); //get patient sex ID by filtering the request\r\n      //basicInfo.sexId=getSexId.id\r\n      const patientForm = {\r\n        clientCode: objValues.clientCode,\r\n        dateVisit: objValues.dateVisit,\r\n        extra: {},\r\n        firstTimeVisit: objValues.firstTimeVisit,\r\n        indexClient: objValues.indexClient,\r\n        numChildren: objValues.numChildren,\r\n        numWives: objValues.numWives,\r\n        personDto: {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: objValues.address,\r\n              countryId: 1,\r\n              district: objValues.lga,\r\n              line: [\"\"],\r\n              organisationUnitId: \"\",\r\n              postalCode: \"\",\r\n              stateId: objValues.stateId,\r\n            },\r\n          ],\r\n          contact: [],\r\n          contactPoint: [\r\n            {\r\n              type: \"phone\",\r\n              value: objValues.phoneNumber,\r\n            },\r\n          ],\r\n          dateOfBirth: objValues.dob,\r\n          dateOfRegistration: objValues.dateVisit,\r\n          deceased: true,\r\n          deceasedDateTime: null,\r\n          educationId: \"\",\r\n          employmentStatusId: \"\",\r\n          facilityId: \"\",\r\n          firstName: objValues.firstName,\r\n          genderId: getSexId.id, //objValues.genderId,\r\n          id: \"\",\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: objValues.clientCode,\r\n            },\r\n          ],\r\n          isDateOfBirthEstimated: objValues.isDateOfBirthEstimated,\r\n          maritalStatusId: objValues.maritalStatusId,\r\n          organizationId: \"\",\r\n          otherName: objValues.otherName,\r\n          sexId: getSexId.id,\r\n          surname: objValues.surname,\r\n        },\r\n        personId: \"\",\r\n        hospitalNumber: objValues.clientCode,\r\n        previouslyTested: objValues.previouslyTested,\r\n        referredFrom: objValues.referredFrom,\r\n        targetGroup: objValues.targetGroup,\r\n        testingSetting: objValues.testingSetting,\r\n        typeCounseling: objValues.typeCounseling,\r\n        breastFeeding: objValues.breastFeeding,\r\n        indexClientCode: objValues.indexClientCode,\r\n        pregnant: objValues.pregnant,\r\n        relationWithIndexClient: objValues.relationWithIndexClient,\r\n        riskStratificationCode:\r\n          props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n        comment: objValues.comment,\r\n      };\r\n\r\n      props.setPatientObj({ ...props.patientObj, ...objValues });\r\n      // get permission\r\n\r\n \r\n      axios\r\n        .post(`${baseUrl}hts`, patientForm, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          props.setBasicInfo(response.data);\r\n         handleItemClick(latestForm[0], latestForm[1]);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          console.log(error)\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"All fields are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Serial Number <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"serialNumber\"\r\n                      id=\"serialNumber\"\r\n                      value={serialNumber}\r\n                      //value={Math.floor(Math.random() * 1093328)}\r\n                      onBlur={checkClientCode}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Client Code <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"clientCode\"\r\n                      id=\"clientCode\"\r\n                      value={objValues.clientCode}\r\n                      disabled={true}\r\n                      //value={Math.floor(Math.random() * 1093328)}\r\n                      onBlur={checkClientCode}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                    {errors.clientCode !== \"\" ? (\r\n                      <span className={classes.error}>{errors.clientCode}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                  {clientCodeCheck !== \"\" ? (\r\n                    <span className={classes.error}>{clientCodeCheck}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date Of Registration </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateOfRegistration\"\r\n                                    id=\"dateOfRegistration\"\r\n                                    value={objValues.dateOfRegistration}\r\n                                    onChange={handleInputChange}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    value={objValues.referredFrom}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min=\"1929-12-31\"\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    First Name <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    value={objValues.firstName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.firstName !== \"\" ? (\r\n                    <span className={classes.error}>{errors.firstName}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Middle Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherName\"\r\n                    id=\"otherName\"\r\n                    value={objValues.otherName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.otherName !== \"\" ? (\r\n                    <span className={classes.error}>{errors.otherName}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Last Name <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"surname\"\r\n                    id=\"surname\"\r\n                    value={objValues.surname}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.surname !== \"\" ? (\r\n                    <span className={classes.error}>{errors.surname}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-2 col-md-2\">\r\n                <FormGroup>\r\n                  <Label>Date Of Birth</Label>\r\n                  <div className=\"radio\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"Actual\"\r\n                        name=\"dateOfBirth\"\r\n                        defaultChecked\r\n                        onChange={(e) => handleDateOfBirthChange(e)}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />{\" \"}\r\n                      Actual\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"radio\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"Estimated\"\r\n                        name=\"dateOfBirth\"\r\n                        onChange={(e) => handleDateOfBirthChange(e)}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />{\" \"}\r\n                      Estimated\r\n                    </label>\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <Label>Date</Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    id=\"dob\"\r\n                    min={objValues.dateVisit}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    value={objValues.dob}\r\n                    onChange={handleDobChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <Label>Age</Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"age\"\r\n                    value={objValues.age}\r\n                    disabled={ageDisabled}\r\n                    onChange={handleAgeChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n              {/*  <FormGroup>*/}\r\n              {/*    <Label for=\"\">*/}\r\n              {/*      Phone Number <span style={{ color: \"red\" }}> *</span>*/}\r\n              {/*    </Label>*/}\r\n\r\n              {/*    <PhoneInput*/}\r\n              {/*      containerStyle={{*/}\r\n              {/*        width: \"100%\",*/}\r\n              {/*        border: \"1px solid #014D88\",*/}\r\n              {/*      }}*/}\r\n              {/*      inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}*/}\r\n              {/*      country={\"ng\"}*/}\r\n              {/*      placeholder=\"(234)7099999999\"*/}\r\n              {/*      minLength={10}*/}\r\n              {/*      name=\"phoneNumber\"*/}\r\n              {/*      id=\"phoneNumber\"*/}\r\n              {/*      masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}*/}\r\n              {/*      value={objValues.phoneNumber}*/}\r\n              {/*      onChange={(e) => {*/}\r\n              {/*        checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n              {/*      }}*/}\r\n              {/*      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n              {/*    />*/}\r\n              {/*    {errors.phoneNumber !== \"\" ? (*/}\r\n              {/*      <span className={classes.error}>{errors.phoneNumber}</span>*/}\r\n              {/*    ) : (*/}\r\n              {/*      \"\"*/}\r\n              {/*    )}*/}\r\n              {/*  </FormGroup>*/}\r\n              {/*</div>*/}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Phone Number\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    id=\"phoneNumber\"\r\n                    onChange={(e) => {\r\n                      handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                    }}\r\n                    value={objValues.phoneNumber}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    // disabled\r\n                  />\r\n                  {errors.phoneNumber !== \"\" ? (\r\n                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    State <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"state\"\r\n                    id=\"state\"\r\n                    onChange={getProvinces}\r\n                    value={objValues.stateId}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {states.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.stateId !== \"\" ? (\r\n                    <span className={classes.error}>{errors.stateId}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    LGA <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lga\"\r\n                    id=\"lga\"\r\n                    value={objValues.lga}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {provinces.map((value, index) => (\r\n                      <option key={index} value={value.id}>\r\n                        {value.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.lga !== \"\" ? (\r\n                    <span className={classes.error}>{errors.lga}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Address <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    value={objValues.address}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.address !== \"\" ? (\r\n                    <span className={classes.error}>{errors.address}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Sex <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sex\"\r\n                    id=\"sex\"\r\n                    value={objValues.sex}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                      props.extra.modality === \"TEST_SETTING_CPMTCT\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                      props.extra.modality ===\r\n                        \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sexs.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.sex !== \"\" ? (\r\n                    <span className={classes.error}>{errors.sex}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                        </div>\r\n                             )} */}\r\n              {objValues.age > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Marital Status</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"maritalStatusId\"\r\n                      id=\"maritalStatusId\"\r\n                      value={objValues.maritalStatusId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {maritalStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.age > 9 &&\r\n                objValues.sex === \"Male\" &&\r\n                objValues.maritalStatusId !== 5 && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        min={0}\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/* && objValues.maritalStatusId==='6' */}\r\n              {objValues.age > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/* objValues.maritalStatusId==='6' && */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Group <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    //disabled\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {/*kP.map((value) => (\r\n                                           <option key={value.id} value={value.code}>\r\n                                               {value.display}\r\n                                           </option>\r\n                                       ))*/}\r\n                    {(objValues.sex === \"Female\" ||\r\n                      objValues.sex === \"female\") && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"MSM\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                      </>\r\n                    )}\r\n\r\n                    {(objValues.sex === \"Male\" || objValues.sex === \"male\") && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"FSW\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}{\" \"}\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Index Testing <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Relationship of the index client{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relationWithIndexClient\"\r\n                        id=\"relationWithIndexClient\"\r\n                        value={objValues.relationWithIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Index Client Code/ID</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"indexClientCode\"\r\n                        id=\"indexClientCode\"\r\n                        value={objValues.indexClientCode}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    {clientCodeetail2 !== \"\" ? (\r\n                      <span className={classes.error}>{clientCodeetail2}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {clientCodeetail !== \"\" ? (\r\n                      <span className={classes.success}>{clientCodeetail}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {showPregancy && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Pregnant Status</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        value={objValues.pregnant}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={\r\n                          props.extra.modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                          props.extra.modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n                          props.extra.modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                          props.extra.modality === \"TEST_SETTING_CPMTCT\" ||\r\n                          props.extra.modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                          props.extra.modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {pregnancyStatus.map((value) =>\r\n                          (props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .testingSetting === \"TEST_SETTING_CPMTCT\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\") &&\r\n                          value.code === \"PREGANACY_STATUS_NOT_PREGNANT\" ? (\r\n                            <></>\r\n                          ) : (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/*objValues.pregnant === \"\" &&\r\n                      (objValues.pregnant !== 73 ||\r\n                        objValues.pregnant !== \"73\") && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Breast Feeding</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"breastFeeding\"\r\n                              id=\"breastFeeding\"\r\n                              value={objValues.breastFeeding}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value=\"true\">YES</option>\r\n                              <option value=\"false\">NO</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                            )*/}\r\n                </>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    First time visit <span style={{ color: \"red\" }}>*</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Previously tested within the last 3 months{\" \"}\r\n                    <span style={{ color: \"red\" }}>*</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Type of Counseling <span style={{ color: \"red\" }}>*</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                <FormGroup>\r\n                  <Label for=\"firstName\">\r\n                    Comments\r\n                    {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    rows=\"4\"\r\n                    cols=\"7\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    value={objValues.comment}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                      height: \"100px\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"risk\", \"risk\")}\r\n                  /> */}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"./ServicesProvided\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ClientRefferalForm = (props) => {\r\n  const classes = useStyles();\r\n  console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = {...errors};\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  // const [formInfo, setFormInfo] = useState({\r\n  //   dateVisit: \"\",\r\n  //   firstName: props?.patientObj?.personResponseDto?.firstName,\r\n  //   middleName:  props?.patientObj?.personResponseDto?.otherName,\r\n  //   lastName:  props?.patientObj?.personResponseDto?.surname,\r\n  //   hospitalNumber:props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n  //   countryId: \"1\",\r\n  //   stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n  //   province: Number(props?.patientObj?.personResponseDto?.address?.address[0]?.district) ,\r\n  //   address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n  //   landmark: \"\",\r\n  //   phoneNumber:  props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n  //   sexId:  props?.patientObj?.personResponseDto?.gender?.id,\r\n  //   dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   age:  \"\",\r\n  //   dateOfBirth:props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   hivStatus:props?.patientObj?.hivTestResult2 ? props?.patientObj?.hivTestResult2 :\r\n  //       props?.patientObj?.hivTestResult ? props?.patientObj?.hivTestResult : \"\",\r\n  //   referredFromFacility: \"\",\r\n  //   nameOfPersonReferringClient: \"\",\r\n  //   nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n  //   addressOfReferringFacility: \"\",\r\n  //   phoneNoOfReferringFacility: \"\",\r\n  //   referredTo: \"\",\r\n  //   nameOfContactPerson: \"\",\r\n  //   nameOfReceivingFacility: \"\",\r\n  //   addressOfReceivingFacility: \"\",\r\n  //   phoneNoOfReceivingFacility: \"\",\r\n  //   isDateOfBirthEstimated: false,\r\n  //   serviceNeeded: \"\",\r\n  //   comments: \"\",\r\n  //   receivingStateFacility: \"\",\r\n  //   receivingLgaFacility: \"\",\r\n  //   htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n  //   htsClientUuid:props && props.patientObj ? props.patientObj?.uuid : \"\"\r\n  // });\r\n  // const viewReferralInfo = () => {\r\n  //   axios\r\n  //       .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((response) => {\r\n  //         // setObjValues(response.data);\r\n  //         console.log(\" form information\", response.data);\r\n  //         // setFormInfo(response.data);\r\n  //         // setReceivingOrganization(response.data.receivingOrganization);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         //console.log(error);\r\n  //       });\r\n  // };\r\n  // useEffect(() => {\r\n  //   viewReferralInfo();\r\n  // }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    console.log(e.target.value);\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n          <div className=\"form-group  col-md-8\">\r\n            <FormGroup>\r\n              <Label>\r\n                Referral Type <span style={{ color: \"red\" }}> *</span>\r\n              </Label>\r\n              <select\r\n                  className=\"form-control\"\r\n                  name=\"contentDropDown\"\r\n                  id=\"contentDropDown\"\r\n                  onChange={handleContentChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n              >\r\n                <option value={\"\"}>Select Refarral form type</option>\r\n                <option value={\"showReferringUnit\"}>Referral form</option>\r\n                <option value={\"showServiceProviderUnit\"}>\r\n                  Service Provider form\r\n                </option>\r\n              </select>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <Card className={classes.root}>\r\n          {content.showReferringUnit\r\n              && <RefferralUnit\r\n                  patientObj={patientObj}\r\n                  // formInfo={formInfo}\r\n                  // row={props.row}\r\n                  handleClicked={props.handleClicked}\r\n              />}\r\n          {content.showServiceProviderUnit && (\r\n              <CardBody>\r\n                <ServicesProvided\r\n                    patientObj = {patientObj}\r\n                    // formInfo={props.formInfo}\r\n                    // row={props.row}\r\n                />\r\n              </CardBody>\r\n          )}\r\n          {/* recieving facility  */}\r\n        </Card>\r\n        <Modal\r\n            show={open}\r\n            toggle={toggle}\r\n            className=\"fade\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Notification!\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>Are you Sure of the Age entered?</h4>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n  );\r\n};\r\n\r\n\r\nexport default ClientRefferalForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js",["620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllStateByCountryId,\r\n  getAllCountry,\r\n  getAllProvinces,\r\n  getAllGenders,\r\n  alphabetOnly,\r\n} from \"../../../../utility\";\r\n\r\nimport { calculate_age } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst FamilyIndexTestingForm = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setClientCurrentlyOnHiv] = useState(true);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [indexClientConfirmedHivPositive, setIndexClientConfirmedHivPositive] =\r\n    useState(false);\r\n  const [familyRelationship, setFamilyRelationship] = useState([]);\r\n  const [selectedFamilyIndex, setSelectedFamilyIndex] = useState({});\r\n  const [familyIndexHivStatus, setFamilyIndexHivStatus] = useState([]);\r\n  const [familyIndex, setFamilyIndex] = useState([]);\r\n  const [followUpAppointmentLocation, setFollowUpAppointmentLocation] =\r\n    useState([]);\r\n  const [indexVisitAttempt, setIndexVisitAttempt] = useState([]);\r\n  const [isWillingToHaveChildrenTested, setIsWillingToHaveChildrenTested] =\r\n    useState(false);\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"permissions\")?.split(\",\")\r\n  );\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [facilityInfo, setFacilityInfo] = useState(props?.organizationInfo);\r\n\r\n  const [familyIndexRequestDto, setFamilyIndexRequestDto] = useState({\r\n    childNumber: \"\",\r\n    familyIndexHivStatus: \"\",\r\n    familyIndexTestingUuid: \"\",\r\n    familyRelationship: \"\",\r\n    motherDead: \"\",\r\n    yearMotherDead: \"\",\r\n    uan: \"\",\r\n  });\r\n\r\n  const [arrayFamilyIndexRequestDto, setArrayFamilyIndexRequestDto] = useState(\r\n    []\r\n  );\r\n    const [\r\n    arrayFamilyTestingTrackerRequestDTO,\r\n    setArrayFamilyTestingTrackerRequestDTO,\r\n  ] = useState([]);\r\n  const [errorFamilyIndexDTO, setErrorFamilyIndexDTO] = useState({});\r\n  const [errorFamilyIndexTracker, setErrorFamilyIndexDTOTracker] = useState({});\r\n\r\n  const [addIndexTracker, setaAddIndexTracker] = useState(false);\r\n  const [addIndexTracker2, setaAddIndexTracker2] = useState(false);\r\n\r\n  const [familyTestingTrackerRequestDTO, setFamilyTestingTrackerRequestDTO] =\r\n    useState({\r\n      attempt: \"\",\r\n      dateEnrolledInOVC: \"\",\r\n      dateEnrolledOnArt: \"\",\r\n      dateTested: \"\",\r\n      dateVisit: \"\",\r\n      facilityId: \"\",\r\n      familyIndexTestingId: \"\",\r\n      familyIndexTestingUuid: \"\",\r\n      followUpAppointmentLocation: \"\",\r\n      hiveTestResult: \"\",\r\n      knownHivPositive: \"\",\r\n      ovcId: \"\",\r\n      positionOfChildEnumerated: \"\",\r\n      scheduleVisitDate: \"\",\r\n      trackerAge: \"\",\r\n      trackerSex: \"\",\r\n    });\r\n\r\n  const [payload, setPayload] = useState({\r\n    age: calculate_age(\r\n      props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        : props?.patientObj?.personResponseDto?.dateOfBirth\r\n    ),\r\n    alternatePhoneNumber: \"\",\r\n    dateClientEnrolledOnTreatment: \"\",\r\n    dateIndexClientConfirmedHivPositiveTestResult:\r\n      props?.patientObj?.confirmatoryTest2?.date2,\r\n    dateOfBirth: props?.patientObj?.personResponseDto?.dateOfBirth,\r\n    extra: {},\r\n    facilityName: \"\",\r\n    familyIndexClient: \"\",\r\n    familyIndexRequestDto: \r\n      {\r\n        childNumber: 0,\r\n        familyRelationship: \"\",\r\n        motherDead: \"\",\r\n        yearMotherDead: \"\",\r\n\r\n familyTestingTrackerRequestDTO: \r\n      {\r\n        attempt: \"\",\r\n        dateEnrolledInOVC: \"\",\r\n        dateEnrolledOnArt: \"\",\r\n        dateTested: \"\",\r\n        dateVisit: \"\",\r\n        facilityId: 0,\r\n        followUpAppointmentLocation: \"\",\r\n        hiveTestResult: \"\",\r\n        knownHivPositive: \"\",\r\n        ovcId: \"\",\r\n        positionOfChildEnumerated: 0,\r\n        scheduleVisitDate: \"\",\r\n        trackerAge: 0,\r\n        trackerSex: \"\",\r\n\r\n        // not there \r\n            familyIndexTestingId: 0,\r\n            familyIndexTestingUuid: \"\",\r\n      },\r\n    \r\n\r\n\r\n// not there \r\n        familyIndexHivStatus: \"\",\r\n        familyIndexTestingUuid: \"\",\r\n    \r\n      },\r\n    \r\n   \r\n\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: \"\",\r\n    indexClientId: props?.patientObj?.clientCode,\r\n    isClientCurrentlyOnHivTreatment: \"\",\r\n    lga: \"\",\r\n    maritalStatus: props?.patientObj?.personResponseDto?.maritalStatus?.id,\r\n    name: props?.patientObj?.personResponseDto?.firstName,\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    recencyTesting: \"\",\r\n   setting: props.patientObj.testingSetting,\r\n        // chnage position\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    visitDate: \"\",\r\n   \r\n    \r\n\r\n    sex: props?.patientObj?.personResponseDto?.gender?.id,\r\n    state: \"\",\r\n    virallyUnSuppressed: \"\",\r\n    willingToHaveChildrenTestedElseWhere: \"\",\r\n\r\n    reasonForIndexClientDateHivConfirmedNotSelected: \"\",\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0].city,\r\n    recencyTesting: \"\",\r\n  });\r\n\r\n  const [lgas, setLGAs] = useState([]);\r\n  const [facilities, setFacilities1] = useState([]);\r\n  const [selectedState, setSelectedState] = useState({});\r\n  const [selectedFacility, setSelectedFacility] = useState({});\r\n  const [selectedLga, setSelectedLga] = useState({});\r\n\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStates(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch states error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadOtherForm = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    toggle();\r\n  };\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLGAs(response.data);\r\n          // const selectedLga = response.data.find(lga => lga.id === id);\r\n          // setPayload(prevPayload => ({ ...prevPayload, lgaTransferTo: selectedLga ? selectedLga.name : \"\" }));\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch LGA error\" + e);\r\n      });\r\n  };\r\n  console.log(props);\r\n  const handleItemClick = (next, present) => {\r\n    props.handleItemClick(next);\r\n    if (props.completed.includes(present)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, present]);\r\n    }\r\n  };\r\n  const validateAddFamilyINdexDTO = () => {\r\n    let temp = {};\r\n\r\n    // if all are empty\r\n\r\n    if (\r\n      familyIndexRequestDto.familyRelationship === \"\" &&\r\n      familyIndexRequestDto.familyIndexHivStatus === \"\" &&\r\n      familyIndexRequestDto.motherDead === \"\"\r\n    ) {\r\n      setaAddIndexTracker(true);\r\n    } else {\r\n      setaAddIndexTracker(false);\r\n\r\n      temp.familyRelationship =\r\n        familyIndexRequestDto.familyRelationship === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.childNumber =\r\n        familyIndexRequestDto.familyRelationship ===\r\n          \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" &&\r\n        familyIndexRequestDto.childNumber === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      temp.familyIndexHivStatus =\r\n        familyIndexRequestDto.familyIndexHivStatus === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.motherDead =\r\n        familyIndexRequestDto.motherDead === \"\" ? \"field is required\" : \"\";\r\n      temp.yearMotherDead =\r\n        familyIndexRequestDto.motherDead.toLowerCase() === \"yes\" &&\r\n        familyIndexRequestDto.yearMotherDead === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      setErrorFamilyIndexDTO({ ...temp });\r\n      return Object.values(temp).every((x) => x == \"\");\r\n    }\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFacilities1(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilityInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getFamilyRelationship = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyRelationship(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index hiv status\r\n  const FAMILY_INDEX_HIV_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX_HIV_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndexHivStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index\r\n\r\n  const FAMILY_INDEX = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndex(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const FOLLOW_UP_APPOINTMENT_LOCATION = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FOLLOW UP_APPOINTMENT_LOCATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFollowUpAppointmentLocation(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // GET\r\n  const INDEX_VISIT_ATTEMPTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_VISIT_ATTEMPTS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexVisitAttempt(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // generate index client Id using the HTS client code/family index client unique ART number\r\n  const generateIndexClientId = () => {\r\n    const indexClientId = Math.floor(1000 + Math.random() * 9000);\r\n  };\r\n\r\n  // show reason for not selecting hiv confirm date, if the hiv confirm date is not selected and hide it when it is selected\r\n  // const showReasonForNotSelectingHivConfirmDate = () => {\r\n  //        if(payload.dateIndexClientConfirmedHiv === \"\"){\r\n  //            setIndexClientConfirmedHivPositive(true);\r\n  //        }else{\r\n  //            setIndexClientConfirmedHivPositive(false);\r\n  //        }\r\n  // }\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    getAllGenders()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadStates();\r\n    loadFamilyIndexSetting();\r\n    getCountry();\r\n    getStateByCountryId();\r\n    getMaritalStatus();\r\n    getFamilyRelationship();\r\n    FAMILY_INDEX_HIV_STATUS();\r\n    FAMILY_INDEX();\r\n    FOLLOW_UP_APPOINTMENT_LOCATION();\r\n    INDEX_VISIT_ATTEMPTS();\r\n\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      loadLGA(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, []);\r\n\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"alternatePhoneNumber\") {\r\n      setPayload({ ...payload, alternatePhoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferrringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferrringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfRecievingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfRecievingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    setPayload({\r\n      ...payload,\r\n      nameOfRecievingFacility: e.name,\r\n      addressOfRecievingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfRecievingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyIndexRequestDto = (e) => {\r\n    setErrorFamilyIndexDTO({ ...errorFamilyIndexDTO, [e.target.name]: \"\" });\r\n    setaAddIndexTracker(false);\r\n    // console.log(e);\r\n    setFamilyIndexRequestDto({\r\n      ...familyIndexRequestDto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n  // const handleSubmitfamilyIndexRequestDto = (e) => {\r\n  //   if (validateAddFamilyINdexDTO()) {\r\n  //     let existingArray = arrayFamilyIndexRequestDto;\r\n\r\n  //     existingArray.push(familyIndexRequestDto);\r\n  //     setFamilyIndexRequestDto({\r\n  //       childNumber: \"\",\r\n  //       familyIndexHivStatus: \"\",\r\n  //       familyIndexTestingUuid: \"\",\r\n  //       familyRelationship: \"\",\r\n  //       motherDead: \"\",\r\n  //       yearMotherDead: \"\",\r\n  //       uan: \"\",\r\n  //     });\r\n\r\n  //     setArrayFamilyIndexRequestDto(existingArray);\r\n  //   }\r\n  // };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyTestingTrackerRequestDTO = (e) => {\r\n    setErrorFamilyIndexDTOTracker({\r\n      ...errorFamilyIndexTracker,\r\n      [e.target.name]: \"\",\r\n    });\r\n    setaAddIndexTracker2(false);\r\n\r\n    if (e.target.name === \"positionOfChildEnumerated\") {\r\n      if (e.target.value > -1) {\r\n        setFamilyTestingTrackerRequestDTO({\r\n          ...familyTestingTrackerRequestDTO,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"trackerAge\") {\r\n      if (e.target.value > -1) {\r\n        setFamilyTestingTrackerRequestDTO({\r\n          ...familyTestingTrackerRequestDTO,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      setFamilyTestingTrackerRequestDTO({\r\n        ...familyTestingTrackerRequestDTO,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n  const handleDone = () => {\r\n    toggle();\r\n    handleItemClick(\"new-referral\", \"\");\r\n  };\r\n  const loadNextForm = (row) => {\r\n    // setSaving(true);\r\n    if (permissions.includes(\"Nigeria_PNS_Form\")) {\r\n          handleItemClick(\"pns\", \"fit\");\r\n          toggle();\r\n\r\n    }else if (permissions.includes(\"Referral_Form\")) {\r\n            handleItemClick(\"pns\", \"client-referral\");\r\n            toggle();\r\n\r\n          }\r\n  };\r\n\r\n  // const handleSubmitfamilyTestingTrackerRequestDTO = (e) => {\r\n  //   if (familyTestingTrackerRequestDTO?.dateVisit !== \"\") {\r\n  //     let existingArray = arrayFamilyTestingTrackerRequestDTO;\r\n\r\n  //     let newDTO = familyTestingTrackerRequestDTO;\r\n  //     familyTestingTrackerRequestDTO.facilityId =\r\n  //       facilityInfo.currentOrganisationUnitId;\r\n\r\n  //     existingArray.push(newDTO);\r\n  //     setFamilyTestingTrackerRequestDTO({\r\n  //       attempt: \"\",\r\n  //       dateEnrolledInOVC: \"\",\r\n  //       dateEnrolledOnArt: \"\",\r\n  //       dateTested: \"\",\r\n  //       dateVisit: \"\",\r\n  //       facilityId: \"\",\r\n  //       familyIndexTestingId: \"\",\r\n  //       familyIndexTestingUuid: \"\",\r\n  //       followUpAppointmentLocation: \"\",\r\n  //       hiveTestResult: \"\",\r\n  //       knownHivPositive: \"\",\r\n  //       ovcId: \"\",\r\n  //       positionOfChildEnumerated: \"\",\r\n  //       scheduleVisitDate: \"\",\r\n  //       trackerAge: \"\",\r\n  //       trackerSex: \"\",\r\n  //     });\r\n\r\n  //     setArrayFamilyTestingTrackerRequestDTO(existingArray);\r\n  //   } else {\r\n  //     let ans = Object.values(familyTestingTrackerRequestDTO).every(\r\n  //       (each) => each === \"\"\r\n  //     );\r\n\r\n  //     if (ans) {\r\n  //       setaAddIndexTracker2(true);\r\n  //     } else {\r\n  //       let temp = {};\r\n  //       temp.dateVisit =\r\n  //         familyTestingTrackerRequestDTO?.dateVisit === \"\"\r\n  //           ? \"field is required\"\r\n  //           : \"\";\r\n\r\n  //       setErrorFamilyIndexDTOTracker({ ...temp });\r\n  //       return Object.values(temp).every((x) => x == \"\");\r\n  //     }\r\n  //   }\r\n  // };\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    // console.log(response);\r\n  };\r\n\r\n  const handleFamilyRelationshipChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPayload((prevPayload) => ({\r\n      ...prevPayload,\r\n      [name]: value,\r\n      // Reset childNumber when family relationship changes\r\n      childNumber:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.childNumber,\r\n      // Reset familyIndexHivStatus when family relationship changes, where mother = '1293', father = '1294', biological child = '1295', siblings = '1296'\r\n      familyIndexHivStatus: [\r\n        \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n        \"FAMILY_RELATIONSHIP_FATHER\",\r\n        \"FAMILY_RELATIONSHIP_MOTHER\",\r\n        \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n      ].includes(value)\r\n        ? \"\"\r\n        : prevPayload.familyIndexHivStatus,\r\n      // Reset uan when family relationship changes\r\n      uan:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_SIBLINGS\"\r\n          ? \"\"\r\n          : prevPayload.uan,\r\n      // Reset motherDead when family relationship changes\r\n      motherDead:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.motherDead,\r\n      // Reset yearMotherDied when family relationship changes\r\n      yearMotherDied:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.yearMotherDied,\r\n    }));\r\n  };\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const convertCodeToDisplay = (type, value) => {\r\n    let data = \"\";\r\n    if (type === \"familyRelationship\") {\r\n      data = familyRelationship.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0].display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0].display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0].display;\r\n    }\r\n  };\r\n\r\n  // const removeFamilyIndexRow = (index) => {\r\n  //   arrayFamilyIndexRequestDto.splice(index, 1);\r\n  //   setArrayFamilyIndexRequestDto([...arrayFamilyIndexRequestDto]);\r\n  // };\r\n\r\n  // const removeFamilyTrackerRow = (index) => {\r\n  //   arrayFamilyTestingTrackerRequestDTO.splice(index, 1);\r\n  //   setArrayFamilyTestingTrackerRequestDTO([\r\n  //     ...arrayFamilyTestingTrackerRequestDTO,\r\n  //   ]);\r\n  // };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    const { name, value } = e.target;\r\n\r\n    if (e.target.name === \"name\" || e.target.name === \"lastName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: name,\r\n      }));\r\n    } else if (name === \"willingToHaveChildrenTested\") {\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n        familyIndexTracker: {\r\n          ...prevState.familyIndexTracker,\r\n          positionOfChildEnumerated:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.positionOfChildEnumerated\r\n              : \"\",\r\n          trackerSex:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerSex : \"\",\r\n          trackerAge:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerAge : \"\",\r\n          scheduleVisitDate:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.scheduleVisitDate\r\n              : \"\",\r\n          followUpAppointmentLocation:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.followUpAppointmentLocation\r\n              : \"\",\r\n          dateVisit:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateVisit : \"\",\r\n          knownHivPositive:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.knownHivPositive\r\n              : \"\",\r\n          dateTested:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateTested : \"\",\r\n          hivTestResult:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.hivTestResult : \"\",\r\n          dateEnrolledInOVC:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledInOVC\r\n              : \"\",\r\n          dateEnrolledOnArt:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledOnArt\r\n              : \"\",\r\n          attempt: value === \"Yes\" ? prevState.familyIndexTracker.attempt : \"\",\r\n        },\r\n      }));\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"indexClientId\" && e.target.value !== \"\") {\r\n      //    setPayload({...payload, [e.target.name]: name })\r\n    } else if (e.target.name === \"dateIndexConfirmedHiv\") {\r\n      if (e.target.value !== \"\") {\r\n        const name = e.target.name;\r\n        setPayload({ ...payload, [e.target.name]: name });\r\n        setIndexClientConfirmedHivPositive(false); // Hide extra fields when date is selected\r\n      } else {\r\n        setIndexClientConfirmedHivPositive(true); // Show extra fields if date is not selected\r\n      }\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonRefferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      console.log(e.target.name, e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dateOfBirth: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({\r\n        ...payload,\r\n        dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\"),\r\n      });\r\n      payload.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.referralDate = payload.referralDate ? \"\" : \"This field is required.\";\r\n    temp.name = payload.name ? \"\" : \"This field is required.\";\r\n    temp.dateIndexClientConfirmedHivPositiveTestResult =\r\n      payload.dateIndexClientConfirmedHivPositiveTestResult\r\n        ? \"\"\r\n        : \"This is field is required\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.lgaId = payload.lgaId ? \"\" : \"This field is required.\";\r\n    temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    temp.sex = payload.sex ? \"\" : \"This field is required.\";\r\n    temp.dateOfBirth = payload.dateOfBirth ? \"\" : \"This field is required.\";\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.familyIndexClient = payload.familyIndexClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    temp.facilityName = payload.facilityName ? \"\" : \"This field is required.\";\r\n    if (payload.dateIndexClientConfirmedHiv === \"\") {\r\n      temp.reasonForIndexClientDateHivConfirmedNotSelected =\r\n        payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n    }\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postPayload = (payload) => {\r\n    axios\r\n      .post(`${baseUrl}hts-family-index-testing`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSaving(false);\r\n\r\n        toast.success(\"Family Indexform save succesfully!\");\r\n\r\n        if (props.history) {\r\n          handleItemClick(\"pns-history\", \"fit\");\r\n        } else {\r\n          loadOtherForm();\r\n        }\r\n\r\n        // history.push({pathName: \"/patient-history\",\r\n        //   state: {\r\n        //     patientObject: props.basicInfo,\r\n        //     patientObj: props.basicInfo,\r\n        //     clientCode: props.basicInfo.clientCode,\r\n        //   },}\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage, {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    payload.familyIndexRequestDto = familyIndexRequestDto;\r\n    payload.familyIndexRequestDto.familyTestingTrackerRequestDTO = familyTestingTrackerRequestDTO;\r\n    payload.state = stateInfo;\r\n    payload.lga = lgaInfo;\r\n    payload.facilityName = facilityInfo.currentOrganisationUnitName;\r\n    postPayload(payload);\r\n    //    handleItemClick(\"basic\", \"risk\");\r\n    // }\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setPayload({ ...payload, [inputName]: NumberValue });\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"alternatePhoneNumber\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}> Family Index Testing Form</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                SECTION A\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stateId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={stateInfo}\r\n                      required\r\n                      // onChange={loadLGA1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterState = states.filter((st) => {\r\n                            return Number(st.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedState(filterState);\r\n\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            stateId: filterState[0].id,\r\n                          }));\r\n                        }\r\n                        loadLGA(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select State</option>\r\n                      {states.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.stateTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.stateTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      LGA <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lgaId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      value={lgaInfo}\r\n                      // onChange={loadFacilities1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterlga = lgas.filter((lg) => {\r\n                            return Number(lg.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedLga(filterlga);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            lgaId: filterlga[0].id,\r\n                          }));\r\n                        }\r\n                        loadFacilities(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select LGA</option>\r\n                      {lgas.map((lga) => (\r\n                        <option key={lga.id} value={lga.id}>\r\n                          {lga.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.lgaId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.lgaId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Facility Name\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityName\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={facilityInfo.currentOrganisationUnitName}\r\n                      required\r\n                      onChange={(e) => {\r\n                        // setPayload(prevPayload => ({ ...prevPayload, facilityTransferTo: e.target.value }));\r\n                        if (e.target.value !== \"\") {\r\n                          const filterFacility = facilities.filter((fa) => {\r\n                            return Number(fa.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedFacility(filterFacility);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            facilityName: filterFacility[0].name,\r\n                          }));\r\n                        }\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      {/* <option>Select Facility</option>\r\n                                            {facilities.map((facility) => (\r\n                                                <option key={facility.id} value={facility.id}>\r\n                                                    {facility.name}\r\n                                                </option>\r\n                                            ))} */}\r\n                    </Input>\r\n                    {errors.facilityTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.facilityTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={payload.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.visitDate !== \"\" ? (\r\n                      <span className={classes.error}>{errors.visitDate}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"setting\"\r\n                      id=\"setting\"\r\n                      value={payload.setting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={true}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.setting !== \"\" ? (\r\n                      <span className={classes.error}>{errors.setting}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Family Index client{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"familyIndexClient\"\r\n                      id=\"familIndxClient\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.familyIndexClient}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      // disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {familyIndex &&\r\n                        familyIndex.map((x, index) => (\r\n                          <option key={x.id} value={x.id}>\r\n                            {x.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.familyIndexClient !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={payload.name}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Middle Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={payload.middleName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Last Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={payload.lastName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Index Client ID\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"indexClientId\"\r\n                      id=\"indexClientId\"\r\n                      value={payload.indexClientId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.indexClientId !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.indexClientId}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sex\"\r\n                      id=\"sex\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.sex}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                        genders.map((gender, index) => (\r\n                          <option key={gender.id} value={gender.id}>\r\n                            {gender.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.sex !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      name=\"dateOfBirth\"\r\n                      id=\"dateOfBirth\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      value={payload.dateOfBirth}\r\n                      onChange={handleDobChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateOfBirth !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateOfBirth}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      id=\"age\"\r\n                      value={payload.age}\r\n                      disabled={ageDisabled}\r\n                      onChange={handleAgeChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.age !== \"\" ? (\r\n                      <span className={classes.error}>{errors.age}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Marital Status <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"maritalStatus\"\r\n                      id=\"maritalStatus\"\r\n                      value={payload.maritalStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      // disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {maritalStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {/* {errors.setting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.setting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*<div className=\"form-group  col-md-4\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label>*/}\r\n                {/*      Phone Number <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*    </Label>*/}\r\n                {/*    <PhoneInput*/}\r\n                {/*        // disabled={true}*/}\r\n                {/*        containerStyle={{*/}\r\n                {/*          width: \"100%\",*/}\r\n                {/*          border: \"1px solid #014D88\",*/}\r\n                {/*        }}*/}\r\n                {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*        country={\"ng\"}*/}\r\n                {/*        placeholder=\"(234)7099999999\"*/}\r\n                {/*        maxLength={5}*/}\r\n                {/*        name=\"phoneNumber\"*/}\r\n                {/*        id=\"phoneNumber\"*/}\r\n                {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*        value={payload.phoneNumber}*/}\r\n                {/*        onChange={(e) => {*/}\r\n                {/*          checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n                {/*        }}*/}\r\n                {/*        disabled*/}\r\n                {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*    />*/}\r\n\r\n                {/*    {errors.phoneNumber !== \"\" ? (*/}\r\n                {/*        <span className={classes.error}>*/}\r\n                {/*        {errors.phoneNumber}*/}\r\n                {/*      </span>*/}\r\n                {/*    ) : (*/}\r\n                {/*        \"\"*/}\r\n                {/*    )}*/}\r\n                {/*    /!* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (*/}\r\n                {/*                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>*/}\r\n                {/*                                ) : \"\" } *!/*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                      }}\r\n                      value={payload.phoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*<div className=\"form-group  col-md-4\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label>Alternative Contact Number</Label>*/}\r\n                {/*    <PhoneInput*/}\r\n                {/*        // disabled={true}*/}\r\n                {/*        containerStyle={{*/}\r\n                {/*          width: \"100%\",*/}\r\n                {/*          border: \"1px solid #014D88\",*/}\r\n                {/*        }}*/}\r\n                {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*        country={\"ng\"}*/}\r\n                {/*        placeholder=\"(234)7099999999\"*/}\r\n                {/*        maxLength={5}*/}\r\n                {/*        name=\"alternatePhoneNumber\"*/}\r\n                {/*        id=\"alternatePhoneNumber\"*/}\r\n                {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*        value={payload.alternatePhoneNumber}*/}\r\n                {/*        onChange={(e) => {*/}\r\n                {/*          checkPhoneNumberBasic(e, \"alternatePhoneNumber\");*/}\r\n                {/*        }}*/}\r\n                {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*    />*/}\r\n\r\n                {/*    /!*{errors.phoneNumber !== \"\" ? (*!/*/}\r\n                {/*    /!*    <span className={classes.error}>*!/*/}\r\n                {/*    /!*        {errors.phoneNumber}*!/*/}\r\n                {/*    /!*    </span>*!/*/}\r\n                {/*    /!*) : (*!/*/}\r\n                {/*    /!*    \"\"*!/*/}\r\n                {/*    /!*)}*!/*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Alternative Contact Number\r\n                      {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"alternatePhoneNumber\"\r\n                      id=\"alternatePhoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"alternatePhoneNumber\");\r\n                      }}\r\n                      value={payload.alternatePhoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Descriptiven Residential Address{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={payload.address}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                      <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date Of Index Client's confrimed HIV-positive test results{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      id=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      value={\r\n                        payload.dateIndexClientConfirmedHivPositiveTestResult\r\n                      }\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateIndexClientConfirmedHivPositiveTestResult !==\r\n                    \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referralDate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {indexClientConfirmedHivPositive && (\r\n                  <div className=\"form-group col-md-4\">\r\n                    <Label>\r\n                      {\" \"}\r\n                      Reason for not selecting Index client Hiv confirmed test\r\n                      result Date ?{\" \"}\r\n                    </Label>\r\n                    <FormGroup>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        id=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Result not confirmed yet\">\r\n                          Result not confirmed yet\r\n                        </option>\r\n                        <option value=\"NA\">NA</option>\r\n                      </select>\r\n                      {errors.reasonForIndexClientDateHivConfirmedNotSelected !==\r\n                      \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {\r\n                            errors.reasonForIndexClientDateHivConfirmedNotSelected\r\n                          }\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                {/* )} */}\r\n\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>\r\n                    {\" \"}\r\n                    Recency Testing{\" \"}\r\n                    <span> (for newly tested HIV-positive only) </span>{\" \"}\r\n                  </Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recencyTesting\"\r\n                      id=\"reccencyTesting\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.recencyTesting}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Recent Infection\">Recent Infection</option>\r\n                      <option value=\"Long Term Infection\">\r\n                        {\" \"}\r\n                        Long Term Infection\r\n                      </option>\r\n                      <option value=\"Not Done\">Not Done</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/* if index client is hiv positive, and date is selected */}\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>Is client current on HIV treatment ?</Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"isClientCurrentlyOnHivTreatment\"\r\n                      id=\"isClientCurrentlyOnHivTreatment\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.isClientCurrentlyOnHivTreatment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {payload.isClientCurrentlyOnHivTreatment &&\r\n                  payload.isClientCurrentlyOnHivTreatment === \"Yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date of Treatment Initiation{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateClientEnrolledOnTreatment\"\r\n                          id=\"dateClientEnrolledOnTreatment\"\r\n                          value={payload.dateClientEnrolledOnTreatment}\r\n                          onChange={handleInputChange}\r\n                          min={\r\n                            payload.dateIndexClientConfirmedHivPositiveTestResult\r\n                          }\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          //   disabledg\r\n                        />\r\n                        {errors.treatmentDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                {payload.isClientCurrentlyOnHivTreatment &&\r\n                  payload.isClientCurrentlyOnHivTreatment === \"Yes\" && (\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>virally unsuppressed</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"virallyUnSuppressed\"\r\n                          id=\"virallyUnSuppressed\"\r\n                          onChange={handleInputChange}\r\n                          value={payload.virallyUnSuppressed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"willingToHaveChildrenTestedElseWhere\">\r\n                      Are you willing to have your children tested elsewhere by\r\n                      a health care worker?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"willingToHaveChildrenTestedElseWhere\"\r\n                      name=\"willingToHaveChildrenTestedElseWhere\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.willingToHaveChildrenTestedElseWhere}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <br />\r\n            </div>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                SECTION B: FAMILY INDEX\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"familyRelationship\">Family Relationship</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"familyRelationship\"\r\n                    name=\"familyRelationship\"\r\n                    onChange={handlefamilyIndexRequestDto}\r\n                    value={familyIndexRequestDto.familyRelationship}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {familyRelationship.map((value, index) => (\r\n                      <option key={index} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errorFamilyIndexDTO.familyRelationship && (\r\n                    <span className={classes.error}>\r\n                      {errorFamilyIndexDTO.familyRelationship}\r\n                    </span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {familyIndexRequestDto.familyRelationship ===\r\n                \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" && (\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"childNumber\">Child Number</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"childNumber\"\r\n                      name=\"childNumber\"\r\n                      onChange={handlefamilyIndexRequestDto}\r\n                      value={familyIndexRequestDto.childNumber}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">1st Child</option>\r\n                      <option value=\"2\">2nd Child</option>\r\n                      <option value=\"3\">3rd Child</option>\r\n                      <option value=\"4\">4th Child</option>\r\n                      <option value=\"5\">5th Child</option>\r\n                      <option value=\"6\">6th Child</option>\r\n                      <option value=\"7\">7th Child</option>\r\n                    </select>\r\n                    {errorFamilyIndexDTO.childNumber && (\r\n                      <span className={classes.error}>\r\n                        {errorFamilyIndexDTO.childNumber}\r\n                      </span>\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"familyIndexHivStatus\">\r\n                    Family Index HIV Status\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"familyIndexHivStatus\"\r\n                    name=\"familyIndexHivStatus\"\r\n                    onChange={handlefamilyIndexRequestDto}\r\n                    value={familyIndexRequestDto.familyIndexHivStatus}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {familyIndexHivStatus.map((value, index) => (\r\n                      <option key={index} value={value.code}>\r\n                        {index}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errorFamilyIndexDTO.familyIndexHivStatus && (\r\n                    <span className={classes.error}>\r\n                      {errorFamilyIndexDTO.familyIndexHivStatus}\r\n                    </span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {familyIndexRequestDto.familyIndexHivStatus &&\r\n                familyIndexRequestDto.familyIndexHivStatus ===\r\n                  \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\" &&\r\n                [\r\n                  \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n                  \"FAMILY_RELATIONSHIP_FATHER\",\r\n                  \"FAMILY_RELATIONSHIP_MOTHER\",\r\n                  \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n                ].includes(familyIndexRequestDto.familyRelationship) && (\r\n                  <div className=\"form-group col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"uan\">Unique Art No (UAN)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"uan\"\r\n                        type=\"text\"\r\n                        name=\"uan\"\r\n                        value={familyIndexRequestDto.uan}\r\n                        onChange={handlefamilyIndexRequestDto}\r\n                        disabled={\r\n                          familyIndexRequestDto.familyIndexHivStatus !==\r\n                          \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\"\r\n                        }\r\n                      />\r\n                      {errors.uan && (\r\n                        <span className={classes.error}>{errors.uan}</span>\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              <div className=\"form-group col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"motherDead\">Mother Dead?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"motherDead\"\r\n                    name=\"motherDead\"\r\n                    onChange={handlefamilyIndexRequestDto}\r\n                    value={familyIndexRequestDto.motherDead}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </select>\r\n                  {errorFamilyIndexDTO.motherDead && (\r\n                    <span className={classes.error}>\r\n                      {errorFamilyIndexDTO.motherDead}\r\n                    </span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {familyIndexRequestDto.motherDead === \"Yes\" && (\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"yearMotherDied\">Year Mother Died</Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      id=\"yearMotherDied\"\r\n                      type=\"date\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      name=\"yearMotherDead\"\r\n                      value={familyIndexRequestDto.yearMotherDead}\r\n                      onChange={handlefamilyIndexRequestDto}\r\n                    />\r\n                    {errorFamilyIndexDTO.yearMotherDead && (\r\n                      <span className={classes.error}>\r\n                        {errorFamilyIndexDTO.yearMotherDead}\r\n                      </span>\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/* {addIndexTracker && (\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <p style={{ color: \"red\" }}>Fill input in section B</p>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"black\"\r\n                  onClick={handleSubmitfamilyIndexRequestDto}\r\n                  size=\"small\"\r\n                  style={{ marginTop: 35 }}\r\n                >\r\n                  <Icon name=\"plus\" /> Add\r\n                </LabelSui>\r\n              </div> */}\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                <Button\r\n                  content=\"Add\"\r\n                  type=\"submit\"\r\n                  icon=\"right plus\"\r\n                  labelPosition=\"left\"\r\n                  style={{ backgroundColor: \"#000\", color: \"white\" }}\r\n                  onClick={handleSubmitfamilyIndexRequestDto}\r\n                  //   disabled={saving}\r\n                />\r\n              </div> */}\r\n              {/* {console.log(\r\n                \"arrayFamilyIndexRequestDto\",\r\n                arrayFamilyIndexRequestDto\r\n              )} */}\r\n\r\n              {/* {arrayFamilyIndexRequestDto &&\r\n                arrayFamilyIndexRequestDto.length > 0 && (\r\n                  <List className=\"mb-5\">\r\n                    <Table striped responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Family Relationship</th>\r\n                          <th>Family Index HIV Status</th>\r\n                          <th>Mother Dead</th>\r\n\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {arrayFamilyIndexRequestDto.length > 0 &&\r\n                          arrayFamilyIndexRequestDto.map((each, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>\r\n                                  {convertCodeToDisplay(\r\n                                    \"familyRelationship\",\r\n                                    each.familyRelationship\r\n                                  )}\r\n                                </td>\r\n                                <td>\r\n                                  {convertCodeToDisplay(\r\n                                    \"familyIndexHivStatus\",\r\n                                    each.familyIndexHivStatus\r\n                                  )}\r\n                                </td>\r\n                                <td>{each.motherDead}</td>\r\n                                <td>\r\n                                  {\" \"}\r\n                                  <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={() => removeFamilyIndexRow(index)}\r\n                                  >\r\n                                    <DeleteIcon fontSize=\"inherit\" />\r\n                                  </IconButton>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </List>\r\n                )} */}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                SECTION C: FAMILY INDEX TRACKER\r\n              </div>\r\n\r\n              {/* SECTION C INPUT FILEDS  */}\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"positionOfChildEnumerated\">\r\n                      Position of the Child Enumerator\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      id=\"positionOfChildEnumerated\"\r\n                      type=\"number\"\r\n                      name=\"positionOfChildEnumerated\"\r\n                      value={\r\n                        familyTestingTrackerRequestDTO?.positionOfChildEnumerated\r\n                      }\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"sexTrackeer\">Sex </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"trackerSex\"\r\n                      name=\"trackerSex\"\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      value={familyTestingTrackerRequestDTO?.trackerSex}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {genders.map((value, index) => (\r\n                        <option key={index} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"sex\">Age</Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      id=\"trackerAge\"\r\n                      type=\"number\"\r\n                      name=\"trackerAge\"\r\n                      value={familyTestingTrackerRequestDTO?.trackerAge}\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"followUpAppointmentLocation\">\r\n                      Follow Up Appointment Location\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"followUpAppointmentLocation\"\r\n                      name=\"followUpAppointmentLocation\"\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      value={\r\n                        familyTestingTrackerRequestDTO?.followUpAppointmentLocation\r\n                      }\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {followUpAppointmentLocation.map((value, index) => (\r\n                        <option key={index} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Schedule Visit Date\r\n                      {/* <span style={{ color: \"red\" }}> *</span>{\" \"} */}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"scheduleVisitDate\"\r\n                      id=\"scheduleVisitDate\"\r\n                      value={familyTestingTrackerRequestDTO?.scheduleVisitDate}\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {/* {errors.referralDate !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.referralDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Date visited</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateVisit\"\r\n                      id=\"dateVisit\"\r\n                      value={familyTestingTrackerRequestDTO?.dateVisit}\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errorFamilyIndexTracker.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errorFamilyIndexTracker.dateVisit}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Attempts\r\n                      {/* <span style={{ color: \"red\" }}> *</span>{\" \"} */}\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"attempt\"\r\n                      id=\"attempt\"\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      value={familyTestingTrackerRequestDTO?.attempt}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {indexVisitAttempt.map((value, index) => (\r\n                        <option key={index} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>Known HIV Positive ?</Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"knownHivPositive\"\r\n                      id=\"knownHivPositive\"\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      value={familyTestingTrackerRequestDTO?.knownHivPositive}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                {familyTestingTrackerRequestDTO.knownHivPositive &&\r\n                  familyTestingTrackerRequestDTO.knownHivPositive === \"Yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Date Tested</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateTested\"\r\n                          id=\"dateTested\"\r\n                          value={familyTestingTrackerRequestDTO?.dateTested}\r\n                          onChange={handlefamilyTestingTrackerRequestDTO}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                        {errors.referralDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                {familyTestingTrackerRequestDTO?.knownHivPositive &&\r\n                  familyTestingTrackerRequestDTO?.knownHivPositive ===\r\n                    \"Yes\" && (\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>HIV Test Result </Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hiveTestResult\"\r\n                          id=\"hiveTestResult\"\r\n                          onChange={handlefamilyTestingTrackerRequestDTO}\r\n                          value={familyTestingTrackerRequestDTO.hiveTestResult}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Tested Positive\">\r\n                            Tested Positive\r\n                          </option>\r\n                          <option value=\"Teste Negative\">\r\n                            Tested Negative\r\n                          </option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                {familyTestingTrackerRequestDTO?.trackerAge < 21 && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Date Enrolled In Ovc</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateEnrolledInOVC\"\r\n                        id=\"dateEnrolledInOVC\"\r\n                        value={\r\n                          familyTestingTrackerRequestDTO?.dateEnrolledInOVC\r\n                        }\r\n                        onChange={handlefamilyTestingTrackerRequestDTO}\r\n                        min=\"1929-12-31\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        // disabled\r\n                      />\r\n                      {errors.referralDate !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.referralDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Date Enrolled On ART</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateEnrolledOnArt\"\r\n                      id=\"dateEnrolledOnArt\"\r\n                      value={familyTestingTrackerRequestDTO?.dateEnrolledOnArt}\r\n                      onChange={handlefamilyTestingTrackerRequestDTO}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.referralDate !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referralDate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* {addIndexTracker2 && (\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <p style={{ color: \"red\" }}>\r\n                      Fill section C; Index Tracker\r\n                    </p>\r\n                  </div>\r\n                )}{\" \"}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"black\"\r\n                    onClick={handleSubmitfamilyTestingTrackerRequestDTO}\r\n                    size=\"small\"\r\n                    style={{ marginTop: 35 }}\r\n                  >\r\n                    <Icon name=\"plus\" /> Add\r\n                  </LabelSui>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n\r\n            {/* {arrayFamilyTestingTrackerRequestDTO.length > 0 && (\r\n              <List>\r\n                <Table striped responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Position of the child</th>\r\n                      <th>Sex</th>\r\n                      <th>Age</th>\r\n\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {arrayFamilyTestingTrackerRequestDTO.map((each, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{each.positionOfChildEnumerated}</td>\r\n                          <td>{each.trackerSex}</td>\r\n                          <td>{each.trackerAge}</td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              color=\"error\"\r\n                              onClick={() => removeFamilyTrackerRow(index)}\r\n                            >\r\n                              <DeleteIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </List>\r\n            )} */}\r\n\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <Button\r\n                  content=\"Done\"\r\n                  type=\"Done\"\r\n                  icon=\"right arrowe\"\r\n                  labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={() => {\r\n                    history.push(\"/\");\r\n                  }}\r\n                  disabled={saving}\r\n                />\r\n                <Button\r\n                  content=\"Save\"\r\n                  type=\"submit\"\r\n                  icon=\"right arrow\"\r\n                  labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n        {/* <CardBody>\r\n          <ServicesProvided />\r\n        </CardBody> */}\r\n\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Would you like to fill the Partner Service Form?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => loadNextForm()}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => handleDone()}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Skip\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyIndexTestingForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["678","679","680","681","682","683","684","685","686","687","688","689","690"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  const classes = useStyles();\r\n  //const history = useHistory();\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [isPMTCTModality, setIsPMTCTModality] = useState(false);\r\n  const [showRiskAssessment, setShowRiskAssessment] = useState(false);\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n  const [nextForm, setNextForm] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n  const [objValues, setObjValues] = useState({\r\n    age: \"\",\r\n    dob: \"\",\r\n    code: \"\",\r\n    visitDate: \"\", //\r\n    dateOfBirth: null,\r\n    dateOfRegistration: null,\r\n    isDateOfBirthEstimated: \"\",\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    careProvider: \"\",\r\n    personId: \"\",\r\n    id: \"\",\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // everHadSexualIntercourse:\"\",\r\n    // bloodtransInlastThreeMonths:\"\",\r\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n    // unprotectedVaginalSex:\"\",\r\n    // uprotectedAnalSex:\"\",\r\n    // stiLastThreeMonths:\"\",\r\n    // sexUnderInfluence :\"\",\r\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n    // experiencePain:\"\",\r\n    // haveSexWithoutCondom:\"\",\r\n    // abuseDrug:\"\",\r\n    // bloodTransfusion:\"\",\r\n    // consistentWeightFeverNightCough:\"\",\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    KP();\r\n    TargetGroupSetup();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n\r\n\r\nif (objValues.age !== \"\") {\r\n      props.setPatientObjAge(objValues.age);\r\n    }\r\n    if (props.patientObj.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.patientObj.riskStratificationResponseDto);\r\n      SettingModality(\r\n        props.patientObj.riskStratificationResponseDto.testingSetting\r\n      );\r\n      setRiskAssessment(\r\n        props.patientObj.riskStratificationResponseDto.riskAssessment\r\n      );\r\n    }\r\n  }, [objValues.age]);\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTargetGroupValue(response.data);\r\n\r\n        props.setOrganizationInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  \r\n  //Set HTS menu registration\r\n  const getMenuLogic = () => {\r\n    props.setHideOtherMenu(false);\r\n  };\r\n\r\n  const checkPMTCTModality = (modality) => {\r\n    console.log(\"modality\", modality);\r\n    if (\r\n      modality === \"TEST_SETTING_CT_PMTCT\" ||\r\n      modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\" ||\r\n      modality === \"PMTCT (Post ANC1: Pregnancy/L&D/BF)\" ||\r\n      modality === \"Post ANC1 Pregnant/L&D ? 72hrs\" ||\r\n      modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n      modality === \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n      modality ===\r\n        \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D ? 72hrs\"\r\n    ) {\r\n      console.log(\"it is PMTCT MODALITY \");\r\n      setIsPMTCTModality(true);\r\n      return true;\r\n    } else {\r\n      console.log(\"it is NOT pmtct modality \");\r\n\r\n      setIsPMTCTModality(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n\r\n      let ans = checkPMTCTModality(e.target.value);\r\n\r\n      console.log(\"answerrrr\", ans);\r\n      displayRiskAssessment(\r\n        riskAssessment.lastHivTestBasedOnRequest,\r\n        objValues.age,\r\n        ans\r\n      );\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // display risk assement function\r\n\r\n  const displayRiskAssessment = (lastVisit, age, isPMTCTModalityValue) => {\r\n    let SecAge = age !== \"\" ? age : 0;\r\n    let ans;\r\n    console.log(\r\n      \"variable lastVisit\",\r\n      lastVisit,\r\n      \"objValues.age\",\r\n      objValues.age,\r\n      \"isPMTCTModality\",\r\n      isPMTCTModalityValue,\r\n      \"SecAge\",\r\n      SecAge\r\n    );\r\n    // for the section to show\r\n    //  Conditions are : age > 15, riskAssessment.lastHivTestBasedOnRequest === \"false\" and PMTCT Modality === true\r\n    if (lastVisit === \"false\") {\r\n      if (SecAge > 15 && isPMTCTModalityValue) {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      } else if (SecAge > 15) {\r\n        setShowRiskAssessment(true);\r\n        ans = true;\r\n      } else {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      }\r\n    } else {\r\n      setShowRiskAssessment(false);\r\n      ans = false;\r\n    }\r\n    console.log(\"This is the answer\", ans);\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      objValues.age = age_now;\r\n      displayRiskAssessment(\r\n        riskAssessment.lastHivTestBasedOnRequest,\r\n        age_now,\r\n        isPMTCTModality\r\n      );\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    displayRiskAssessment(\r\n      riskAssessment.lastHivTestBasedOnRequest,\r\n      e.target.value,\r\n      isPMTCTModality\r\n    );\r\n\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      // if (e.target.value !== \"\" && e.target.value <= 15) {\r\n      //   props.setHideOtherMenu(false);\r\n      // } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n      //   props.setHideOtherMenu(true);\r\n      // } else {\r\n      //   props.setHideOtherMenu(true);\r\n      // }\r\n\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setObjValues({ ...objValues, age: e.target.value });\r\n  };\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.visitDate = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    temp.dob = objValues.dob ? \"\" : \"This field is required.\";\r\n    temp.age = objValues.age ? \"\" : \"This field is required.\";\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    objValues.age > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    //Risk Assement section\r\n    if (\r\n      objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      showRiskAssessment\r\n    ) {\r\n      temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n      riskAssessment.lastHivTestDone !== \"\" &&\r\n        riskAssessment.lastHivTestDone !== \"Never\" &&\r\n        (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n\r\n      temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    }\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    console.log(e.target.name, e.target.value);\r\n    displayRiskAssessment(e.target.value, objValues.age, isPMTCTModality);\r\n\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // get next form\r\n    let newModality = isPMTCTModality ? \"skip\" : \"fill\";\r\n\r\n  let latestForm =  getNextForm(\"Risk_Stratification\", objValues.age, newModality, \"unknown\")\r\n \r\n\r\n    getMenuLogic(objValues);\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    props.patientObj.personResponseDto.dob = objValues.dob;\r\n    props.patientObj.personResponseDto.dateOfBirth = objValues.dob;\r\n    props.patientObj.personResponseDto.isDateOfBirthEstimated =\r\n      objValues.isDateOfBirthEstimated;\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n    objValues.riskAssessment = riskAssessment;\r\n    //Check if riskStratificationResponseDto is null or empty then call the update method\r\n    if (\r\n      props.patientObj.riskStratificationResponseDto &&\r\n      props.patientObj.riskStratificationResponseDto !== null &&\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      if (validate()) {\r\n        setSaving(true);\r\n\r\n        props.setHideOtherMenu(false);\r\n        axios\r\n          .put(\r\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.riskStratificationResponseDto = response.data;\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      //if riskStratificationResponseDto is null then make a new call to save the record\r\n      if (\r\n        (riskCount > 0 || riskCountQuestion.length > 0) &&\r\n        objValues.age > 15\r\n      ) {\r\n        if (validate()) {\r\n          setSaving(true);\r\n\r\n          props.setHideOtherMenu(false);\r\n          axios\r\n            .post(`${baseUrl}risk-stratification`, objValues, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              setSaving(false);\r\n              props.patientObj.riskStratificationResponseDto = response.data;\r\n              objValues.code = response.data.code;\r\n              props.setExtra(objValues);\r\n              console.log(\"nextForm\", nextForm);\r\n\r\n              handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n              //toast.success(\"Risk stratification save succesfully!\");\r\n            })\r\n            .catch((error) => {\r\n              setSaving(false);\r\n              if (error.response && error.response.data) {\r\n                let errorMessage =\r\n                  error.response.data.apierror &&\r\n                  error.response.data.apierror.message !== \"\"\r\n                    ? error.response.data.apierror.message\r\n                    : \"Something went wrong, please try again\";\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(\"Something went wrong. Please try again...\", {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          toast.error(\"All fields are required\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      } else if (objValues.age < 15) {\r\n        if (validate()) {\r\n          setSaving(true);\r\n          axios\r\n            .post(`${baseUrl}risk-stratification`, objValues, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              setSaving(false);\r\n              props.patientObj.riskStratificationResponseDto = response.data;\r\n              objValues.code = response.data.code;\r\n              props.setExtra(objValues);\r\n              handleItemClick(latestForm[0], latestForm[1]);\r\n              //toast.success(\"Risk stratification save succesfully!\");\r\n            })\r\n            .catch((error) => {\r\n              setSaving(false);\r\n              if (error.response && error.response.data) {\r\n                let errorMessage =\r\n                  error.response.data.apierror &&\r\n                  error.response.data.apierror.message !== \"\"\r\n                    ? error.response.data.apierror.message\r\n                    : \"Something went wrong, please try again\";\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(\"Something went wrong. Please try again...\", {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          toast.error(\"All fields are required\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      } else {\r\n        props.setHideOtherMenu(false);\r\n        props.setExtra(objValues);\r\n        if (validate()) {\r\n          setSaving(true);\r\n          axios\r\n            .post(`${baseUrl}risk-stratification`, objValues, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              setSaving(false);\r\n              props.patientObj.riskStratificationResponseDto = response.data;\r\n              objValues.code = response.data.code;\r\n              props.setExtra(objValues);\r\n              toast.success(\"Risk stratification save succesfully!\");\r\n              handleItemClick(latestForm[0], latestForm[1]);\r\n            })\r\n            .catch((error) => {\r\n              setSaving(false);\r\n              if (error.response && error.response.data) {\r\n                let errorMessage =\r\n                  error.response.data.apierror &&\r\n                  error.response.data.apierror.message !== \"\"\r\n                    ? error.response.data.apierror.message\r\n                    : \"Something went wrong, please try again\";\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(\"Something went wrong. Please try again...\", {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          toast.error(\"All fields are required\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                    {errors.visitDate !== \"\" ? (\r\n                      <span className={classes.error}>{errors.visitDate}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"} key={0}>\r\n                        {\" \"}\r\n                        Select\r\n                      </option>\r\n                      {objValues.communityEntryPoint ===\r\n                        \"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" &&\r\n                      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\"\r\n                        ? enrollSetting.map((value) =>\r\n                            value.code === \"TEST_SETTING_CPMTCT\" ? (\r\n                              <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ) : (\r\n                              <></>\r\n                            )\r\n                          )\r\n                        : enrollSetting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.code} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Group <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {kP.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-2 col-md-2\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Of Birth <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <div className=\"radio\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"Actual\"\r\n                        name=\"dateOfBirth\"\r\n                        defaultChecked\r\n                        onChange={(e) => handleDateOfBirthChange(e)}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />{\" \"}\r\n                      Actual\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"radio\">\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"Estimated\"\r\n                        name=\"dateOfBirth\"\r\n                        onChange={(e) => handleDateOfBirthChange(e)}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />{\" \"}\r\n                      Estimated\r\n                    </label>\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    id=\"dob\"\r\n                    min=\"1929-12-31\"\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    value={objValues.dob}\r\n                    onChange={handleDobChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                  {errors.dob !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dob}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Age <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"age\"\r\n                    value={objValues.age}\r\n                    disabled={ageDisabled}\r\n                    onChange={handleAgeChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  />\r\n                  {errors.age !== \"\" ? (\r\n                    <span className={classes.error}>{errors.age}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Is this HIV test based on a Clinician/Doctor/Health Care\r\n                    Provider's request ?{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lastHivTestBasedOnRequest\"\r\n                    id=\"lastHivTestBasedOnRequest\"\r\n                    value={riskAssessment.lastHivTestBasedOnRequest}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.lastHivTestBasedOnRequest}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n\r\n              {showRiskAssessment && (\r\n                <>\r\n                  <div\r\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    HIV Risk Assessment (Last 3 months)\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        When was your last HIV test done?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestDone\"\r\n                        id=\"lastHivTestDone\"\r\n                        value={riskAssessment.lastHivTestDone}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                        <option value=\"Never\">Never</option>\r\n                      </select>\r\n                      {errors.lastHivTestDone !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestDone}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {riskAssessment.lastHivTestDone !== \"\" &&\r\n                    riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            What was the result?{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"whatWasTheResult\"\r\n                            id=\"whatWasTheResult\"\r\n                            value={riskAssessment.whatWasTheResult}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"Positive\">Positive</option>\r\n                            <option value=\"Negative\">Negative</option>\r\n                          </select>\r\n                          {errors.whatWasTheResult !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.whatWasTheResult}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you had anal or vaginal\r\n                        or oral sex without a condom with someone who was HIV\r\n                        positive or unaware of their HIV status?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestVaginalOral\"\r\n                        id=\"lastHivTestVaginalOral\"\r\n                        value={riskAssessment.lastHivTestVaginalOral}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestVaginalOral}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you had a blood or blood\r\n                        product transfusion?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestBloodTransfusion\"\r\n                        id=\"lastHivTestBloodTransfusion\"\r\n                        value={riskAssessment.lastHivTestBloodTransfusion}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestBloodTransfusion}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you experienced painful\r\n                        urination, lower abdominal pain, vaginal or penile\r\n                        discharge, pain during sexual intercourse, thick,\r\n                        cloudy, or foul smelling discharge and/or small bumps or\r\n                        blisters near the mouth, penis, vagina, or anal areas?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestPainfulUrination\"\r\n                        id=\"lastHivTestPainfulUrination\"\r\n                        value={riskAssessment.lastHivTestPainfulUrination}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestPainfulUrination}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you been diagnosed with TB or currently have any of\r\n                        the following symptoms : cough, fever, weight loss,\r\n                        night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"diagnosedWithTb\"\r\n                        id=\"diagnosedWithTb\"\r\n                        value={riskAssessment.diagnosedWithTb}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.diagnosedWithTb !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.diagnosedWithTb}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you ever injected drugs,\r\n                        shared needles or other sharp objects with someone known\r\n                        to be HIV positive or who you didn’t know their HIV\r\n                        status? <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestInjectedDrugs\"\r\n                        //id=\"sexUnderInfluence\"\r\n                        value={riskAssessment.lastHivTestInjectedDrugs}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestInjectedDrugs}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you had anal, oral or\r\n                        vaginal sex in exchange for money or other benefits?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestHadAnal\"\r\n                        id=\"lastHivTestHadAnal\"\r\n                        value={riskAssessment.lastHivTestHadAnal}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestHadAnal !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestHadAnal}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Since your last HIV test, have you been forced to have\r\n                        sex? <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastHivTestForceToHaveSex\"\r\n                        value={riskAssessment.lastHivTestForceToHaveSex}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.lastHivTestForceToHaveSex}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <br />\r\n                </>\r\n              )}\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (objValues.age > 14 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save\"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["691","692","693","694","695","696","697","698","699","700"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["701","702"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { useHistory, } from \"react-router-dom\";\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const history = useHistory();\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleDone =()=>{\n      history.push('/');\n    }\n    const handleItemClick =(page, completedMenu)=>{        \n      if(props.completed.includes(completedMenu)) {\n      }else{\n          props.setCompleted([...props.completed, completedMenu])\n      }\n      props.handleItemClick(page)\n  }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { getNextForm } from \"../../../../../utility\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PnsForm = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n  const [setting, setSetting] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setIsClientCurrentlyOnHiv] = useState(true);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [roleProvider, setRoleProvider] = useState([]);\r\n  const [facilityInfo, setFacilityInfo] = useState(\r\n    props?.organizationInfo.currentOrganisationUnitName\r\n  );\r\n\r\n  let history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\r\n  );\r\n  const [nextForm, setNextForm] = useState([]);\r\n\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n  const [partnerId, setPartnerId] = useState(\"\");\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const toggle = () => setOpen(!open);\r\n\r\n  let temp = { ...errors };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n  const [contactTracing, setContactTracing] = useState({\r\n    partnerPhoneNumber: \"\",\r\n    numberOfAttempt: \"\",\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    acceptedHts: \"\",\r\n    reasonForDecline: \"\",\r\n    otherReasonForDecline: \"\",\r\n    offeredPns: \"\",\r\n    acceptedPns: \"\",\r\n    address: \"\", //\r\n    contactTracing: {\r\n      partnerPhoneNumber: \"\",\r\n      numberOfAttempt: \"\",\r\n    },\r\n    dateEnrollmentOnART: \"\",\r\n    datePartnerTested: \"\",\r\n    dob: props?.basicInfo?.personResponseDto?.dateOfBirth,\r\n    facilityId: props?.organizationInfo?.currentOrganisationUnitId,\r\n    phoneNumber:\r\n      props?.basicInfo?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n    alternatePhoneNumber: \"\",\r\n    partnerId: \"\",\r\n    firstName: props?.basicInfo?.personResponseDto?.firstName,\r\n    hivTestResult: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    indexClientId: props?.basicInfo?.indexClientCode,\r\n    intermediatePartnerViolence: {\r\n      DeprivedOfBasicNeedsEmotional: \"\",\r\n      DeniedBasicNecessitiesForHealthcareEmotional: \"\",\r\n      ForcedSexualActsSexual: \"\",\r\n    },\r\n    knownHivPositive: \"\",\r\n    lastName: props?.basicInfo?.personResponseDto?.surname,\r\n    middleName: props?.basicInfo?.personResponseDto?.otherName,\r\n    notificationMethod: \"\",\r\n    relationshipToIndexClient: \"\",\r\n    sex: props?.basicInfo?.personResponseDto?.gender?.id,\r\n    htsClientInformation: {\r\n      testingSetting: \"\",\r\n      providerNameCompletingForm: \"\",\r\n      providerRoleCompletingForm: \"\",\r\n      maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus?.id,\r\n      descriptiveResidentialAddress:\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.city,\r\n      dateIndexClientConfirmedHiv: \"\",\r\n      isClientCurrentlyOnHiv: \"\",\r\n      DateOfTreatmentInitiation: \"\",\r\n      recencyTesting: \"\",\r\n      artEnrollmentNumber: \"\",\r\n      facilityOfEnrollment: \"\",\r\n      numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n      partnerName: \"\",\r\n      partnerSex: \"\",\r\n      partnerAge: \"\",\r\n      partnerAddress: \"\",\r\n      relativeToIndexClient: \"\",\r\n      contactTracingType: \"\",\r\n      freedomDenial: \"\",\r\n      threatenToHurt: \"\",\r\n      sexuallyUncomfortable: \"\",\r\n\r\n      //\r\n\r\n      partnerNotification: \"\",\r\n      viralllyUnsppressed: \"\",\r\n\r\n      // numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    },\r\n  });\r\n\r\n  const loadNextForm = (row) => {\r\n    handleItemClick(nextForm[0], nextForm[1]);\r\n\r\n    toggle();\r\n  };\r\n  const [htsClientInformation, sethtsClientInformation] = useState({\r\n    testingSetting: props.patientObj.testingSetting,\r\n    providerNameCompletingForm: \"\",\r\n    providerRoleCompletingForm: \"\",\r\n    maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus?.id,\r\n    descriptiveResidentialAddress:\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.city,\r\n    dateIndexClientConfirmedHiv: \"\",\r\n    isClientCurrentlyOnHiv: \"\",\r\n    DateOfTreatmentInitiation: \"\",\r\n    recencyTesting: \"\",\r\n    artEnrollmentNumber: \"\",\r\n    facilityOfEnrollment: \"\",\r\n    numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    partnerName: \"\",\r\n    partnerSex: \"\",\r\n    partnerAge: \"\",\r\n    partnerAddress: \"\",\r\n    relativeToIndexClient: \"\",\r\n    contactTracingType: \"\",\r\n    freedomDenial: \"\",\r\n    threatenToHurt: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n\r\n    //\r\n\r\n    partnerNotification: \"\",\r\n    viralllyUnsppressed: \"\",\r\n\r\n    // numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n  });\r\n\r\n  const loadOtherForm = (row) => {\r\n    toggle();\r\n  };\r\n  const getPNSInfo = (id) => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/${id}/hts-client`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const getPartnerId = (id) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/get-partner-id?htsClientId=${\r\n          props.patientObj.id ? props.patientObj.id : props.basicInfo.id\r\n        }&clientCode=${\r\n          props?.patientObj?.clientCode\r\n            ? props?.patientObj?.clientCode\r\n            : props?.basicInfo?.clientCode\r\n        }`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPartnerId(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilityInfo(response.data.currentOrganisationUnitName);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    Sex();\r\n    getStates();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n    getMaritalStatus();\r\n    PROVIDER_ROLE();\r\n    getPartnerId();\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n\r\n      setObjValues({\r\n        ...objValues,\r\n        firstName: props.patientObj.personResponseDto?.firstName,\r\n        middleName: props?.patientObj?.personResponseDto?.otherName,\r\n        lastName: props?.patientObj?.personResponseDto?.surname,\r\n        sex: props?.patientObj?.personResponseDto?.gender?.id,\r\n        dob: props?.patientObj?.personResponseDto?.dateOfBirth,\r\n        phoneNumber:\r\n          props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n            ?.value,\r\n      });\r\n\r\n      sethtsClientInformation({\r\n        ...htsClientInformation,\r\n        maritalStatus: props?.patientObj?.personResponseDto?.maritalStatus?.id,\r\n        descriptiveResidentialAddress:\r\n          props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n      });\r\n\r\n      // phoneNumber:\r\n\r\n      //\r\n      //\r\n      //\r\n      //\r\n      //\r\n      //\r\n      //\r\n      // })\r\n    }\r\n\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      getProvincesId(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  useEffect(() => {\r\n    loadFamilyIndexSetting();\r\n  }, []);\r\n\r\n  const handleHTSClientInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (\r\n      e.target.name === \"partnerAge\" ||\r\n      e.target.name === \"numberOfAttempt\" ||\r\n      e.target.name === \"numberOfPartnerIdentifiedFromClientIndex\"\r\n    ) {\r\n      if (e.target.value > -1) {\r\n        sethtsClientInformation({\r\n          ...htsClientInformation,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      sethtsClientInformation({\r\n        ...htsClientInformation,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const PROVIDER_ROLE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PROVIDER_ROLE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setRoleProvider(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setErrors({ ...temp, stateId: \"\" });\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    // setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleDone = () => {\r\n    toggle();\r\n    history.push(\"/\");\r\n  };\r\n  console.log(props); //Get all recorcd by htsClientId\r\n  const getAllRecordByHTSClientId = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/{id}/hts-client`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get view pns info\r\n  const viewPnsInfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/{id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n\r\n  const handleInputContactChanges = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"numberOfAttempt\") {\r\n      if (e.target.value > -1) {\r\n        setContactTracing({\r\n          ...contactTracing,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      setContactTracing({ ...contactTracing, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (\r\n      e.target.name === \"providerNameCompletingForm\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"clientName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    } else if (e.target.name === \"offeredPns\") {\r\n      setObjValues({\r\n        ...objValues,\r\n        reasonForDecline: \"\",\r\n        [e.target.name]: e.target.value,\r\n        otherReasonForDecline: \"\",\r\n        acceptedPns: \"\",\r\n      });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n  };\r\n\r\n  console.log(objValues);\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    if (inputName === \"partnerPhoneNumber\") {\r\n      setContactTracing({ ...contactTracing, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"phoneNumber\") {\r\n      setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"alternatePhoneNumber\") {\r\n      setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    }\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    // HTS FORM VALIDATION\r\n    temp.offeredPns = objValues.offeredPns ? \"\" : \"This field is required.\";\r\n\r\n    if (objValues.offeredPns === \"No\") {\r\n      temp.reasonForDecline = objValues.reasonForDecline\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n      temp.otherReasonForDecline =\r\n        objValues.reasonForDecline === \"others\" &&\r\n        objValues.otherReasonForDecline\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n    }\r\n    // temp.lga = objValues.lga ? \"\" : \"This field is required.\";\r\n    // temp.facilityId = objValues.facilityId ? \"\" : \"This field is required.\";\r\n    // temp.testingSetting = htsClientInformation.testingSetting\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.providerRoleCompletingForm =\r\n    //   htsClientInformation.providerRoleCompletingForm\r\n    //     ? \"\"\r\n    //     : \"This field is required.\";\r\n    // temp.relativeToIndexClient = htsClientInformation.relativeToIndexClient\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   objValues.htsClientInformation = htsClientInformation;\r\n  //   objValues.contactTracing = contactTracing;\r\n\r\n  //   console.log(objValues);\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let age = calculate_age(\r\n      props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        : props?.patientObj?.personResponseDto?.dateOfBirth\r\n    );\r\n\r\n    let hivStatus = props?.patientObj?.hivTestResult;\r\n    let latestForm = getNextForm(\"Nigeria_PNS_Form\", age, \"\", hivStatus);\r\n\r\n    setNextForm(latestForm);\r\n\r\n    objValues.htsClientInformation = htsClientInformation;\r\n    objValues.contactTracing = contactTracing;\r\n    objValues.partnerId = partnerId;\r\n    // if (validate()) {\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n      axios\r\n        .post(`${baseUrl}hts-personal-notification-service`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n\r\n          if (props?.addNewForm === false) {\r\n            handleItemClick(\"pns-history\", \"pns\");\r\n          } else {\r\n            loadOtherForm();\r\n          }\r\n          if (\r\n            objValues.offeredPns !== \"No\" &&\r\n            objValues.acceptedPns !== \"No\"\r\n            // objValues.elicited !== \"No\"\r\n          ) {\r\n          }\r\n          //handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Partner Notification Services\r\n            {/*<Button*/}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    color=\"primary\"*/}\r\n            {/*    className=\" float-end  mr-2 mt-2\"*/}\r\n            {/*    onClick={() => handleItemClickPage(\"list\")}*/}\r\n            {/*//startIcon={<FaUserPlus size=\"10\"/>}*/}\r\n            {/*>*/}\r\n            {/*    <span style={{ textTransform: \"capitalize\" }}>*/}\r\n            {/*        {\" \"}*/}\r\n            {/*        Back To Client List*/}\r\n            {/*    </span>*/}\r\n            {/*</Button>*/}\r\n          </h2>\r\n\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered PNS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredPns\"\r\n                    id=\"offeredPns\"\r\n                    value={objValues.offeredPns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredPns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredPns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {/* */}\r\n              {objValues.offeredPns !== \"\" && objValues.offeredPns !== \"No\" && (\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted PNS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedPns\"\r\n                      id=\"acceptedPns\"\r\n                      value={objValues.acceptedPns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/* otherReasonForDecline */}\r\n              {objValues.offeredPns.toLowerCase() === \"no\" && (\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Reason for decline{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"select\"\r\n                      name=\"reasonForDecline\"\r\n                      id=\"reasonForDecline \"\r\n                      value={objValues.reasonForDecline}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n\r\n                      <option key={1} value={\"others\"}>\r\n                        Others\r\n                      </option>\r\n                    </select>\r\n                    {errors.reasonForDecline !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}{\" \"}\r\n              {objValues.reasonForDecline.toLowerCase() === \"others\" &&\r\n                objValues.offeredPns.toLowerCase() === \"no\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Other reason For Decline{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"otherReasonForDecline\"\r\n                        id=\"otherReasonForDecline\"\r\n                        value={objValues.otherReasonForDecline}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.otherReasonForDecline !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherReasonForDecline}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/*{objValues.acceptedPns !== \"\" &&*/}\r\n              {/*    objValues.acceptedPns !== \"No\" && (*/}\r\n              {/*        <div className=\"form-group  col-md-4\">*/}\r\n              {/*            <FormGroup>*/}\r\n              {/*                <Label>*/}\r\n              {/*                    Elicited ? <span style={{ color: \"red\" }}> </span>*/}\r\n              {/*                </Label>*/}\r\n              {/*                <select*/}\r\n              {/*                    className=\"form-control\"*/}\r\n              {/*                    name=\"elicited\"*/}\r\n              {/*                    id=\"elicited\"*/}\r\n              {/*                    value={objValues.elicited}*/}\r\n              {/*                    onChange={handleInputChange}*/}\r\n              {/*                    style={{*/}\r\n              {/*                        border: \"1px solid #014D88\",*/}\r\n              {/*                        borderRadius: \"0.2rem\",*/}\r\n              {/*                    }}*/}\r\n              {/*                >*/}\r\n              {/*                    <option value={\"\"}></option>*/}\r\n              {/*                    {consent.map((value) => (*/}\r\n              {/*                        <option key={value.id} value={value.display}>*/}\r\n              {/*                            {value.display}*/}\r\n              {/*                        </option>*/}\r\n              {/*                    ))}*/}\r\n              {/*                </select>*/}\r\n              {/*            </FormGroup>*/}\r\n              {/*        </div>*/}\r\n              {/*    )}*/}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.offeredPns !== \"\" &&\r\n                objValues.offeredPns === \"Yes\" &&\r\n                objValues.acceptedPns !== \"\" &&\r\n                objValues.acceptedPns === \"Yes\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          onChange={getProvinces}\r\n                          value={stateInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {states.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          LGA <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lga\"\r\n                          id=\"lga\"\r\n                          value={lgaInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.lga !== \"\" ? (\r\n                          <span className={classes.error}>{errors.lga}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"providerNameCompletingForm\">\r\n                          Facility Name\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"facilityId\"\r\n                          id=\"facilityId\"\r\n                          value={facilityInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.facilityId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.facilityId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Setting <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"testingSetting\"\r\n                          id=\"testingSetting\"\r\n                          value={htsClientInformation.testingSetting}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={true}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {setting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.testingSetting !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.testingSetting}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Name of provider completing the form\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"providerNameCompletingForm\"\r\n                          id=\"providerNameCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerNameCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Role of the provider completing Form\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"providerRoleCompletingForm\"\r\n                          id=\"providerRoleCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerRoleCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          // disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {roleProvider.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.providerRoleCompletingForm !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.providerRoleCompletingForm}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 1 : INFORMATION ABOUT THE INDEX CLIENT\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Firstname </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={objValues.firstName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Middlename </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"middleName\"\r\n                          id=\"middleName\"\r\n                          value={objValues.middleName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Lastname</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastName\"\r\n                          value={objValues.lastName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Index Client ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientId\"\r\n                          id=\"indexClientId\"\r\n                          value={objValues.indexClientId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={objValues.sex}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*    <FormGroup>*/}\r\n                    {/*        <Label for=\"\">Last Name</Label>*/}\r\n                    {/*        <Input*/}\r\n                    {/*            type=\"text\"*/}\r\n                    {/*            name=\"lastName\"*/}\r\n                    {/*            id=\"lastName\"*/}\r\n                    {/*            value={objValues.lastName}*/}\r\n                    {/*            onChange={handleInputChange}*/}\r\n                    {/*            style={{*/}\r\n                    {/*                border: \"1px solid #014D88\",*/}\r\n                    {/*                borderRadius: \"0.25rem\",*/}\r\n                    {/*            }}*/}\r\n                    {/*        />*/}\r\n                    {/*    </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    {/* <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Actual\"\r\n                              name=\"dateOfBirth\"\r\n                              defaultChecked\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Actual\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Estimated\"\r\n                              name=\"dateOfBirth\"\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Estimated\r\n                          </label>\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Age</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"age\"\r\n                          id=\"age\"\r\n                          value={calculate_age(\r\n                            props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              : props?.patientObj?.personResponseDto\r\n                                  ?.dateOfBirth\r\n                          )}\r\n                          // disabled={ageDisabled}\r\n                          disabled\r\n                          onChange={handleAgeChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Marital Status <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"maritalStatus\"\r\n                          id=\"maritalStatus\"\r\n                          value={htsClientInformation.maritalStatus}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                          // disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {maritalStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* {errors.testingSetting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.testingSetting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*  <FormGroup>*/}\r\n                    {/*    <Label for=\"\">Phone Number</Label>*/}\r\n\r\n                    {/*    <PhoneInput*/}\r\n                    {/*        containerStyle={{*/}\r\n                    {/*          width: \"100%\",*/}\r\n                    {/*          border: \"1px solid #014D88\",*/}\r\n                    {/*        }}*/}\r\n                    {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                    {/*        country={\"ng\"}*/}\r\n                    {/*        placeholder=\"(234)7099999999\"*/}\r\n                    {/*        minLength={10}*/}\r\n                    {/*        name=\"phoneNumber\"*/}\r\n                    {/*        disabled*/}\r\n                    {/*        id=\"phoneNumber\"*/}\r\n                    {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                    {/*        value={objValues.phoneNumber}*/}\r\n                    {/*        onChange={(e) => {*/}\r\n                    {/*          checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n                    {/*        }}*/}\r\n                    {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                    {/*    />*/}\r\n                    {/*    {errors.phoneNumber !== \"\" ? (*/}\r\n                    {/*        <span className={classes.error}>*/}\r\n                    {/*    {errors.phoneNumber}*/}\r\n                    {/*  </span>*/}\r\n                    {/*    ) : (*/}\r\n                    {/*        \"\"*/}\r\n                    {/*    )}*/}\r\n                    {/*  </FormGroup>*/}\r\n                    {/*</div>*/}\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                          }}\r\n                          value={objValues.phoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*  <FormGroup>*/}\r\n                    {/*    <Label for=\"\">Alternative Phone Number</Label>*/}\r\n                    {/*    <PhoneInput*/}\r\n                    {/*        containerStyle={{*/}\r\n                    {/*          width: \"100%\",*/}\r\n                    {/*          border: \"1px solid #014D88\",*/}\r\n                    {/*        }}*/}\r\n                    {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                    {/*        country={\"ng\"}*/}\r\n                    {/*        placeholder=\"(234)7099999999\"*/}\r\n                    {/*        minLength={10}*/}\r\n                    {/*        name=\"alternatePhoneNumber\"*/}\r\n                    {/*        id=\"altPhoneNumber\"*/}\r\n                    {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                    {/*        value={objValues.alternatePhoneNumber}*/}\r\n                    {/*        onChange={(e) => {*/}\r\n                    {/*          checkPhoneNumberBasic(e, \"alternatePhoneNumber\");*/}\r\n                    {/*        }}*/}\r\n                    {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                    {/*    />*/}\r\n                    {/*  </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Alternative Phone Number\r\n                          {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"alternatePhoneNumber\"\r\n                          id=\"altPhoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(\r\n                              e,\r\n                              \"alternatePhoneNumber\"\r\n                            );\r\n                          }}\r\n                          value={objValues.alternatePhoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Descriptive Residential Address </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descriptiveResidentialAddress\"\r\n                          id=\"descriptiveResidentialAddress\"\r\n                          value={\r\n                            htsClientInformation.descriptiveResidentialAddress\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date Of Index Client's confirmed HIV-positive test\r\n                          results <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateIndexClientConfirmedHiv\"\r\n                          id=\"dateIndexClientConfirmedHiv\"\r\n                          value={\r\n                            htsClientInformation.dateIndexClientConfirmedHiv\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                        {errors.dateIndexClientConfrimedHiv !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* {indexClientConfirmedHivPositive && ( */}\r\n\r\n                    {/* )} */}\r\n                    {/* if index client is hiv positive, and date is selected */}\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Is client current on HIV treatment?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"isClientCurrentlyOnHiv\"\r\n                          id=\"isClientCurrentlyOnHiv\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.isClientCurrentlyOnHiv}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsClientInformation.isClientCurrentlyOnHiv &&\r\n                      htsClientInformation.isClientCurrentlyOnHiv === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date of Treatment Initiation{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"DateOfTreatmentInitiation\"\r\n                              id=\"DateOfTreatmentInitiation\"\r\n                              value={\r\n                                htsClientInformation.DateOfTreatmentInitiation\r\n                              }\r\n                              onChange={handleHTSClientInputChange}\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              //   disabledg\r\n                            />\r\n                            {/* {errors.treatmentDateI !== \"\" ? (\r\n                                          <span className={classes.error}>\r\n                                            {errors.referralDate}\r\n                                          </span>\r\n                                        ) : (\r\n                                          \"\"\r\n                                        )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Recency Testing</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"recencyTesting\"\r\n                          id=\"recencyTesting\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.recencyTesting}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Recent Infection\">\r\n                            Recent Infection\r\n                          </option>\r\n                          <option value=\"Long Infection\">Long Infection</option>\r\n                          <option value=\"Not Done\">Not Done</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> ART Enrollment Number </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"artEnrollmentNumber\"\r\n                          id=\"artEnrollmentNumber\"\r\n                          value={htsClientInformation.artEnrollmentNumber}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Facility Of Enrollment </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityOfEnrollment\"\r\n                          id=\"facilityOfEnrollment\"\r\n                          value={htsClientInformation.facilityOfEnrollment}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Notification Method selected </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"notificationMethod\"\r\n                          id=\"notificationMethod\"\r\n                          value={objValues.notificationMethod}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {notificationContact.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Number of Partner{\" \"}\r\n                          <span>\r\n                            {\" \"}\r\n                            (sexual or social) identified/elicited from index{\" \"}\r\n                          </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          id=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          value={\r\n                            htsClientInformation.numberOfPartnerIdentifiedFromClientIndex\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 2 : LISTING INDEX CLIENT PARTNER\r\n                    </div>\r\n                    <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                      <i>\r\n                        Instruction: Ask index client to list all the client\r\n                        that have had sex with in the last 12 months. who may be\r\n                        risk to HIV and or partners who they share needle for\r\n                        injection of drugs where index client alluded to\r\n                        injection drugs\r\n                      </i>\r\n                    </p>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Partner ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerId\"\r\n                          id=\"partnerId\"\r\n                          value={partnerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Name of Partner <span> (Enter surname first) </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerName\"\r\n                          id=\"partnerName\"\r\n                          value={htsClientInformation.partnerName}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"partnerSex\"\r\n                          id=\"partnerSex\"\r\n                          value={htsClientInformation.partnerSex}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Age <span> (In years) </span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"partnerAge\"\r\n                          id=\"partnerAge\"\r\n                          value={htsClientInformation.partnerAge}\r\n                          // disabled={ageDisabled}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Home/Contact Address <span> include landmark </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerAddress\"\r\n                          id=\"partnerAddress\"\r\n                          value={htsClientInformation.partnerAddress}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*  <FormGroup>*/}\r\n                    {/*    <Label for=\"\"> Contact Phone Number</Label>*/}\r\n\r\n                    {/*    <PhoneInput*/}\r\n                    {/*        containerStyle={{*/}\r\n                    {/*          width: \"100%\",*/}\r\n                    {/*          border: \"1px solid #014D88\",*/}\r\n                    {/*        }}*/}\r\n                    {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                    {/*        country={\"ng\"}*/}\r\n                    {/*        placeholder=\"(234)7099999999\"*/}\r\n                    {/*        minLength={10}*/}\r\n                    {/*        name=\"partnerPhoneNumber\"*/}\r\n                    {/*        id=\"partnerPhoneNumber\"*/}\r\n                    {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                    {/*        value={contactTracing.partnerPhoneNumber}*/}\r\n                    {/*        onChange={(e) => {*/}\r\n                    {/*          checkPhoneNumberBasic(e, \"partnerPhoneNumber\");*/}\r\n                    {/*        }}*/}\r\n                    {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                    {/*    />*/}\r\n                    {/*    {errors.partnerPhoneNumber !== \"\" ? (*/}\r\n                    {/*        <span className={classes.error}>*/}\r\n                    {/*    {errors.partnerPhoneNumber}*/}\r\n                    {/*  </span>*/}\r\n                    {/*    ) : (*/}\r\n                    {/*        \"\"*/}\r\n                    {/*    )}*/}\r\n                    {/*  </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Contact Phone Number\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerPhoneNumber\"\r\n                          id=\"partnerPhoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(\r\n                              e,\r\n                              \"partnerPhoneNumber\"\r\n                            );\r\n                          }}\r\n                          value={contactTracing.partnerPhoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.partnerPhoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.partnerPhoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Relationship to Index Client{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relativeToIndexClient\"\r\n                          id=\"relativeToIndexClient\"\r\n                          value={htsClientInformation.relativeToIndexClient}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                      {errors.relativeToIndexClient !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.relativeToIndexClient}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Contact tracing</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"contactTracingType\"\r\n                          id=\"contactTracingType\"\r\n                          value={htsClientInformation.contactTracingType}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>select</option>\r\n                          <option value=\"Phone calls\">Phone calls</option>\r\n                          <option value=\"Physical visit\">Physical visit</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Number of Attempt</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfAttempt\"\r\n                          id=\"numberOfAttempt\"\r\n                          value={contactTracing.numberOfAttempt}\r\n                          onChange={handleInputContactChanges}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever denied you of food, shelter,\r\n                          freedom of movement,livehood?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"freedomDenial\"\r\n                          id=\"freedomDenial\"\r\n                          value={htsClientInformation.freedomDenial}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to hurt you? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"threatenToHurt\"\r\n                          id=\"threatenToHurt\"\r\n                          value={htsClientInformation.threatenToHurt}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to rape and force to\r\n                          have sex with you ? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sexuallyUncomfortable\"\r\n                          id=\"sexuallyUncomfortable\"\r\n                          value={htsClientInformation.sexuallyUncomfortable}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Known HIV Positive ?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"knownHivPositive\"\r\n                          id=\"knownHivPositive\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.knownHivPositive}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Accepted HTS ? <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          value={objValues.acceptedHts}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          HIV Test Result{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hivTestResult\"\r\n                          id=\"hivTestResult \"\r\n                          value={objValues.hivTestResult}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"negative\">Negative</option>\r\n                          <option value=\"positive\">Positive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {objValues.partnerCurrentHivStatus !== \"\" &&\r\n                      objValues.partnerCurrentHivStatus === \"positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date Tested?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"datePartnerTested\"\r\n                              id=\"datePartnerTested\"\r\n                              value={objValues.datePartnerTested}\r\n                              onChange={handleInputChange}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Date Enrolled On ART</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateEnrollmentOnART\"\r\n                          id=\"dateEnrollmentOnART\"\r\n                          value={objValues.dateEnrollmentOnART}\r\n                          onChange={handleInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          // disabled\r\n                        />\r\n                        {errors.referralDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Done\"\r\n                    // icon=\"saveee\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      history.push(\"/\");\r\n                    }}\r\n                    disabled={saving}\r\n                  />\r\n                  <Button\r\n                    content=\"Save\"\r\n                    icon=\"save\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Would you like to fill the Refferal form ?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => loadNextForm()}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => handleDone()}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Done\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PnsForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"../../NewRegistration/ServicesProvided\";\r\nimport RefferalForm from \"./RefferalUnit\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewClientReferral = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  const [formInfo, setFormInfo] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: \"\",\r\n    comments: \"\",\r\n    receivingStateFacility: \"\",\r\n    receivingLgaFacility: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  const viewReferralInfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFormInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    viewReferralInfo();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group  col-md-8\">\r\n          <FormGroup>\r\n            <Label>\r\n              Referral Type <span style={{ color: \"red\" }}> *</span>\r\n            </Label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"contentDropDown\"\r\n              id=\"contentDropDown\"\r\n              onChange={handleContentChange}\r\n              style={{\r\n                border: \"1px solid #014D88\",\r\n                borderRadius: \"0.2rem\",\r\n              }}\r\n            >\r\n              <option value={\"\"}>Select Refarral form type</option>\r\n              <option value={\"showReferringUnit\"}>Referral form</option>\r\n              <option value={\"showServiceProviderUnit\"}>\r\n                Service Provider form\r\n              </option>\r\n            </select>\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <Card className={classes.root}>\r\n        {content.showReferringUnit && (\r\n          <RefferralUnit\r\n            patientObj={patientObj}\r\n            formInfo={formInfo}\r\n            row={props.row}\r\n            handleItemClick={props.handleItemClick}\r\n            setCompleted={props.setCompleted}\r\n            completed={props.completed}\r\n          />\r\n        )}\r\n        {content.showServiceProviderUnit && (\r\n          <CardBody>\r\n            <ServicesProvided\r\n              patientObj={patientObj}\r\n              formInfo={formInfo}\r\n              row={props.row}\r\n              handleItemClick={props.handleItemClick}\r\n              etCompleted={props.setCompleted}\r\n              completed={props.completed}\r\n            />\r\n          </CardBody>\r\n        )}\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewClientReferral;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js",["764"],"import React, {Fragment, useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PNSList from \"../../NewRegistration/PartnerNotificationServices/PNSlist\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport ClientRerralList from \"./ClientRerralList\";\r\n\r\nconst ClientReferralHistory = (props) => {\r\n    const [activePage, setActivePage] = useState(\"list\");\r\n    const handleIClickPage = (activeItem) => {\r\n        setActivePage(activeItem);\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const handleDone = (row, actionType) => {\r\n        props.setActivePage({\r\n            ...props.activePage,\r\n            activePage: \"home\",\r\n            activeObject: row,\r\n            actionType: actionType,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {activePage === \"list\" && (\r\n                        <ClientRerralList\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                            handleItemClick={handleItemClick}\r\n                            setRow={props.setRow}\r\n                        />\r\n                    )}\r\n                    {activePage === \"add\" && (\r\n                        <AddIndexContact\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                        />\r\n                    )}\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button\r\n                                content=\"Back\"\r\n                                icon=\"left arrow\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                                onClick={() =>\r\n                                    handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                                }\r\n                            />\r\n                            <Button\r\n                                content=\"Done\"\r\n                                icon=\"list\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                                onClick={() => handleDone()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClientReferralHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js",["765","766"],"export const calculate_age = (dob) => {\r\n// the format should be YYYY-MM-DD\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate(); // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      if (monthGap > 0) {\r\n        return assumedAge;\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge;\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n        if (dateGap > 0) {\r\n          return assumedAge;\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge;\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js",["767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["781","782","783","784","785","786","787","788"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          // { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["789","790","791","792","793","794","795","796","797","798","799"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value === \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value === \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js",["800","801","802","803"],"import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Dropdown, Icon, Menu } from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\nconst ClientRerralList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [serviceMapping, setServiceMapping] = useState({});\r\n  const [serviceNeeded, setServiceNeeded] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  //get services needed\r\n  const SERVICE_NEEDED = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setServiceNeeded(response.data);\r\n          const mapping = {};\r\n          response.data.forEach((item) => {\r\n            mapping[item.code] = item.display;\r\n          });\r\n          setServiceMapping(mapping);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"Fetch Services error:\", e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    SERVICE_NEEDED();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/all/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"client-referral\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-referral\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    // console.log(row);\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    axios\r\n      .delete(`${baseUrl}hts-client-referral/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}> Refer Client</span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client submitted referral forms\"\r\n          columns={[\r\n            { title: \"Date visited\", field: \"date\" },\r\n            { title: \"Service needed\", field: \"service\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Receiving Facility\", field: \"receiving\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.dateVisit,\r\n              // service: serviceMapping[row.serviceNeeded] || row.serviceNeeded,\r\n                service: Object.values(row.serviceNeeded).join(', '),\r\n              // phone: row.phoneNumber,\r\n              receiving: row.nameOfReceivingFacility,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                      >\r\n                      <Dropdown\r\n                        item\r\n                        text=\"Action\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                          <Dropdown.Item\r\n                            onClick={(e) => LoadViewPage(row, \"view\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"eye\" />\r\n                            View\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"update\")}\r\n                          >\r\n                            <Icon name=\"edit\" />\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                            <Icon name=\"delete\" />\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                       </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientRerralList;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js",["804","805","806","807","808"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PNSList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"pns\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-pns\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(\r\n        `${baseUrl}hts-personal-notification-service/${recordSelected.id}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>Add New PNS </span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client contact\"\r\n          columns={[\r\n            { title: \"Partner Name\", field: \"date\" },\r\n            { title: \"Partner ID\", field: \"age\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Partner Address\", field: \"address\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.htsClientInformation.partnerName,\r\n              age: row.partnerId,\r\n              // phone: row.phoneNumber,\r\n              address: row.htsClientInformation.partnerAddress,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                        style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                        primary\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown\r\n                          item\r\n                          text=\"Action\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => LoadViewPage(row, \"view\")}\r\n                            >\r\n                              {\" \"}\r\n                              <Icon name=\"eye\" />\r\n                              View\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"update\")}\r\n                            >\r\n                              <Icon name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                              <Icon name=\"delete\" />\r\n                              Delete\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PNSList;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\n\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport {\r\n  getAllStateByCountryId,\r\n  getAllCountry,\r\n  getAllProvinces,\r\n  getAllGenders,\r\n  alphabetOnly,\r\n} from \"../../../../../utility\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DualListBox from \"react-dual-listbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RefferralUnit = (props) => {\r\n  // console.log(\"props.patientObj\", props.patientObj);\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [serviceNeeded, setServiceNeeded] = useState([]);\r\n\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [allFacilities, setAllFacilities] = useState([]);\r\n  // console.log(Cookies.get(\"facilityName\"));\r\n  const [statesOfTheReceivingFacility, setStateOfTheReceivingFacility] =\r\n    useState([]);\r\n  const [lgasOfTheReceivingFacility, setLgasOfTheReceivingFacility] = useState(\r\n    []\r\n  );\r\n  const [receivingFacilities, setReceivingFacilities] = useState([]);\r\n  const [receivingFacility, setReceivingFacility] = useState([]);\r\n  const [selectedReceivingState, setSelectedReceivingState] = useState({});\r\n  const [selectedReceivingFacility, setSelectedReceivingFacility] = useState(\r\n    {}\r\n  );\r\n  const [selectedReceivingLga, setSelectedReceivingLga] = useState({});\r\n  const history = useHistory();\r\n  const [selectedServiceNeeded, setSelectServiceNeeded] = useState([]);\r\n\r\n  const [payload, setPayload] = useState({\r\n    dateVisit: props?.formInfo?.dateVisit,\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: props?.formInfo?.referredFromFacility,\r\n    nameOfPersonReferringClient: props?.formInfo?.nameOfPersonReferringClient,\r\n    nameOfReferringFacility: props?.formInfo?.nameOfReferringFacility,\r\n    addressOfReferringFacility: props?.formInfo?.addressOfReferringFacility,\r\n    phoneNoOfReferringFacility: props?.formInfo?.phoneNoOfReferringFacility,\r\n    referredTo: props?.formInfo?.referredTo,\r\n    nameOfContactPerson: props?.formInfo?.nameOfContactPerson,\r\n    nameOfReceivingFacility: props?.formInfo?.nameOfReceivingFacility,\r\n    addressOfReceivingFacility: props?.formInfo?.addressOfReceivingFacility,\r\n    phoneNoOfReceivingFacility: props?.formInfo?.phoneNoOfReceivingFacility,\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: props?.formInfo?.serviceNeeded,\r\n    comments: props?.formInfo?.comments,\r\n    receivingFacilityStateName: props.formInfo.receivingFacilityStateName,\r\n    receivingFacilityLgaName: props.formInfo.receivingFacilityLgaName,\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n\r\n  // console.log(\"PAYLOAD\", payload);\r\n  // console.log(\"props.formInfo\", props.formInfo);\r\n  const loadGenders = useCallback(async () => {\r\n    getAllGenders()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n  const getReceivinglga = (id) => {\r\n    getAllProvinces(id)\r\n      .then((res) => {\r\n        setLgasOfTheReceivingFacility(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const getProvincesWithId = (id) => {\r\n    getAllProvinces(id)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  useEffect(() => {\r\n    loadGenders();\r\n    getCountry();\r\n    getStateByCountryId();\r\n\r\n    if (props?.patientObj?.personResponseDto?.address?.address[0]?.stateId) {\r\n      getProvincesWithId(\r\n        props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n\r\n        let ans = res.filter((each, index) => {\r\n          return (\r\n            each.name.toLowerCase() ===\r\n            props.formInfo.receivingFacilityStateName.toLowerCase()\r\n          );\r\n        });\r\n\r\n        getReceivinglga(ans[0].id);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfReceivingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfReceivingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    // console.log(e);\r\n    setPayload({\r\n      ...payload,\r\n      nameOfReceivingFacility: e.name,\r\n      addressOfReceivingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfReceivingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n      });\r\n\r\n    // console.log(response);\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setPayload({ ...payload, [inputName]: NumberValue });\r\n  };\r\n\r\n  // ########################################################################\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStateOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch states error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLgasOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch LGA error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setReceivingFacilities(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const SERVICE_NEEDED = () => {\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            // create array of objects from the response\r\n            const serviceNeeded = response.data.map((service) => {\r\n              return {\r\n                value: service.display,\r\n                label: service.display\r\n              }\r\n            });\r\n            setServiceNeeded(serviceNeeded);\r\n            // console.log(\"serviceNeeded\", serviceNeeded)\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // handle error\r\n        });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n        .then((response) => {\r\n          // Convert the serviceNeeded object into an array of its values\r\n          const serviceNeededArray = Object.values(response.data.serviceNeeded);\r\n\r\n          // Set the serviceNeededArray to selectedServiceNeeded state\r\n          setSelectServiceNeeded(serviceNeededArray);\r\n        })\r\n        .catch((error) => {\r\n          // Handle error...\r\n        });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadStates();\r\n    SERVICE_NEEDED();\r\n\r\n    loadLGA();\r\n  }, []);\r\n\r\n  // ###########################################################################\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonReferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dob: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({ ...payload, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      payload.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  // const handleItemClick = (page, completedMenu) => {\r\n  //     props.handleItemClick(page);\r\n  //     if (props.completed.includes(completedMenu)) {\r\n  //     } else {\r\n  //         props.setCompleted([...props.completed, completedMenu]);\r\n  //     }\r\n  // };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = payload.dateVisit ? \"\" : \"This field is required.\";\r\n    temp.firstName = payload.firstName ? \"\" : \"This field is required.\";\r\n    temp.lastName = payload.lastName ? \"\" : \"This field is required.\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.province = payload.province ? \"\" : \"This field is required.\";\r\n    temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    temp.sexId = payload.sexId ? \"\" : \"This field is required.\";\r\n    temp.dob = payload.dob ? \"\" : \"This field is required.\";\r\n    // temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    // temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    // temp.stateTransferTo = payload.receivingFacilityStateName? \"\" : \"This field is required.\";\r\n    // temp.lgaTransferTo = payload.receivingFacilityLgaName ? \"\" : \"This field is required.\";\r\n    // temp.stateTransferTo = payload.receivingFacilityStateName ? \"\" : \"This field is required.\";\r\n    temp.facilityTransferTo = payload.nameOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.referredFromFacility = payload.referredFromFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfPersonReferringClient = payload.nameOfPersonReferringClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    temp.nameOfReferringFacility = payload.nameOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReferringFacility = payload.addressOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReferringFacility = payload.phoneNoOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfContactPerson = payload.nameOfContactPerson\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfReceivingFacility = payload.nameOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReceivingFacility = payload.addressOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReceivingFacility = payload.phoneNoOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.serviceNeeded = payload.serviceNeeded ? \"\" : \"This field is required.\";\r\n    // console.log(\"temp\", temp);\r\n    temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postPayload = (payload) => {\r\n    axios\r\n      .post(`${baseUrl}risk-stratification`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSaving(false);\r\n\r\n        //toast.success(\"Risk stratification save succesfully!\");\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage, {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      try {\r\n        setSaving(true);\r\n        await axios.put(\r\n          `${baseUrl}hts-client-referral/update-hts-client-referral/${props.row.row.id}`,\r\n          payload,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        setSaving(false);\r\n        toast.success(\"Record saved successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        props.handleItemClick(\"refferal-history\");\r\n        // history.push(\"/\")\r\n      } catch (error) {\r\n        setSaving(false);\r\n        // console.log(\"error\", error);\r\n        const errorMessage =\r\n          error.response?.data?.apierror?.message ||\r\n          \"Something went wrong, please try again\";\r\n        toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Client Referral Form -{\" \"}\r\n            {props.row.action === \"update\" ? \"Update\" : \"View\"}{\" \"}\r\n          </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Referral Form For Referring Unit\r\n              </div>\r\n\r\n              <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                <i>\r\n                  Note: This form is to be filed by the organization making the\r\n                  referral (Referring unit or organization)\r\n                </i>\r\n              </p>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{color: \"red\"}}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                        type=\"date\"\r\n                        name=\"dateVisit\"\r\n                        id=\"dateVisit\"\r\n                        value={payload.dateVisit}\r\n                        onChange={handleInputChange}\r\n                        min=\"1929-12-31\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                        <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={payload.firstName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                    {errors.firstName !== \"\" ? (\r\n                        <span className={classes.error}>{errors.firstName}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Middle Name</Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"middleName\"\r\n                        id=\"middleName\"\r\n                        value={payload.middleName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Last Name <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={payload.lastName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                    {errors.lastName !== \"\" ? (\r\n                        <span className={classes.error}>{errors.lastName}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"patientId\">\r\n                      Hospital Number <span style={{color: \"red\"}}> *</span>{\" \"}\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hospitalNumber\"\r\n                        id=\"hospitalNumber\"\r\n                        value={payload.hospitalNumber}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                    {errors.hospitalNumber !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.hospitalNumber}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    {hospitalNumStatus === true ? (\r\n                        <span className={classes.error}>\r\n                        {\"Hospital number already exist\"}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Country <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"countryId\"\r\n                        id=\"countryId\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        value={payload.countryId}\r\n                        disabled\r\n                        //onChange={getStates}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {countries.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      State <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"stateId\"\r\n                        id=\"stateId\"\r\n                        value={payload.stateId}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={getProvinces}\r\n                        disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {states.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.stateId !== \"\" ? (\r\n                        <span className={classes.error}>{errors.stateId}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Province/District/LGA{\" \"}\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"province\"\r\n                        id=\"province\"\r\n                        value={payload.province}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                        onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {provinces.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.province !== \"\" ? (\r\n                        <span className={classes.error}>{errors.province}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Street Address <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        value={payload.address}\r\n                        disabled\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                        <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Landmark</Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"landmark\"\r\n                        id=\"landmark\"\r\n                        value={payload.landmark}\r\n                        disabled\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        onChange={(e) => {\r\n                          handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                        }}\r\n                        value={payload.phoneNumber}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                        // required\r\n                    />\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"sexId\"\r\n                        id=\"sexId\"\r\n                        onChange={handleInputChange}\r\n                        value={payload.sexId}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                          genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                          ))}\r\n                    </select>\r\n                    {errors.sexId !== \"\" ? (\r\n                        <span className={classes.error}>{errors.sexId}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* <div className=\"form-group mb-2 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Actual\"\r\n                          name=\"dateOfBirth\"\r\n                          defaultChecked\r\n                          onChange={(e) => handleDateOfBirthChange(e)}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />{\" \"}\r\n                        Actual\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Estimated\"\r\n                          name=\"dateOfBirth\"\r\n                          onChange={(e) => handleDateOfBirthChange(e)}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />{\" \"}\r\n                        Estimated\r\n                      </label>\r\n                    </div>\r\n                  </FormGroup>\r\n                </div> */}\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dob\"\r\n                        id=\"dob\"\r\n                        min=\"1929-12-31\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        value={payload.dob}\r\n                        onChange={handleDobChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                    {errors.dob !== \"\" ? (\r\n                        <span className={classes.error}>{errors.dob}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        id=\"age\"\r\n                        disabled={ageDisabled}\r\n                        onChange={payload.age}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        value={calculate_age(\r\n                            props?.patientObj.personResponseDto?.dateOfBirth\r\n                                ? props?.patientObj?.personResponseDto?.dateOfBirth\r\n                                : props?.patientObj?.personResponseDto?.dateOfBirth\r\n                        )}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV Status<span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hivStatus\"\r\n                        id=\"hivStatus\"\r\n                        value={payload.hivStatus}\r\n                        disabled={ageDisabled}\r\n                        onChange={handleAgeChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                    />\r\n                    {/*<select*/}\r\n                    {/*  className=\"form-control\"*/}\r\n                    {/*  name=\"hivStatus\"*/}\r\n                    {/*  id=\"hivStatus\"*/}\r\n                    {/*  onChange={handleInputChange}*/}\r\n                    {/*  value={payload.hivStatus}*/}\r\n                    {/*  style={{*/}\r\n                    {/*    border: \"1px solid #014D88\",*/}\r\n                    {/*    borderRadius: \"0.2rem\",*/}\r\n                    {/*  }}*/}\r\n                    {/*>*/}\r\n                    {/*<option value={\"\"}>Select</option>*/}\r\n                    {/*{hivStatus.map((gender, index) => (*/}\r\n                    {/*  <option key={gender.id} value={gender.id}>*/}\r\n                    {/*    {gender.display}*/}\r\n                    {/*  </option>*/}\r\n                    {/*))}*/}\r\n                    {/*</select>*/}\r\n                    {errors.hivStatus !== \"\" ? (\r\n                        <span className={classes.error}>{errors.hivStatus}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Referred from (Department):\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        name=\"referredFromFacility\"\r\n                        id=\"referredFromFacility\"\r\n                        value={payload.referredFromFacility}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n\r\n                    {errors.referredFromFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.referredFromFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Person Referring Client\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"nameOfPersonReferringClient\"\r\n                        id=\"nameOfPersonReferringClient\"\r\n                        value={payload.nameOfPersonReferringClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.nameOfPersonReferringClient !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.nameOfPersonReferringClient}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Referring Facility\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"nameOfReferringFacility\"\r\n                        id=\"nameOfReferringFacility\"\r\n                        value={payload.nameOfReferringFacility}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled\r\n                    />\r\n                    {errors.nameOfReferringFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.nameOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of Referring Facility\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"addressOfReferringFacility\"\r\n                        id=\"addressOfReferringFacility\"\r\n                        value={payload.addressOfReferringFacility}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.addressOfReferringFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.addressOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number of Referring Facility{\" \"}\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNoOfReferringFacility\"\r\n                        id=\"phoneNoOfReferringFacility\"\r\n                        onChange={(e) => {\r\n                          handleInputChangePhoneNumber(\r\n                              e,\r\n                              \"phoneNoOfReferringFacility\"\r\n                          );\r\n                        }}\r\n                        value={payload.phoneNoOfReferringFacility}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.phoneNoOfReferringFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.phoneNoOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Referred to (Department)\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"referredTo\"\r\n                        id=\"referredTo\"\r\n                        value={payload.referredTo}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.referredTo !== \"\" ? (\r\n                        <span className={classes.error}>{errors.referredTo}</span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Contact Person:\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"nameOfContactPerson\"\r\n                        id=\"nameOfContactPerson\"\r\n                        value={payload.nameOfContactPerson}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.nameOfContactPerson !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.nameOfContactPerson}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* props.row.action === \"update\" && */}\r\n                {\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label\r\n                          for=\"\"\r\n                          style={{color: \"#014d88\", fontWeight: \"bolder\"}}\r\n                      >\r\n                        Receiving Facility State{\" \"}\r\n                        <span style={{color: \"red\"}}> *</span>{\" \"}\r\n                      </Label>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"stateId\"\r\n                          style={{\r\n                            height: \"40px\",\r\n                            border: \"solid 1px #014d88\",\r\n                            borderRadius: \"5px\",\r\n                            fontWeight: \"bolder\",\r\n                            appearance: \"auto\",\r\n                          }}\r\n                          required\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                          onChange={(e) => {\r\n                            if (e.target.value !== \"\") {\r\n                              const filterState =\r\n                                  statesOfTheReceivingFacility.filter((st) => {\r\n                                    return st.name === e.target.value;\r\n                                  });\r\n                              setSelectedReceivingState(filterState);\r\n\r\n                              setPayload((prevPayload) => ({\r\n                                ...prevPayload,\r\n                                receivingFacilityStateName: filterState[0].name,\r\n                              }));\r\n\r\n                              getReceivinglga(filterState[0].id);\r\n                            }\r\n                          }}\r\n                          value={payload.receivingFacilityStateName}\r\n                      >\r\n                        {/*{console.log(*/}\r\n                        {/*    \"receivng\",*/}\r\n                        {/*    payload.receivingFacilityStateName*/}\r\n                        {/*)}*/}\r\n                        <option>Select State</option>\r\n                        {states.map((state) => (\r\n                            <option key={state?.id} value={state?.name}>\r\n                              {state.name}\r\n                            </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                }\r\n                {/* props.row.action === \"update\" &&  */}\r\n                {\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label\r\n                          for=\"\"\r\n                          style={{color: \"#014d88\", fontWeight: \"bolder\"}}\r\n                      >\r\n                        {\" \"}\r\n                        Receiving Facility LGA{\" \"}\r\n                        <span style={{color: \"red\"}}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\" receivingFacilityLgaName\"\r\n                          style={{\r\n                            height: \"40px\",\r\n                            border: \"solid 1px #014d88\",\r\n                            borderRadius: \"5px\",\r\n                            fontWeight: \"bolder\",\r\n                            appearance: \"auto\",\r\n                          }}\r\n                          required\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                          value={payload.receivingFacilityLgaName}\r\n                          onChange={(e) => {\r\n                            if (e.target.value !== \"\") {\r\n                              const filterlga = lgasOfTheReceivingFacility.filter(\r\n                                  (lg) => {\r\n                                    return lg.name === e.target.value;\r\n                                  }\r\n                              );\r\n                              setSelectedReceivingLga(filterlga);\r\n                              setPayload((prevPayload) => ({\r\n                                ...prevPayload,\r\n                                receivingFacilityLgaName: filterlga[0].name,\r\n                              }));\r\n                              loadFacilities(filterlga[0].id);\r\n                            }\r\n                          }}\r\n                      >\r\n                        {/*{console.log(\"receivng\", payload.receivingFacilityLgaName)}*/}\r\n                        <option>Select LGA</option>\r\n                        {lgasOfTheReceivingFacility.map((lga) => (\r\n                            <option key={lga.id} value={lga.name}>\r\n                              {lga.name}\r\n                            </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.lgaId !== \"\" ? (\r\n                          <span className={classes.error}>{errors.lgaId}</span>\r\n                      ) : (\r\n                          \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                }\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                        for=\"\"\r\n                        style={{color: \"#014d88\", fontWeight: \"bolder\"}}\r\n                    >\r\n                      Name of Receiving Facility\r\n                      <span style={{color: \"red\"}}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"nameOfReceivingFacility\"\r\n                        style={{\r\n                          height: \"40px\",\r\n                          border: \"solid 1px #014d88\",\r\n                          borderRadius: \"5px\",\r\n                          fontWeight: \"bolder\",\r\n                          appearance: \"auto\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                        //   disabled\r\n                        // required\r\n                        value={payload.nameOfReceivingFacility}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                      <option>Select State</option>\r\n                      {receivingFacilities.length > 0 &&\r\n                          receivingFacilities.map((fa) => (\r\n                              <option key={fa.id} value={fa.name}>\r\n                                {fa.name}\r\n                              </option>\r\n                          ))}\r\n\r\n                      {receivingFacilities.length < 1 && (\r\n                          <option\r\n                              key={3}\r\n                              value={payload?.nameOfReceivingFacility}\r\n                          >\r\n                            {payload?.nameOfReceivingFacility}\r\n                          </option>\r\n                      )}\r\n                    </Input>\r\n                    {errors.nameOfReceivingFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.nameOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of the Receiving Facility\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"addressOfReceivingFacility\"\r\n                        id=\"addressOfReceivingFacility\"\r\n                        value={payload.addressOfReceivingFacility}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.addressOfReceivingFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.addressOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone No of Receiving Facility\r\n                      <span style={{color: \"red\"}}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNoOfReceivingFacility\"\r\n                        id=\"phoneNoOfReceivingFacility\"\r\n                        onChange={(e) => {\r\n                          handleInputChangePhoneNumber(\r\n                              e,\r\n                              \"phoneNoOfReceivingFacility\"\r\n                          );\r\n                        }}\r\n                        value={payload.phoneNoOfReceivingFacility}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.phoneNoOfReceivingFacility !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                        {errors.phoneNoOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label for=\"firstName\">*/}\r\n                {/*      Services needed*/}\r\n                {/*      <span style={{ color: \"red\" }}> *</span>*/}\r\n                {/*    </Label>*/}\r\n                {/*    <select*/}\r\n                {/*      className=\"form-control\"*/}\r\n                {/*      name=\"serviceNeeded\"*/}\r\n                {/*      id=\"serviceNeeded\"*/}\r\n                {/*      onChange={handleInputChange}*/}\r\n                {/*      value={payload.serviceNeeded}*/}\r\n                {/*      style={{*/}\r\n                {/*        border: \"1px solid #014D88\",*/}\r\n                {/*        borderRadius: \"0.2rem\",*/}\r\n                {/*      }}*/}\r\n                {/*      disabled={props.row.action === \"view\" ? true : false}*/}\r\n                {/*    >*/}\r\n                {/*      <option value={\"\"}>Select Service</option>*/}\r\n                {/*      {serviceNeeded.map((value, index) => (*/}\r\n                {/*        <option key={value.id} value={value.code}>*/}\r\n                {/*          {value.display}*/}\r\n                {/*        </option>*/}\r\n                {/*      ))}*/}\r\n                {/*    </select>*/}\r\n\r\n                {/*    {errors.serviceNeeded !== \"\" ? (*/}\r\n                {/*      <span className={classes.error}>*/}\r\n                {/*        {errors.serviceNeeded}*/}\r\n                {/*      </span>*/}\r\n                {/*    ) : (*/}\r\n                {/*      \"\"*/}\r\n                {/*    )}*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <DualListBox\r\n                      options={serviceNeeded}\r\n                      selected={selectedServiceNeeded}\r\n                      disabled={props.row.action === \"view\" ? true : false}\r\n                      onChange={(value) => {\r\n                        // Update selectedServiceNeeded state\r\n                        setSelectServiceNeeded(value);\r\n                        // Convert selectedServiceNeeded array into an object\r\n                        const serviceNeededObject = value.reduce(\r\n                            (obj, item, index) => {\r\n                              obj[index] = item;\r\n                              return obj;\r\n                            },\r\n                            {}\r\n                        );\r\n\r\n                        // Update serviceNeeded in payload\r\n                        setPayload({\r\n                          ...payload,\r\n                          serviceNeeded: serviceNeededObject,\r\n                        });\r\n                      }}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Comments\r\n                      {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                    </Label>\r\n                    <Input\r\n                        className=\"form-control\"\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        cols=\"7\"\r\n                        name=\"comments\"\r\n                        id=\"comments\"\r\n                        value={payload.comments}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                          height: \"100px\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                    />\r\n                    {/* {errors.firstName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.firstName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br/>\r\n\r\n              <br/>\r\n\r\n              {/* <hr /> */}\r\n              {saving ? <Spinner/> : \"\"}\r\n              <br/>\r\n              {props.row.action === \"update\" && (\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Button\r\n                          content=\"Update\"\r\n                          type=\"submit\"\r\n                          icon=\"right arrow\"\r\n                          labelPosition=\"right\"\r\n                          style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                          onClick={handleSubmit}\r\n                          disabled={saving}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n          show={open}\r\n          toggle={toggle}\r\n          className=\"fade\"\r\n          size=\"sm\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RefferralUnit;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js",["841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { getAllGenders, alphabetOnly } from \"../../../../utility\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport DualListBox from \"react-dual-listbox\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ServicesProvided = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [genders, setGenders] = useState([]);\r\n    const [serviceNeeded, setServiceNeeded] = useState([]);\r\n    const [selectedServiceNeeded, setSelectServiceNeeded] = useState([]);\r\n\r\n    const [payload, setPayload] = useState({\r\n        nameOfFacilityProvider: props?.formInfo?.nameOfReceivingFacility,\r\n        addressOfFacilityProvider: props?.formInfo?.addressOfReceivingFacility || \"\",\r\n        visitDate: props?.formInfo?.receivingOrganization?.visitDate || \"\",\r\n        comments: props?.formInfo?.comments || \"\",\r\n        clientFirstName: props?.patientObj?.personResponseDto?.firstName,\r\n        clientLastName: props?.patientObj?.personResponseDto?.surname,\r\n        clientMiddleName: props?.patientObj?.personResponseDto?.otherName,\r\n        nameOfServiceProvider: props?.formInfo?.receivingOrganization?.nameOfServiceProvider || \"\",\r\n        signature: props?.formInfo?.receivingOrganization?.signature || \"\",\r\n        phoneNumber: props?.formInfo?.receivingOrganization?.phoneNumber || \"\",\r\n        categoryOfService: props?.formInfo?.receivingOrganization?.categoryOfService\r\n            || {},\r\n        receivingFacilityLgaName: props?.formInfo?.receivingFacilityLgaName,\r\n        receivingFacilityStateName: props?.formInfo?.receivingFacilityStateName\r\n    });\r\n\r\n const history = useHistory();\r\n  const [states1, setStates1] = useState([])\r\n  const [lgas1, setLGAs1] = useState([])\r\n  const [facilities1, setFacilities1] = useState([])\r\n  const [selectedState, setSelectedState] = useState({})\r\n  const [selectedFacility, setSelectedFacility] = useState({});\r\n  const [selectedLga, setSelectedLga] = useState({});\r\n\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n\r\n    const checkNumberLimit = (e) => {\r\n        const limit = 11;\r\n        const acceptedNumber = e.slice(0, limit);\r\n        return acceptedNumber;\r\n    };\r\n    const handleInputChangePhoneNumber = (e, inputName) => {\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n        setPayload({ ...payload, [inputName]: NumberValue });\r\n    };\r\n\r\n\r\n  // ##############################################\r\n\r\n    const SERVICE_NEEDED = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    // create array of objects from the response\r\n                    const serviceNeeded = response.data.map((service) => {\r\n                        return {\r\n                            value: service.display,\r\n                            label: service.display\r\n                        }\r\n                    });\r\n                    setServiceNeeded(serviceNeeded);\r\n                    // console.log(\"serviceNeeded\", serviceNeeded)\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                // handle error\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch the saved serviceNeeded from the backend\r\n        axios.get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n            .then((response) => {\r\n                // Convert the serviceNeeded object into an array of its values\r\n                const serviceNeededArray = Object.values(response.data.serviceNeeded);\r\n\r\n                // Set the serviceNeededArray to selectedServiceNeeded state\r\n                setSelectServiceNeeded(serviceNeededArray);\r\n            })\r\n            .catch((error) => {\r\n                // Handle error...\r\n            });\r\n    }, []);\r\n\r\n\r\n  const loadStates1 = () => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setStates1(response.data);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch states error\" + e);\r\n        });\r\n  };\r\n\r\n\r\n\r\n  const loadLGA1 = (id) => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setLGAs1(response.data);\r\n            // const selectedLga = response.data.find(lga => lga.id === id);\r\n            // setPayload(prevPayload => ({ ...prevPayload, lgaTransferTo: selectedLga ? selectedLga.name : \"\" }));\r\n          }\r\n\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch LGA error\" + e);\r\n        });\r\n  };\r\n\r\n  const loadFacilities1 = (id) => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setFacilities1(response.data);\r\n\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch Facilities error\" + e);\r\n        });\r\n  };\r\n\r\n  const handleInputChangeLocation = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if(e.target.name === 'stateTransferTo'){\r\n      let filteredState = states1.filter((each)=>{\r\n        return each.name.toLowerCase()  === e.target.value.toLowerCase()\r\n      })\r\n      setPayload({ ...payload, receivingFacilityStateName : e.target.value });\r\n\r\n      loadLGA1(filteredState[0].id);\r\n    }\r\n    if(e.target.name === 'lgaTransferTo'){\r\n      let filteredState = lgas1.filter((each)=>{\r\n        return each.name.toLowerCase()  === e.target.value.toLowerCase()\r\n      })\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n      loadFacilities1(filteredState[0].id);\r\n\r\n    }\r\n\r\n  };\r\n  // ################################################\r\n  const getGenders = () => {\r\n    getAllGenders()\r\n      .then((res) => {\r\n        setGenders(res);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"error\", e);\r\n      });\r\n    // ;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getGenders();\r\n    loadStates1()\r\n    SERVICE_NEEDED()\r\n  }, []);\r\n\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n    setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"nameOfFacilityProvider\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"addressOfFacilityProvider\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientFirstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientMiddleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientLastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfServiceProvider\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.nameOfFacilityProvider = payload.nameOfFacilityProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfFacilityProvider = payload.addressOfFacilityProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.visitDate = payload.visitDate ? \"\" : \"This field is required.\";\r\n    // temp.clientFirstName = payload.clientFirstName\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.clientLastName = payload.clientLastName\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    temp.nameOfServiceProvider = payload.nameOfServiceProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    temp.signature = payload.signature ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n\r\n    temp.categoryOfService = payload.categoryOfService\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n     // console.log(\"temp\", temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      htsClientReferralId: props.row.row.id,\r\n      receivingOrganizationDTO: payload\r\n    };\r\n    if (validate()) {\r\n      try {\r\n        setSaving(true);\r\n        await axios.put(`${baseUrl}hts-client-referral/${props.row.row.id}`, data, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setSaving(false);\r\n        toast.success(\"Record saved successfully\", { position: toast.POSITION.BOTTOM_CENTER });\r\n          props.handleItemClick(\"refferal-history\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        const errorMessage = error.response?.data?.apierror?.message || \"Something went wrong, please try again\";\r\n        toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div>\r\n        <h2 style={{ color: \"#000\" }}>Client Referral Form </h2>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n            style={{\r\n              backgroundColor: \"#992E62\",\r\n              width: \"125%\",\r\n              height: \"35px\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Referral Form For Services Provided\r\n          </div>\r\n\r\n          <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n            <i>\r\n              Note: This form should be filled out by the organization providing\r\n              the service\r\n            </i>\r\n          </p>\r\n          <div className=\"row\">\r\n            {/*###############################*/}\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">*/}\r\n            {/*      Facility providing service State*/}\r\n            {/*    </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*        type=\"text\"*/}\r\n            {/*        name=\"receivingFacilityStateName\"*/}\r\n            {/*        id=\"receivingFacilityStateName\"*/}\r\n            {/*        value={payload.receivingFacilityStateName}*/}\r\n            {/*        onChange={handleInputChange}*/}\r\n            {/*        style={{*/}\r\n            {/*          border: \"1px solid #014D88\",*/}\r\n            {/*          borderRadius: \"0.2rem\",*/}\r\n            {/*        }}*/}\r\n            {/*        disabled*/}\r\n            {/*    />*/}\r\n            {/*    {errors.nameOfServiceProvider !== \"\" ? (*/}\r\n            {/*        <span className={classes.error}>*/}\r\n            {/*        {errors.nameOfServiceProvider}*/}\r\n            {/*      </span>*/}\r\n            {/*    ) : (*/}\r\n            {/*        \"\"*/}\r\n            {/*    )}*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">*/}\r\n            {/*      Facility providing service LGA*/}\r\n            {/*    </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*        type=\"text\"*/}\r\n            {/*        name=\"receivingFacilityLgaName\"*/}\r\n            {/*        id=\"receivingFacilityLgaName\"*/}\r\n            {/*        value={payload.receivingFacilityLgaName}*/}\r\n            {/*        onChange={handleInputChange}*/}\r\n            {/*        style={{*/}\r\n            {/*          border: \"1px solid #014D88\",*/}\r\n            {/*          borderRadius: \"0.2rem\",*/}\r\n            {/*        }}*/}\r\n            {/*        disabled*/}\r\n            {/*    />*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">Facility providing Service</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"nameOfFacilityProvider\"\r\n                  id=\"nameOfFacilityProvider\"\r\n                  value={payload.nameOfFacilityProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            {/*###############################*/}\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Address of Facility providing the service{\" \"}\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"addressOfFacilityProvider\"\r\n                  id=\"addressOfFacilityProvider\"\r\n                  value={payload.addressOfFacilityProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.addressOfFacilityProvider !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.addressOfFacilityProvider}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"\">\r\n                  Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                </Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"visitDate\"\r\n                  id=\"visitDate\"\r\n                  value={payload.visitDate}\r\n                  onChange={handleInputChange}\r\n                  min={props.formInfo.dateVisit}\r\n                  max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.visitDate !== \"\" ? (\r\n                  <span className={classes.error}>{errors.visitDate}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Client First Name <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientFirstName\"\r\n                  id=\"clientFirstName\"\r\n                  value={payload.clientFirstName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.clientFirstName !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.clientFirstName}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"clientMiddleName\">\r\n                  Client Middle Name\r\n                  {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientMiddleName\"\r\n                  id=\"clientMiddleName\"\r\n                  value={payload.clientMiddleName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"clientLastName\">\r\n                  Client Last Name <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientLastName\"\r\n                  id=\"clientLastName\"\r\n                  value={payload.clientLastName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.clientLastName !== \"\" ? (\r\n                  <span className={classes.error}>{errors.clientLastName}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-12\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Comments\r\n                  {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"textarea\"\r\n                  rows=\"4\"\r\n                  cols=\"7\"\r\n                  name=\"comments\"\r\n                  id=\"comments\"\r\n                  value={payload.comments}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                    height: \"100px\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {/* {errors.firstName !== \"\" ? (\r\n                  <span className={classes.error}>{errors.firstName}</span>\r\n                ) : (\r\n                  \"\"\r\n                )} */}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Name of service provider\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"nameOfServiceProvider\"\r\n                  id=\"nameOfServiceProvider\"\r\n                  value={payload.nameOfServiceProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.nameOfServiceProvider !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nameOfServiceProvider}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Signature\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"signature\"\r\n                  id=\"signature\"\r\n                  value={payload.signature}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.signature !== \"\" ? (\r\n                  <span className={classes.error}>{errors.signature}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group  col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                  id=\"phoneNumber\"\r\n                  onChange={(e) => {\r\n                    handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                  }}\r\n                  value={payload.phoneNumber}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                  // required\r\n                />\r\n                {errors.phoneNumber !== \"\" ? (\r\n                  <span className={classes.error}>{errors.phoneNumber}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">Categories of Services </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*      className=\"form-control\"*/}\r\n            {/*      type=\"text\"*/}\r\n            {/*      name=\"serviceCategory\"*/}\r\n            {/*      id=\"serviceCategory\"*/}\r\n            {/*      value={payload.categoryOfService}*/}\r\n            {/*      onChange={handleInputChange}*/}\r\n            {/*      style={{*/}\r\n            {/*        border: \"1px solid #014D88\",*/}\r\n            {/*        borderRadius: \"0.2rem\",*/}\r\n            {/*      }}*/}\r\n            {/*      disabled*/}\r\n            {/*    />*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                      <Label for=\"dualListBox\">\r\n                          Categories of Services\r\n                      </Label>\r\n              <DualListBox\r\n                  options={serviceNeeded}\r\n                  selected={selectedServiceNeeded}\r\n                  onChange={(value) => {\r\n                      // Update selectedServiceNeeded state\r\n                      setSelectServiceNeeded(value);\r\n                      // Convert selectedServiceNeeded array into an object\r\n                      const serviceNeededObject = value.reduce((obj, item, index) => {\r\n                          obj[index] = item;\r\n                          return obj;\r\n                      }, {});\r\n                      // Update serviceNeeded in payload\r\n                      setPayload({ ...payload, categoryOfService: serviceNeededObject });\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n              />\r\n                  </FormGroup>\r\n              </div>\r\n          </div>\r\n          <br />\r\n\r\n          <br />\r\n\r\n          <br />\r\n          {props.row.action === \"update\" && (\r\n            <div className=\"row\">\r\n              {/*<div className=\"form-group mb-3 col-md-12\">*/}\r\n              {/*  <Button*/}\r\n              {/*    content=\"Done\"*/}\r\n              {/*    type=\"submit\"*/}\r\n              {/*    // icon=\"right arrow\"*/}\r\n              {/*    // labelPosition=\"right\"*/}\r\n              {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n              {/*    onClick={() => {*/}\r\n              {/*      history.push(\"/\");*/}\r\n              {/*    }}*/}\r\n              {/*    disabled={saving}*/}\r\n              {/*  />*/}\r\n              {/*</div>*/}\r\n              <div className=\"form-group mb-3 mt-5 col-md-6\">\r\n                <Button\r\n                  content=\"Done\"\r\n                  type=\"submit\"\r\n                  // icon=\"right arrow\"\r\n                  // labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicesProvided;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["866","867","868","869","870","871","872","873","874","875","876","877","878"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js",["879","880","881"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HIVSTPatientHistory = (props) => {\r\n  const [hivstHistory, setHivstHistory] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //patients()\r\n    FetchHivstHistory();\r\n  }, [props.patientObj]);\r\n  console.log(\"HivstHistory\", hivstHistory);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"hivst_view\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  const FetchHivstHistory = () => {\r\n    axios\r\n      .get(`${baseUrl}hivst?patientId=${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //set the last date of visit after the response\r\n        setHivstHistory(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //setLoading(false)\r\n      });\r\n  };\r\n\r\n  const handleHTSDelete = (row) => {\r\n    console.log(props.patientList);\r\n    axios\r\n      .delete(`${baseUrl}hivst/${props.patientObj.hivstId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        toast.success(`HIVST patient deleted successfully`);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.err(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"HIV Self Testing History \"\r\n        columns={[\r\n          { title: \"Date of Visit\", field: \"dateOfVisit\" },\r\n          { title: \"Service Delivery Point\", field: \"serviceDeliveryPoint\" },\r\n          {\r\n            title: \"Number of Test Kits Received\",\r\n            field: \"numberOfHivstKitsReceived\",\r\n          },\r\n          { title: \"User Type\", field: \"userType\" },\r\n          {\r\n            title: \"Type of HIVST Kit Received\",\r\n            field: \"typeOfHivstKitReceived\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={props.loading}\r\n        data={hivstHistory.map((row) => ({\r\n          // id: row.id,\r\n          dateOfVisit: row.dateOfVisit,\r\n          serviceDeliveryPoint: row.serviceDeliveryPoint,\r\n          numberOfHivstKitsReceived: row.numberOfHivstKitsReceived,\r\n          userType: row.userType,\r\n          typeOfHivstKitReceived: row.typeOfHivstKitReceived,\r\n\r\n          actions: (\r\n            <div>\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  >\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            //backgroundColor: \"#9F9FA5\",\r\n            color: \"#000\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HIVSTPatientHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["882","883","884","885","886","887","888","889","890","891","892"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport BasicInfo from \"./ContinuesHTSEnrollment/BasicInfo\";\r\nimport PreTest from \"./ContinuesHTSEnrollment/PreTest\";\r\nimport HivTestResult from \"./ContinuesHTSEnrollment/HivTestResult\";\r\nimport IndexingContactTracing from \"./ContinuesHTSEnrollment/Elicitation/Index\";\r\nimport Others from \"./ContinuesHTSEnrollment/Others\";\r\nimport PostTest from \"./ContinuesHTSEnrollment/PostTest\";\r\nimport RecencyTesting from \"./ContinuesHTSEnrollment/RecencyTesting\";\r\nimport RiskStratification from \"./ContinuesHTSEnrollment/RiskStratification\";\r\nimport PNSHistory from \"./NewRegistration/PartnerNotificationServices/PNSHistory\";\r\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\r\nimport ViewPNSForm from \"./NewRegistration/PartnerNotificationServices/ViewPnsForm\";\r\nimport ReferralUnit from \"./ContinuesHTSEnrollment/ClientReferral/ReferralUnit\";\r\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\r\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\r\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\r\nimport { set } from \"js-cookie\";\r\nimport { getCheckModality } from \"../../../utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n  // const [saving, setSaving] = useState(false);\r\n  const [activeItem, setactiveItem] = useState(\"risk\");\r\n  const [completed, setCompleted] = useState([]);\r\n  const [basicInfo, setBasicInfo] = useState({});\r\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n  const [organizationInfo, setOrganizationInfo] = useState({});\r\n  const [row, setRow] = useState({});\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n\r\n  const [permissions, setPermission] = useState(\r\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\r\n  );\r\n\r\n  const [patientObj2, setPatientObj2] = useState({\r\n    breastFeeding: \"\",\r\n    capturedBy: \"\",\r\n    cd4: {},\r\n    clientCode: \"\",\r\n    riskStratificationCode: \"\",\r\n    confirmatoryTest: {},\r\n    dateVisit: \"\",\r\n    extra: {},\r\n    firstTimeVisit: \"\",\r\n    hepatitisTesting: {},\r\n    hivTestResult: \"\",\r\n    id: \"\",\r\n    indexClient: \"\",\r\n    indexClientCode: \"\",\r\n    indexElicitation: [\r\n      {\r\n        address: \"\",\r\n        altPhoneNumber: \"\",\r\n        archived: 0,\r\n        currentlyLiveWithPartner: true,\r\n        datePartnerCameForTesting: \"\",\r\n        dob: \"\",\r\n        extra: {},\r\n        facilityId: 0,\r\n        firstName: \"\",\r\n        hangOutSpots: \"\",\r\n        htsClient: {\r\n          archived: 0,\r\n          breastFeeding: 0,\r\n          capturedBy: \"\",\r\n          cd4: {},\r\n          clientCode: \"\",\r\n          confirmatoryTest: {},\r\n          dateVisit: \"\",\r\n          extra: {},\r\n          facilityId: 0,\r\n          firstTimeVisit: true,\r\n          hepatitisTesting: {},\r\n          hivTestResult: \"\",\r\n          id: 0,\r\n          indexClient: true,\r\n          indexClientCode: \"\",\r\n          indexNotificationServicesElicitation: {},\r\n          knowledgeAssessment: {},\r\n          numChildren: 0,\r\n          numWives: 0,\r\n          others: {},\r\n          person: {\r\n            active: \"\",\r\n            address: {},\r\n            archived: 0,\r\n            contact: {},\r\n            contactPoint: {},\r\n            createdDate: \"\",\r\n            dateOfBirth: \"\",\r\n            dateOfRegistration: \"\",\r\n            deceased: true,\r\n            deceasedDateTime: \"\",\r\n            education: {},\r\n            employmentStatus: {},\r\n            emrId: \"\",\r\n            facilityId: 0,\r\n            firstName: \"string\",\r\n            gender: {},\r\n            hospitalNumber: \"\",\r\n            id: \"\",\r\n            identifier: {},\r\n            isDateOfBirthEstimated: true,\r\n            lastModifiedDate: \"\",\r\n            maritalStatus: {},\r\n            new: true,\r\n            ninNumber: \"\",\r\n            organization: {},\r\n            otherName: \"\",\r\n            sex: \"\",\r\n            surname: \"\",\r\n            uuid: \"\",\r\n          },\r\n          personUuid: \"\",\r\n          postTestCounselingKnowledgeAssessment: {},\r\n          pregnant: \"\",\r\n          previouslyTested: true,\r\n          recency: {},\r\n          referredFrom: \"\",\r\n          relationWithIndexClient: \"\",\r\n          riskAssessment: {},\r\n          sexPartnerRiskAssessment: {},\r\n          stiScreening: {},\r\n          syphilisTesting: {},\r\n          targetGroup: 0,\r\n          tbScreening: {},\r\n          test1: {},\r\n          testingSetting: \"\",\r\n          tieBreakerTest: {},\r\n          typeCounseling: \"\",\r\n          uuid: \"\",\r\n        },\r\n        htsClientUuid: \"\",\r\n        id: \"\",\r\n        isDateOfBirthEstimated: true,\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        notificationMethod: \"\",\r\n        partnerTestedPositive: \"\",\r\n        phoneNumber: \"\",\r\n        physicalHurt: \"\",\r\n        relationshipToIndexClient: \"\",\r\n        sex: \"\",\r\n        sexuallyUncomfortable: \"\",\r\n        threatenToHurt: \"\",\r\n        uuid: \"\",\r\n      },\r\n    ],\r\n    indexNotificationServicesElicitation: {},\r\n    knowledgeAssessment: {},\r\n    numChildren: \"\",\r\n    numWives: \"\",\r\n    others: {},\r\n    personId: \"\",\r\n    personResponseDto: {\r\n      active: true,\r\n\r\n      address: {\r\n        address: [\r\n          {\r\n            city: \"\",\r\n            line: [\"\"],\r\n            stateId: \"\",\r\n            district: \"\",\r\n            countryId: 1,\r\n            postalCode: \"\",\r\n            organisationUnitId: 0,\r\n          },\r\n        ],\r\n      },\r\n      biometricStatus: true,\r\n      checkInDate: \"\",\r\n      contact: {},\r\n      contactPoint: {\r\n        contactPoint: [\r\n          {\r\n            type: \"phone\",\r\n            value: \"\",\r\n          },\r\n        ],\r\n      },\r\n      dateOfBirth: \"\",\r\n      dateOfRegistration: \"\",\r\n      deceased: true,\r\n      deceasedDateTime: \"\",\r\n      education: {},\r\n      employmentStatus: {},\r\n      emrId: \"\",\r\n      encounterDate: \"\",\r\n      facilityId: \"\",\r\n      firstName: \"\",\r\n      gender: {},\r\n      id: \"\",\r\n      identifier: {},\r\n      isDateOfBirthEstimated: true,\r\n      maritalStatus: {},\r\n      ninNumber: \"\",\r\n      organization: {},\r\n      otherName: \"\",\r\n      sex: \"\",\r\n      surname: \"\",\r\n      visitId: \"\",\r\n    },\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    pregnant: \"\",\r\n    previouslyTested: \"\",\r\n    recency: {},\r\n    referredFrom: \"\",\r\n    relationWithIndexClient: \"\",\r\n    riskAssessment: {},\r\n    sexPartnerRiskAssessment: {},\r\n    stiScreening: {},\r\n    syphilisTesting: {},\r\n    targetGroup: \"\",\r\n    tbScreening: {},\r\n    test1: {},\r\n    testingSetting: \"\",\r\n    tieBreakerTest: {},\r\n    typeCounseling: \"\",\r\n    riskStratificationResponseDto: null,\r\n  });\r\n\r\n  const [extra, setExtra] = useState({\r\n    risk: \"\",\r\n    index: \"\",\r\n    pre: \"\",\r\n    post: \"\",\r\n    recency: \"\",\r\n    elicitation: \"\",\r\n  });\r\n  const handleItemClick = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n  useEffect(() => {\r\n    setModalityCheck(\r\n      getCheckModality(patientObj2?.riskStratificationResponseDto?.modality)\r\n    );\r\n  }, [patientObj2]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h3>HIV COUNSELLING AND TESTING</h3>\r\n              <br />\r\n              <br />\r\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                <Menu\r\n                  size=\"large\"\r\n                  vertical\r\n                  style={{ backgroundColor: \"#014D88\" }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"risk\"}\r\n                    onClick={() => handleItemClick(\"risk\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Risk Stratification\r\n                      {completed.includes(\"risk\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  {hideOtherMenu === false && (\r\n                    <>\r\n                      <Menu.Item\r\n                        name=\"inbox\"\r\n                        active={activeItem === \"basic\"}\r\n                        onClick={() => handleItemClick(\"basic\")}\r\n                        style={{\r\n                          backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\r\n                        }}\r\n                        disabled={activeItem !== \"basic\" ? true : false}\r\n                      >\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          {\" \"}\r\n                          Basic Information\r\n                          {completed.includes(\"basic\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n                      {patientObj2.riskStratificationResponseDto?.age &&\r\n                        modalityCheck == \"fill\" && (\r\n                          <Menu.Item\r\n                            name=\"spam\"\r\n                            active={activeItem === \"pre-test-counsel\"}\r\n                            onClick={() => handleItemClick(\"pre-test-counsel\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\r\n                            }}\r\n                            disabled={\r\n                              activeItem !== \"pre-test-counsel\" ? true : false\r\n                            }\r\n                          >\r\n                            {/* <Label>2</Label> */}\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              Pre Test Counseling\r\n                              {completed.includes(\"pre-test-counsel\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n                      {permissions.includes(\"Request_and_Result_Form\") && (\r\n                        <Menu.Item\r\n                          name=\"inbox\"\r\n                          active={activeItem === \"hiv-test\"}\r\n                          onClick={() => handleItemClick(\"hiv-test\")}\r\n                          style={{\r\n                            backgroundColor:\r\n                              activeItem === \"hiv-test\" ? \"#000\" : \"\",\r\n                          }}\r\n                          //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                        >\r\n                          <span style={{ color: \"#fff\" }}>\r\n                            Request {\"&\"} Result Form\r\n                            {completed.includes(\"hiv-test\") && (\r\n                              <Icon name=\"check\" color=\"green\" />\r\n                            )}\r\n                          </span>\r\n\r\n                          {/* <Label color='teal'>3</Label> */}\r\n                        </Menu.Item>\r\n                      )}\r\n                      <Menu.Item\r\n                        name=\"spam\"\r\n                        active={activeItem === \"post-test\"}\r\n                        onClick={() => handleItemClick(\"post-test\")}\r\n                        style={{\r\n                          backgroundColor:\r\n                            activeItem === \"post-test\" ? \"#000\" : \"\",\r\n                        }}\r\n                        disabled={activeItem !== \"post-test\" ? true : false}\r\n                      >\r\n                        {/* <Label>4</Label> */}\r\n                        <span style={{ color: \"#fff\" }}>\r\n                          Post Test Counseling\r\n                          {completed.includes(\"post-test\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item>\r\n                      {console.log(\r\n                        \"testing recency age\",\r\n                        patientObj2.riskStratificationResponseDto?.age\r\n                      )}\r\n                      {patientObj2?.hivTestResult &&\r\n                        patientObj2?.hivTestResult === \"Positive\" &&\r\n                        patientObj2.riskStratificationResponseDto?.age >=\r\n                          15 &&\r\n                        permissions.includes(\"Request_and_Result_Form\") && (\r\n                          <Menu.Item\r\n                            name=\"spam\"\r\n                            active={activeItem === \"recency-testing\"}\r\n                            onClick={() => {\r\n                              handleItemClick(\"recency-testing\");\r\n                            }}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"recency-testing\" ? \"#000\" : \"\",\r\n                            }}\r\n                            disabled={\r\n                              activeItem !== \"recency-testing\" ? true : false\r\n                            }\r\n                          >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              HIV Recency Testing\r\n                              {completed.includes(\"recency-testing\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n                      {/* <Menu.Item\r\n                        name=\"spam\"\r\n                        active={activeItem === \"indexing\"}\r\n                        onClick={() => handleItemClick(\"indexing\")}\r\n                        style={{\r\n                          backgroundColor:\r\n                            activeItem === \"indexing\" ? \"#000\" : \"\",\r\n                        }}\r\n                        disabled={activeItem !== \"indexing\" ? true : false}\r\n                      >\r\n               \r\n                        <span style={{ color: \"#fff\" }}>\r\n                          Index Notification Services - Elicitation\r\n                          {completed.includes(\"indexing\") && (\r\n                            <Icon name=\"check\" color=\"green\" />\r\n                          )}\r\n                        </span>\r\n                      </Menu.Item> */}\r\n                      {/* {patientObj2?.hivTestResult &&\r\n                        patientObj2?.hivTestResult === \"Positive\" && (\r\n                          <Menu.Item\r\n                            name=\"spam\"\r\n                            active={activeItem === \"fit\"}\r\n                            onClick={() => handleItemClick(\"fit\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"fit\" ? \"#000\" : \"\",\r\n                            }}\r\n                           \r\n                          >\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              Family Index Testing form\r\n                              {completed.includes(\"fit\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )} */}\r\n                      {permissions.includes(\"Nigeria_PNS_Form\") &&\r\n                        patientObj2?.hivTestResult &&\r\n                        patientObj2?.hivTestResult === \"Positive\" && (\r\n                          <Menu.Item\r\n                            name=\"inbox\"\r\n                            active={activeItem === \"pns-history\"}\r\n                            onClick={() => handleItemClick(\"pns-history\")}\r\n                            style={{\r\n                              backgroundColor:\r\n                                activeItem === \"pns-history\" ? \"#000\" : \"\",\r\n                            }}\r\n                          >\r\n                            <span style={{ color: \"#fff\" }}>\r\n                              {\" \"}\r\n                              Partner Notification Services\r\n                              {completed.includes(\"pns\") && (\r\n                                <Icon name=\"check\" color=\"green\" />\r\n                              )}\r\n                            </span>\r\n                          </Menu.Item>\r\n                        )}\r\n                      {/*<Menu.Item*/}\r\n                      {/*  name=\"spam\"*/}\r\n                      {/*  active={activeItem === \"continuous-referral\"}*/}\r\n                      {/*  onClick={() => handleItemClick(\"continuous-referral\")}*/}\r\n                      {/*  style={{*/}\r\n                      {/*    backgroundColor:*/}\r\n                      {/*      activeItem === \"continuous-referral\" ? \"#000\" : \"\",*/}\r\n                      {/*  }}*/}\r\n                      {/*  disabled={*/}\r\n                      {/*    activeItem !== \"continuous-referral\" ? true : false*/}\r\n                      {/*  }*/}\r\n                      {/*>*/}\r\n                      {/*  <span style={{ color: \"#fff\" }}>*/}\r\n                      {/*    Client Referral Service*/}\r\n                      {/*    {completed.includes(\"continuous-referral\") && (*/}\r\n                      {/*      <Icon name=\"check\" color=\"green\" />*/}\r\n                      {/*    )}*/}\r\n                      {/*  </span>*/}\r\n                      {/*</Menu.Item>*/}\r\n                      {permissions.includes(\"Referral_Form\") && (\r\n                        <Menu.Item\r\n                          name=\"inbox\"\r\n                          active={activeItem === \"refferal-history\"}\r\n                          onClick={() => handleItemClick(\"refferal-history\")}\r\n                          style={{\r\n                            backgroundColor:\r\n                              activeItem === \"refferal-history\" ? \"#000\" : \"\",\r\n                          }}\r\n                        >\r\n                          <span style={{ color: \"#fff\" }}>\r\n                            {\" \"}\r\n                            Client Referral Service\r\n                            {completed.includes(\"refferal\") && (\r\n                              <Icon name=\"check\" color=\"green\" />\r\n                            )}\r\n                          </span>\r\n                        </Menu.Item>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  margingLeft: \"-50px\",\r\n                  paddingLeft: \"-20px\",\r\n                }}\r\n              >\r\n                {activeItem === \"risk\" && (\r\n                  <RiskStratification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setHideOtherMenu={setHideOtherMenu}\r\n                    patientAge={props.patientAge}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    patientObject={locationState.patientObject}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setOrganizationInfo={setOrganizationInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"basic\" && (\r\n                  <BasicInfo\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                    sex={locationState.patientObject.gender}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    patientList={props.patientList}\r\n                    patientObject={locationState.patientObject}\r\n                    setBasicInfo={setBasicInfo}\r\n                    checkedInPatient={props.checkedInPatient}\r\n                  />\r\n                )}\r\n                {activeItem === \"pre-test-counsel\" && (\r\n                  <PreTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"hiv-test\" && (\r\n                  <HivTestResult\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"post-test\" && (\r\n                  <PostTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                    patientsHistory={props.patients}\r\n                  />\r\n                )}\r\n                {activeItem === \"indexing\" && (\r\n                  <IndexingContactTracing\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"recency-testing\" && (\r\n                  <RecencyTesting\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"others\" && (\r\n                  <Others\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    clientCode={props.clientCode}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"pns-history\" && (\r\n                  <PNSHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"pns\" && (\r\n                  <PnsForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    // addNewForm={false}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"view-pns\" && (\r\n                  <ViewPNSForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n                {activeItem === \"fit\" && (\r\n                  <FamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    history={true}\r\n                  />\r\n                )}\r\n                {/*{activeItem === \"new-referral\" && (*/}\r\n                {/*  <ReferralUnit*/}\r\n                {/*    handleItemClick={handleItemClick}*/}\r\n                {/*    setCompleted={setCompleted}*/}\r\n                {/*    completed={completed}*/}\r\n                {/*    setPatientObj={setPatientObj2}*/}\r\n                {/*    patientObj={patientObj2}*/}\r\n                {/*    setExtra={setExtra}*/}\r\n                {/*    extra={extra}*/}\r\n                {/*    basicInfo={basicInfo}*/}\r\n                {/*    organizationInfo={organizationInfo}*/}\r\n                {/*    addNewForm={false}*/}\r\n                {/*  />*/}\r\n                {/*)}*/}\r\n                {activeItem === \"client-referral\" && (\r\n                  <RefferralUnit\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                  />\r\n                )}\r\n                {activeItem === \"refferal-history\" && (\r\n                  <ClientReferralHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n                {activeItem === \"view-referral\" && (\r\n                  <ViewClientReferral\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj2}\r\n                    patientObj={patientObj2}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js",["893","894","895","896","897","898","899","900","901"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport HIVSTPatientRegistration from \"./HIVSTPatientRegistration\";\r\n// import RiskStratification from \"../ContinuesHTSEnrollment/RiskStratification\";\r\n// import BasicInfo from \"../ContinuesHTSEnrollment/BasicInfo\";\r\n// import PreTest from \"../ContinuesHTSEnrollment/PreTest\";\r\n// import HivTestResult from \"../ContinuesHTSEnrollment/HivTestResult\";\r\n// import PostTest from \"../ContinuesHTSEnrollment/PostTest\";\r\n// import IndexingContactTracing from \"../ContinuesHTSEnrollment/Elicitation\";\r\n// import RecencyTesting from \"../ContinuesHTSEnrollment/RecencyTesting\";\r\n// import Others from \"../ContinuesHTSEnrollment/Others\";\r\n// import PNSHistory from \"../NewRegistration/PartnerNotificationServices/PNSHistory\";\r\n// import PnsForm from \"../NewRegistration/PartnerNotificationServices/PnsForm\";\r\n// import ViewPNSForm from \"../NewRegistration/PartnerNotificationServices/ViewPnsForm\";\r\n// import ReferralUnit from \"../ContinuesHTSEnrollment/ClientReferral/ReferralUnit\";\r\n\r\nconst ExistenceClientHIVSTRegistration = (props) => {\r\n    // console.log(\"ExistenceClientHIVSTRegistration\", props.patientObj)\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    const [activeItem, setactiveItem] = useState(\"reg\");\r\n    const [completed, setCompleted] = useState([]);\r\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n    // const [saving, setSaving] = useState(false);\r\n    const [patientObj2, setPatientObj2] = useState({});\r\n\r\n    const handleItemClick = (activeItem) => {\r\n        setactiveItem(activeItem);\r\n        //setCompleted({...completed, ...completedMenu})\r\n    };\r\n\r\n    // console.log(\"ExistenceClientHIVSTRegistration\", locationState.patientObject)\r\n    return (<>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n        <Card>\r\n            <CardBody>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <h3> HIV SELF TEST </h3>\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <Menu\r\n                                size=\"large\"\r\n                                vertical\r\n                                style={{ backgroundColor: \"#014D88\" }}\r\n                            >\r\n                                <Menu.Item\r\n                                    name=\"inbox\"\r\n                                    active={activeItem === \"reg\"}\r\n                                    onClick={() => handleItemClick(\"reg\")}\r\n                                    style={{\r\n                                        backgroundColor: activeItem === \"reg\" ? \"#000\" : \"\",\r\n                                    }}\r\n                                >\r\n                                    <span style={{ color: \"#fff\" }}>\r\n                                        {\" \"}\r\n                                        Patient Registration\r\n                                        {completed.includes(\"reg\") && (<Icon name=\"check\" color=\"green\" />)}\r\n                                    </span>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </div>\r\n                        <div\r\n                            className=\"col-md-9 col-sm-9 col-lg-9 \"\r\n                            style={{\r\n                                backgroundColor: \"#fff\", margingLeft: \"-50px\", paddingLeft: \"-20px\",\r\n                            }}\r\n                        >\r\n                            {activeItem === \"reg\" && ( <HIVSTPatientRegistration\r\n                                handleItemClick={handleItemClick}\r\n                                setCompleted={setCompleted}\r\n                                completed={completed}\r\n                                setPatientObj={setPatientObj2}\r\n                                patientObj={patientObj2}\r\n                                setHideOtherMenu={setHideOtherMenu}\r\n                                // patientAge={props.patientAge}\r\n                                // setExtra={setExtra}\r\n                                // extra={extra}\r\n                                patientObject={locationState.patientObject}\r\n                            // activePage={props.activePage}\r\n                            // setActivePage={props.setActivePage}\r\n                            />)}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </CardBody>\r\n        </Card>\r\n    </>);\r\n\r\n};\r\nexport default ExistenceClientHIVSTRegistration;","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js",["902","903","904","905"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientnHistory = (props) => {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    //patients()\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"view\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  const handleHTSDelete = (row) => {\r\n    console.log(props.patientList);\r\n    axios\r\n      .delete(`${baseUrl}hts/${row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        toast.success(\r\n          `HTS patient with client code ${row.clientCode}, deleted successfully`\r\n        );\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.err(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"HTS HISTORY\"\r\n        columns={[\r\n          // { title: \"HTS ID\", field: \"id\" },\r\n          { title: \"Date\", field: \"date\" },\r\n          { title: \"Pre Test Counseling\", field: \"pre\" },\r\n          { title: \"Recency Test\", field: \"rencency\" },\r\n          { title: \"Post Test\", field: \"post\" },\r\n          // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n          {\r\n            title: \"Request & Result\",\r\n            field: \"requestResult\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={props.loading}\r\n        data={props.patientList.map((row) => ({\r\n          // id: row.id,\r\n          date: row.dateVisit,\r\n          pre: row.knowledgeAssessment ? \"Filled\" : \"Not Filled \",\r\n          requestResult: row.confirmatoryTest ? \"Filled\" : \"Not Filled \",\r\n          rencency: row.recency ? \"Filled\" : \"Not Filled \",\r\n          post: row.postTestCounselingKnowledgeAssessment\r\n            ? \"Filled\"\r\n            : \"Not Filled \",\r\n          //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n          actions: (\r\n            <div>\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  >\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            //backgroundColor: \"#9F9FA5\",\r\n            color: \"#000\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientnHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921"],"import React, { useState } from 'react';\n\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\n   } from \"reactstrap\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from 'highcharts';\n import HighchartsReact from 'highcharts-react-official';\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\nimport { Progress } from 'reactstrap';\n\n\n// Load Highcharts modules\n//require(\"highcharts/modules/exporting\")(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n    },\n},\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst SummaryView = (props) => {\n  const classes = useStyles();\n  const [chartValue, setChartValue] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n  const [state, setState] = useState({ activeItem: 'gamepad' })\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n  const { activeItem } = state\n  const chartPage  = e => {\n\n    setChartValue(e)\n  }\n\n  //Menu Icon \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  return (\n    <div  spacing={5} style={{ padding: 20 }} >\n      <Row>\n        <Col md={12}>\n          {/* The second Column Card Layout  */}\n        <Row>\n                 \n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\n                  </CardBody></Card>\n                  </Col>\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\n                  </CardBody></Card>\n                  </Col>\n              </Row>\n\n           \n        </Col>\n      </Row>\n\n      \n\n      \n\n    </div>\n  );\n}\n\nexport default SummaryView;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js",["922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\n\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllStateByCountryId,\r\n  getAllCountry,\r\n  getAllProvinces,\r\n  getAllGenders,\r\n  alphabetOnly,\r\n} from \"../../../../../utility\";\r\n\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewFamilyIndexTestingForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setClientCurrentlyOnHiv] = useState(true);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [indexClientConfirmedHivPositive, setIndexClientConfirmedHivPositive] =\r\n    useState(false);\r\n  const [familyRelationship, setFamilyRelationship] = useState([]);\r\n  const [selectedFamilyIndex, setSelectedFamilyIndex] = useState({});\r\n  const [familyIndexHivStatus, setFamilyIndexHivStatus] = useState([]);\r\n  const [familyIndex, setFamilyIndex] = useState([]);\r\n  const [followUpAppointmentLocation, setFollowUpAppointmentLocation] =\r\n    useState([]);\r\n  const [indexVisitAttempt, setIndexVisitAttempt] = useState([]);\r\n  const [isWillingToHaveChildrenTested, setIsWillingToHaveChildrenTested] =\r\n    useState(false);\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [facilityInfo, setFacilityInfo] = useState(props?.organizationInfo);\r\n\r\n  const [familyIndexRequestDto, setFamilyIndexRequestDto] = useState({\r\n    childNumber: \"\",\r\n    familyIndexHivStatus: \"\",\r\n    familyIndexTestingUuid: \"\",\r\n    familyRelationship: \"\",\r\n    motherDead: \"\",\r\n    yearMotherDead: \"\",\r\n    uan: \"\",\r\n  });\r\n\r\n  const [arrayFamilyIndexRequestDto, setArrayFamilyIndexRequestDto] = useState(\r\n    []\r\n  );\r\n  const [familIndexInfo, setFamilIndexInfo] = useState({});\r\n  const [errorFamilyIndexDTO, setErrorFamilyIndexDTO] = useState({});\r\n  const [errorFamilyIndexTracker, setErrorFamilyIndexDTOTracker] = useState({});\r\n\r\n  const [addIndexTracker, setaAddIndexTracker] = useState(false);\r\n  const [addIndexTracker2, setaAddIndexTracker2] = useState(false);\r\n  const [selectedFamilyIndexForm, setSelectedFamilyIndexForm] = useState({});\r\n  const [selectedFamilyTrackerForm, setSelectedFamilyTrackerForm] = useState(\r\n    {}\r\n  );\r\n\r\n  const [familyTestingTrackerRequestDTO, setFamilyTestingTrackerRequestDTO] =\r\n    useState({});\r\n  const [\r\n    arrayFamilyTestingTrackerRequestDTO,\r\n    setArrayFamilyTestingTrackerRequestDTO,\r\n  ] = useState([]);\r\n\r\n  const [payload, setPayload] = useState({\r\n    age: calculate_age(\r\n      props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        : props?.patientObj?.personResponseDto?.dateOfBirth\r\n    ),\r\n    alternatePhoneNumber: \"\",\r\n    dateClientEnrolledOnTreatment: \"\",\r\n    dateIndexClientConfirmedHivPositiveTestResult:\r\n      props?.patientObj?.confirmatoryTest2.date2,\r\n    dateOfBirth: props?.basicInfo?.personResponseDto?.dateOfBirth,\r\n    extra: {},\r\n    facilityName: \"\",\r\n    familyIndexClient: \"\",\r\n\r\n    familyIndexRequestDto: [\r\n      {\r\n        childNumber: 0,\r\n        familyIndexHivStatus: \"string\",\r\n        familyIndexTestingUuid: \"string\",\r\n        familyRelationship: \"string\",\r\n        motherDead: \"string\",\r\n        yearMotherDead: \"string\",\r\n      },\r\n    ],\r\n    familyTestingTrackerRequestDTO: [\r\n      {\r\n        attempt: \"string\",\r\n        dateEnrolledInOVC: \"string\",\r\n        dateEnrolledOnArt: \"string\",\r\n        dateTested: \"string\",\r\n        dateVisit: \"string\",\r\n        facilityId: 0,\r\n        familyIndexTestingId: 0,\r\n        familyIndexTestingUuid: \"string\",\r\n        followUpAppointmentLocation: \"string\",\r\n        hiveTestResult: \"string\",\r\n        knownHivPositive: \"string\",\r\n        ovcId: \"string\",\r\n        positionOfChildEnumerated: 0,\r\n        scheduleVisitDate: \"string\",\r\n        trackerAge: 0,\r\n        trackerSex: \"string\",\r\n      },\r\n    ],\r\n\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: \"\",\r\n    indexClientId: props?.basicInfo?.clientCode,\r\n    isClientCurrentlyOnHivTreatment: \"\",\r\n    lga: \"\",\r\n    maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n    name: props?.basicInfo?.personResponseDto?.firstName,\r\n    phoneNumber:\r\n      props?.basicInfo?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n    middleName: props?.basicInfo?.personResponseDto?.otherName,\r\n    lastName: props?.basicInfo?.personResponseDto?.surname,\r\n    visitDate: \"\",\r\n    recencyTesting: \"\",\r\n    setting: props.patientObj.testingSetting,\r\n\r\n    sex: props?.basicInfo?.personResponseDto?.gender.id,\r\n    state: \"\",\r\n    virallyUnSuppressed: \"\",\r\n    willingToHaveChildrenTestedElseWhere: \"\",\r\n\r\n    //\r\n    //\r\n    // referralDate: \"\",\r\n    // hospitalNumber: \"\",\r\n    // countryId: \"1\",\r\n    // stateId: \"\",\r\n\r\n    reasonForIndexClientDateHivConfirmedNotSelected: \"\",\r\n    address: props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n    recencyTesting: \"\",\r\n  });\r\n  const [formId, setFormId] = useState(\"\");\r\n\r\n  const [lgas, setLGAs] = useState([]);\r\n  const [facilities, setFacilities1] = useState([]);\r\n  const [selectedState, setSelectedState] = useState({});\r\n  const [selectedFacility, setSelectedFacility] = useState({});\r\n  const [selectedLga, setSelectedLga] = useState({});\r\n  const [viewFamilyIndexForm, setViewFamilyIndexForm] = useState(false);\r\n  const [viewFamilyTrackerForm, setViewFamilyTrackerForm] = useState(false);\r\n\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStates(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch states error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLGAs(response.data);\r\n          // const selectedLga = response.data.find(lga => lga.id === id);\r\n          // setPayload(prevPayload => ({ ...prevPayload, lgaTransferTo: selectedLga ? selectedLga.name : \"\" }));\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch LGA error\" + e);\r\n      });\r\n  };\r\n\r\n  const getFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"this info\", response.data);\r\n          setFamilIndexInfo(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFormId(response.data.htsClientId);\r\n\r\n          console.log(\"this info\", response.data);\r\n          setPayload({\r\n            ...payload,\r\n            // id: 6,\r\n            // uuid: \"ce538c49-0795-41a3-a93f-94d3afabadff\",\r\n            // htsClientUuid: \"0c02d167-50e5-4ddf-925a-3ac95753fd28\",\r\n            htsClientId: response.data.htsClientId,\r\n            htsClientUuid: response.data.htsClientUuid,\r\n            extra: response.data.extra,\r\n            state: response.data.state,\r\n            lga: response.data.lga,\r\n            facilityName: response.data.facilityName,\r\n            visitDate: response.data.visitDate,\r\n            setting: response.data.setting,\r\n            familyIndexClient: response.data.familyIndexClient,\r\n            sex: response.data.sex,\r\n            indexClientId: response.data.indexClientId,\r\n            name: response.data.name,\r\n            dateOfBirth: response.data.dateOfBirth,\r\n            age: response.data.age,\r\n            maritalStatus: response.data.maritalStatus,\r\n            phoneNumber: response.data.phoneNumber,\r\n            alternatePhoneNumber: response.data.alternatePhoneNumber,\r\n            dateIndexClientConfirmedHivPositiveTestResult:\r\n              response.data.dateIndexClientConfirmedHivPositiveTestResult,\r\n            virallyUnSuppressed: response.data.virallyUnSuppressed,\r\n            isClientCurrentlyOnHivTreatment:\r\n              response.data.isClientCurrentlyOnHivTreatment,\r\n            dateClientEnrolledOnTreatment:\r\n              response.data.dateClientEnrolledOnTreatment,\r\n            recencyTesting: response.data.recencyTesting,\r\n            willingToHaveChildrenTestedElseWhere:\r\n              response.data?.willingToHaveChildrenTestedElseWhere,\r\n          });\r\n\r\n          console.log(response.data);\r\n          setArrayFamilyTestingTrackerRequestDTO(\r\n            response.data.familyTestingTrackerResponseDTO\r\n          );\r\n          setArrayFamilyIndexRequestDto(response.data.familyIndexList);\r\n          //  FamilyIndexInfo(response.data[0].ID)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const validateAddFamilyINdexDTO = () => {\r\n    let temp = {};\r\n\r\n    // if all are empty\r\n\r\n    if (\r\n      familyIndexRequestDto.familyRelationship === \"\" &&\r\n      familyIndexRequestDto.familyIndexHivStatus === \"\" &&\r\n      familyIndexRequestDto.motherDead === \"\"\r\n    ) {\r\n      setaAddIndexTracker(true);\r\n    } else {\r\n      setaAddIndexTracker(false);\r\n\r\n      temp.familyRelationship =\r\n        familyIndexRequestDto.familyRelationship === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.childNumber =\r\n        familyIndexRequestDto.familyRelationship ===\r\n          \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" &&\r\n        familyIndexRequestDto.childNumber === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      temp.familyIndexHivStatus =\r\n        familyIndexRequestDto.familyIndexHivStatus === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.motherDead =\r\n        familyIndexRequestDto.motherDead === \"\" ? \"field is required\" : \"\";\r\n      temp.yearMotherDead =\r\n        familyIndexRequestDto.motherDead.toLowerCase() === \"yes\" &&\r\n        familyIndexRequestDto.yearMotherDead === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      setErrorFamilyIndexDTO({ ...temp });\r\n      return Object.values(temp).every((x) => x == \"\");\r\n    }\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFacilities1(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilityInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getFamilyRelationship = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyRelationship(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index hiv status\r\n  const FAMILY_INDEX_HIV_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX_HIV_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndexHivStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index\r\n\r\n  const FAMILY_INDEX = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndex(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const FOLLOW_UP_APPOINTMENT_LOCATION = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FOLLOW UP_APPOINTMENT_LOCATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFollowUpAppointmentLocation(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // GET\r\n  const INDEX_VISIT_ATTEMPTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_VISIT_ATTEMPTS`, {\r\n        headers: { Authorization: `secBearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexVisitAttempt(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // generate index client Id using the HTS client code/family index client unique ART number\r\n  const generateIndexClientId = () => {\r\n    const indexClientId = Math.floor(1000 + Math.random() * 9000);\r\n  };\r\n\r\n  // show reason for not selecting hiv confirm date, if the hiv confirm date is not selected and hide it when it is selected\r\n  // const showReasonForNotSelectingHivConfirmDate = () => {\r\n  //        if(payload.dateIndexClientConfirmedHiv === \"\"){\r\n  //            setIndexClientConfirmedHivPositive(true);\r\n  //        }else{\r\n  //            setIndexClientConfirmedHivPositive(false);\r\n  //        }\r\n  // }\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    getAllGenders()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadStates();\r\n    loadFamilyIndexSetting();\r\n    getCountry();\r\n    getStateByCountryId();\r\n    getMaritalStatus();\r\n    getFamilyRelationship();\r\n    FAMILY_INDEX_HIV_STATUS();\r\n    FAMILY_INDEX();\r\n    FOLLOW_UP_APPOINTMENT_LOCATION();\r\n    INDEX_VISIT_ATTEMPTS();\r\n    getListoFFamilyIndexInfo();\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      loadLGA(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, []);\r\n\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"alternatePhoneNumber\") {\r\n      setPayload({ ...payload, alternatePhoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferrringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferrringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfRecievingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfRecievingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    setPayload({\r\n      ...payload,\r\n      nameOfRecievingFacility: e.name,\r\n      addressOfRecievingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfRecievingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyIndexRequestDto = (e) => {\r\n    setErrorFamilyIndexDTO({ ...errorFamilyIndexDTO, [e.target.name]: \"\" });\r\n    setaAddIndexTracker(false);\r\n    // console.log(e);\r\n    setFamilyIndexRequestDto({\r\n      ...familyIndexRequestDto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n  const handleSubmitfamilyIndexRequestDto = (e) => {\r\n    if (validateAddFamilyINdexDTO()) {\r\n      let existingArray = arrayFamilyIndexRequestDto;\r\n\r\n      existingArray.push(familyIndexRequestDto);\r\n      setFamilyIndexRequestDto({\r\n        childNumber: \"\",\r\n        familyIndexHivStatus: \"\",\r\n        familyIndexTestingUuid: \"\",\r\n        familyRelationship: \"\",\r\n        motherDead: \"\",\r\n        yearMotherDead: \"\",\r\n        uan: \"\",\r\n      });\r\n\r\n      setArrayFamilyIndexRequestDto(existingArray);\r\n    }\r\n  };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyTestingTrackerRequestDTO = (e) => {\r\n    setErrorFamilyIndexDTOTracker({\r\n      ...errorFamilyIndexTracker,\r\n      [e.target.name]: \"\",\r\n    });\r\n    setaAddIndexTracker2(false);\r\n    if (e.target.name === \"positionOfChildEnumerated\") {\r\n      if (e.target.value > -1) {\r\n        setFamilyTestingTrackerRequestDTO({\r\n          ...familyTestingTrackerRequestDTO,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"trackerAge\") {\r\n      if (e.target.value > -1) {\r\n        setFamilyTestingTrackerRequestDTO({\r\n          ...familyTestingTrackerRequestDTO,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      setFamilyTestingTrackerRequestDTO({\r\n        ...familyTestingTrackerRequestDTO,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n\r\n  const handleSubmitfamilyTestingTrackerRequestDTO = (e) => {\r\n    if (familyTestingTrackerRequestDTO?.dateVisit !== \"\") {\r\n      let existingArray = arrayFamilyTestingTrackerRequestDTO;\r\n\r\n      let newDTO = familyTestingTrackerRequestDTO;\r\n      familyTestingTrackerRequestDTO.facilityId =\r\n        facilityInfo.currentOrganisationUnitId;\r\n\r\n      existingArray.push(newDTO);\r\n      setFamilyTestingTrackerRequestDTO({\r\n        attempt: \"\",\r\n        dateEnrolledInOVC: \"\",\r\n        dateEnrolledOnArt: \"\",\r\n        dateTested: \"\",\r\n        dateVisit: \"\",\r\n        facilityId: \"\",\r\n        familyIndexTestingId: \"\",\r\n        familyIndexTestingUuid: \"\",\r\n        followUpAppointmentLocation: \"\",\r\n        hiveTestResult: \"\",\r\n        knownHivPositive: \"\",\r\n        ovcId: \"\",\r\n        positionOfChildEnumerated: \"\",\r\n        scheduleVisitDate: \"\",\r\n        trackerAge: \"\",\r\n        trackerSex: \"\",\r\n      });\r\n\r\n      setArrayFamilyTestingTrackerRequestDTO(existingArray);\r\n    } else {\r\n      let ans = Object.values(familyTestingTrackerRequestDTO).every(\r\n        (each) => each === \"\"\r\n      );\r\n\r\n      if (ans) {\r\n        setaAddIndexTracker2(true);\r\n      } else {\r\n        let temp = {};\r\n        temp.dateVisit =\r\n          familyTestingTrackerRequestDTO?.dateVisit === \"\"\r\n            ? \"field is required\"\r\n            : \"\";\r\n\r\n        setErrorFamilyIndexDTOTracker({ ...temp });\r\n        return Object.values(temp).every((x) => x == \"\");\r\n      }\r\n    }\r\n  };\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    // console.log(response);\r\n  };\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setPayload({ ...payload, [inputName]: NumberValue });\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"alternatePhoneNumber\") {\r\n      setPayload({ ...payload, [inputName]: NumberValue });\r\n    }\r\n  };\r\n\r\n  const handleFamilyRelationshipChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPayload((prevPayload) => ({\r\n      ...prevPayload,\r\n      [name]: value,\r\n      // Reset childNumber when family relationship changes\r\n      childNumber:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.childNumber,\r\n      // Reset familyIndexHivStatus when family relationship changes, where mother = '1293', father = '1294', biological child = '1295', siblings = '1296'\r\n      familyIndexHivStatus: [\r\n        \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n        \"FAMILY_RELATIONSHIP_FATHER\",\r\n        \"FAMILY_RELATIONSHIP_MOTHER\",\r\n        \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n      ].includes(value)\r\n        ? \"\"\r\n        : prevPayload.familyIndexHivStatus,\r\n      // Reset uan when family relationship changes\r\n      uan:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_SIBLINGS\"\r\n          ? \"\"\r\n          : prevPayload.uan,\r\n      // Reset motherDead when family relationship changes\r\n      motherDead:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.motherDead,\r\n      // Reset yearMotherDied when family relationship changes\r\n      yearMotherDied:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.yearMotherDied,\r\n    }));\r\n  };\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const convertCodeToDisplay = (type, value) => {\r\n    let data = \"\";\r\n    if (type === \"familyRelationship\") {\r\n      data = familyRelationship.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n  };\r\n\r\n  // View Row\r\n  const viewFamilyIndexRow = (data, index) => {\r\n    setViewFamilyIndexForm(true);\r\n    setSelectedFamilyIndexForm({ data: data, index: index });\r\n    setFamilyIndexRequestDto({ ...data });\r\n  };\r\n  const viewFamilyTrackerRow = (data, index) => {\r\n    setViewFamilyTrackerForm(true);\r\n    setSelectedFamilyTrackerForm({ data: data, index: index });\r\n    setFamilyTestingTrackerRequestDTO({ ...data });\r\n  };\r\n  // Update  Row\r\n  const updateFamilyIndexRow = () => {\r\n    if (validateAddFamilyINdexDTO()) {\r\n      setViewFamilyIndexForm(false);\r\n\r\n      let newArray = [...arrayFamilyIndexRequestDto];\r\n      newArray[selectedFamilyIndexForm.index] = familyIndexRequestDto;\r\n      // newArray[selectedFamilyIndexForm.index] = familyIndexRequestDto;\r\n      setArrayFamilyIndexRequestDto(newArray);\r\n    }\r\n  };\r\n\r\n  const updateFamilyTrackerRow = () => {\r\n    setViewFamilyTrackerForm(false);\r\n\r\n    let newArray = [...arrayFamilyTestingTrackerRequestDTO];\r\n    newArray[selectedFamilyTrackerForm.index] = familyTestingTrackerRequestDTO;\r\n    setArrayFamilyTestingTrackerRequestDTO(newArray);\r\n  };\r\n\r\n  // Remove Row\r\n  const removeFamilyIndexRow = (index) => {\r\n    arrayFamilyIndexRequestDto.splice(index, 1);\r\n    setArrayFamilyIndexRequestDto([...arrayFamilyIndexRequestDto]);\r\n  };\r\n\r\n  const removeFamilyTrackerRow = (index) => {\r\n    arrayFamilyTestingTrackerRequestDTO.splice(index, 1);\r\n    setArrayFamilyTestingTrackerRequestDTO([\r\n      ...arrayFamilyTestingTrackerRequestDTO,\r\n    ]);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    const { name, value } = e.target;\r\n\r\n    if (e.target.name === \"name\" || e.target.name === \"lastName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: name,\r\n      }));\r\n    } else if (name === \"willingToHaveChildrenTested\") {\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n        familyIndexTracker: {\r\n          ...prevState.familyIndexTracker,\r\n          positionOfChildEnumerated:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.positionOfChildEnumerated\r\n              : \"\",\r\n          trackerSex:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerSex : \"\",\r\n          trackerAge:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerAge : \"\",\r\n          scheduleVisitDate:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.scheduleVisitDate\r\n              : \"\",\r\n          followUpAppointmentLocation:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.followUpAppointmentLocation\r\n              : \"\",\r\n          dateVisit:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateVisit : \"\",\r\n          knownHivPositive:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.knownHivPositive\r\n              : \"\",\r\n          dateTested:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateTested : \"\",\r\n          hivTestResult:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.hivTestResult : \"\",\r\n          dateEnrolledInOVC:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledInOVC\r\n              : \"\",\r\n          dateEnrolledOnArt:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledOnArt\r\n              : \"\",\r\n          attempt: value === \"Yes\" ? prevState.familyIndexTracker.attempt : \"\",\r\n        },\r\n      }));\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"indexClientId\" && e.target.value !== \"\") {\r\n      //    setPayload({...payload, [e.target.name]: name })\r\n    } else if (e.target.name === \"dateIndexConfirmedHiv\") {\r\n      if (e.target.value !== \"\") {\r\n        const name = e.target.name;\r\n        setPayload({ ...payload, [e.target.name]: name });\r\n        setIndexClientConfirmedHivPositive(false); // Hide extra fields when date is selected\r\n      } else {\r\n        setIndexClientConfirmedHivPositive(true); // Show extra fields if date is not selected\r\n      }\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonRefferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dateOfBirth: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({\r\n        ...payload,\r\n        dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\"),\r\n      });\r\n      payload.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.referralDate = payload.referralDate ? \"\" : \"This field is required.\";\r\n    temp.name = payload.name ? \"\" : \"This field is required.\";\r\n    temp.dateIndexClientConfirmedHivPositiveTestResult =\r\n      payload.dateIndexClientConfirmedHivPositiveTestResult\r\n        ? \"\"\r\n        : \"This is field is required\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.lgaId = payload.lgaId ? \"\" : \"This field is required.\";\r\n    temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    temp.sex = payload.sex ? \"\" : \"This field is required.\";\r\n    temp.dateOfBirth = payload.dateOfBirth ? \"\" : \"This field is required.\";\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.familyIndexClient = payload.familyIndexClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    temp.facilityName = payload.facilityName ? \"\" : \"This field is required.\";\r\n    if (payload.dateIndexClientConfirmedHiv === \"\") {\r\n      temp.reasonForIndexClientDateHivConfirmedNotSelected =\r\n        payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n    }\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postPayload = (payload) => {\r\n    axios\r\n      .put(`${baseUrl}hts-family-index-testing/${formId}`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSaving(false);\r\n        props.handleItemClick(\"fit-history\");\r\n\r\n        toast.success(\"Family Indexform save succesfully!\");\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        console.log(error);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage, {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    payload.familyIndexRequestDto = arrayFamilyIndexRequestDto;\r\n    payload.familyTestingTrackerRequestDTO =\r\n      arrayFamilyTestingTrackerRequestDTO;\r\n    payload.state = stateInfo;\r\n    payload.lga = lgaInfo;\r\n    payload.facilityName = facilityInfo.currentOrganisationUnitName;\r\n\r\n    console.log(payload);\r\n    // if (validate()) {\r\n    //   setSaving(true);\r\n\r\n    postPayload(payload);\r\n    //    handleItemClick(\"basic\", \"risk\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}> Family Index Testing Form</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                SECTION A\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stateId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={stateInfo}\r\n                      required\r\n                      // onChange={loadLGA1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterState = states.filter((st) => {\r\n                            return Number(st.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedState(filterState);\r\n\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            stateId: filterState[0].id,\r\n                          }));\r\n                        }\r\n                        loadLGA(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select State</option>\r\n                      {states.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.stateTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.stateTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      LGA <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lgaId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      value={lgaInfo}\r\n                      // onChange={loadFacilities1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterlga = lgas.filter((lg) => {\r\n                            return Number(lg.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedLga(filterlga);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            lgaId: filterlga[0].id,\r\n                          }));\r\n                        }\r\n                        loadFacilities(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select LGA</option>\r\n                      {lgas.map((lga) => (\r\n                        <option key={lga.id} value={lga.id}>\r\n                          {lga.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.lgaId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.lgaId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Facility Name\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityName\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={facilityInfo.currentOrganisationUnitName}\r\n                      required\r\n                      onChange={(e) => {\r\n                        // setPayload(prevPayload => ({ ...prevPayload, facilityTransferTo: e.target.value }));\r\n                        if (e.target.value !== \"\") {\r\n                          const filterFacility = facilities.filter((fa) => {\r\n                            return Number(fa.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedFacility(filterFacility);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            facilityName: filterFacility[0].name,\r\n                          }));\r\n                        }\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      {/* <option>Select Facility</option>\r\n                                            {facilities.map((facility) => (\r\n                                                <option key={facility.id} value={facility.id}>\r\n                                                    {facility.name}\r\n                                                </option>\r\n                                            ))} */}\r\n                    </Input>\r\n                    {errors.facilityTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.facilityTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={payload.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.visitDate !== \"\" ? (\r\n                      <span className={classes.error}>{errors.visitDate}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"setting\"\r\n                      id=\"setting\"\r\n                      value={payload.setting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={true}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.setting !== \"\" ? (\r\n                      <span className={classes.error}>{errors.setting}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Family Index client{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"familyIndexClient\"\r\n                      id=\"familIndxClient\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.familyIndexClient}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {familyIndex &&\r\n                        familyIndex.map((x, index) => (\r\n                          <option key={x.id} value={x.id}>\r\n                            {x.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.familyIndexClient !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.firstName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Middle Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.otherName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Last Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.surname}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Index Client ID\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"indexClientId\"\r\n                      id=\"indexClientId\"\r\n                      value={payload.indexClientId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.indexClientId !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.indexClientId}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sex\"\r\n                      id=\"sex\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.sex}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                        genders.map((gender, index) => (\r\n                          <option key={gender.id} value={gender.id}>\r\n                            {gender.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.sex !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      name=\"dateOfBirth\"\r\n                      id=\"dateOfBirth\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      value={payload.dateOfBirth}\r\n                      onChange={handleDobChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateOfBirth !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateOfBirth}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      id=\"age\"\r\n                      value={payload.age}\r\n                      disabled={ageDisabled}\r\n                      onChange={handleAgeChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.age !== \"\" ? (\r\n                      <span className={classes.error}>{errors.age}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Marital Status <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"maritalStatus\"\r\n                      id=\"maritalStatus\"\r\n                      value={payload.maritalStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      // disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {maritalStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {/* {errors.setting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.setting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                      }}\r\n                      value={payload.phoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/*<div className=\"form-group  col-md-4\">*/}\r\n                {/*  <FormGroup>*/}\r\n                {/*    <Label>Alternative Contact Number</Label>*/}\r\n                {/*    <PhoneInput*/}\r\n                {/*        // disabled={true}*/}\r\n                {/*        containerStyle={{*/}\r\n                {/*          width: \"100%\",*/}\r\n                {/*          border: \"1px solid #014D88\",*/}\r\n                {/*        }}*/}\r\n                {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*        country={\"ng\"}*/}\r\n                {/*        placeholder=\"(234)7099999999\"*/}\r\n                {/*        maxLength={5}*/}\r\n                {/*        name=\"alternatePhoneNumber\"*/}\r\n                {/*        id=\"alternatePhoneNumber\"*/}\r\n                {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*        value={payload.alternatePhoneNumber}*/}\r\n                {/*        onChange={(e) => {*/}\r\n                {/*          checkPhoneNumberBasic(e, \"alternatePhoneNumber\");*/}\r\n                {/*        }}*/}\r\n                {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*    />*/}\r\n\r\n                {/*    /!*{errors.phoneNumber !== \"\" ? (*!/*/}\r\n                {/*    /!*    <span className={classes.error}>*!/*/}\r\n                {/*    /!*        {errors.phoneNumber}*!/*/}\r\n                {/*    /!*    </span>*!/*/}\r\n                {/*    /!*) : (*!/*/}\r\n                {/*    /!*    \"\"*!/*/}\r\n                {/*    /!*)}*!/*/}\r\n                {/*  </FormGroup>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Alternative Contact Number\r\n                      {/* <span style={{color: \"red\"}}> *</span> */}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"alternatePhoneNumber\"\r\n                      id=\"alternatePhoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"alternatePhoneNumber\");\r\n                      }}\r\n                      value={payload.alternatePhoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Descriptiven Residential Address{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={\r\n                        props.patientObj.personResponseDto.address.address[0]\r\n                          .city\r\n                      }\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                      <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*  The Date of Treatmant initiation is validated against the date of HIV test confirmation (confirmatory 2)*/}\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date Of Index Client's confrimed HIV-positive test results{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      id=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      value={\r\n                        payload.dateIndexClientConfirmedHivPositiveTestResult\r\n                      }\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateIndexClientConfirmedHivPositiveTestResult !==\r\n                    \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referralDate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {indexClientConfirmedHivPositive && (\r\n                  <div className=\"form-group col-md-4\">\r\n                    <Label>\r\n                      {\" \"}\r\n                      Reason for not selecting Index client Hiv confirmed test\r\n                      result Date ?{\" \"}\r\n                    </Label>\r\n                    <FormGroup>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        id=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Result not confirmed yet\">\r\n                          Result not confirmed yet\r\n                        </option>\r\n                        <option value=\"NA\">NA</option>\r\n                      </select>\r\n                      {errors.reasonForIndexClientDateHivConfirmedNotSelected !==\r\n                      \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {\r\n                            errors.reasonForIndexClientDateHivConfirmedNotSelected\r\n                          }\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                {/* )} */}\r\n\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>\r\n                    {\" \"}\r\n                    Recency Testing{\" \"}\r\n                    <span> (for newly tested HIV-positive only) </span>{\" \"}\r\n                  </Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recencyTesting\"\r\n                      id=\"reccencyTesting\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.recencyTesting}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Recent Infection\">Recent Infection</option>\r\n                      <option value=\"Long Term Infection\">\r\n                        {\" \"}\r\n                        Long Term Infection\r\n                      </option>\r\n                      <option value=\"Not Done\">Not Done</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/* if index client is hiv positive, and date is selected */}\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>Is client current on HIV treatment ?</Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"isClientCurrentlyOnHivTreatment\"\r\n                      id=\"isClientCurrentlyOnHivTreatment\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.isClientCurrentlyOnHivTreatment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {payload.isClientCurrentlyOnHivTreatment &&\r\n                  payload.isClientCurrentlyOnHivTreatment === \"Yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date of Treatment Initiation{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateClientEnrolledOnTreatment\"\r\n                          id=\"dateClientEnrolledOnTreatment\"\r\n                          value={payload.dateClientEnrolledOnTreatment}\r\n                          onChange={handleInputChange}\r\n                          min={\r\n                            payload.dateIndexClientConfirmedHivPositiveTestResult\r\n                          }\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.action === \"view\" ? true : false}\r\n                        />\r\n                        {errors.treatmentDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                {payload.isClientCurrentlyOnHivTreatment &&\r\n                  payload.isClientCurrentlyOnHivTreatment === \"Yes\" && (\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>virally unsuppressed</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"virallyUnsuppressed\"\r\n                          id=\"virallyUnsuppressed\"\r\n                          onChange={handleInputChange}\r\n                          value={payload.virallyUnSuppressed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                {}\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"willingToHaveChildrenTestedElseWhere\">\r\n                      Are you willing to have your children tested elsewhere by\r\n                      a health care worker?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"willingToHaveChildrenTestedElseWhere\"\r\n                      name=\"willingToHaveChildrenTestedElseWhere\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.willingToHaveChildrenTestedElseWhere}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <br />\r\n            </div>\r\n            {arrayFamilyIndexRequestDto.length > 0 && (\r\n              <>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    SECTION B: FAMILY INDEX\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {viewFamilyIndexForm && (\r\n                    <>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"familyRelationship\">\r\n                            Family Relationship\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"familyRelationship\"\r\n                            name=\"familyRelationship\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.familyRelationship}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {familyRelationship.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errorFamilyIndexDTO.familyRelationship && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.familyRelationship}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.familyRelationship ===\r\n                        \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" && (\r\n                        <div className=\"form-group col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"childNumber\">Child Number</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              id=\"childNumber\"\r\n                              name=\"childNumber\"\r\n                              onChange={handlefamilyIndexRequestDto}\r\n                              value={familyIndexRequestDto.childNumber}\r\n                              disabled={props.action === \"view\" ? true : false}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"1\">1st Child</option>\r\n                              <option value=\"2\">2nd Child</option>\r\n                              <option value=\"3\">3rd Child</option>\r\n                              <option value=\"4\">4th Child</option>\r\n                              <option value=\"5\">5th Child</option>\r\n                              <option value=\"6\">6th Child</option>\r\n                              <option value=\"7\">7th Child</option>\r\n                            </select>\r\n                            {errorFamilyIndexDTO.childNumber && (\r\n                              <span className={classes.error}>\r\n                                {errorFamilyIndexDTO.childNumber}\r\n                              </span>\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"familyIndexHivStatus\">\r\n                            Family Index HIV Status\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"familyIndexHivStatus\"\r\n                            name=\"familyIndexHivStatus\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.familyIndexHivStatus}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {familyIndexHivStatus.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {index}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errorFamilyIndexDTO.familyIndexHivStatus && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.familyIndexHivStatus}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.familyIndexHivStatus &&\r\n                        familyIndexRequestDto.familyIndexHivStatus ===\r\n                          \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\" &&\r\n                        [\r\n                          \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n                          \"FAMILY_RELATIONSHIP_FATHER\",\r\n                          \"FAMILY_RELATIONSHIP_MOTHER\",\r\n                          \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n                        ].includes(\r\n                          familyIndexRequestDto.familyRelationship\r\n                        ) && (\r\n                          <div className=\"form-group col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"uan\">Unique Art No (UAN)</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                id=\"uan\"\r\n                                type=\"text\"\r\n                                name=\"uan\"\r\n                                value={familyIndexRequestDto.uan}\r\n                                onChange={handlefamilyIndexRequestDto}\r\n                                disabled={\r\n                                  familyIndexRequestDto.familyIndexHivStatus !==\r\n                                    \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\" ||\r\n                                  props.action === \"view\"\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                              {errors.uan && (\r\n                                <span className={classes.error}>\r\n                                  {errors.uan}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"motherDead\">Mother Dead?</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"motherDead\"\r\n                            name=\"motherDead\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.motherDead}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                          </select>\r\n                          {errorFamilyIndexDTO.motherDead && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.motherDead}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.motherDead === \"Yes\" && (\r\n                        <div className=\"form-group col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"yearMotherDied\">Year Mother Died</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              id=\"yearMotherDied\"\r\n                              type=\"date\"\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              name=\"yearMotherDead\"\r\n                              value={familyIndexRequestDto.yearMotherDead}\r\n                              onChange={handlefamilyIndexRequestDto}\r\n                              disabled={props.action === \"view\" ? true : false}\r\n                            />\r\n                            {errorFamilyIndexDTO.yearMotherDead && (\r\n                              <span className={classes.error}>\r\n                                {errorFamilyIndexDTO.yearMotherDead}\r\n                              </span>\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                      {addIndexTracker && (\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                          <p style={{ color: \"red\" }}>\r\n                            Fill input in section B\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <LabelSui\r\n                          as=\"a\"\r\n                          color=\"black\"\r\n                          onClick={updateFamilyIndexRow}\r\n                          size=\"small\"\r\n                          style={{ marginTop: 35 }}\r\n                        >\r\n                          <Icon name=\"plus\" /> Update\r\n                        </LabelSui>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {arrayFamilyIndexRequestDto.length > 0 && (\r\n                    <List className=\"mb-5\">\r\n                      <Table striped responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Family Relationship</th>\r\n                            <th>Family Index HIV Status</th>\r\n                            <th>Mother Dead</th>\r\n\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {arrayFamilyIndexRequestDto.length > 0 &&\r\n                            arrayFamilyIndexRequestDto.map((each, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>\r\n                                    {convertCodeToDisplay(\r\n                                      \"familyRelationship\",\r\n                                      each.familyRelationship\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {convertCodeToDisplay(\r\n                                      \"familyIndexHivStatus\",\r\n                                      each.familyIndexHivStatus\r\n                                    )}\r\n                                  </td>\r\n                                  <td>{each.motherDead}</td>\r\n                                  <td>\r\n                                    {props.action === \"update\" ? (\r\n                                      <>\r\n                                        <IconButton\r\n                                          aria-label=\"update\"\r\n                                          size=\"small\"\r\n                                          color=\"success\"\r\n                                          onClick={() =>\r\n                                            viewFamilyIndexRow(each, index)\r\n                                          }\r\n                                        >\r\n                                          <CreateIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n\r\n                                        <IconButton\r\n                                          aria-label=\"delete\"\r\n                                          size=\"small\"\r\n                                          color=\"error\"\r\n                                          onClick={() =>\r\n                                            removeFamilyIndexRow(index)\r\n                                          }\r\n                                        >\r\n                                          <DeleteIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                      </>\r\n                                    ) : (\r\n                                      <IconButton\r\n                                        aria-label=\"delete\"\r\n                                        size=\"small\"\r\n                                        color=\"success\"\r\n                                        onClick={() =>\r\n                                          viewFamilyIndexRow(each, index)\r\n                                        }\r\n                                      >\r\n                                        <RemoveRedEyeIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </Table>\r\n                    </List>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n            {arrayFamilyTestingTrackerRequestDTO.length > 0 && (\r\n              <>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    SECTION C: FAMILY INDEX TRACKER\r\n                  </div>\r\n\r\n                  {/* SECTION C INPUT FILEDS  */}\r\n                  {viewFamilyTrackerForm && (\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"positionOfChildEnumerated\">\r\n                            Position of the Child Enumerator\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            id=\"positionOfChildEnumerated\"\r\n                            type=\"number\"\r\n                            name=\"positionOfChildEnumerated\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.positionOfChildEnumerated\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sexTrackeer\">Sex </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"trackerSex\"\r\n                            name=\"trackerSex\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={familyTestingTrackerRequestDTO?.trackerSex}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {genders.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sex\">Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            id=\"trackerAge\"\r\n                            type=\"number\"\r\n                            name=\"trackerAge\"\r\n                            value={familyTestingTrackerRequestDTO?.trackerAge}\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"followUpAppointmentLocation\">\r\n                            Follow Up Appointment Location\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"followUpAppointmentLocation\"\r\n                            name=\"followUpAppointmentLocation\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.followUpAppointmentLocation\r\n                            }\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {followUpAppointmentLocation.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Schedule Visit Date{\" \"}\r\n                            \r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"scheduleVisitDate\"\r\n                            id=\"scheduleVisitDate\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.scheduleVisitDate\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {/* {errors.referralDate !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.referralDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Date visited{\" \"}\r\n                            {/* <span style={{ color: \"red\" }}> *</span>{\" \"} */}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateVisit\"\r\n                            id=\"dateVisit\"\r\n                            value={familyTestingTrackerRequestDTO?.dateVisit}\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {errorFamilyIndexTracker.dateVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexTracker.dateVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            {/* Attempts <span style={{ color: \"red\" }}> *</span>{\" \"} */}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"attempt\"\r\n                            id=\"attempt\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={familyTestingTrackerRequestDTO?.attempt}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {indexVisitAttempt.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4 \">\r\n                        <Label>Known HIV Positive ?</Label>\r\n                        <FormGroup>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"knownHivPositive\"\r\n                            id=\"knownHivPositive\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.knownHivPositive\r\n                            }\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyTestingTrackerRequestDTO.knownHivPositive &&\r\n                        familyTestingTrackerRequestDTO.knownHivPositive ===\r\n                          \"Yes\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"\">Date Tested</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"dateTested\"\r\n                                id=\"dateTested\"\r\n                                value={\r\n                                  familyTestingTrackerRequestDTO?.dateTested\r\n                                }\r\n                                onChange={handlefamilyTestingTrackerRequestDTO}\r\n                                min=\"1929-12-31\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                disabled={\r\n                                  props.action === \"view\" ? true : false\r\n                                }\r\n                              />\r\n                              {errors.referralDate !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.referralDate}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      {familyTestingTrackerRequestDTO?.knownHivPositive &&\r\n                        familyTestingTrackerRequestDTO?.knownHivPositive ===\r\n                          \"Yes\" && (\r\n                          <div className=\"form-group col-md-4 \">\r\n                            <Label>HIV Test Result </Label>\r\n                            <FormGroup>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hiveTestResult\"\r\n                                id=\"hiveTestResult\"\r\n                                onChange={handlefamilyTestingTrackerRequestDTO}\r\n                                value={\r\n                                  familyTestingTrackerRequestDTO.hiveTestResult\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  props.action === \"view\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Tested Positive\">\r\n                                  Tested Positive\r\n                                </option>\r\n                                <option value=\"Teste Negative\">\r\n                                  Tested Negative\r\n                                </option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      \r\n                      {familyTestingTrackerRequestDTO?.trackerAge < 21 && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">Date Enrolled In Ovc</Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"dateEnrolledInOVC\"\r\n                              id=\"dateEnrolledInOVC\"\r\n                              value={\r\n                                familyTestingTrackerRequestDTO?.dateEnrolledInOVC\r\n                              }\r\n                              onChange={handlefamilyTestingTrackerRequestDTO}\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              disabled={props.action === \"view\" ? true : false}\r\n                            />\r\n                            {errors.referralDate !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.referralDate}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">Date Enrolled On ART</Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateEnrolledOnArt\"\r\n                            id=\"dateEnrolledOnArt\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.dateEnrolledOnArt\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {errors.referralDate !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.referralDate}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {addIndexTracker2 && (\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                          <p style={{ color: \"red\" }}>\r\n                            Fill section C; Index Tracker\r\n                          </p>\r\n                        </div>\r\n                      )}{\" \"}\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <LabelSui\r\n                          as=\"a\"\r\n                          color=\"black\"\r\n                          onClick={updateFamilyTrackerRow}\r\n                          size=\"small\"\r\n                          style={{ marginTop: 35 }}\r\n                        >\r\n                          <Icon name=\"plus\" /> Update\r\n                        </LabelSui>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {arrayFamilyTestingTrackerRequestDTO.length > 0 && (\r\n                  <List>\r\n                    <Table striped responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Position of the child</th>\r\n                          <th>Sex</th>\r\n                          <th>Age</th>\r\n\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {arrayFamilyTestingTrackerRequestDTO.map(\r\n                          (each, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{each.positionOfChildEnumerated}</td>\r\n                                <td>{each.trackerSex}</td>\r\n                                <td>{each.trackerAge}</td>\r\n                                <td>\r\n                                  {props.action === \"update\" ? (\r\n                                    <>\r\n                                      <IconButton\r\n                                        aria-label=\"update\"\r\n                                        size=\"small\"\r\n                                        color=\"success\"\r\n                                        onClick={() =>\r\n                                          viewFamilyTrackerRow(each, index)\r\n                                        }\r\n                                      >\r\n                                        <CreateIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        aria-label=\"delete\"\r\n                                        size=\"small\"\r\n                                        color=\"error\"\r\n                                        onClick={() =>\r\n                                          removeFamilyTrackerRow(index)\r\n                                        }\r\n                                      >\r\n                                        <DeleteIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n                                    </>\r\n                                  ) : (\r\n                                    <IconButton\r\n                                      aria-label=\"delete\"\r\n                                      size=\"small\"\r\n                                      color=\"success\"\r\n                                      onClick={() =>\r\n                                        viewFamilyTrackerRow(each, index)\r\n                                      }\r\n                                    >\r\n                                      <RemoveRedEyeIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </List>\r\n                )}\r\n              </>\r\n            )}\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <Button\r\n                  content=\"Update\"\r\n                  type=\"submit\"\r\n                  icon=\"right arrow\"\r\n                  labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n        {/* <CardBody>\r\n          <ServicesProvided />\r\n        </CardBody> */}\r\n\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewFamilyIndexTestingForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js",["970","971","972","973","974","975"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n//import SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RiskStratification = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"active\", props.activePage.activeObject);\r\n  //console.log(\"con\", props.patientObj);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [isPMTCTModality, setIsPMTCTModality] = useState(false);\r\n  const [showRiskAssessment, setShowRiskAssessment] = useState(false);\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    age: props.patientAge,\r\n    dob: props.patientObj.dateOfBirth,\r\n    visitDate: \"\",\r\n    dateOfBirth: props.patientObj.dateOfBirth,\r\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\r\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    code: \"\",\r\n    id: \"\",\r\n    personId: props.patientObj.id,\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    careProvider: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // everHadSexualIntercourse:\"\",\r\n    // bloodtransInlastThreeMonths:\"\",\r\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n    // unprotectedVaginalSex:\"\",\r\n    // uprotectedAnalSex:\"\",\r\n    // stiLastThreeMonths:\"\",\r\n    // sexUnderInfluence :\"\",\r\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n    // experiencePain:\"\",\r\n    // haveSexWithoutCondom:\"\",\r\n    // abuseDrug:\"\",\r\n    // bloodTransfusion:\"\",\r\n    // consistentWeightFeverNightCough:\"\",\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n\r\n    if (props.activePage.activeObject.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.activePage.activeObject.riskStratificationResponseDto);\r\n\r\n      SettingModality(\r\n        props.activePage.activeObject.riskStratificationResponseDto\r\n          .testingSetting\r\n      );\r\n\r\n      setRiskAssessment(\r\n        props.activePage.activeObject.riskStratificationResponseDto &&\r\n          props.activePage.activeObject.riskStratificationResponseDto\r\n            .riskAssessment\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Set HTS menu registration\r\n  const getMenuLogic = () => {\r\n    // first logic\r\n    // if (objValues.age !== \"\" && objValues.age <= 15) {\r\n    //   props.setHideOtherMenu(true);\r\n    // } else if (objValues.age !== \"\" && objValues.age > 15) {\r\n    //   props.setHideOtherMenu(true);\r\n    // } else {\r\n    //   props.setHideOtherMenu(true);\r\n    // }\r\n\r\n    // if (objValues.age !== \"\" && objValues.age >= 85) {\r\n    //   toggle();\r\n    // }\r\n\r\n    //secound logic\r\n    props.setHideOtherMenu(false);\r\n  };\r\n\r\n  const checkPMTCTModality = (modality) => {\r\n    console.log(\"modality\", modality);\r\n    if (\r\n      modality === \"TEST_SETTING_CT_PMTCT\" ||\r\n      modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\"\r\n    ) {\r\n      console.log(\"it is PMTCT MODALITY \");\r\n      setIsPMTCTModality(true);\r\n      return true;\r\n    } else {\r\n      console.log(\"it is NOT pmtct modality \");\r\n\r\n      setIsPMTCTModality(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n\r\n      let ans = checkPMTCTModality(e.target.value);\r\n\r\n      console.log(\"answerrrr\", ans);\r\n      displayRiskAssessment(\r\n        riskAssessment.lastHivTestBasedOnRequest,\r\n        objValues.age,\r\n        ans\r\n      );\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const displayRiskAssessment = (lastVisit, age, isPMTCTModalityValue) => {\r\n    let SecAge = age !== \"\" ? age : 0;\r\n    let ans;\r\n    console.log(\r\n      \"variable lastVisit\",\r\n      lastVisit,\r\n      \"objValues.age\",\r\n      objValues.age,\r\n      \"isPMTCTModality\",\r\n      isPMTCTModalityValue,\r\n      \"SecAge\",\r\n      SecAge\r\n    );\r\n    // for the section to show\r\n    //  Conditions are : age > 15, riskAssessment.lastHivTestBasedOnRequest === \"false\" and PMTCT Modality === true\r\n    if (lastVisit === \"false\") {\r\n      if (SecAge > 15 && isPMTCTModalityValue) {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      } else if (SecAge > 15) {\r\n        setShowRiskAssessment(true);\r\n        ans = true;\r\n      } else {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      }\r\n    } else {\r\n      setShowRiskAssessment(false);\r\n      ans = false;\r\n    }\r\n    console.log(\"This is the answer\", ans);\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n        console.log(\"#################### modality\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    props.patientAge > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    //Risk Assement section\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    if (\r\n      objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      showRiskAssessment\r\n    ) {\r\n      riskAssessment.lastHivTestDone !== \"\" &&\r\n        riskAssessment.lastHivTestDone !== \"Never\" &&\r\n        (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n\r\n      temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    }\r\n\r\n    //targetGroup\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   getMenuLogic(objValues);\r\n let newModality = isPMTCTModality ? \"skip\" : \"fill\";\r\n\r\n let latestForm = getNextForm(\r\n   \"Risk_Stratification\",\r\n   objValues.age,\r\n   newModality,\r\n   \"unknown\"\r\n );\r\n    //console.log(riskAssessment)\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n\r\n    objValues.riskAssessment = riskAssessment;\r\n    if (\r\n      props.patientObj.riskStratificationResponseDto &&\r\n      props.patientObj.riskStratificationResponseDto !== null &&\r\n      props.patientObj.personId !== \"\" &&\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      if (validate()) {\r\n        setSaving(true);\r\n           handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n        props.setHideOtherMenu(false);\r\n        axios\r\n          .put(\r\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.riskStratificationResponseDto = response.data;\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      //console.log(\"post\");\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .post(`${baseUrl}risk-stratification`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n           handleItemClick(latestForm[0], latestForm[1]);\r\n            props.setHideOtherMenu(false);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"All fields are required\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {objValues.communityEntryPoint ===\r\n                        \"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" &&\r\n                      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\"\r\n                        ? enrollSetting.map((value) =>\r\n                            value.code === \"TEST_SETTING_CPMTCT\" ? (\r\n                              <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ) : (\r\n                              <></>\r\n                            )\r\n                          )\r\n                        : enrollSetting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Target Group <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"targetGroup\"\r\n                      id=\"targetGroup\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.targetGroup}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {kP.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.targetGroup !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.targetGroup}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Is this HIV test based on a Clinician/Doctor/Health Care\r\n                      Provider's request ?{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"lastHivTestBasedOnRequest\"\r\n                      id=\"lastHivTestBasedOnRequest\"\r\n                      value={riskAssessment.lastHivTestBasedOnRequest}\r\n                      onChange={handleInputChangeRiskAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHivTestBasedOnRequest}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              {showRiskAssessment && (\r\n                  <>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      HIV Risk Assessment (Last 3 months)\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          When was your last HIV test done?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestDone\"\r\n                          id=\"lastHivTestDone\"\r\n                          value={riskAssessment.lastHivTestDone}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<1\"> {\"< 1\"} month</option>\r\n                          <option value=\"1-3 Months\">1-3 Months</option>\r\n                          <option value=\"4-6 Months\">4-6 Months</option>\r\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                          <option value=\"Never\"> Never</option>\r\n                        </select>\r\n                        {errors.lastHivTestDone !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestDone}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {riskAssessment.lastHivTestDone !== \"\" &&\r\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              What was the result?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"whatWasTheResult\"\r\n                              id=\"whatWasTheResult\"\r\n                              value={riskAssessment.whatWasTheResult}\r\n                              onChange={handleInputChangeRiskAssessment}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"Positive\">Positive</option>\r\n                              <option value=\"Negative\">Negative</option>\r\n                            </select>\r\n                            {errors.whatWasTheResult !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.whatWasTheResult}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal or vaginal\r\n                          or oral sex without a condom with someone who was HIV\r\n                          positive or unaware of their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestVaginalOral\"\r\n                          id=\"lastHivTestVaginalOral\"\r\n                          value={riskAssessment.lastHivTestVaginalOral}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestVaginalOral}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had a blood or\r\n                          blood product transfusion?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestBloodTransfusion\"\r\n                          id=\"lastHivTestBloodTransfusion\"\r\n                          value={riskAssessment.lastHivTestBloodTransfusion}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestBloodTransfusion}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you experienced painful\r\n                          urination, lower abdominal pain, vaginal or penile\r\n                          discharge, pain during sexual intercourse, thick,\r\n                          cloudy, or foul smelling discharge and/or small bumps\r\n                          or blisters near the mouth, penis, vagina, or anal\r\n                          areas? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestPainfulUrination\"\r\n                          id=\"lastHivTestPainfulUrination\"\r\n                          value={riskAssessment.lastHivTestPainfulUrination}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestPainfulUrination}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Have you been diagnosed with TB or currently have any\r\n                          of the following symptoms : cough, fever, weight loss,\r\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosedWithTb\"\r\n                          id=\"diagnosedWithTb\"\r\n                          value={riskAssessment.diagnosedWithTb}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.diagnosedWithTb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.diagnosedWithTb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you ever injected\r\n                          drugs, shared needles or other sharp objects with\r\n                          someone known to be HIV positive or who you didn’t\r\n                          know their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestInjectedDrugs\"\r\n                          id=\"sexUnderInfluence\"\r\n                          value={riskAssessment.lastHivTestInjectedDrugs}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestInjectedDrugs}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal, oral or\r\n                          vaginal sex in exchange for money or other benefits?\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestHadAnal\"\r\n                          id=\"lastHivTestHadAnal\"\r\n                          value={riskAssessment.lastHivTestHadAnal}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestHadAnal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestHadAnal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you been forced to have\r\n                          sex? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestForceToHaveSex\"\r\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                          value={riskAssessment.lastHivTestForceToHaveSex}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestForceToHaveSex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n\r\n                  {/* <Button content='Save ' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskStratification;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js",["976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nimport { calculate_age } from \"../../../utils\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ViewPNSForm = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n  const [setting, setSetting] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setIsClientCurrentlyOnHiv] = useState(true);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [roleProvider, setRoleProvider] = useState([]);\r\n  const [facilityInfo, setFacilityInfo] = useState(\r\n    props?.organizationInfo.currentOrganisationUnitName\r\n  );\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const [partnerId, setPartnerId] = useState(\"\");\r\n\r\n  let temp = { ...errors };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n  const [contactTracing, setContactTracing] = useState({\r\n    partnerPhoneNumber: \"\",\r\n    numberOfAttempt: \"\",\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    acceptedHts: \"\",\r\n    offeredPns: \"\",\r\n    reasonForDecline: \"\",\r\n    otherReasonForDecline: \"\",\r\n    acceptedPns: \"\",\r\n    address: \"\", //\r\n    contactTracing: {\r\n      partnerPhoneNumber: \"\",\r\n      numberOfAttempt: \"\",\r\n    },\r\n    dateEnrollmentOnART: \"\",\r\n    datePartnerTested: \"\",\r\n    dob: props?.basicInfo?.personResponseDto?.dateOfBirth,\r\n    facilityId: props?.organizationInfo.currentOrganisationUnitId,\r\n    phoneNumber:\r\n      props?.basicInfo?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n    alternatePhoneNumber: \"\",\r\n    firstName: props?.basicInfo?.personResponseDto?.firstName,\r\n    hivTestResult: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    indexClientId: props?.basicInfo?.indexClientCode,\r\n    intermediatePartnerViolence: {\r\n      DeprivedOfBasicNeedsEmotional: \"\",\r\n      DeniedBasicNecessitiesForHealthcareEmotional: \"\",\r\n      ForcedSexualActsSexual: \"\",\r\n    },\r\n    knownHivPositive: \"\",\r\n    lastName: props?.basicInfo?.personResponseDto?.surname,\r\n    middleName: props?.basicInfo?.personResponseDto?.otherName,\r\n    notificationMethod: \"\",\r\n    partnerId: \"\",\r\n    relationshipToIndexClient: \"\",\r\n    sex: props?.basicInfo?.personResponseDto?.gender.id,\r\n    htsClientInformation: {\r\n      testingSetting: \"\",\r\n      providerNameCompletingForm: \"\",\r\n      providerRoleCompletingForm: \"\",\r\n      maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n      descriptiveResidentialAddress:\r\n        props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n      dateIndexClientConfirmedHiv: \"\",\r\n      isClientCurrentlyOnHiv: \"\",\r\n      DateOfTreatmentInitiation: \"\",\r\n      recencyTesting: \"\",\r\n      artEnrollmentNumber: \"\",\r\n      facilityOfEnrollment: \"\",\r\n      numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n\r\n      partnerName: \"\",\r\n      partnerSex: \"\",\r\n      partnerAge: \"\",\r\n      partnerAddress: \"\",\r\n      relativeToIndexClient: \"\",\r\n      contactTracingType: \"\",\r\n      freedomDenial: \"\",\r\n      threatenToHurt: \"\",\r\n      sexuallyUncomfortable: \"\",\r\n\r\n      //\r\n\r\n      partnerNotification: \"\",\r\n      viralllyUnsppressed: \"\",\r\n\r\n      numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    },\r\n  });\r\n\r\n  const [htsClientInformation, sethtsClientInformation] = useState({\r\n    testingSetting: props.patientObj.testingSetting,\r\n    providerNameCompletingForm: \"\",\r\n    providerRoleCompletingForm: \"\",\r\n    maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n    descriptiveResidentialAddress:\r\n      props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n    dateIndexClientConfirmedHiv: \"\",\r\n    isClientCurrentlyOnHiv: \"\",\r\n    DateOfTreatmentInitiation: \"\",\r\n    recencyTesting: \"\",\r\n    artEnrollmentNumber: \"\",\r\n    facilityOfEnrollment: \"\",\r\n    numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    partnerName: \"\",\r\n    partnerSex: \"\",\r\n    partnerAge: \"\",\r\n    partnerAddress: \"\",\r\n    relativeToIndexClient: \"\",\r\n    contactTracingType: \"\",\r\n    freedomDenial: \"\",\r\n    threatenToHurt: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n\r\n    //\r\n\r\n    partnerNotification: \"\",\r\n    viralllyUnsppressed: \"\",\r\n\r\n    numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n  });\r\n\r\n  //   const getPNSInfo = (id) => {\r\n  //     axios\r\n  //       .get(`${baseUrl}hts-personal-notification-service/${id}/hts-client`, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((response) => {\r\n  //         setMaritalStatus(response.data);\r\n  //       })\r\n  //       .catch((error) => {});\r\n  //   };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    if (inputName === \"phoneNumber\") {\r\n      setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    }\r\n    if (inputName === \"alternatePhoneNumber\") {\r\n      setObjValues({ ...objValues, [inputName]: NumberValue });\r\n    }\r\n  };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilityInfo(response.data.currentOrganisationUnitName);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPartnerId = (id) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/get-partner-id?htsClientId=${props.patientObj?.id}&clientCode=${props?.patientObj?.clientCode}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPartnerId(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getPartnerId();\r\n    Sex();\r\n    getStates();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n    getMaritalStatus();\r\n    PROVIDER_ROLE();\r\n    viewPnIsnfo();\r\n    // if (props.patientObj) {\r\n    //   if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n    //     setHivTestDate(props.patientObj.dateVisit);\r\n    //   } else {\r\n    //     setHivTestDate(\"\");\r\n    //   }\r\n\r\n    //   setObjValues({\r\n    //     ...objValues,\r\n    //     firstName: props.patientObj.personResponseDto.firstName,\r\n    //     middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    //     lastName: props?.patientObj?.personResponseDto?.surname,\r\n    //     sex: props?.patientObj?.personResponseDto?.gender.id,\r\n    //     dob: props?.patientObj?.personResponseDto?.dateOfBirth,\r\n    //     phoneNumber:\r\n    //       props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n    //         ?.value,\r\n    //   });\r\n\r\n    //   sethtsClientInformation({\r\n    //     ...htsClientInformation,\r\n    //     maritalStatus: props?.patientObj?.personResponseDto?.maritalStatus.id,\r\n    //     descriptiveResidentialAddress:\r\n    //       props?.patientObj?.personResponseDto?.address?.address[0].city,\r\n    //   });\r\n\r\n    // offeredPns: props.patientObj.personResponseDto.firstName\r\n\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // })\r\n    // }\r\n\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      getProvincesId(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  useEffect(() => {\r\n    loadFamilyIndexSetting();\r\n  }, []);\r\n\r\n  // console.log(props.basicInfo);\r\n  const handleHTSClientInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (\r\n      e.target.name === \"partnerAge\" ||\r\n      e.target.name === \"numberOfAttempt\" ||\r\n      e.target.name === \"numberOfPartnerIdentifiedFromClientIndex\"\r\n    ) {\r\n      if (e.target.value > -1) {\r\n        sethtsClientInformation({\r\n          ...htsClientInformation,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      sethtsClientInformation({\r\n        ...htsClientInformation,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const PROVIDER_ROLE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PROVIDER_ROLE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setRoleProvider(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setErrors({ ...temp, stateId: \"\" });\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    // setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  console.log(props);\r\n  //Get all recorcd by htsClientId\r\n  const getAllRecordByHTSClientId = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/{id}/hts-client`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get view pns info\r\n  const viewPnIsnfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setObjValues(response.data);\r\n        sethtsClientInformation(response.data.htsClientInformation);\r\n        setContactTracing(response.data.contactTracing);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n\r\n  const handleInputContactChanges = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"numberOfAttempt\") {\r\n      if (e.target.value > -1) {\r\n        setContactTracing({\r\n          ...contactTracing,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n    } else {\r\n      setContactTracing({ ...contactTracing, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (\r\n      e.target.name === \"providerNameCompletingForm\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"clientName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n\r\n    if (e.target.name === \"offeredPns\") {\r\n      setObjValues({\r\n        ...objValues,\r\n        reasonForDecline: \"\",\r\n        [e.target.name]: e.target.value,\r\n        otherReasonForDecline: \"\",\r\n        acceptedPns: \"\",\r\n      });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    // temp.stateId = objValues.stateId ? \"\" : \"This field is required.\";\r\n    // temp.lga = objValues.lga ? \"\" : \"This field is required.\";\r\n    // temp.facilityId = objValues.facilityId ? \"\" : \"This field is required.\";\r\n   if (objValues.offeredPns !== \"No\") {\r\n     temp.testingSetting = htsClientInformation.testingSetting\r\n       ? \"\"\r\n       : \"This field is required.\";\r\n     temp.providerRoleCompletingForm =\r\n       htsClientInformation.providerRoleCompletingForm\r\n         ? \"\"\r\n         : \"This field is required.\";\r\n     temp.relativeToIndexClient = htsClientInformation.relativeToIndexClient\r\n       ? \"\"\r\n       : \"This field is required.\";\r\n   }\r\n    if (objValues.offeredPns === \"No\") {\r\n      temp.reasonForDecline = objValues.reasonForDecline\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n      temp.otherReasonForDecline =\r\n        objValues.reasonForDecline === \"others\" &&\r\n        objValues.otherReasonForDecline\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n    }\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   objValues.htsClientInformation = htsClientInformation;\r\n  //   objValues.contactTracing = contactTracing;\r\n\r\n  //   console.log(objValues);\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    objValues.htsClientInformation = htsClientInformation;\r\n    objValues.contactTracing = contactTracing;\r\n    objValues.htsClientId =\r\n      props && props.patientObj ? props.patientObj?.id : \"\";\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n      axios\r\n        .put(\r\n          `${baseUrl}hts-personal-notification-service/${props.row.row.id}`,\r\n          objValues,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n\r\n          handleItemClick(\"pns-history\");\r\n\r\n          if (\r\n            objValues.offeredPns !== \"No\" &&\r\n            objValues.acceptedPns !== \"No\"\r\n            // objValues.elicited !== \"No\"\r\n          ) {\r\n            // setElicitedCount(elicitedCount + 1);\r\n            // setObjValues({\r\n            //   providerNameCompletingForm: \"\",\r\n            //   clientName: \"\",\r\n            //   lastName: \"\",\r\n            //   dob: \"\",\r\n            //   phoneNumber: \"\",\r\n            //   altPhoneNumber: \"\",\r\n            //   sex: \"\",\r\n            //   htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n            // physicalHurt: \"\",\r\n            // threatenToHurt: \"\",\r\n            // descriptiveResidentialAddress: \"\",\r\n            // hangOutSpots: \"\",\r\n            // relativeToIndexClient: \"\",\r\n            // currentlyLiveWithPartner: \"\",\r\n            // partnerTestedPositive: \"\",\r\n            // sexuallyUncomfortable: \"\",\r\n            // notificationMethod: \"\",\r\n            // datePartnerCameForTesting: \"\",\r\n            // age: \"\",\r\n            // isDateOfBirthEstimated: false,\r\n            // //offeredPns:\"\",\r\n            //acceptedPns:\"\",\r\n            //elicited: \"\",\r\n            // stateId: \"\",\r\n            // lga: \"\",\r\n            // datePartnerTested: \"\",\r\n            //   // partnerCurrentHivStatus: \"\",\r\n            // });\r\n          }\r\n          //handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Partner Notification Services\r\n            {/*<Button*/}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    color=\"primary\"*/}\r\n            {/*    className=\" float-end  mr-2 mt-2\"*/}\r\n            {/*    onClick={() => handleItemClickPage(\"list\")}*/}\r\n            {/*//startIcon={<FaUserPlus size=\"10\"/>}*/}\r\n            {/*>*/}\r\n            {/*    <span style={{ textTransform: \"capitalize\" }}>*/}\r\n            {/*        {\" \"}*/}\r\n            {/*        Back To Client List*/}\r\n            {/*    </span>*/}\r\n            {/*</Button>*/}\r\n          </h2>\r\n\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered PNS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredPns\"\r\n                    id=\"offeredPns\"\r\n                    value={objValues.offeredPns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.row.action === \"view\" ? true : false}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredPns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredPns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.offeredPns !== \"\" && objValues.offeredPns !== \"No\" && (\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted PNS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedPns\"\r\n                      id=\"acceptedPns\"\r\n                      value={objValues.acceptedPns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.row.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {objValues.offeredPns.toLowerCase() === \"no\" && (\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Reason for decline{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"select\"\r\n                      name=\"reasonForDecline\"\r\n                      id=\"reasonForDecline \"\r\n                      value={objValues.reasonForDecline}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.row.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n\r\n                      <option key={1} value={\"others\"}>\r\n                        Others\r\n                      </option>\r\n                    </select>\r\n                    {errors.reasonForDecline !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {objValues.offeredPns.toLowerCase() === \"no\" &&\r\n                objValues.offeredPns.toLowerCase() === \"no\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Other reason For Decline\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"otherReasonForDecline\"\r\n                        id=\"otherReasonForDecline\"\r\n                        value={objValues.otherReasonForDecline}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.row.action === \"view\" ? true : false}\r\n                      />\r\n                      {errors.otherReasonForDecline !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherReasonForDecline}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/*{objValues.acceptedPns !== \"\" &&*/}\r\n              {/*    objValues.acceptedPns !== \"No\" && (*/}\r\n              {/*        <div className=\"form-group  col-md-4\">*/}\r\n              {/*            <FormGroup>*/}\r\n              {/*                <Label>*/}\r\n              {/*                    Elicited ? <span style={{ color: \"red\" }}> </span>*/}\r\n              {/*                </Label>*/}\r\n              {/*                <select*/}\r\n              {/*                    className=\"form-control\"*/}\r\n              {/*                    name=\"elicited\"*/}\r\n              {/*                    id=\"elicited\"*/}\r\n              {/*                    value={objValues.elicited}*/}\r\n              {/*                    onChange={handleInputChange}*/}\r\n              {/*                    style={{*/}\r\n              {/*                        border: \"1px solid #014D88\",*/}\r\n              {/*                        borderRadius: \"0.2rem\",*/}\r\n              {/*                    }}*/}\r\n              {/*                >*/}\r\n              {/*                    <option value={\"\"}></option>*/}\r\n              {/*                    {consent.map((value) => (*/}\r\n              {/*                        <option key={value.id} value={value.display}>*/}\r\n              {/*                            {value.display}*/}\r\n              {/*                        </option>*/}\r\n              {/*                    ))}*/}\r\n              {/*                </select>*/}\r\n              {/*            </FormGroup>*/}\r\n              {/*        </div>*/}\r\n              {/*    )}*/}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.offeredPns !== \"\" &&\r\n                objValues.offeredPns === \"Yes\" &&\r\n                objValues.acceptedPns !== \"\" &&\r\n                objValues.acceptedPns === \"Yes\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          onChange={getProvinces}\r\n                          value={stateInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {states.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          LGA <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lga\"\r\n                          id=\"lga\"\r\n                          value={lgaInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.lga !== \"\" ? (\r\n                          <span className={classes.error}>{errors.lga}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"providerNameCompletingForm\">\r\n                          Facility Name\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"facilityId\"\r\n                          id=\"facilityId\"\r\n                          value={facilityInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.facilityId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.facilityId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Setting <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"testingSetting\"\r\n                          id=\"testingSetting\"\r\n                          value={htsClientInformation.testingSetting}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {setting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.testingSetting !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.testingSetting}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Name of provider completing the form\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"providerNameCompletingForm\"\r\n                          id=\"providerNameCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerNameCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Role of the provider completing Form\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"providerRoleCompletingForm\"\r\n                          id=\"providerRoleCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerRoleCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {roleProvider.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.providerRoleCompletingForm !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.providerRoleCompletingForm}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 1 : INFORMATION ABOUT THE INDEX CLIENT\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Firstname </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={objValues.firstName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Middlename </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"middleName\"\r\n                          id=\"middleName\"\r\n                          value={objValues.middleName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Lastname</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastName\"\r\n                          value={objValues.lastName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Index Client ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientId\"\r\n                          id=\"indexClientId\"\r\n                          value={objValues.indexClientId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={objValues.sex}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*    <FormGroup>*/}\r\n                    {/*        <Label for=\"\">Last Name</Label>*/}\r\n                    {/*        <Input*/}\r\n                    {/*            type=\"text\"*/}\r\n                    {/*            name=\"lastName\"*/}\r\n                    {/*            id=\"lastName\"*/}\r\n                    {/*            value={objValues.lastName}*/}\r\n                    {/*            onChange={handleInputChange}*/}\r\n                    {/*            style={{*/}\r\n                    {/*                border: \"1px solid #014D88\",*/}\r\n                    {/*                borderRadius: \"0.25rem\",*/}\r\n                    {/*            }}*/}\r\n                    {/*        />*/}\r\n                    {/*    </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    {/* <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Actual\"\r\n                              name=\"dateOfBirth\"\r\n                              defaultChecked\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Actual\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Estimated\"\r\n                              name=\"dateOfBirth\"\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Estimated\r\n                          </label>\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Age</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"age\"\r\n                          id=\"age\"\r\n                          value={calculate_age(\r\n                            props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              : props?.patientObj?.personResponseDto\r\n                                  ?.dateOfBirth\r\n                          )}\r\n                          // disabled={ageDisabled}\r\n                          disabled\r\n                          onChange={handleAgeChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Marital Status <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"maritalStatus\"\r\n                          id=\"maritalStatus\"\r\n                          value={htsClientInformation.maritalStatus}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                          // disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {maritalStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* {errors.testingSetting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.testingSetting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*  <FormGroup>*/}\r\n                    {/*    <Label for=\"\">Phone Number</Label>*/}\r\n\r\n                    {/*    <PhoneInput*/}\r\n                    {/*        containerStyle={{*/}\r\n                    {/*          width: \"100%\",*/}\r\n                    {/*          border: \"1px solid #014D88\",*/}\r\n                    {/*        }}*/}\r\n                    {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                    {/*        country={\"ng\"}*/}\r\n                    {/*        placeholder=\"(234)7099999999\"*/}\r\n                    {/*        minLength={10}*/}\r\n                    {/*        name=\"phoneNumber\"*/}\r\n                    {/*        disabled*/}\r\n                    {/*        id=\"phoneNumber\"*/}\r\n                    {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                    {/*        value={objValues.phoneNumber}*/}\r\n                    {/*        onChange={(e) => {*/}\r\n                    {/*          checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n                    {/*        }}*/}\r\n                    {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                    {/*    />*/}\r\n                    {/*    {errors.phoneNumber !== \"\" ? (*/}\r\n                    {/*        <span className={classes.error}>*/}\r\n                    {/*    {errors.phoneNumber}*/}\r\n                    {/*  </span>*/}\r\n                    {/*    ) : (*/}\r\n                    {/*        \"\"*/}\r\n                    {/*    )}*/}\r\n                    {/*  </FormGroup>*/}\r\n                    {/*</div>*/}\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                          }}\r\n                          value={objValues.phoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*  <FormGroup>*/}\r\n                    {/*    <Label for=\"\">Alternative Phone Number</Label>*/}\r\n                    {/*    <PhoneInput*/}\r\n                    {/*        disabled={props.row.action === \"view\" ? true : false}*/}\r\n                    {/*        containerStyle={{*/}\r\n                    {/*          width: \"100%\",*/}\r\n                    {/*          border: \"1px solid #014D88\",*/}\r\n                    {/*        }}*/}\r\n                    {/*        inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                    {/*        country={\"ng\"}*/}\r\n                    {/*        placeholder=\"(234)7099999999\"*/}\r\n                    {/*        minLength={10}*/}\r\n                    {/*        name=\"alternatePhoneNumber\"*/}\r\n                    {/*        id=\"altPhoneNumber\"*/}\r\n                    {/*        masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                    {/*        value={objValues.alternatePhoneNumber}*/}\r\n                    {/*        onChange={(e) => {*/}\r\n                    {/*          checkPhoneNumberBasic(e, \"alternatePhoneNumber\");*/}\r\n                    {/*        }}*/}\r\n                    {/*        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                    {/*    />*/}\r\n                    {/*  </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Alternative Contact Number\r\n                          {/* <span style={{color: \"red\"}}> *</span> */}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"alternatePhoneNumber\"\r\n                          id=\"alternatePhoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(\r\n                              e,\r\n                              \"alternatePhoneNumber\"\r\n                            );\r\n                          }}\r\n                          value={objValues.alternatePhoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Descriptive Residential Address </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descriptiveResidentialAddress\"\r\n                          id=\"descriptiveResidentialAddress\"\r\n                          value={\r\n                            htsClientInformation.descriptiveResidentialAddress\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date Of Index Client's confirmed HIV-positive test\r\n                          results <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateIndexClientConfirmedHiv\"\r\n                          id=\"dateIndexClientConfirmedHiv\"\r\n                          value={\r\n                            htsClientInformation.dateIndexClientConfirmedHiv\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                        {errors.dateIndexClientConfrimedHiv !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* {indexClientConfirmedHivPositive && ( */}\r\n\r\n                    {/* )} */}\r\n                    {/* if index client is hiv positive, and date is selected */}\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Is client current on HIV treatment?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"isClientCurrentlyOnHiv\"\r\n                          id=\"isClientCurrentlyOnHiv\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.isClientCurrentlyOnHiv}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsClientInformation.isClientCurrentlyOnHiv &&\r\n                      htsClientInformation.isClientCurrentlyOnHiv === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date of Treatment Initiation{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"DateOfTreatmentInitiation\"\r\n                              id=\"DateOfTreatmentInitiation\"\r\n                              value={\r\n                                htsClientInformation.DateOfTreatmentInitiation\r\n                              }\r\n                              onChange={handleHTSClientInputChange}\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              disabled={\r\n                                props.row.action === \"view\" ? true : false\r\n                              }\r\n                            />\r\n                            {/* {errors.treatmentDateI !== \"\" ? (\r\n                                          <span className={classes.error}>\r\n                                            {errors.referralDate}\r\n                                          </span>\r\n                                        ) : (\r\n                                          \"\"\r\n                                        )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Recency Testing</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"recencyTesting\"\r\n                          id=\"recencyTesting\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.recencyTesting}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Recent Infection\">\r\n                            Recent Infection\r\n                          </option>\r\n                          <option value=\"Long Infection\">Long Infection</option>\r\n                          <option value=\"Not Done\">Not Done</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> ART Enrollment Number </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"artEnrollmentNumber\"\r\n                          id=\"artEnrollmentNumber\"\r\n                          value={htsClientInformation.artEnrollmentNumber}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Facility Of Enrollment </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityOfEnrollment\"\r\n                          id=\"facilityOfEnrollment\"\r\n                          value={htsClientInformation.facilityOfEnrollment}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Notification Method selected </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"notificationMethod\"\r\n                          id=\"notificationMethod\"\r\n                          value={objValues.notificationMethod}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {notificationContact.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Number of Partner{\" \"}\r\n                          <span>\r\n                            {\" \"}\r\n                            (sexual or social) identified/elicited from index{\" \"}\r\n                          </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          id=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          value={\r\n                            htsClientInformation.numberOfPartnerIdentifiedFromClientIndex\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 2 : LISTING INDEX CLIENT PARTNER\r\n                    </div>\r\n                    <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                      <i>\r\n                        Instruction: Ask index client to list all the client\r\n                        that have had sex with in the last 12 months. who may be\r\n                        risk to HIV and or partners who they share needle for\r\n                        injection of drugs where index client alluded to\r\n                        injection drugs\r\n                      </i>\r\n                    </p>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Partner ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerId\"\r\n                          id=\"partnerId\"\r\n                          value={objValues.partnerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Name of Partner <span> (Enter surname first) </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerName\"\r\n                          id=\"partnerName\"\r\n                          value={htsClientInformation.partnerName}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"partnerSex\"\r\n                          id=\"partnerSex\"\r\n                          value={htsClientInformation.partnerSex}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Age <span> (In years) </span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"partnerAge\"\r\n                          id=\"partnerAge\"\r\n                          value={htsClientInformation.partnerAge}\r\n                          // disabled={ageDisabled}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Home/Contact Address <span> include landmark </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerAddress\"\r\n                          id=\"partnerAddress\"\r\n                          value={htsClientInformation.partnerAddress}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Contact Phone Number</Label>\r\n\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          minLength={10}\r\n                          name=\"partnerPhoneNumber\"\r\n                          id=\"partnerPhoneNumber\"\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          value={contactTracing.partnerPhoneNumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"partnerPhoneNumber\");\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                        {errors.partnerPhoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.partnerPhoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Relationship to Index Client{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relativeToIndexClient\"\r\n                          id=\"relativeToIndexClient\"\r\n                          value={htsClientInformation.relativeToIndexClient}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                      {errors.relativeToIndexClient !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.relativeToIndexClient}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Contact tracing</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"contactTracingType\"\r\n                          id=\"contactTracingType\"\r\n                          value={htsClientInformation.contactTracingType}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}>select</option>\r\n                          <option value=\"Phone calls\">Phone calls</option>\r\n                          <option value=\"Physical visit\">Physical visit</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Number of Attempt</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfAttempt\"\r\n                          id=\"numberOfAttempt\"\r\n                          value={contactTracing.numberOfAttempt}\r\n                          onChange={handleInputContactChanges}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          // disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever denied you of food, shelter,\r\n                          freedom of movement,livehood?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"freedomDenial\"\r\n                          id=\"freedomDenial\"\r\n                          value={htsClientInformation.freedomDenial}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to hurt you? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"threatenToHurt\"\r\n                          id=\"threatenToHurt\"\r\n                          value={htsClientInformation.threatenToHurt}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to rape and force to\r\n                          have sex with you ? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sexuallyUncomfortable\"\r\n                          id=\"sexuallyUncomfortable\"\r\n                          value={htsClientInformation.sexuallyUncomfortable}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Known HIV Positive ?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"knownHivPositive\"\r\n                          id=\"knownHivPositive\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.knownHivPositive}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Accepted HTS ? <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          value={objValues.acceptedHts}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          HIV Test Result{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hivTestResult\"\r\n                          id=\"hivTestResult \"\r\n                          value={objValues.hivTestResult}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"negative\">Negative</option>\r\n                          <option value=\"positive\">Positive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {objValues.partnerCurrentHivStatus !== \"\" &&\r\n                      objValues.partnerCurrentHivStatus === \"positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date Tested?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"datePartnerTested\"\r\n                              id=\"datePartnerTested\"\r\n                              value={objValues.datePartnerTested}\r\n                              onChange={handleInputChange}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              disabled={\r\n                                props.row.action === \"view\" ? true : false\r\n                              }\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Date Enrolled On ART</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateEnrollmentOnART\"\r\n                          id=\"dateEnrollmentOnART\"\r\n                          value={objValues.dateEnrollmentOnART}\r\n                          onChange={handleInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          // disabled\r\n                        />\r\n                        {errors.referralDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              {props.row.action === \"update\" && (\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      content=\"Update\"\r\n                      icon=\"save\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewPNSForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["1002","1003","1004","1005","1006"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PostTest = (props) => {\r\n  console.log(\"post\", props);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const { postTestCounselingKnowledgeAssessment } = props.patientObj;\r\n\r\n  ///const [errors, setErrors] = useState({});\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    personId: patientID,\r\n  });\r\n\r\n  const [postTest, setPostTest] = useState({\r\n    hivTestResult: \"\",\r\n    hivTestBefore:\r\n      props.activePage.activeObject?.riskStratificationResponseDto\r\n        ?.riskAssessment?.lastHivTestDone !== \"Never\" &&\r\n      props.activePage.activeObject?.riskStratificationResponseDto\r\n        ?.riskAssessment?.whatWasTheResult === \"Positive\"\r\n        ? \"Previously tested positive in HIV care\"\r\n        : postTestCounselingKnowledgeAssessment?.hivTestBefore,\r\n    hivRequestResult: postTestCounselingKnowledgeAssessment?.hivRequestResult,\r\n    hivRequestResultCt:\r\n      postTestCounselingKnowledgeAssessment?.hivRequestResultCt,\r\n    clientReceivedHivTestResult:\r\n      postTestCounselingKnowledgeAssessment?.clientReceivedHivTestResult,\r\n    postTestCounseling:\r\n      postTestCounselingKnowledgeAssessment?.postTestCounseling,\r\n    riskReduction: postTestCounselingKnowledgeAssessment?.riskReduction,\r\n    postTestDisclosure:\r\n      postTestCounselingKnowledgeAssessment?.postTestDisclosure,\r\n    bringPartnerHivtesting:\r\n      postTestCounselingKnowledgeAssessment?.bringPartnerHivtesting,\r\n    childrenHivtesting:\r\n      postTestCounselingKnowledgeAssessment?.childrenHivtesting,\r\n    informationFp: postTestCounselingKnowledgeAssessment?.informationFp,\r\n    partnerFpThanCondom:\r\n      postTestCounselingKnowledgeAssessment?.partnerFpThanCondom,\r\n    partnerFpUseCondom:\r\n      postTestCounselingKnowledgeAssessment?.partnerFpUseCondom,\r\n    correctCondomUse: postTestCounselingKnowledgeAssessment?.correctCondomUse,\r\n    condomProvidedToClient:\r\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClient,\r\n    unprotectedSexRegularPartnerLastThreeMonth:\r\n      postTestCounselingKnowledgeAssessment?.unprotectedSexRegularPartnerLastThreeMonth,\r\n    referredToServices:\r\n      postTestCounselingKnowledgeAssessment?.referredToServices,\r\n    lubricantProvidedToClient:\r\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClient,\r\n    condomProvidedToClientCount:\r\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClientCount,\r\n    lubricantProvidedToClientCount:\r\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClientCount,\r\n  });\r\n  const handleInputChangePostTest = (e) => {\r\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      }\r\n    }else if (e.target.name === \"condomProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      } else {\r\n        setPostTest({ ...postTest, [e.target.name]: 0 });\r\n      }\r\n    } else {\r\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    //console.log(props.patientObj.postTestCounselingKnowledgeAssessment)\r\n    setPostTest({\r\n      ...postTest,\r\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\r\n    });\r\n\r\n    if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n      let latestForm = getNextForm(\r\n        \"Post_Test_Counseling\",\r\n        props?.patientAge,\r\n        \"\",\r\n        props?.patientObj?.hivTestResult\r\n      );\r\n\r\n    if (props.activePage.actionType === \"view\") {\r\n      //e.preventDefault();\r\n         handleItemClick(latestForm[0], latestForm[1]);\r\n    }\r\n    if (props.activePage.actionType === \"update\") {\r\n      setSaving(true);\r\n      //e.preventDefault();\r\n\r\n      objValues.htsClientId = clientId;\r\n      objValues.postTestCounselingKnowledgeAssessment = postTest;\r\n      objValues.personId = patientID;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/post-test-counseling`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n\r\n          props.setPatientObj(response.data);\r\n          toast.success(\"Post Test Assesment successful\");\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>POST TEST COUNSELING</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n              </LabelRibbon>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={postTest.hivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    // disabled={props.activePage.actionType === \"view\"}\r\n                    disabled={true}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Positive</option>\r\n                    <option value=\"false\">Negative</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been tested for HIV before within this year?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestBefore\"\r\n                    id=\"hivTestBefore\"\r\n                    value={postTest.hivTestBefore}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Not previously tested\">\r\n                      Not previously tested\r\n                    </option>\r\n                    <option value=\"Previously tested negative\">\r\n                      Previously tested negative\r\n                    </option>\r\n                    <option value=\"Previously tested positive in HIV care\">\r\n                      Previously tested positive in HIV care\r\n                    </option>\r\n                    <option value=\"Previously tested positive not in HIV care\">\r\n                      Previously tested positive not in HIV care\r\n                    </option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV Request and Result form signed by tester </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResult\"\r\n                    id=\"hivRequestResult\"\r\n                    value={postTest.hivRequestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResultCt\"\r\n                    id=\"hivRequestResultCt\"\r\n                    value={postTest.hivRequestResultCt}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client received HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientReceivedHivTestResult\"\r\n                    id=\"clientReceivedHivTestResult\"\r\n                    value={postTest.clientReceivedHivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test counseling done </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestCounseling\"\r\n                    id=\"postTestCounseling\"\r\n                    value={postTest.postTestCounseling}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Risk reduction plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"riskReduction\"\r\n                    id=\"riskReduction\"\r\n                    value={postTest.riskReduction}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test disclosure plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestDisclosure\"\r\n                    id=\"postTestDisclosure\"\r\n                    value={postTest.postTestDisclosure}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Will bring partner(s) for HIV testing </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"bringPartnerHivtesting\"\r\n                    id=\"bringPartnerHivtesting\"\r\n                    value={postTest.bringPartnerHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"childrenHivtesting\"\r\n                    id=\"childrenHivtesting\"\r\n                    value={postTest.childrenHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Provided with information on FP and dual contraception{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informationFp\"\r\n                    id=\"informationFp\"\r\n                    value={postTest.informationFp}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client/Partner use FP methods (other than condom)\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpThanCondom\"\r\n                    id=\"partnerFpThanCondom\"\r\n                    value={postTest.partnerFpThanCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpUseCondom\"\r\n                    id=\"partnerFpUseCondom\"\r\n                    value={postTest.partnerFpUseCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Correct condom use demonstrated </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"correctCondomUse\"\r\n                    id=\"correctCondomUse\"\r\n                    value={postTest.correctCondomUse}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Condoms provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"condomProvidedToClient\"\r\n                    id=\"condomProvidedToClient\"\r\n                    value={postTest.condomProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.condomProvidedToClient !== null &&\r\n                postTest.condomProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many condoms were provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomProvidedToClientCount\"\r\n                        id=\"condomProvidedToClientCount\"\r\n                        value={postTest.condomProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lubricant were provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lubricantProvidedToClient\"\r\n                    id=\"lubricantProvidedToClient\"\r\n                    value={postTest.lubricantProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.lubricantProvidedToClient !== null &&\r\n                postTest.lubricantProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many lubricant provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantProvidedToClientCount\"\r\n                        id=\"lubricantProvidedToClientCount\"\r\n                        value={postTest.lubricantProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client referred to other services </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredToServices\"\r\n                    id=\"referredToServices\"\r\n                    value={postTest.referredToServices}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <Message success>\r\n                <h4>\r\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\r\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\r\n                  re-testing after 3 months\r\n                </h4>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\r\n                  /> */}\r\n\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      // disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTest;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js",["1007","1008","1009","1010","1011"],"import React, { useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\n\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Button from '@material-ui/core/Button';\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport PNSList from \"./PNSlist\";\r\n\r\nconst PNSHistory = (props) => {\r\n  const [activePage, setActivePage] = useState(\"list\");\r\n  const handleIClickPage = (activeItem) => {\r\n    setActivePage(activeItem);\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleDone = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"home\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={12}>\r\n          {activePage === \"list\" && (\r\n            <PNSList\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              handleIClickPage={handleIClickPage}\r\n              patientObj={props.patientObj}\r\n              handleItemClick={handleItemClick}\r\n              setRow={props.setRow}\r\n            />\r\n          )}\r\n          \r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"form-group mb-3 col-md-12\">\r\n              <Button\r\n                content=\"Back\"\r\n                icon=\"left arrow\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                onClick={() =>{\r\n                  handleItemClick(\"recency-testing\", \"recency-testing\")}\r\n                }\r\n              />\r\n              <Button\r\n                content=\"Done\"\r\n                icon=\"list\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                onClick={() => handleDone()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PNSHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst Recency = (props) => {\r\n  console.log(\"data1\", props.patientObj);\r\n  const classes = useStyles();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  let temp = { ...errors };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    recency: {},\r\n    personId: patientID,\r\n  });\r\n  const [recency, setRecency] = useState({\r\n    optOutRTRI:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRI\r\n        : \"\",\r\n    optOutRTRITestName:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestName\r\n        : \"\",\r\n    optOutRTRITestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestDate\r\n        : \"\",\r\n    rencencyId:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyId\r\n        : \"\",\r\n    controlLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.controlLine\r\n        : \"\",\r\n    verififcationLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.verififcationLine\r\n        : \"\",\r\n    longTermLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.longTermLine\r\n        : \"\",\r\n    rencencyInterpretation:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyInterpretation\r\n        : \"\",\r\n    hasViralLoad:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.hasViralLoad\r\n        : \"\",\r\n    sampleCollectedDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleCollectedDate\r\n        : \"\",\r\n    sampleReferanceNumber:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleReferanceNumber\r\n        : \"\",\r\n    dateSampleSentToPCRLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.dateSampleSentToPCRLab\r\n        : \"\",\r\n    sampleTestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleTestDate\r\n        : \"\",\r\n    sampleType:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleType\r\n        : \"\",\r\n    receivingPcrLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivingPcrLab\r\n        : \"\",\r\n    viralLoadResultClassification:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadResultClassification\r\n        : \"\",\r\n    recencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.recencyResult\r\n        : \"\",\r\n    finalRecencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.finalRecencyResult\r\n        : \"\",\r\n    viralLoadConfirmationResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadConfirmationResult\r\n        : \"\",\r\n    receivedResultDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivedResultDate\r\n        : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj.recency !== null) {\r\n      // console.log(props.patientObj.recency);\r\n      setRecency(props.patientObj.recency);\r\n    }\r\n    if (props.patientObj) {\r\n      if (\r\n        props.patientObj.confirmatoryTest2 &&\r\n        props.patientObj.confirmatoryTest2.date2 !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest2.date2);\r\n      } else if (\r\n        props.patientObj.confirmatoryTest &&\r\n        props.patientObj.confirmatoryTest.date !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest.date);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n    if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Long Term\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Long Term\" });\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Recent\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Recent\" });\r\n      //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Negative\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Negative\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"false\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else {\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"\" });\r\n    }\r\n    if (recency.optOutRTRI === \"true\") {\r\n      setRecency({\r\n        optOutRTRI:\r\n          props.patientObj && props.patientObj.recency !== null\r\n            ? props.patientObj.recency.optOutRTRI\r\n            : \"\",\r\n        optOutRTRITestName: \"\",\r\n        optOutRTRITestDate: \"\",\r\n        rencencyId: \"\",\r\n        controlLine: \"\",\r\n        verififcationLine: \"\",\r\n        longTermLine: \"\",\r\n        rencencyInterpretation: \"\",\r\n        hasViralLoad: \"\",\r\n        sampleCollectedDate: \"\",\r\n        sampleReferanceNumber: \"\",\r\n        dateSampleSentToPCRLab: \"\",\r\n        sampleTestDate: \"\",\r\n        sampleType: \"\",\r\n        receivingPcrLab: \"\",\r\n        viralLoadResultClassification: \"\",\r\n\r\n        recencyResult: \"\",\r\n        finalRecencyResult: \"\",\r\n        viralLoadConfirmationResult: \"\",\r\n        receivedResultDate: \"\",\r\n      });\r\n    }\r\n  }, [\r\n    recency.longTermLine,\r\n    recency.verififcationLine,\r\n    recency.controlLine,\r\n    props.patientObj,\r\n  ]);\r\n  //console.log(props.patientObj)\r\n  const handleInputChangeRecency = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"viralLoadConfirmationResult\") {\r\n      if (e.target.value >= 1000) {\r\n        recency.viralLoadResultClassification = \">=1000\";\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value < 1000) {\r\n        recency.viralLoadResultClassification = \"<1000\";\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n    if (e.target.name === \"viralLoadResultClassification\") {\r\n      if (e.target.value === \">=1000\") {\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"<1000\") {\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Failed run\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Invalid viral load result\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"rencencyId\" && e.target.value !== \"\") {\r\n      const recencyIdNumberValue = checkRecencyLimit(e.target.value);\r\n      setRecency({ ...recency, [e.target.name]: recencyIdNumberValue });\r\n    } else if (e.target.name === \"receivedResultDate\") {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    } else {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkRecencyLimit = (e) => {\r\n    const limit = 10;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleReferanceNumber = recency.sampleReferanceNumber\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    }\r\n    // {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\");\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      let latestForm = getNextForm(\r\n        \"HIV_Recency_Testing\",\r\n        props.patientAge,\r\n        \"\",\r\n        props?.patientObj?.hivTestResult\r\n      );\r\n    objValues.htsClientId = clientId;\r\n    objValues.recency = recency;\r\n    objValues.personId = patientID;\r\n    //console.log(recency)\r\n    if (validate() ) {\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/recency`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"Risk Assesment successful\");\r\n          //comment this out for release\r\n          // handleItemClick(\"fit-history\", \"recency-testing\");\r\n          if (\r\n            props?.patientObj?.hivTestResult && props?.patientObj?.hivTestResult.toLowerCase() ===\r\n            \"positive\"\r\n          ) {\r\n            handleItemClick(\"pns-history\", \"recency-testing\");\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>RECENCY FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>RECENCY</h5>\r\n              </LabelRibbon>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Opt Out of RTRI? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"optOutRTRI\"\r\n                    id=\"optOutRTRI\"\r\n                    value={recency.optOutRTRI}\r\n                    onChange={handleInputChangeRecency}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8\"></div>\r\n              {recency.optOutRTRI === \"false\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"optOutRTRITestName\"\r\n                        id=\"optOutRTRITestName\"\r\n                        value={recency.optOutRTRITestName}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Asante\">Asante</option>\r\n                        <option value=\"Others\">Others</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Date <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"optOutRTRITestDate\"\r\n                        id=\"optOutRTRITestDate\"\r\n                        value={recency.optOutRTRITestDate}\r\n                        onChange={handleInputChangeRecency}\r\n                        min={\r\n                          hivTestDate !== \"\" && hivTestDate !== null\r\n                            ? hivTestDate\r\n                            : \"\"\r\n                        }\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency ID <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyId\"\r\n                        id=\"rencencyId\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyId}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Control Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"controlLine\"\r\n                        id=\"controlLine\"\r\n                        value={recency.controlLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Verification Line{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"verififcationLine\"\r\n                        id=\"verififcationLine\"\r\n                        value={recency.verififcationLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Long Term Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"longTermLine\"\r\n                        id=\"longTermLine\"\r\n                        value={recency.longTermLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency Interpretation{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyInterpretation\"\r\n                        id=\"rencencyInterpretation\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyInterpretation}\r\n                        disabled\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {recency.rencencyInterpretation === \"RTRI Recent\" && (\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Has Viral Load been ordered? </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hasViralLoad\"\r\n                          id=\"hasViralLoad\"\r\n                          value={recency.hasViralLoad}\r\n                          onChange={handleInputChangeRecency}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {recency.hasViralLoad === \"true\" && (\r\n                    <>\r\n                      <div className=\"row\">\r\n                        <h4>Recency Viral Load Classification :</h4>\r\n                        <br />\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Collected Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleCollectedDate\"\r\n                              id=\"sampleCollectedDate\"\r\n                              type=\"date\"\r\n                              value={recency.sampleCollectedDate}\r\n                              min={recency.optOutRTRITestDate}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Reference Number{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleReferanceNumber\"\r\n                              id=\"sampleReferanceNumber\"\r\n                              type=\"text\"\r\n                              value={recency.sampleReferanceNumber}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            />\r\n                            {errors.sampleReferanceNumber !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleReferanceNumber}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Type{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"sampleType\"\r\n                              id=\"sampleType\"\r\n                              value={recency.sampleType}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"DBS\">DBS</option>\r\n                              <option value=\"Plasma\">Plasma</option>\r\n                            </select>\r\n                            {errors.sampleType !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleType}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Date Recency Sample Sent to PCR Lab</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"dateSampleSentToPCRLab\"\r\n                                id=\"dateSampleSentToPCRLab\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.sampleCollectedDate}\r\n                                value={recency.dateSampleSentToPCRLab}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                            {errors.dateSampleSentToPCRLab !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateSampleSentToPCRLab}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Test Date</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"sampleTestDate\"\r\n                                id=\"sampleTestDate\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.dateSampleSentToPCRLab}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={recency.sampleTestDate}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Receiving PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"receivingPcrLab\"\r\n                              id=\"receivingPcrLab\"\r\n                              type=\"text\"\r\n                              value={recency.receivingPcrLab}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Confirmation Result (copies/ml)\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadConfirmationResult\"\r\n                              id=\"viralLoadConfirmationResult\"\r\n                              type=\"number\"\r\n                              value={recency.viralLoadConfirmationResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Received Date\r\n                            </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"receivedResultDate\"\r\n                                id=\"receivedResultDate\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.sampleTestDate}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={recency.receivedResultDate}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Classification and\r\n                              Result (copies/ml)\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadResultClassification\"\r\n                              id=\"viralLoadResultClassification\"\r\n                              value={recency.viralLoadResultClassification}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value=\">=1000\">{\">= \"} 1000</option>\r\n                              <option value=\"<1000\">{\"< \"} 1000</option>\r\n                              <option value=\"Failed run\">Failed run</option>\r\n                              <option value=\"Invalid viral load result\">\r\n                                Invalid viral load result\r\n                              </option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </div> */}\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Final Recency Result</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"finalRecencyResult\"\r\n                              id=\"finalRecencyResult\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              value={recency.finalRecencyResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"post-test\", \"post-test\")}\r\n                  /> */}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      props.patientObj?.postTestCounselingKnowledgeAssessment\r\n                        ?.hivTestResult === \"true\" && recency.optOutRTRI === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recency;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js",["1029","1030","1031","1032","1033"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../../../api\";\r\nimport { token as token } from \"./../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FamilyIndexHistory = (props) => {\r\n  let history = useHistory();\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFamilyIndexList([response.data]);\r\n          props.handleItemClick(\"fit-history\");\r\n        } else {\r\n          setFamilyIndexList([]);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListoFFamilyIndexInfo();\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-fit\");\r\n    props.setAction(actionType);\r\n  };\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}hts-family-index-testing/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        getListoFFamilyIndexInfo();\r\n\r\n        toggle();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group mb-3 col-md-12\">\r\n          {console.log(familyIndexList)}\r\n          {familyIndexList.length < 1 && (\r\n            <Button\r\n              content=\"Add New form\"\r\n              icon=\"left add\"\r\n              labelPosition=\"left\"\r\n              style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n              onClick={() => props.handleItemClick(\"fit\")}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            content=\"Done\"\r\n            icon=\"list\"\r\n            labelPosition=\"left\"\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            onClick={() => handleDone()}\r\n          /> */}\r\n        </div>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          // title=''\r\n          columns={[\r\n            // { title: \"HTS ID\", field: \"id\" },\r\n            { title: \"Family Index Client\", field: \"date\" },\r\n            { title: \"Date of Birth\", field: \"pre\" },\r\n            { title: \"Recency Test\", field: \"rencency\" },\r\n            // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={familyIndexList.map((row) => ({\r\n            // id: row.id,\r\n            date: row.indexClientId,\r\n            pre: row.dateOfBirth,\r\n            rencency: row.recencyTesting,\r\n\r\n            //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n            actions: (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    {/* <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  > */}\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* </Button> */}\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          }))}\r\n          options={{\r\n            toolbar: false,\r\n            search: false,\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete ?\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyIndexHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["1034","1035","1036","1037","1038","1039","1040","1041","1042","1043"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055"],"import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label, CardBody, Spinner, Input, Form} from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Label as LabelRibbon, Button} from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n        \"& .card-title\": {\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: \"0.25rem\",\r\n            height: \"41px\",\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\",\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\",\r\n        },\r\n        \"& p\": {\r\n            color: \"red\",\r\n        },\r\n        \"& label\": {\r\n            fontSize: \"14px\",\r\n            color: \"#014d88\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n    const [finalResult, setFinalResult] = useState(\"\");\r\n    const [resultStatus, setResultStatus] = useState(\"\");\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = {...errors};\r\n    //console.log(\"data3\", props.patientObj);\r\n    const patientID =\r\n        props.patientObj && props.patientObj.personResponseDto\r\n            ? props.patientObj.personResponseDto.id\r\n            : \"\";\r\n    const clientId =\r\n        props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = (dob) => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now;\r\n    };\r\n    const patientAge = calculate_age(\r\n        moment(\r\n            props.patientObj.personResponseDto &&\r\n            props.patientObj.personResponseDto.dateOfBirth\r\n                ? props.patientObj.personResponseDto.dateOfBirth\r\n                : 0\r\n        ).format(\"DD-MM-YYYY\")\r\n    );\r\n\r\n    const [objValues, setObjValues] = useState({\r\n        confirmatoryTest: {},\r\n        confirmatoryTest2: {},\r\n        hivTestResult: \"\",\r\n        hivTestResult2: \"\",\r\n        htsClientId: \"\",\r\n        personId: props.patientObj ? props.patientObj.id : \"\",\r\n        test1: {},\r\n        test2: {},\r\n        tieBreakerTest: {},\r\n        tieBreakerTest2: {},\r\n        syphilisTesting: {},\r\n        hepatitisTesting: {},\r\n        others: {},\r\n        cd4: {},\r\n        prepOffered: \"\",\r\n        prepAccepted: \"\",\r\n    });\r\n    const handleInputChange = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setObjValues({...objValues, [e.target.name]: e.target.value});\r\n    };\r\n    const [initialTest1, setInitailTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [initialTest12, setInitailTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeCd4Count = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setCd4Count({...cd4Count, [e.target.name]: e.target.value});\r\n    };\r\n    const [cd4Count, setCd4Count] = useState({\r\n        cd4Count: \"\",\r\n        cd4SemiQuantitative: \"\",\r\n        cd4FlowCyteometry: \"\",\r\n    });\r\n    const handleInputChangeInitial = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeInitial2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeConfirmatory = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest({\r\n            ...confirmatoryTest,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeConfirmatory2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest2({\r\n            ...confirmatoryTest2,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [tieBreakerTest, setTieBreakerTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeTie = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest({...tieBreakerTest, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeTie2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest2({...tieBreakerTest2, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [syphills, setSyphills] = useState({\r\n        syphilisTestResult: \"\",\r\n        // result  :\"\",\r\n    });\r\n    const handleInputChangeSyphills = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setSyphills({...syphills, [e.target.name]: e.target.value});\r\n    };\r\n    const [hepatitis, setHepatitis] = useState({\r\n        hepatitisCTestResult: \"\",\r\n        hepatitisBTestResult: \"\",\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    const handleInputChangeHepatitis = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setHepatitis({...hepatitis, [e.target.name]: e.target.value});\r\n    };\r\n    const [others, setOthers] = useState({\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    useEffect(() => {\r\n        //console.log(props.patientObj)\r\n        if (props.patientObj) {\r\n            setCd4Count(\r\n                props.patientObj && props.patientObj.cd4 !== null\r\n                    ? props.patientObj.cd4\r\n                    : {}\r\n            );\r\n            setInitailTest(\r\n                props.patientObj && props.patientObj.test1 !== null\r\n                    ? props.patientObj.test1\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest(\r\n                props.patientObj && props.patientObj.confirmatoryTest !== null\r\n                    ? props.patientObj.confirmatoryTest\r\n                    : {}\r\n            );\r\n            setTieBreakerTest(\r\n                props.patientObj && props.patientObj.tieBreakerTest !== null\r\n                    ? props.patientObj.tieBreakerTest\r\n                    : {}\r\n            );\r\n            setSyphills(\r\n                props.patientObj && props.patientObj.syphilisTesting !== null\r\n                    ? props.patientObj.syphilisTesting\r\n                    : {}\r\n            );\r\n            setHepatitis(\r\n                props.patientObj && props.patientObj.hepatitisTesting !== null\r\n                    ? props.patientObj.hepatitisTesting\r\n                    : {}\r\n            );\r\n            setOthers(\r\n                props.patientObj && props.patientObj.others !== null\r\n                    ? props.patientObj.others\r\n                    : {}\r\n            );\r\n\r\n            setInitailTest2(\r\n                props.patientObj && props.patientObj.test2 !== null\r\n                    ? props.patientObj.test2\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest2(\r\n                props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n                    ? props.patientObj.confirmatoryTest2\r\n                    : {}\r\n            );\r\n            setTieBreakerTest2(\r\n                props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n                    ? props.patientObj.tieBreakerTest2\r\n                    : {}\r\n            );\r\n            //Logic for cd4 count section to show\r\n            if (\r\n                props.patientObj.hivTestResult !== null &&\r\n                props.patientObj.hivTestResult !== \"\" &&\r\n                props.patientObj.hivTestResult === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n            if (\r\n                props.patientObj.hivTestResult2 !== null &&\r\n                props.patientObj.hivTestResult2 !== \"\" &&\r\n                props.patientObj.hivTestResult2 === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n        }\r\n    }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n    const handleInputChangeOthers = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setOthers({...others, [e.target.name]: e.target.value});\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date !== \"\" &&\r\n        (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        (temp.prepOffered = objValues.prepOffered\r\n            ? \"\"\r\n            : \"The Prep Offered field is required.\");\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        objValues.prepOffered === \"true\" &&\r\n        (temp.prepAccepted = objValues.prepAccepted\r\n            ? \"\"\r\n            : \"The Prep Accepted field is required.\");\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n        // temp.syphilisTestResult = syphills.syphilisTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n\r\n        setErrors({...temp});\r\n        return Object.values(temp).every((x) => x == \"\");\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let result = \"\";\r\n\r\n        if (initialTest1.result === \"No\") {\r\n            result = \"Negative\";\r\n        } else if (\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"No\" &&\r\n            (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n        ) {\r\n            result = \"Negative\";\r\n        }\r\n        else if(\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n\r\n        ){\r\n            result = \"Negative\";\r\n        }\r\n\r\n        setFinalResult(result);\r\n    }, [\r\n        initialTest1.result,\r\n        confirmatoryTest.result,\r\n        tieBreakerTest.result,\r\n        initialTest12.result2,\r\n        confirmatoryTest2.result2,\r\n        tieBreakerTest2.result2,\r\n    ]);\r\n    // clear the all other fields if there changes in initialTest1 result is changes\r\n    useEffect(() => {\r\n        setConfirmatoryTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        // clear the prepOffered and prepAccepted fields\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest1.result]);\r\n\r\n    // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest.result]);\r\n\r\n    // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n    useEffect(() => {\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [tieBreakerTest.result]);\r\n\r\n    useEffect(() => {\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest12.result2]);\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest2.result2]);\r\n\r\n    // log all the  tests\r\n    console.log(\"initialTest1\", initialTest1);\r\n    console.log(\"confirmatoryTest\", confirmatoryTest);\r\n    console.log(\"tieBreakerTest\", tieBreakerTest);\r\n    console.log(\"initialTest12\", initialTest12);\r\n    console.log(\"confirmatoryTest2\", confirmatoryTest2);\r\n    console.log(\"tieBreakerTest2\", tieBreakerTest2);\r\n    console.log(\"finalResult\", finalResult);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(errors);\r\n\r\n            let latestForm = getNextForm(\r\n        \"Request_and_Result_Form\",\r\n        props.patientAge,\r\n        \"\",\r\n        \"unknown\"\r\n      );\r\n        if (finalResult === \"\") {\r\n            toast.error(\"Final result is required for submission.\");\r\n            return;\r\n        }\r\n        if (validate()) {\r\n            //logic to get Hiv result test\r\n            setSaving(true);\r\n            if (initialTest12.result2 === \"No\") {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else if (\r\n                initialTest12.result2 === \"Yes\" &&\r\n                confirmatoryTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            }\r\n                // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n                //     objValues.hivTestResult2=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult2 = \"\";\r\n            }\r\n\r\n            if (initialTest1.result === \"No\") {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else if (\r\n                initialTest1.result === \"Yes\" &&\r\n                confirmatoryTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            }\r\n                // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n                //     objValues.hivTestResult=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"No\"\r\n            ) {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult = \"\";\r\n            }\r\n            if (props.activePage.actionType === \"view\") {\r\n                //e.preventDefault();\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n            }\r\n            if (props.activePage.actionType === \"update\") {\r\n                objValues.htsClientId = clientId;\r\n                objValues.confirmatoryTest = confirmatoryTest;\r\n                objValues.confirmatoryTest2 = confirmatoryTest2;\r\n                objValues.personId = patientID;\r\n                objValues.test1 = initialTest1;\r\n                objValues.test2 = initialTest12;\r\n                objValues.tieBreakerTest = tieBreakerTest;\r\n                objValues.tieBreakerTest2 = tieBreakerTest2;\r\n                objValues.syphilisTesting = syphills;\r\n                objValues.hepatitisTesting = hepatitis;\r\n\r\n                objValues.cd4 = cd4Count;\r\n                objValues.others = others;\r\n\r\n                //console.log(clientId, objValues)\r\n                axios\r\n                    .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n                        headers: {Authorization: `Bearer ${token}`},\r\n                    })\r\n                    .then((response) => {\r\n                        setSaving(false);\r\n                        props.setPatientObj(response.data);\r\n                        console.log(\"saved\", response.data);\r\n                        //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                        //toast.success(\"HIV test successful\");\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n                    })\r\n                    .catch((error) => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage =\r\n                                error.response.data.apierror &&\r\n                                error.response.data.apierror.message !== \"\"\r\n                                    ? error.response.data.apierror.message\r\n                                    : \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage);\r\n                        } else {\r\n                            toast.error(\"Something went wrong. Please try again...\");\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2 style={{color: \"#000\"}}>REQUEST AND RESULT FORM</h2>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h4 style={{color: \"#fff\"}}>HIV TEST RESULT</h4>\r\n                            </LabelRibbon>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial Test :</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\"> Date </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        id=\"date\"\r\n                                        value={initialTest1.date}\r\n                                        onChange={handleInputChangeInitial}\r\n                                       min={props?.patientObj?.dateVisit}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        required\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                    {errors.date !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.date}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                                <div className=\"form-group  col-md-5\">\r\n                                    <FormGroup>\r\n                                        <Label>Result </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"result\"\r\n                                            id=\"result\"\r\n                                            value={initialTest1.result}\r\n                                            onChange={handleInputChangeInitial}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            //disabled={initialTest1.date === \"\" ? true : false}\r\n                                            disabled={props.activePage.actionType === \"view\"}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Yes\">Reactive</option>\r\n                                            <option value=\"No\">Non Reactive</option>\r\n                                        </select>\r\n                                        {errors.result !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.result}</span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result === \"Yes\" && (\r\n                                <>\r\n                                    <h4>Confirmatory Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={confirmatoryTest.date}\r\n                                                onChange={handleInputChangeConfirmatory}\r\n                                                min={initialTest1.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                            {errors.dateOfEac1 !== \"\" ? (\r\n                                                <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {confirmatoryTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={confirmatoryTest.result}\r\n                                                    onChange={handleInputChangeConfirmatory}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest.result === \"No\" && (\r\n                                <>\r\n                                    <h4>Tie Breaker Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={tieBreakerTest.date}\r\n                                                onChange={handleInputChangeTie}\r\n                                                min={confirmatoryTest.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {tieBreakerTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={tieBreakerTest.result}\r\n                                                    onChange={handleInputChangeTie}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    //disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group  col-md-12\">\r\n                                    {initialTest1.result === \"No\" && (\r\n                                        <>\r\n                                            <b> Result : </b>\r\n                                            <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest1.result === \"No\" &&\r\n                                        confirmatoryTest.result === \"No\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {/*{initialTest1.result === \"Yes\" &&*/}\r\n                                    {/*    confirmatoryTest.result === \"No\" &&*/}\r\n                                    {/*    tieBreakerTest.result === \"No\" && (*/}\r\n                                    {/*        <>*/}\r\n                                    {/*            <b> Final Result : </b>*/}\r\n                                    {/*            <LabelRibbon color=\"red\"> Negative</LabelRibbon>*/}\r\n                                    {/*        </>*/}\r\n                                    {/*    )*/}\r\n                                    {/*}*/}\r\n\r\n                                    {initialTest1.result === \"Yes\" &&\r\n                                        confirmatoryTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n                                                <div className=\"row\">\r\n                                                    <h4>RETESTING:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={confirmatoryTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                                readOnly={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                // disabled={\r\n                                                                //   initialTest12.date2 === \"\" ? true : false\r\n                                                                // }\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            tieBreakerTest2.date2 === \"\"\r\n                                                                                ? true\r\n                                                                                : false\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* This is result for Test 1 */}\r\n                                    {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <h4>Retesting:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={tieBreakerTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    initialTest12.date2 === \"\" ? true : false\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   tieBreakerTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {errors.prepOffered !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepOffered}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {errors.prepAccepted !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepAccepted}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"No\" &&\r\n                                        (initialTest1.result === \"Yes\" ||\r\n                                            initialTest1.result !== \"\") && (\r\n                                            <>\r\n                                                <>\r\n                                                    <b> Result : </b>\r\n                                                    <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                                    <b> Final Result : </b>\r\n                                                    <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                                                </>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Offered{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepOffered\"\r\n                                                                id=\"prepOffered\"\r\n                                                                value={objValues.prepOffered}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    {objValues.prepOffered !== \"\" &&\r\n                                                        objValues.prepOffered === \"true\" && (\r\n                                                            <div className=\"form-group  col-md-6\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>\r\n                                                                        Prep Accepted{\" \"}\r\n                                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                                    </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"prepAccepted\"\r\n                                                                        id=\"prepAccepted\"\r\n                                                                        value={objValues.prepAccepted}\r\n                                                                        onChange={handleInputChange}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"true\">Yes</option>\r\n                                                                        <option value=\"false\">No</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* END of  result for Test 1 */}\r\n                                    {/* This is result for Test 2 */}\r\n                                    {initialTest12.result2 === \"No\" && (\r\n                                        <>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                            <br/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group  col-md-5\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Offered{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepOffered\"\r\n                                                            id=\"prepOffered\"\r\n                                                            value={objValues.prepOffered}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                {objValues.prepOffered !== \"\" &&\r\n                                                    objValues.prepOffered === \"true\" && (\r\n                                                        <div className=\"form-group  col-md-5\">\r\n                                                            <FormGroup>\r\n                                                                <Label>\r\n                                                                    Prep Accepted{\" \"}\r\n                                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                                </Label>\r\n                                                                <select\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"prepAccepted\"\r\n                                                                    id=\"prepAccepted\"\r\n                                                                    value={objValues.prepAccepted}\r\n                                                                    onChange={handleInputChange}\r\n                                                                    style={{\r\n                                                                        border: \"1px solid #014D88\",\r\n                                                                        borderRadius: \"0.2rem\",\r\n                                                                    }}\r\n                                                                    disabled={\r\n                                                                        props.activePage.actionType === \"view\"\r\n                                                                    }\r\n                                                                >\r\n                                                                    <option value={\"\"}></option>\r\n                                                                    <option value=\"true\">Yes</option>\r\n                                                                    <option value=\"false\">No</option>\r\n                                                                </select>\r\n                                                            </FormGroup>\r\n                                                        </div>\r\n                                                    )}\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest12.result2 === \"No\" &&\r\n                                        confirmatoryTest2.result2 === \"No\" && (\r\n                                            <>\r\n                                                <b> FinalnResult : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {initialTest12.result2 === \"Yes\" &&\r\n                                        confirmatoryTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                                <br/>\r\n                                            </>\r\n                                        )}\r\n                                    {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"No\" &&\r\n                                        (initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"\") && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {/* END of  result for Test 2*/}\r\n                                </div>\r\n                            </div>\r\n                            {initialTest1.result === \"No\" && (\r\n                                <>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Prep Offered <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"prepOffered\"\r\n                                                    id=\"prepOffered\"\r\n                                                    value={objValues.prepOffered}\r\n                                                    onChange={handleInputChange}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"true\">Yes</option>\r\n                                                    <option value=\"false\">No</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {objValues.prepOffered !== \"\" &&\r\n                                            objValues.prepOffered === \"true\" && (\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Accepted{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepAccepted\"\r\n                                                            id=\"prepAccepted\"\r\n                                                            value={objValues.prepAccepted}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest2.result2 === \"No\" &&\r\n                                tieBreakerTest2.result2 === \"No\" && (\r\n                                    <>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label>\r\n                                                        Prep Offered{\" \"}\r\n                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"prepOffered\"\r\n                                                        id=\"prepOffered\"\r\n                                                        value={objValues.prepOffered}\r\n                                                        onChange={handleInputChange}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={props.activePage.actionType === \"view\"}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"true\">Yes</option>\r\n                                                        <option value=\"false\">No</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {objValues.prepOffered !== \"\" &&\r\n                                                objValues.prepOffered === \"true\" && (\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Accepted{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepAccepted\"\r\n                                                                id=\"prepAccepted\"\r\n                                                                value={objValues.prepAccepted}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                )}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            {showCD4Count && (\r\n                                <>\r\n                                    <LabelRibbon\r\n                                        as=\"a\"\r\n                                        color=\"blue\"\r\n                                        style={{width: \"106%\", height: \"35px\"}}\r\n                                        ribbon\r\n                                    >\r\n                                        <h5 style={{color: \"#fff\"}}>CD4 Count</h5>\r\n                                    </LabelRibbon>\r\n                                    <br/> <br/>\r\n                                    <div className=\"form-group  col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label>CD4 Count </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"cd4Count\"\r\n                                                id=\"cd4Count\"\r\n                                                value={cd4Count.cd4Count}\r\n                                                onChange={handleInputChangeCd4Count}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.2rem\",\r\n                                                }}\r\n                                                disabled={props.activePage.actionType === \"view\"}\r\n                                            >\r\n                                                <option value={\"\"}></option>\r\n                                                <option value=\"Semi-Quantitative\">\r\n                                                    Semi-Quantitative\r\n                                                </option>\r\n                                                <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>CD4 Count Value</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"cd4SemiQuantitative\"\r\n                                                    id=\"cd4SemiQuantitative\"\r\n                                                    value={cd4Count.cd4SemiQuantitative}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"<200\">{\"<200\"}</option>\r\n                                                    <option value=\">=200\">{\">=200\"}</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">CD4 Count Value</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"cd4FlowCyteometry\"\r\n                                                    id=\"cd4FlowCyteometry\"\r\n                                                    value={cd4Count.cd4FlowCyteometry}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-7\"></div>\r\n                                </>\r\n                            )}\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Syphilis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Syphilis test result <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                    </select>\r\n                                    {errors.syphilisTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis B virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisBTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis C virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisCTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            {props.patientObj.riskStratificationResponseDto !== null &&\r\n                                props.patientObj.riskStratificationResponseDto\r\n                                    .communityEntryPoint !== \"\" && (\r\n                                    <>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Longitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"longitude\"\r\n                                                    id=\"longitude\"\r\n                                                    value={others.longitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Latitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"latitude\"\r\n                                                    id=\"latitude\"\r\n                                                    value={others.latitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Adhoc Code</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"adhocCode\"\r\n                                        id=\"adhocCode\"\r\n                                        value={others.adhocCode}\r\n                                        onChange={handleInputChangeOthers}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        readOnly={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            {saving ? <Spinner/> : \"\"}\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-12\">\r\n                                    {/* {patientAge <= 15 ? (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                                            />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() =>\r\n                                                    handleItemClick(\r\n                                                        \"pre-test-counsel\",\r\n                                                        \"pre-test-counsel\"\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </>\r\n                                    )} */}\r\n                                    {props.activePage.actionType === \"update\" && (\r\n                                        <Button\r\n                                            content=\"Update & Continue\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                    {props.activePage.actionType === \"view\" && (\r\n                                        <Button\r\n                                            content=\"Next\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["1056","1057","1058","1059","1060","1061","1062"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\nimport { getCheckModality } from \"../../../../utility\";\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\",\n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\",\n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n            unprotectedVaginalSex:\"\",\n            uprotectedAnalSex:\"\",\n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\",\n            complaintsGenitalSore  :\"\",\n\n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\",\n            fever :\"\",\n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => {\n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})\n            }\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value});\n\n    }\n\n    const handleInputChangeRiskAssessment = e => {\n        setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeRiskAssessmentPartner = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n\n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n\n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        }\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});\n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n\n       let modality = getCheckModality(\n         props.patientObj?.riskStratificationResponseDto?.modality\n       );    \n            let latestForm = getNextForm(\n              \"Pre_Test_Counseling\",\n              props.patientAge,\n              modality,\n              \"unknown\"\n            );\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n\n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick(latestForm[0], latestForm[1]);\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n\n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n\n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n\n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                         disabled={props.activePage.actionType === \"view\"}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n\n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>\n\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n\n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {/* <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/> */}\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\nimport { getCheckModality } from \"../../../../utility\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n// THIS IS THE VIEW AND UPDATE PAGE\r\nconst BasicInfo = (props) => {\r\n  console.log(\"#############\", props.patientObj);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"enr\", props.activePage.activeObject);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  //const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  let temp = { ...errors };\r\n  //console.log(props?.patientObj?.dateVisit)\r\n  const [modalityCheck, setModalityCheck] = useState(\"\");\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    clientCode: \"\",\r\n    age: \"\",\r\n    dob: \"\",\r\n    breastFeeding: \"\",\r\n    dateVisit: props?.patientObj?.dateVisit,\r\n    firstTimeVisit: null,\r\n    indexClient: null,\r\n    numChildren: \"\",\r\n    numWives: \"\",\r\n    pregnant: \"\",\r\n    dateOfBirth: null,\r\n    dateOfRegistration: null,\r\n    deceased: true,\r\n    deceasedDateTime: null,\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    facilityId: \"\",\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    isDateOfBirthEstimated: \"\",\r\n    maritalStatusId: \"\",\r\n    organizationId: \"\",\r\n    otherName: \"\",\r\n    sexId: \"\",\r\n    state: null,\r\n    lga: \"\",\r\n    id: \"\",\r\n    surname: \"\",\r\n    previouslyTested: \"\",\r\n    referredFrom: \"\",\r\n    targetGroup: \"\",\r\n    testingSetting: \"\",\r\n    typeCounseling: \"\",\r\n    relationWithIndexClient:\r\n      props.activePage?.activeObject?.relationWithIndexClient,\r\n    indexClientCode: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    setObjValues(props.activePage.activeObject);\r\n    // if(props.patientObj){\r\n    //     objValues.referredFrom=props.patientObj.referredFrom\r\n    // }\r\n    //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\r\n    //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\r\n    setModalityCheck(\r\n      getCheckModality(\r\n        props?.patientObj?.riskStratificationResponseDto?.modality\r\n      )\r\n    );\r\n  }, [props.patientObj]);\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    if (e.target.name === \"numChildren\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"numWives\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n  };\r\n\r\n  const handleClientCodeCheck = (e) => {\r\n    axios\r\n      .get(`${baseUrl}hts/clientCodeCheck`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.targetGroup =\r\n      objValues.targetGroup !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.referredFrom =\r\n      objValues.referredFrom !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested =\r\n      objValues.previouslyTested !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.indexClient =\r\n      objValues.indexClient !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit =\r\n      objValues.firstTimeVisit !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n let latestForm = getNextForm(\r\n   \"Client_intake_form\",\r\n   props.patientAge,\r\n   modalityCheck,\r\n   \"unknown\"\r\n );\r\n    if (props.activePage.actionType === \"update\") {\r\n      //e.preventDefault();\r\n      const patientForm = {\r\n        ...props.patientObj,\r\n        clientCode: objValues.clientCode,\r\n        dateVisit: objValues.dateVisit,\r\n        extra: {},\r\n        id: objValues.id,\r\n        firstTimeVisit: objValues.firstTimeVisit,\r\n        indexClient: objValues.indexClient,\r\n        numChildren: objValues.numChildren,\r\n        numWives: objValues.numWives,\r\n        personId: props.patientObj.personId,\r\n        hospitalNumber: objValues.clientCode,\r\n        previouslyTested: objValues.previouslyTested,\r\n        referredFrom: objValues.referredFrom,\r\n        targetGroup: objValues.targetGroup,\r\n        testingSetting: objValues.testingSetting,\r\n        typeCounseling: objValues.typeCounseling,\r\n        breastFeeding: objValues.breastFeeding,\r\n        indexClientCode: objValues.indexClientCode,\r\n        pregnant: objValues.pregnant,\r\n        relationWithIndexClient: objValues.relationWithIndexClient,\r\n        comment: objValues.comment,\r\n      };\r\n\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .put(`${baseUrl}hts/${props.patientObj.id}`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.setPatientObj(response.data);\r\n            toast.success(\"HTS Test successful\");\r\n             handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (props.activePage.actionType === \"view\") {\r\n      //e.preventDefault();\r\n      setSaving(true);\r\n            handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Groups <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {kP.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Client Code <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"clientCode\"\r\n                    id=\"clientCode\"\r\n                    value={objValues.clientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={\r\n                      props.activePage.actionType === \"view\" ||\r\n                      props.activePage.actionType === \"update\"\r\n                    }\r\n                  />\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>{errors.clientCode}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    value={objValues.referredFrom}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min={objValues.dateOfRegistration}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={props.activePage.actionType === \"view\"}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n              {props.patientAge > 9 &&\r\n                (props.patientObj.personResponseDto.sex === \"Male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"MALE\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        min={0}\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {props.patientAge > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Index Testing</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" ||\r\n                (objValues.indexClient === true && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Relationship of the index client</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relationWithIndexClient\"\r\n                          id=\"relationWithIndexClient\"\r\n                          value={objValues.relationWithIndexClient}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Index Client Code/ID</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientCode\"\r\n                          id=\"indexClientCode\"\r\n                          value={objValues.indexClientCode}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          readOnly={props.activePage.actionType === \"view\"}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              {(props.patientObj.personResponseDto.sex === \"Female\" ||\r\n                props.patientObj.personResponseDto.sex === \"female\" ||\r\n                props.patientObj.personResponseDto.sex === \"FEMALE\") && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Pregnant Status</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        value={objValues.pregnant}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality === \"TEST_SETTING_CPMTCT\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n                            ? true\r\n                            : props.activePage.actionType === \"view\"\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {pregnancyStatus.map((value) =>\r\n                          (props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .testingSetting === \"TEST_SETTING_CPMTCT\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\") &&\r\n                          value.code === \"PREGANACY_STATUS_NOT_PREGNANT\" ? (\r\n                            <></>\r\n                          ) : (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/*objValues.pregnant!== 73 || objValues.pregnant!== \"73\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )*/}\r\n                </>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>First time visit</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Previously tested within the last 3 months</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Type of Counseling</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                <FormGroup>\r\n                  <Label for=\"firstName\">\r\n                    Comments\r\n                    {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    rows=\"4\"\r\n                    cols=\"7\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    value={objValues.comment}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                      height: \"100px\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["1078","1079","1080","1081"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=(row, actionType)=>{\n\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\n    }\n    \n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { getCheckModality } from \"../../../../utility\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n// THIS IS THE CREATE FORM\r\nconst BasicInfo = (props) => {\r\n  console.log(\"BasicInfo porps\", props);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  //const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  let temp = { ...errors };\r\n  const [clientCodeetail, setclientCodeetail] = useState(\"\");\r\n  const [clientCodeetail2, setclientCodeetail2] = useState(\"\");\r\n  const [clientCodeCheck, setClientCodeCheck] = useState(\"\");\r\n  const [createdCode, setCreatedCode] = useState(\"\");\r\n  const [facilityCode, setFacilityCode] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(null);\r\n  const [modalityCheck, setModality] = useState(\"\");\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    personId: props.patientObj.personId,\r\n    clientCode:\r\n      props.patientObj && props.patientObj.clientCode\r\n        ? props.patientObj.clientCode\r\n        : \"\",\r\n    breastFeeding:\r\n      props.patientObj && props.patientObj.breastFeeding\r\n        ? props.patientObj.breastFeeding\r\n        : \"\",\r\n    dateVisit:\r\n      props.patientObj && props.patientObj.dateVisit\r\n        ? props.patientObj.dateVisit\r\n        : \"\",\r\n    firstTimeVisit:\r\n      props.patientObj && props.patientObj.firstTimeVisit\r\n        ? props.patientObj.firstTimeVisit\r\n        : \"\",\r\n    indexClient:\r\n      props.patientObj && props.patientObj.indexClient\r\n        ? props.patientObj.indexClient\r\n        : \"\",\r\n    numChildren:\r\n      props.patientObj && props.patientObj.numChildren\r\n        ? props.patientObj.numChildren\r\n        : \"\",\r\n    numWives:\r\n      props.patientObj && props.patientObj.numWives\r\n        ? props.patientObj.numWives\r\n        : \"\",\r\n    pregnant:\r\n      props.patientObj && props.patientObj.pregnant\r\n        ? props.patientObj.pregnant\r\n        : \"\",\r\n    previouslyTested: props.patientObj ? props.patientObj.previouslyTested : \"\",\r\n    referredFrom: props.patientObj ? props.patientObj.referredFrom : \"\",\r\n    riskAssessment:\r\n      props.patientObj && props.patientObj.riskAssessment\r\n        ? props.patientObj.riskAssessment\r\n        : {},\r\n    riskStratificationCode:\r\n      props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n    targetGroup:\r\n      props.patientObj && props.patientObj.targetGroup\r\n        ? props.patientObj.targetGroup\r\n        : \"\",\r\n    testingSetting: props.patientObj ? props.patientObj.testingSetting : \"\",\r\n    typeCounseling: props.patientObj ? props.patientObj.typeCounseling : \"\",\r\n    relationWithIndexClient: props.patientObj\r\n      ? props.patientObj.relationWithIndexClient\r\n      : \"\",\r\n    indexClientCode: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  const CreateClientCode = () => {\r\n    let facilityShortCode = \"\";\r\n    axios\r\n      .get(`${baseUrl}hts/get-facility-code`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log('Response Facility Short Code **** ', response.data);\r\n        setFacilityCode(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let visitDate = new Date(props.patientObj.dateVisit);\r\n\r\n    let modality = props.patientObj.modality;\r\n    let modalityCode = \"\";\r\n    if (modality?.includes(\"STI\")) {\r\n      modalityCode = \"STI\";\r\n    } else if (modality?.includes(\"EMERGENCY\")) {\r\n      modalityCode = \"EME\";\r\n    } else if (modality?.includes(\"INDEX\")) {\r\n      modalityCode = \"IND\";\r\n    } else if (modality?.includes(\"INPATIENT\")) {\r\n      modalityCode = \"INP\";\r\n    } else if (modality?.includes(\"PMTCT\")) {\r\n      modalityCode = \"PMTCT\";\r\n    } else if (modality?.includes(\"TB\")) {\r\n      modalityCode = \"TB\";\r\n    } else if (modality?.includes(\"VCT\")) {\r\n      modalityCode = \"VCT\";\r\n    } else if (modality?.includes(\"MOBILE\")) {\r\n      modalityCode = \"MOB\";\r\n    } else if (modality?.includes(\"SNS\")) {\r\n      modalityCode = \"SNS\";\r\n    } else if (modality?.includes(\"OTHER\")) {\r\n      modalityCode = \"OTH\";\r\n    }\r\n\r\n    let month = visitDate.getMonth();\r\n    let year = visitDate.getFullYear();\r\n    let codeCreated =\r\n      \"C\" + facilityCode + \"/\" + modalityCode + \"/\" + month + \"/\" + year + \"/\";\r\n    setCreatedCode(codeCreated);\r\n    setObjValues({ ...objValues, clientCode: createdCode });\r\n    //setObjValues({ ...objValues, clientCode: props.clientCode });\r\n    // console.log('Created Code **** ', createdCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"############# Continues model\")\r\n\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    setObjValues({\r\n      ...props.patientObj,\r\n      clientCode: props.patientObj.clientCode,\r\n    });\r\n    CreateClientCode();\r\n\r\n    setModality(\r\n      getCheckModality(\r\n        props?.patientObj?.riskStratificationResponseDto?.modality\r\n      )\r\n    );\r\n  }, [props.patientObj, facilityCode]);\r\n\r\n  const handleSubmitCheckOut = () => {\r\n    if (\r\n      props.patientObject.visitId !== null &&\r\n      props.patientObject.status === \"PENDING\"\r\n    ) {\r\n      axios\r\n        .put(\r\n          `${baseUrl}patient/visit/checkout/${props.patientObject.visitId}`,\r\n          props.patientObject.visitId,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"indexClientCode\" && e.target.value !== \"\") {\r\n      async function getIndexClientCode() {\r\n        const indexClientCode = e.target.value;\r\n        const response = await axios.get(\r\n          `${baseUrl}hts/client/${indexClientCode}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== \"Record Not Found\") {\r\n          setclientCodeetail2(\"\");\r\n          setclientCodeetail(response.data);\r\n        } else {\r\n          setclientCodeetail(\"\");\r\n          setclientCodeetail2(response.data);\r\n        }\r\n      }\r\n      getIndexClientCode();\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else if (e.target.name === \"numChildren\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else if (e.target.name === \"numWives\") {\r\n      if (e.target.value >= 0) {\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setObjValues({\r\n          ...objValues,\r\n          [e.target.name]: 0,\r\n        });\r\n      }\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\";\r\n    temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested = objValues.previouslyTested\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit = objValues.firstTimeVisit\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  //checkClientCode\r\n  //   const checkClientCode = (e) => {\r\n  //     async function getIndexClientCode() {\r\n  //       const indexClientCode = objValues.clientCode;\r\n  //       const response = await axios.get(\r\n  //         `${baseUrl}hts/client/${indexClientCode}`,\r\n  //         {\r\n  //           headers: {\r\n  //             Authorization: `Bearer ${token}`,\r\n  //             \"Content-Type\": \"text/plain\",\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // if(response.data!=='Record Not Found'){\r\n  //       //     setClientCodeCheck(\"Client code already exist\")\r\n  //       // }else{\r\n  //       //     setClientCodeCheck(\"\")\r\n  //       // }\r\n  //     }\r\n  //     getIndexClientCode();\r\n  //   };\r\n  //checkClientCode\r\n  const checkClientCode = async (e) => {\r\n    // let code = \"\";\r\n    if (e.target.name === \"serialNumber\") {\r\n      const code = createdCode + e.target.value;\r\n      // setCreatedCode(code);\r\n      // console.log(\"Code created is &&&& \", createdCode);\r\n      setObjValues({ ...objValues, clientCode: code });\r\n      await handleClientCodeCheck(code);\r\n    }\r\n    // async function getIndexClientCode() {\r\n    //   const indexClientCode = objValues.clientCode;\r\n    //   console.log(indexClientCode);\r\n    //   const response = await axios.get(\r\n    //     `${baseUrl}hts/client/${indexClientCode}`,\r\n    //     {\r\n    //       headers: {\r\n    //         Authorization: `Bearer ${token}`,\r\n    //         \"Content-Type\": \"text/plain\",\r\n    //       },\r\n    //     }\r\n    //   );\r\n    // }\r\n    // getIndexClientCode();\r\n  };\r\n  const handleSubmit = (e) => {\r\n    console.log(props.patientObject);\r\n    e.preventDefault();\r\n    // check next form\r\n    let latestForm = getNextForm(\r\n      \"Client_intake_form\",\r\n      props.patientAge,\r\n      modalityCheck,\r\n      \"unknown\"\r\n    );\r\n\r\n    const patientForm = {\r\n      clientCode: objValues.clientCode,\r\n      dateVisit: objValues.dateVisit,\r\n      extra: {},\r\n      firstTimeVisit: objValues.firstTimeVisit,\r\n      indexClient: objValues.indexClient,\r\n      numChildren: objValues.numChildren,\r\n      numWives: objValues.numWives,\r\n      personId: props?.patientObject?.personId\r\n        ? props?.patientObject?.personId\r\n        : props?.patientObject?.id,\r\n      hospitalNumber: objValues.clientCode,\r\n      previouslyTested: objValues.previouslyTested,\r\n      referredFrom: objValues.referredFrom,\r\n      targetGroup: objValues.targetGroup,\r\n      testingSetting: objValues.testingSetting,\r\n      typeCounseling: objValues.typeCounseling,\r\n      breastFeeding: objValues.breastFeeding,\r\n      pregnant: objValues.pregnant,\r\n      indexClientCode: objValues.indexClientCode,\r\n      relationWithIndexClient: objValues.relationWithIndexClient,\r\n      riskStratificationCode:\r\n        props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n      comment: objValues.comment,\r\n    };\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      axios\r\n        .post(`${baseUrl}hts`, patientForm, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          if (props.checkedInPatient) {\r\n            handleSubmitCheckOut();\r\n          }\r\n\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"HTS Test successful\");\r\n         handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"All fields are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(async ()=> {\r\n\r\n  //   await handleClientCodeCheck();\r\n  //   temp.clientCode = clientCodeCheck === true ? \"\" : \"This field is required.\";\r\n\r\n  // },[objValues.clientCode])\r\n\r\n  const handleClientCodeCheck = async (code) => {\r\n    // console.log(\"VALUE\", e.target.value);\r\n    const data = { clientCode: code };\r\n    axios\r\n      .post(`${baseUrl}hts/clientCodeCheck`, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data)\r\n        setClientCodeCheck(response.data);\r\n        temp.clientCodeCheck =\r\n          response.data === true ? \"\" : \"This client code already exists.\";\r\n        setErrors({ ...temp });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        setClientCodeCheck(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Group <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n\r\n                  {console.log(\"targetGroup\", objValues.targetGroup, props)}\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    disabled\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    {/* <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))} */}\r\n                    {props?.sex && props?.sex.toLowerCase() === \"female\" && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"MSM\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                      </>\r\n                    )}\r\n\r\n                    {props?.sex && props?.sex.toLowerCase() === \"male\" && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"FSW\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}{\" \"}\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Serial Number <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"serialNumber\"\r\n                    id=\"serialNumber\"\r\n                    value={serialNumber}\r\n                    //value={Math.floor(Math.random() * 1093328)}\r\n                    onBlur={checkClientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Client Code <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"clientCode\"\r\n                    id=\"clientCode\"\r\n                    // value={createdCode + (serialNumber ? serialNumber : \"\")}\r\n                    value={objValues.clientCode}\r\n                    onChange={(e) => {\r\n                      // handleInputChange(e);\r\n                      // handleClientCodeCheck(e);\r\n                    }}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly\r\n                  />\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>{errors.clientCode}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {\" \"}\r\n                      {errors.clientCodeCheck}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.referredFrom}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min={objValues.dateOfRegistration}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n\r\n              {props.patientAge > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {props?.patientAge > 9 &&\r\n                props?.patientObject?.gender &&\r\n                props?.patientObject?.gender.toLowerCase() === \"male\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        min={0}\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Index Testing <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Relationship of the index client</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relationWithIndexClient\"\r\n                        id=\"relationWithIndexClient\"\r\n                        value={objValues.relationWithIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Index Client Code/ID</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"indexClientCode\"\r\n                        id=\"indexClientCode\"\r\n                        value={objValues.indexClientCode}\r\n                        onBlur={checkClientCode}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      {/* {clientCodeCheck !== \"\" ? (\r\n                        <span className={classes.error}>{clientCodeCheck}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {props?.patientObject?.gender &&\r\n                props?.patientObject?.gender.toLowerCase() === \"female\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Pregnant Status</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pregnant\"\r\n                          id=\"pregnant\"\r\n                          value={objValues.pregnant}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={\r\n                            props.extra.modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                            props.extra.modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n                            props.extra.modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.extra.modality === \"TEST_SETTING_CPMTCT\" ||\r\n                            props.extra.modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {pregnancyStatus.map((value) =>\r\n                            (props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                              props.patientObj.riskStratificationResponseDto\r\n                                .modality ===\r\n                                \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                              props.patientObj.riskStratificationResponseDto\r\n                                .testingSetting === \"TEST_SETTING_CPMTCT\" ||\r\n                              props.patientObj.riskStratificationResponseDto\r\n                                .modality ===\r\n                                \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                              props.patientObj.riskStratificationResponseDto\r\n                                .modality ===\r\n                                \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\") &&\r\n                            value.code === \"PREGANACY_STATUS_NOT_PREGNANT\" ? (\r\n                              <></>\r\n                            ) : (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            )\r\n                          )}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* objValues.pregnant === \"\" && (objValues.pregnant!== 73 || objValues.pregnant!== '73') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )*/}\r\n                  </>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    First time visit <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Previously tested within the last 3 months{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Type of Counseling <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                <FormGroup>\r\n                  <Label for=\"firstName\">\r\n                    Comments\r\n                    {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    rows=\"4\"\r\n                    cols=\"7\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    value={objValues.comment}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                      height: \"100px\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"risk\", \"risk\")}\r\n                  /> */}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["1101","1102","1103","1104","1105","1106"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n//import SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RiskStratification = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  console.log(\"Risk Props\", props);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [objValues, setObjValues] = useState({\r\n    age: props.patientAge,\r\n    dob: props.patientObj.dateOfBirth,\r\n    visitDate: \"\",\r\n    dateOfBirth: props.patientObj.dateOfBirth,\r\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\r\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    code: \"\",\r\n    id: \"\",\r\n    personId: props.patientObj.id,\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    careProvider: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  const [isPMTCTModality, setIsPMTCTModality] = useState(false);\r\n  const [showRiskAssessment, setShowRiskAssessment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n    if (props.patientObj.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.patientObj.riskStratificationResponseDto);\r\n      SettingModality(\r\n        props.patientObj.riskStratificationResponseDto.testingSetting\r\n      );\r\n      setRiskAssessment(\r\n        props.patientObj.riskStratificationResponseDto &&\r\n          props.patientObj.riskStratificationResponseDto.riskAssessment\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getMenuLogic = () => {\r\n    //secound logic\r\n    props.setHideOtherMenu(false);\r\n  };\r\n\r\n  const checkPMTCTModality = (modality) => {\r\n    console.log(\"modality\", modality);\r\n    if (\r\n      modality === \"TEST_SETTING_CT_PMTCT\" ||\r\n      modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\"\r\n    ) {\r\n      console.log(\"it is PMTCT MODALITY \");\r\n      setIsPMTCTModality(true);\r\n      return true;\r\n    } else {\r\n      console.log(\"it is NOT pmtct modality \");\r\n\r\n      setIsPMTCTModality(false);\r\n      return false;\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n      let ans = checkPMTCTModality(e.target.value);\r\n\r\n      console.log(\"answerrrr\", ans);\r\n      displayRiskAssessment(\r\n        riskAssessment.lastHivTestBasedOnRequest,\r\n        objValues.age,\r\n        ans\r\n      );\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const displayRiskAssessment = (lastVisit, age, isPMTCTModalityValue) => {\r\n    let SecAge = age !== \"\" ? age : 0;\r\n    let ans;\r\n    console.log(\r\n      \"variable lastVisit\",\r\n      lastVisit,\r\n      \"objValues.age\",\r\n      objValues.age,\r\n      \"isPMTCTModality\",\r\n      isPMTCTModalityValue,\r\n      \"SecAge\",\r\n      SecAge\r\n    );\r\n    // for the section to show\r\n    //  Conditions are : age > 15, riskAssessment.lastHivTestBasedOnRequest === \"false\" and PMTCT Modality === true\r\n    if (lastVisit === \"false\") {\r\n      if (SecAge > 15 && isPMTCTModalityValue) {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      } else if (SecAge > 15) {\r\n        setShowRiskAssessment(true);\r\n        ans = true;\r\n      } else {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      }\r\n    } else {\r\n      setShowRiskAssessment(false);\r\n      ans = false;\r\n    }\r\n    console.log(\"This is the answer\", ans);\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    props.patientAge > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    //Risk Assement section\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    riskAssessment.lastHivTestDone !== \"\" &&\r\n      riskAssessment.lastHivTestDone !== \"Never\" &&\r\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    if (\r\n      objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\"\r\n    ) {\r\n      temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    }\r\n    //targetGroup\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(riskAssessment)\r\n    getMenuLogic();\r\n      let newModality = isPMTCTModality ? \"skip\" : \"fill\";\r\n\r\n        let latestForm = getNextForm(\r\n          \"Risk_Stratification\",\r\n          objValues.age,\r\n          newModality,\r\n          \"unknown\"\r\n        );\r\n\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n\r\n    objValues.riskAssessment = riskAssessment;\r\n    if (\r\n      (props.patientObj.riskStratificationResponseDto &&\r\n        props.patientObj.riskStratificationResponseDto !== null &&\r\n        props.patientObj.personId !== \"\") ||\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      console.log(\"put\");\r\n      axios\r\n        .put(\r\n          `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n          objValues,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.patientObj.riskStratificationResponseDto = response.data;\r\n          objValues.code = response.data.code;\r\n          props.setExtra(objValues);\r\n          //toast.success(\"Risk stratification save succesfully!\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .post(`${baseUrl}risk-stratification`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n           handleItemClick(latestForm[0], latestForm[1]);\r\n            props.setHideOtherMenu(false);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"All fields are required\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      }\r\n    }\r\n\r\n    console.log(\"risk props at the end \", props);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {enrollSetting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Target Group <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"targetGroup\"\r\n                      id=\"targetGroup\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.targetGroup}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {kP.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.targetGroup !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.targetGroup}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Is this HIV test based on a Clinician/Doctor/Health Care\r\n                      Provider's request ?{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"lastHivTestBasedOnRequest\"\r\n                      id=\"lastHivTestBasedOnRequest\"\r\n                      value={riskAssessment.lastHivTestBasedOnRequest}\r\n                      onChange={handleInputChangeRiskAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHivTestBasedOnRequest}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              {props.patientAge > 15 &&\r\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\r\n                  <>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      HIV Risk Assessment (Last 3 months)\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          When was your last HIV test done?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestDone\"\r\n                          id=\"lastHivTestDone\"\r\n                          value={riskAssessment.lastHivTestDone}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<1\"> {\"< 1\"} month</option>\r\n                          <option value=\"1-3 Months\">1-3 Months</option>\r\n                          <option value=\"4-6 Months\">4-6 Months</option>\r\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                          <option value=\"Never\"> Never</option>\r\n                        </select>\r\n                        {errors.lastHivTestDone !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestDone}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {riskAssessment.lastHivTestDone !== \"\" &&\r\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              What was the result?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"whatWasTheResult\"\r\n                              id=\"whatWasTheResult\"\r\n                              value={riskAssessment.whatWasTheResult}\r\n                              onChange={handleInputChangeRiskAssessment}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"Positive\">Positive</option>\r\n                              <option value=\"Negative\">Negative</option>\r\n                            </select>\r\n                            {errors.whatWasTheResult !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.whatWasTheResult}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal or vaginal\r\n                          or oral sex without a condom with someone who was HIV\r\n                          positive or unaware of their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestVaginalOral\"\r\n                          id=\"lastHivTestVaginalOral\"\r\n                          value={riskAssessment.lastHivTestVaginalOral}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestVaginalOral}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had a blood or\r\n                          blood product transfusion?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestBloodTransfusion\"\r\n                          id=\"lastHivTestBloodTransfusion\"\r\n                          value={riskAssessment.lastHivTestBloodTransfusion}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestBloodTransfusion}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you experienced painful\r\n                          urination, lower abdominal pain, vaginal or penile\r\n                          discharge, pain during sexual intercourse, thick,\r\n                          cloudy, or foul smelling discharge and/or small bumps\r\n                          or blisters near the mouth, penis, vagina, or anal\r\n                          areas? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestPainfulUrination\"\r\n                          id=\"lastHivTestPainfulUrination\"\r\n                          value={riskAssessment.lastHivTestPainfulUrination}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestPainfulUrination}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Have you been diagnosed with TB or currently have any\r\n                          of the following symptoms : cough, fever, weight loss,\r\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosedWithTb\"\r\n                          id=\"diagnosedWithTb\"\r\n                          value={riskAssessment.diagnosedWithTb}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.diagnosedWithTb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.diagnosedWithTb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you ever injected\r\n                          drugs, shared needles or other sharp objects with\r\n                          someone known to be HIV positive or who you didn’t\r\n                          know their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestInjectedDrugs\"\r\n                          id=\"sexUnderInfluence\"\r\n                          value={riskAssessment.lastHivTestInjectedDrugs}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestInjectedDrugs}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal, oral or\r\n                          vaginal sex in exchange for money or other benefits?\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestHadAnal\"\r\n                          id=\"lastHivTestHadAnal\"\r\n                          value={riskAssessment.lastHivTestHadAnal}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestHadAnal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestHadAnal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you been forced to have\r\n                          sex? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestForceToHaveSex\"\r\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                          value={riskAssessment.lastHivTestForceToHaveSex}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestForceToHaveSex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save \"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskStratification;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["1107","1108","1109","1110","1111"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PostTest = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  console.log(\"data3\", props.patientObj);\r\n  ///const [errors, setErrors] = useState({});\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    personId: patientID,\r\n  });\r\n\r\n  const [postTest, setPostTest] = useState({\r\n    hivTestResult: \"\",\r\n    hivTestBefore:\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.lastHivTestDone !== \"Never\" &&\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.whatWasTheResult === \"Positive\"\r\n        ? \"Previously tested positive in HIV care\"\r\n        : \"\",\r\n    hivRequestResult: \"\",\r\n    hivRequestResultCt: \"\",\r\n    clientReceivedHivTestResult: \"\",\r\n    postTestCounseling: \"\",\r\n    riskReduction: \"\",\r\n    postTestDisclosure: \"\",\r\n    bringPartnerHivtesting: \"\",\r\n    childrenHivtesting: \"\",\r\n    informationFp: \"\",\r\n    partnerFpThanCondom: \"\",\r\n    partnerFpUseCondom: \"\",\r\n    correctCondomUse: \"\",\r\n    condomProvidedToClient: \"\",\r\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\r\n    referredToServices: \"\",\r\n    lubricantProvidedToClient: \"\",\r\n    condomProvidedToClientCount: \"\",\r\n    lubricantProvidedToClientCount: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setPostTest({\r\n      ...postTest,\r\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\r\n    });\r\n\r\n    if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    }\r\n    // if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\r\n    //     setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment)\r\n    // }else{\r\n    //     if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\r\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Positive') {\r\n    //         postTest.hivTestResult='true'\r\n    //         setPostTest({...postTest, hivTestResult:'true' })\r\n    //     }else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\r\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Negative') {\r\n    //         postTest.hivTestResult='false'\r\n    //         setPostTest({...postTest, hivTestResult:'false' })\r\n    //     }\r\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\r\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Positive') {\r\n    //         postTest.hivTestResult='true'\r\n    //         setPostTest({...postTest, hivTestResult:'true' })\r\n    //     }\r\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\r\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Negative') {\r\n    //         postTest.hivTestResult='false'\r\n    //         setPostTest({...postTest, hivTestResult:'false' })\r\n    //     }\r\n    // }\r\n  }, [props.patientObj, postTest.hivTestResult]);\r\n  const handleInputChangePostTest = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n\r\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"condomProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      } else {\r\n        setPostTest({ ...postTest, [e.target.name]: 0 });\r\n      }\r\n    } else {\r\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //handleItemClick('recency-testing', 'post-test')\r\n    // if(!(Object.values(postTest).every(x => x === \"\"))){\r\n    \r\n   let latestForm = getNextForm(\r\n     \"Post_Test_Counseling\",\r\n     props?.patientObj?.riskStratificationResponseDto?.age,\r\n     \"\",\r\n     props?.patientObj?.hivTestResult\r\n   );\r\n    setSaving(true);\r\n    objValues.htsClientId = props.patientObj.id;\r\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\r\n    objValues.personId = props.patientObj.personResponseDto.id;\r\n    axios\r\n      .put(\r\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\r\n        objValues,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setSaving(false);\r\n        props.setPatientObj(response.data);\r\n        toast.success(\"Post test successful\");\r\n         handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n        // handleItemClick(\"recency-testing\", \"post-test\");\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n    // }else{\r\n    //     toast.error(\"All post test fields are required\")\r\n\r\n    // }\r\n  };\r\n\r\n  //console.log(postTest.hivTestResult)\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>POST TEST COUNSELING</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n              </LabelRibbon>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={postTest.hivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={true}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Positive</option>\r\n                    <option value=\"false\">Negative</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been tested for HIV before within this year?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestBefore\"\r\n                    id=\"hivTestBefore\"\r\n                    value={postTest.hivTestBefore}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Not previously tested\">\r\n                      Not previously tested\r\n                    </option>\r\n                    <option value=\"Previously tested negative\">\r\n                      Previously tested negative\r\n                    </option>\r\n                    <option value=\"Previously tested positive in HIV care\">\r\n                      Previously tested positive in HIV care\r\n                    </option>\r\n                    <option value=\"Previously tested positive not in HIV care\">\r\n                      Previously tested positive not in HIV care\r\n                    </option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV Request and Result form signed by tester </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResult\"\r\n                    id=\"hivRequestResult\"\r\n                    value={postTest.hivRequestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResultCt\"\r\n                    id=\"hivRequestResultCt\"\r\n                    value={postTest.hivRequestResultCt}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client received HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientReceivedHivTestResult\"\r\n                    id=\"clientReceivedHivTestResult\"\r\n                    value={postTest.clientReceivedHivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test counseling done </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestCounseling\"\r\n                    id=\"postTestCounseling\"\r\n                    value={postTest.postTestCounseling}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Risk reduction plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"riskReduction\"\r\n                    id=\"riskReduction\"\r\n                    value={postTest.riskReduction}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test disclosure plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestDisclosure\"\r\n                    id=\"postTestDisclosure\"\r\n                    value={postTest.postTestDisclosure}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Will bring partner(s) for HIV testing </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"bringPartnerHivtesting\"\r\n                    id=\"bringPartnerHivtesting\"\r\n                    value={postTest.bringPartnerHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"childrenHivtesting\"\r\n                    id=\"childrenHivtesting\"\r\n                    value={postTest.childrenHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Provided with information on FP and dual contraception{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informationFp\"\r\n                    id=\"informationFp\"\r\n                    value={postTest.informationFp}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client/Partner use FP methods (other than condom)\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpThanCondom\"\r\n                    id=\"partnerFpThanCondom\"\r\n                    value={postTest.partnerFpThanCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpUseCondom\"\r\n                    id=\"partnerFpUseCondom\"\r\n                    value={postTest.partnerFpUseCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Correct condom use demonstrated </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"correctCondomUse\"\r\n                    id=\"correctCondomUse\"\r\n                    value={postTest.correctCondomUse}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Condoms provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"condomProvidedToClient\"\r\n                    id=\"condomProvidedToClient\"\r\n                    value={postTest.condomProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.condomProvidedToClient !== null &&\r\n                postTest.condomProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many condoms were provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomProvidedToClientCount\"\r\n                        id=\"condomProvidedToClientCount\"\r\n                        value={postTest.condomProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lubricant were provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lubricantProvidedToClient\"\r\n                    id=\"lubricantProvidedToClient\"\r\n                    value={postTest.lubricantProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.lubricantProvidedToClient !== null &&\r\n                postTest.lubricantProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many lubricant provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantProvidedToClientCount\"\r\n                        id=\"lubricantProvidedToClientCount\"\r\n                        value={postTest.lubricantProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client referred to other services </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredToServices\"\r\n                    id=\"referredToServices\"\r\n                    value={postTest.referredToServices}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <Message success>\r\n                <h4>\r\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\r\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\r\n                  re-testing after 3 months\r\n                </h4>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\r\n                  /> */}\r\n                  {/*{postTest.hivTestResult === \"true\" && (*/}\r\n                  {/*  <Button*/}\r\n                  {/*    content=\"Save & Continue\"*/}\r\n                  {/*    icon=\"right arrow\"*/}\r\n                  {/*    labelPosition=\"right\"*/}\r\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n                  {/*    onClick={handleSubmit}*/}\r\n                  {/*  />*/}\r\n                  {/*)}*/}\r\n                  {/*{postTest.hivTestResult === \"false\" && (*/}\r\n                  {/*  <Button*/}\r\n                  {/*    content=\"Save & Finish\"*/}\r\n                  {/*    icon=\"right arrow\"*/}\r\n                  {/*    labelPosition=\"right\"*/}\r\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n                  {/*    onClick={handleSubmit}*/}\r\n                  {/*  />*/}\r\n                  {/*)}*/}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTest;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { getNextForm } from \"../../../../utility\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  //console.log(\"data1\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const [finalResult, setFinalResult] = useState(\"\");\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setErrors({ date: \"\", prepOffered: \"\", prepAccepted: \"\" });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      (temp.prepOffered = objValues.prepOffered\r\n        ? \"\"\r\n        : \"The Prep Offered field is required.\");\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      objValues.prepOffered === \"true\" &&\r\n      (temp.prepAccepted = objValues.prepAccepted\r\n        ? \"\"\r\n        : \"The Prep Accepted field is required.\");\r\n    // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult ? \"\" : \"This field is required.\"\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let result = \"\";\r\n\r\n    if (initialTest1.result === \"No\") {\r\n      result = \"Negative\";\r\n    } else if (\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"No\" &&\r\n      (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n      initialTest1.result === \"Yes\" &&\r\n      confirmatoryTest.result === \"No\" &&\r\n      tieBreakerTest.result === \"Yes\" &&\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    }\r\n\r\n    setFinalResult(result);\r\n  }, [\r\n    initialTest1.result,\r\n    confirmatoryTest.result,\r\n    tieBreakerTest.result,\r\n    initialTest12.result2,\r\n    confirmatoryTest2.result2,\r\n    tieBreakerTest2.result2,\r\n  ]);\r\n  // clear the all other fields if there changes in initialTest1 result is changes\r\n  useEffect(() => {\r\n    setConfirmatoryTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    // clear the prepOffered and prepAccepted fields\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [initialTest1.result]);\r\n\r\n  // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    });\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [confirmatoryTest.result]);\r\n\r\n  // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n  useEffect(() => {\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [tieBreakerTest.result]);\r\n\r\n  useEffect(() => {\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [initialTest12.result2]);\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({ ...objValues, prepOffered: \"\", prepAccepted: \"\" });\r\n  }, [confirmatoryTest2.result2]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n      let latestForm = getNextForm(\r\n        \"Request_and_Result_Form\",\r\n        props.patientAge,\r\n        \"\",\r\n        \"unknown\"\r\n      );\r\n    if (finalResult === \"\") {\r\n      toast.error(\"Final result is required for submission.\");\r\n      return;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //logic to get Hiv result test\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      objValues.htsClientId = clientId;\r\n      objValues.confirmatoryTest = confirmatoryTest;\r\n      objValues.confirmatoryTest2 = confirmatoryTest2;\r\n      objValues.personId = patientID;\r\n      objValues.test1 = initialTest1;\r\n      objValues.test2 = initialTest12;\r\n      objValues.tieBreakerTest = tieBreakerTest;\r\n      objValues.tieBreakerTest2 = tieBreakerTest2;\r\n      objValues.syphilisTesting = syphills;\r\n      objValues.hepatitisTesting = hepatitis;\r\n\r\n      objValues.cd4 = cd4Count;\r\n      objValues.others = others;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    min={props?.patientObj?.dateVisit}\r\n                    onChange={handleInputChangeInitial}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                    <>\r\n                      <b> Result : </b>\r\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                    </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                    confirmatoryTest.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                                        <LabelRibbon color=\"green\" >\r\n                                                            Negative\r\n                                                        </LabelRibbon>\r\n                                                    )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {errors.prepOffered !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepOffered}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {errors.prepAccepted !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepAccepted}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <>\r\n                          <b> Result : </b>\r\n                          <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                          <b> Final Result : </b>\r\n                          <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                        </>\r\n                        <br />\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                              <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                  <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Offered{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepOffered\"\r\n                              id=\"prepOffered\"\r\n                              value={objValues.prepOffered}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                          objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Prep Accepted{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"prepAccepted\"\r\n                                  id=\"prepAccepted\"\r\n                                  value={objValues.prepAccepted}\r\n                                  onChange={handleInputChange}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                >\r\n                                  <option value={\"\"}></option>\r\n                                  <option value=\"true\">Yes</option>\r\n                                  <option value=\"false\">No</option>\r\n                                </select>\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                                        <LabelRibbon color=\"green\" >\r\n                                                            Negative\r\n                                                        </LabelRibbon>\r\n                                                    )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 !== \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* {confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )} */}\r\n              {/* {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )} */}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => {\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          );\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )} */}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["1123","1124","1125","1126"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      //window.location.reload(false);\n      props.setActivePage({...props.activePage, activePage:\"home\"})\n     \n    }\n\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["1127","1128","1129","1130","1131","1132","1133","1134","1135","1136"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { getNextForm } from \"../../../../utility\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst Recency = (props) => {\r\n  //console.log(\"data1\", props.patientObj)\r\n  const classes = useStyles();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  let temp = { ...errors };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const [permissions, setPermission] = useState(\r\n    localStorage.getItem(\"permissions\")?.split(\",\")\r\n  );\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    recency: {},\r\n    personId: patientID,\r\n  });\r\n  const [recency, setRecency] = useState({\r\n    optOutRTRI:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRI\r\n        : \"\",\r\n    optOutRTRITestName:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestName\r\n        : \"\",\r\n    optOutRTRITestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestDate\r\n        : \"\",\r\n    rencencyId:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyId\r\n        : \"\",\r\n    controlLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.controlLine\r\n        : \"\",\r\n    verififcationLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.verififcationLine\r\n        : \"\",\r\n    longTermLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.longTermLine\r\n        : \"\",\r\n    rencencyInterpretation:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyInterpretation\r\n        : \"\",\r\n    hasViralLoad:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.hasViralLoad\r\n        : \"\",\r\n    sampleCollectedDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleCollectedDate\r\n        : \"\",\r\n    sampleReferanceNumber:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleReferanceNumber\r\n        : \"\",\r\n    dateSampleSentToPCRLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.dateSampleSentToPCRLab\r\n        : \"\",\r\n    sampleTestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleTestDate\r\n        : \"\",\r\n    sampleType:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleType\r\n        : \"\",\r\n    receivingPcrLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivingPcrLab\r\n        : \"\",\r\n    viralLoadResultClassification:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadResultClassification\r\n        : \"\",\r\n    recencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.recencyResult\r\n        : \"\",\r\n    finalRecencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.finalRecencyResult\r\n        : \"\",\r\n    viralLoadConfirmationResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadConfirmationResult\r\n        : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj.recency !== null) {\r\n      console.log(props.patientObj.recency);\r\n      setRecency(props.patientObj.recency);\r\n      if (recency.optOutRTRI === \"true\") {\r\n        setRecency({\r\n          optOutRTRI:\r\n            props.patientObj && props.patientObj.recency !== null\r\n              ? props.patientObj.recency.optOutRTRI\r\n              : \"\",\r\n          optOutRTRITestName: \"\",\r\n          optOutRTRITestDate: \"\",\r\n          rencencyId: \"\",\r\n          controlLine: \"\",\r\n          verififcationLine: \"\",\r\n          longTermLine: \"\",\r\n          rencencyInterpretation: \"\",\r\n          hasViralLoad: \"\",\r\n          sampleCollectedDate: \"\",\r\n          sampleReferanceNumber: \"\",\r\n          dateSampleSentToPCRLab: \"\",\r\n          sampleTestDate: \"\",\r\n          sampleType: \"\",\r\n          receivingPcrLab: \"\",\r\n          viralLoadResultClassification: \"\",\r\n          recencyResult: \"\",\r\n          finalRecencyResult: \"\",\r\n          viralLoadConfirmationResult: \"\",\r\n        });\r\n      }\r\n    }\r\n    if (props.patientObj) {\r\n      if (\r\n        props.patientObj.confirmatoryTest2 &&\r\n        props.patientObj.confirmatoryTest2.date2 !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest2.date2);\r\n      } else if (\r\n        props.patientObj.confirmatoryTest &&\r\n        props.patientObj.confirmatoryTest.date !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest.date);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n    if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Long Term\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Long Term\" });\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Recent\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Recent\" });\r\n      //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Negative\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Negative\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"false\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else {\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"\" });\r\n    }\r\n  }, [\r\n    recency.longTermLine,\r\n    recency.verififcationLine,\r\n    recency.controlLine,\r\n    props.patientObj,\r\n  ]);\r\n  //console.log(props.patientObj)\r\n  const handleInputChangeRecency = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"viralLoadConfirmationResult\") {\r\n      if (e.target.value >= 1000) {\r\n        recency.viralLoadResultClassification = \">=1000\";\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value < 1000) {\r\n        recency.viralLoadResultClassification = \"<1000\";\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n    if (e.target.name === \"viralLoadResultClassification\") {\r\n      if (e.target.value === \">=1000\") {\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"<1000\") {\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Failed run\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Invalid viral load result\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"rencencyId\" && e.target.value !== \"\") {\r\n      const recencyIdNumberValue = checkRecencyLimit(e.target.value);\r\n      setRecency({ ...recency, [e.target.name]: recencyIdNumberValue });\r\n    } else {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkRecencyLimit = (e) => {\r\n    const limit = 10;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleReferanceNumber = recency.sampleReferanceNumber\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    }\r\n    // {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\");\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let latestForm = getNextForm(\r\n      \"HIV_Recency_Testing\",\r\n      props.patientAge,\r\n      \"\",\r\n      props?.patientObj?.hivTestResult\r\n    );\r\n    objValues.htsClientId = clientId;\r\n    objValues.recency = recency;\r\n    objValues.personId = patientID;\r\n    //console.log(recency)\r\n    if (validate()) {\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/recency`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"Risk Assesment successful\");\r\n          //comment this out for release\r\n          // handleItemClick(\"fit\", \"recency-testing\");\r\n          handleItemClick(latestForm[0], latestForm[1]);\r\n\r\n          // else if (permissions.includes(\"Nigeria_PNS_Form\")) {\r\n          // }\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>RECENCY FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>RECENCY</h5>\r\n              </LabelRibbon>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Opt Out of RTRI? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"optOutRTRI\"\r\n                    id=\"optOutRTRI\"\r\n                    value={recency.optOutRTRI}\r\n                    onChange={handleInputChangeRecency}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8\"></div>\r\n              {recency.optOutRTRI === \"false\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"optOutRTRITestName\"\r\n                        id=\"optOutRTRITestName\"\r\n                        value={recency.optOutRTRITestName}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Asante\">Asante</option>\r\n                        <option value=\"Others\">Others</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Date <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"optOutRTRITestDate\"\r\n                        id=\"optOutRTRITestDate\"\r\n                        value={recency.optOutRTRITestDate}\r\n                        onChange={handleInputChangeRecency}\r\n                        min={\r\n                          hivTestDate !== \"\" && hivTestDate !== null\r\n                            ? hivTestDate\r\n                            : \"\"\r\n                        }\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency ID <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyId\"\r\n                        id=\"rencencyId\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyId}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Control Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"controlLine\"\r\n                        id=\"controlLine\"\r\n                        value={recency.controlLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Verification Line{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"verififcationLine\"\r\n                        id=\"verififcationLine\"\r\n                        value={recency.verififcationLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Long Term Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"longTermLine\"\r\n                        id=\"longTermLine\"\r\n                        value={recency.longTermLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency Interpretation{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyInterpretation\"\r\n                        id=\"rencencyInterpretation\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyInterpretation}\r\n                        disabled\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {recency.rencencyInterpretation === \"RTRI Recent\" && (\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Has Viral Load been ordered? </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hasViralLoad\"\r\n                          id=\"hasViralLoad\"\r\n                          value={recency.hasViralLoad}\r\n                          onChange={handleInputChangeRecency}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {recency.hasViralLoad === \"true\" && (\r\n                    <>\r\n                      <div className=\"row\">\r\n                        <h4>Recency Viral Load Classification :</h4>\r\n                        <br />\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Collected Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleCollectedDate\"\r\n                              id=\"sampleCollectedDate\"\r\n                              type=\"date\"\r\n                              value={recency.sampleCollectedDate}\r\n                              min={recency.optOutRTRITestDate}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Reference Number{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleReferanceNumber\"\r\n                              id=\"sampleReferanceNumber\"\r\n                              type=\"text\"\r\n                              value={recency.sampleReferanceNumber}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.sampleReferanceNumber !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleReferanceNumber}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Type{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"sampleType\"\r\n                              id=\"sampleType\"\r\n                              value={recency.sampleType}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"DBS\">DBS</option>\r\n                              <option value=\"Plasma\">Plasma</option>\r\n                            </select>\r\n                            {errors.sampleType !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleType}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Date Recency Sample Sent to PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"dateSampleSentToPCRLab\"\r\n                              id=\"dateSampleSentToPCRLab\"\r\n                              type=\"date\"\r\n                              min={recency.sampleCollectedDate}\r\n                              value={recency.dateSampleSentToPCRLab}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateSampleSentToPCRLab !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateSampleSentToPCRLab}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Test Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleTestDate\"\r\n                              id=\"sampleTestDate\"\r\n                              type=\"date\"\r\n                              // min={recency.optOutRTRITestDate}\r\n                              min={recency.dateSampleSentToPCRLab}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              value={recency.sampleTestDate}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Receiving PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"receivingPcrLab\"\r\n                              id=\"receivingPcrLab\"\r\n                              type=\"text\"\r\n                              value={recency.receivingPcrLab}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Confirmation Result (copies/ml)\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadConfirmationResult\"\r\n                              id=\"viralLoadConfirmationResult\"\r\n                              type=\"number\"\r\n                              value={recency.viralLoadConfirmationResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Classification and\r\n                              Result (copies/ml)\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadResultClassification\"\r\n                              id=\"viralLoadResultClassification\"\r\n                              value={recency.viralLoadResultClassification}\r\n                              onChange={handleInputChangeRecency}\r\n                              disabled\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value=\">=1000\">{\">= \"} 1000</option>\r\n                              <option value=\"<1000\">{\"< \"} 1000</option>\r\n                              <option value=\"Failed run\">Failed run</option>\r\n                              <option value=\"Invalid viral load result\">\r\n                                Invalid viral load result\r\n                              </option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Final Recency Result</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"finalRecencyResult\"\r\n                              id=\"finalRecencyResult\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              value={recency.finalRecencyResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {/* <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"post-test\", \"post-test\")}\r\n                  /> */}\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      props.patientObj?.postTestCounselingKnowledgeAssessment\r\n                        ?.hivTestResult === \"true\" && recency.optOutRTRI === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recency;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js",["1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181"],"import React, {useEffect, useState} from \"react\";\r\nimport {CardBody, FormGroup, Input, Label} from \"reactstrap\";\r\nimport * as moment from \"moment/moment\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Select from 'react-select';\r\n\r\n\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Button, Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Modal, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport {calculate_age} from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n        \"& .card-title\": {\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: \"0.25rem\",\r\n            height: \"41px\",\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\",\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\",\r\n        },\r\n        \"& p\": {\r\n            color: \"red\",\r\n        },\r\n        \"& label\": {\r\n            fontSize: \"14px\",\r\n            color: \"#014d88\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n    success: {\r\n        color: \"green\",\r\n        fontSize: \"12.8px\",\r\n        fontWeight: \"bold\",\r\n    },\r\n}));\r\n\r\nconst HIVSTPatientRegistration = (props) => {\r\n    // // console.log(props.patientObject)\r\n    const patient = props.patientObject;\r\n    const [saving, setSaving] = useState(false)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors };\r\n    const [serialNumber, setSerialNumber] = useState(null);\r\n    const [createdCode, setCreatedCode] = useState(\"\");\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [showUserInfo, setShowUserInfo] = useState(false);\r\n    const [otherText, setOtherText] = useState('');\r\n    const [otherTestKitUserInfoAvailable, setIsUserInformationAvailable] = useState(false);\r\n    const [kitUserInformation, setKitUserInformation] = useState([]);\r\n    const [serviceNeeded, setServiceNeeded] = useState([]);\r\n    const [hasConductedHIVST, setHasConductedHIVST] = useState(false);\r\n    const [maritalStatus, setMaritalStatus] = useState([]);\r\n    const [sexs, setSexs] = useState([]);\r\n    const [userInformationList, setUserInformationList] = useState([])\r\n    const [userInformationErrors, setUserInformationErrors] = useState({});\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggle = () => setOpen(!open);\r\n\r\n    const [objValues, setObjValues] = useState({\r\n        patientId: patient?.personId ? patient.personId : \"\",\r\n        // patientObject: {\r\n        //     surname: patient?.surname ? patient.surname : \"\",\r\n        //     firstName: patient?.firstName ? patient.firstName : \"\",\r\n        //     otherName: patient?.otherName ? patient.otherName : \"\",\r\n        //     dateOfBirth: patient?.dateOfBirth ? patient.dateOfBirth : \"\",\r\n        //     maritalStatusId: \"1\",\r\n        //     genderId: patient.gender ? patient.gender : \"\",\r\n        //     sexId: patient.personResponseDto && patient.personResponseDto.sex !== null\r\n        //         ? patient.personResponseDto.sex\r\n        //         : \"\",\r\n        //     address: \"\",\r\n        //     dateOfRegistration: \"\",\r\n        //     hospitalNumber: patient?.hospitalNumber ? patient?.hospitalNumber : \"\",\r\n        // },\r\n        dateOfVisit: \"\",\r\n        serviceDeliveryPoint: \"\",\r\n        userType: \"\",\r\n        serialNumber: \"\",\r\n        clientCode: \"\",\r\n        previouslyTestedWithin12Months: \"\",\r\n        resultOfPreviouslyTestedWithin12Months: \"\",\r\n        consentForFollowUpCalls: \"\",\r\n        typeOfHivstKitReceived: \"\",\r\n        numberOfHivstKitsReceived: \"\",\r\n        nameOfTestKit: \"\",\r\n        lotNumber: \"\",\r\n        expiryDate: \"\",\r\n        testKitUsers: null,\r\n        testKitUserDetails: [],\r\n        otherTestKitUserInfoAvailable: \"\",\r\n        hasConductedHIVST: \"\",\r\n    });\r\n\r\n    const [testKitUserDetails, setUserInformation] = useState(\r\n        {\r\n            basicUserInfo: {\r\n                id: \"\",\r\n                firstName:\"\",\r\n                surname:\"\",\r\n                otherName:\"\",\r\n                dateOfRegistration:\"\",\r\n                otherCategory: \"\",\r\n                clientCode: \"\",\r\n                dateOfBirth: \"\",\r\n                age: \"\",\r\n                sex: \"\",\r\n                maritalStatusId: \"\",\r\n                typeOfHivst: \"\",\r\n                userCategory: \"\",\r\n                isDateOfBirthEstimated: \"\"\r\n            },\r\n            postTestAssessment: {\r\n                everUsedHivstKit: \"\",\r\n                everUsedHivstKitForSelfOrOthers: \"\",\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\",\r\n                resultOfHivstTest: \"\",\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n\r\n     console.log(\"Selected Options\", selectedUsers);\r\n    const options = [\r\n        {value: 'myself', label: 'For myself'},\r\n        {value: 'spouse', label: 'Spouse'},\r\n        {value: 'children', label: 'Children'},\r\n        {value: 'sexual partner', label: 'Sexual Partner'},\r\n        {value: 'social network', label: 'Social Network'},\r\n        {value: 'others', label: 'Others (Please specify)'},\r\n    ];\r\n\r\n    const matches = useMediaQuery('(max-width:600px)');\r\n    const style = {fontSize: matches ? '12px' : '16px',};\r\n\r\n\r\n    const SERVICE_NEEDED = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    // create array of objects from the response\r\n                    const serviceNeeded = response.data.map((service) => {\r\n                        return {\r\n                            value: service.display,\r\n                            label: service.display\r\n                        }\r\n                    });\r\n                    setServiceNeeded(serviceNeeded);\r\n                    // // console.log(\"serviceNeeded\", serviceNeeded)\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                // handle error\r\n            });\r\n    };\r\n\r\n    // // console.log(\"selectedUsers\", selectedUsers);\r\n    // // console.log(\"showUserInfo\", showUserInfo);\r\n    useEffect(() => {\r\n        SERVICE_NEEDED();\r\n    }, []);\r\n\r\n    const validateObjValues = () => {\r\n        temp.dateOfVisit = objValues.dateOfVisit ? \"\" : \"This field is required.\";\r\n        temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n        temp.serviceDeliveryPoint = objValues.serviceDeliveryPoint ? \"\" : \"This field is required.\";\r\n        temp.userType = objValues.userType ? \"\" : \"This field is required.\";\r\n        temp.serialNumber = objValues.serialNumber ? \"\" : \"This field is required.\";\r\n        temp.previouslyTestedWithin12Months = objValues.previouslyTestedWithin12Months ? \"\" : \"This field is required.\";\r\n        temp.consentForFollowUpCalls = objValues.consentForFollowUpCalls ? \"\" : \"This field is required.\";\r\n        if (objValues.previouslyTestedWithin12Months !== \"\" && objValues.previouslyTestedWithin12Months !== \"No\") {\r\n            temp.resultOfPreviouslyTestedWithin12Months = objValues.resultOfPreviouslyTestedWithin12Months ? \"\" : \"This field is required.\";\r\n        }\r\n        temp.nameOfTestKit = objValues.nameOfTestKit ? \"\" : \"This field is required.\";\r\n        temp.typeOfHivstKitReceived = objValues.typeOfHivstKitReceived ? \"\" : \"This field is required.\";\r\n        temp.numberOfHivstKitsReceived = objValues.numberOfHivstKitsReceived ? \"\" : \"This field is required.\";\r\n        temp.expiryDate = objValues.expiryDate ? \"\" : \"This field is required.\";\r\n        temp.lotNumber = objValues.lotNumber ? \"\" : \"This field is required.\";\r\n        if(selectedUsers.length === 0) {\r\n            temp.selectedUsers =   objValues.testKitUsers ? \"\" : \"Please select at least one user\"\r\n        }\r\n        console.log(\"temp\", temp);\r\n        setErrors({ ...temp });\r\n        return Object.values(temp).every((x) => x == \"\");\r\n    }\r\n\r\n    // validate testKitUserDetails\r\n    const validateUserInformation = () => {\r\n        // if (objValues.otherTestKitUserInfoAvailable === \"Yes\") {\r\n            let temp = {};\r\n            temp.firstName = testKitUserDetails.basicUserInfo.firstName ?  \"\" : \"This field is required.\";\r\n            temp.surname = testKitUserDetails.basicUserInfo.surname ?  \"\" : \"This field is required.\";\r\n            temp.userCategory = testKitUserDetails.basicUserInfo.userCategory ? \"\" : \"This field is required.\";\r\n            // temp.otherCategory = testKitUserDetails.basicUserInfo.userCategory === \"Others\" ? testKitUserDetails.basicUserInfo.otherCategory ? \"\" : \"This field is required.\" : \"\";\r\n            temp.clientCode = testKitUserDetails.basicUserInfo.clientCode ? \"\" : \"This field is required.\";\r\n            // temp.dateOfBirth = testKitUserDetails.basicUserInfo.dateOfBirth ? \"\" : \"This field is required.\";\r\n            temp.typeOfHivst = testKitUserDetails.basicUserInfo.typeOfHivst ? \"\" : \"This field is required.\";\r\n            // Check if the selected user category is in the selectedUsers array\r\n            if (!selectedUsers.includes(testKitUserDetails.basicUserInfo.userCategory) && testKitUserDetails.basicUserInfo.userCategory !== \"\" ) {\r\n                temp.userCategory = \"The selected user category does not match the selected kit users.\";\r\n            }\r\n            // the number of kit is empty\r\n            setUserInformationErrors({...temp});\r\n            return Object.values(temp).every((x) => x == \"\");\r\n        // }\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        let newObjectValues = {...objValues};\r\n        if (name in objValues) {\r\n            newObjectValues[name] = value;\r\n        } else if (name in objValues.postTestAssessment) {\r\n            newObjectValues.postTestAssessment[name] = value;\r\n        } else if (name in objValues.postTestAssessment.referralInformation) {\r\n            newObjectValues.postTestAssessment.referralInformation[name] = value;\r\n        }\r\n\r\n        // Check if the name is \"previouslyTestedWithin12Months\"\r\n        if (name === \"previouslyTestedWithin12Months\") {\r\n            newObjectValues.resultOfPreviouslyTestedWithin12Months = \"\";\r\n        }\r\n        if (name === \"typeOfHivstKitReceived\") {\r\n            newObjectValues.numberOfHivstKitsReceived = \"\";\r\n            newObjectValues.nameOfTestKit = \"\";\r\n            newObjectValues.lotNumber = \"\";\r\n            newObjectValues.expiryDate = \"\";\r\n        }\r\n        // Check if the name is \"hasConductedHIVST\" and objValues.hasConductedHIVST is \"No\"\r\n        if (name === \"hasConductedHIVST\") {\r\n            testKitUserDetails.postTestAssessment = {\r\n                ...testKitUserDetails.postTestAssessment,\r\n                everUsedHivstKitForSelfOrOthers: \"\",\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\",\r\n                resultOfHivstTest: \"\",\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n        }\r\n// Validate the field and remove the error message if the field is filled\r\n        if (value) {\r\n            let tempErrors = {...errors};\r\n            tempErrors[name] = \"\";\r\n            setErrors(tempErrors);\r\n        }\r\n\r\n        setObjValues(newObjectValues);\r\n    }\r\n\r\n\r\n    const handleUserInformationInputChange = (e, section) => {\r\n        const {name, value} = e.target;\r\n        let newUserInformation = {...testKitUserDetails};\r\n\r\n        if (section === 'postTestAssessment' && name in newUserInformation[section].referralInformation) {\r\n            newUserInformation[section].referralInformation[name] = value;\r\n        } else {\r\n            newUserInformation[section][name] = value;\r\n        }\r\n\r\n        // if everUsedHivstKitForSelfOrOthers  clear otherHivstKitUserCategory\r\n        if (name === \"everUsedHivstKitForSelfOrOthers\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\"\r\n            };\r\n        }\r\n\r\n        // if  resultOfHivstTestchnages clear all the feilds below\r\n        if (name === \"resultOfHivstTest\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n\r\n        }\r\n        // if  accessConfirmatoryHtschnages clear all the feilds below\r\n        if (name === \"accessConfirmatoryHts\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n\r\n        }\r\n        // if  referPreventionServiceschnages clear all the feilds below\r\n        if (name === \"referPreventionServices\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                    dateReferredForPreventionServices: \"\"\r\n                }\r\n            };\r\n        }\r\n\r\n        // any change in referredForPreventionServices clear dateReferredForPreventionServices\r\n        if (name === \"referredForPreventionServices\") {\r\n            newUserInformation.postTestAssessment.referralInformation = {\r\n                ...newUserInformation.postTestAssessment.referralInformation,\r\n                dateReferredForPreventionServices: \"\"\r\n            };\r\n        }\r\n\r\n        if (name === \"hasConductedHIVST\" && value === \"No\") {\r\n            newUserInformation.postTestAssessment = {\r\n                ...newUserInformation.postTestAssessment,\r\n                everUsedHivstKitForSelfOrOthers: \"\",\r\n                otherHivstKitUserCategory: \"\",\r\n                otherHivstKitUserCategoryText: \"\",\r\n                resultOfHivstTest: \"\",\r\n                accessConfirmatoryHts: \"\",\r\n                referPreventionServices: \"\",\r\n                referralInformation: {\r\n                    referredForConfirmatoryHts: \"\",\r\n                    dateReferredForConfirmatoryHts: \"\",\r\n                    referredForPreventionServices: \"\",\r\n                }\r\n            };\r\n        }\r\n        // if userCategory changes clear all other fields in basicUserInfo\r\n        if (name === \"userCategory\") {\r\n            newUserInformation.basicUserInfo = {\r\n                ...newUserInformation.basicUserInfo,\r\n                otherCategory: \"\",\r\n                clientCode: \"\",\r\n                dateOfBirth: \"\",\r\n                age: \"\",\r\n            }\r\n        }\r\n        // validate and remove error message if the field is filled\r\n        if (value) {\r\n            let tempErrors = {...userInformationErrors};\r\n            tempErrors[name] = \"\";\r\n            setUserInformationErrors(tempErrors);\r\n        }\r\n\r\n        setUserInformation(newUserInformation);\r\n    };\r\n\r\n\r\n// Function to add a testKitUserDetails object to the list\r\n\r\n    const addUserInformation = () => {\r\n        if(validateUserInformation()) {\r\n            if(userInformationList.length <= objValues.numberOfHivstKitsReceived) {\r\n                let newUserInformation = {\r\n                    basicUserInfo: {\r\n                        id: \"\",\r\n                        firstName:testKitUserDetails.basicUserInfo.firstName,\r\n                        surname:testKitUserDetails.basicUserInfo.surname,\r\n                        otherName:testKitUserDetails.basicUserInfo.otherName,\r\n                        dateOfRegistration:testKitUserDetails.basicUserInfo.dateOfRegistration,\r\n                        otherCategory: testKitUserDetails.basicUserInfo.otherCategory,\r\n                        clientCode: testKitUserDetails.basicUserInfo.clientCode,\r\n                        dateOfBirth: testKitUserDetails.basicUserInfo.dateOfBirth,\r\n                        age: testKitUserDetails.basicUserInfo.age,\r\n                        sex: testKitUserDetails.basicUserInfo.sex,\r\n                        maritalStatusId: testKitUserDetails.basicUserInfo.maritalStatusId,\r\n                        typeOfHivst: testKitUserDetails.basicUserInfo.typeOfHivst,\r\n                        userCategory: testKitUserDetails.basicUserInfo.userCategory\r\n                    },\r\n                    postTestAssessment: {\r\n                        everUsedHivstKit: testKitUserDetails.postTestAssessment.everUsedHivstKit,\r\n                        everUsedHivstKitForSelfOrOthers: testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers,\r\n                        otherHivstKitUserCategory: testKitUserDetails.postTestAssessment.otherHivstKitUserCategory,\r\n                        otherHivstKitUserCategoryText: testKitUserDetails.postTestAssessment.otherHivstKitUserCategoryText,\r\n                        resultOfHivstTest: testKitUserDetails.postTestAssessment.resultOfHivstTest,\r\n                        accessConfirmatoryHts: testKitUserDetails.postTestAssessment.accessConfirmatoryHts,\r\n                        referPreventionServices: testKitUserDetails.postTestAssessment.referPreventionServices,\r\n                        referralInformation: {\r\n                            referredForConfirmatoryHts: testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts,\r\n                            dateReferredForConfirmatoryHts: testKitUserDetails.postTestAssessment.referralInformation.dateReferredForConfirmatoryHts,\r\n                            referredForPreventionServices: testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices,\r\n                            dateReferredForPreventionServices: testKitUserDetails.postTestAssessment.referralInformation.dateReferredForPreventionServices\r\n                        }\r\n                    }\r\n                }\r\n                setUserInformationList([...userInformationList, newUserInformation]);\r\n                setObjValues({...objValues, testKitUserDetails: [...userInformationList, newUserInformation]});\r\n\r\n                // clear testKitUserDetails after adding to the list and also set the hasConductedHIVST to No\r\n                setUserInformation({\r\n                    basicUserInfo: {\r\n                        firstName:\"\",\r\n                        surname:\"\",\r\n                        otherName:\"\",\r\n                        dateOfRegistration:\"\",\r\n                        otherCategory: \"\",\r\n                        clientCode: \"\",\r\n                        dateOfBirth: \"\",\r\n                        age: \"\",\r\n                        sex: \"\",\r\n                        maritalStatusId: \"\",\r\n                        typeOfHivst: \"\",\r\n                        userCategory: \"\",\r\n                        isDateOfBirthEstimated: \"\"\r\n                    },\r\n                    postTestAssessment: {\r\n                        everUsedHivstKit: \"\",\r\n                        everUsedHivstKitForSelfOrOthers: \"\",\r\n                        otherHivstKitUserCategory: \"\",\r\n                        otherHivstKitUserCategoryText: \"\",\r\n                        resultOfHivstTest: \"\",\r\n                        accessConfirmatoryHts: \"\",\r\n                        referPreventionServices: \"\",\r\n                        referralInformation: {\r\n                            referredForConfirmatoryHts: \"\",\r\n                            dateReferredForConfirmatoryHts: \"\",\r\n                            referredForPreventionServices: \"\",\r\n                            dateReferredForPreventionServices: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                setObjValues({...objValues, hasConductedHIVST: \"No\"});\r\n            } else {\r\n                // console.log(\"Cannot add more user information as it exceeds the number of HIVST kits received.\");\r\n            }\r\n        } else{\r\n            toast.error(\"Please fill all the required fields\");\r\n        }\r\n\r\n    }\r\n// Function to remove a testKitUserDetails object from the list based on index\r\n    const removeUserInformation = (index) => {\r\n        const updatedUserInformationList = userInformationList.filter((_, i) => i !== index);\r\n        setUserInformationList(updatedUserInformationList);\r\n        setObjValues({...objValues, testKitUserDetails: updatedUserInformationList});\r\n    };\r\n\r\n// Function to update a testKitUserDetails object in the list based on index\r\n    const updateUserInformation = (index, updatedUserInformation) => {\r\n        const updatedUserInformationList = userInformationList.map((testKitUserDetails, i) =>\r\n            i === index ? updatedUserInformation : testKitUserDetails\r\n        );\r\n        setUserInformationList(updatedUserInformationList);\r\n        setObjValues({...objValues, testKitUserDetails: updatedUserInformationList});\r\n    };\r\n\r\n// Function to clear the testKitUserDetails list\r\n    const clearUserInformationList = () => {\r\n        setUserInformationList([]);\r\n        setObjValues({...objValues, testKitUserDetails: []});\r\n    };\r\n\r\n    // // console.log(\"Obj\", objValues)\r\n\r\n    const handleKitSelectUserChange = selectedUsers => {\r\n        // if (objValues.userType === \"Secondary User\") {\r\n        //     setSelectedUsers([\"myself\"]);\r\n        //     let newValues = {...objValues, testKitUsers: selectedUsers};\r\n        //     setObjValues(newValues);\r\n        // } else\r\n        // {\r\n            setSelectedUsers(selectedUsers);\r\n            let newValues = {...objValues, testKitUsers: selectedUsers};\r\n            if (!selectedUsers || selectedUsers.length === 0) {\r\n                setShowUserInfo(false);\r\n                newValues = {...newValues, otherTestKitUserInfoAvailable: \"\"};\r\n            } else if (selectedUsers.length === 1 && selectedUsers[0] === 'myself') {\r\n                setShowUserInfo(false);\r\n                newValues = {...newValues, otherTestKitUserInfoAvailable: \"\"};\r\n            } else {\r\n                setShowUserInfo(true);\r\n            }\r\n            if (!showUserInfo) {\r\n                testKitUserDetails.userCategory = \"\";\r\n                testKitUserDetails.otherCategory = \"\";\r\n                testKitUserDetails.clientCode = \"\";\r\n                testKitUserDetails.dateOfBirth = \"\";\r\n                testKitUserDetails.age = \"\";\r\n                testKitUserDetails.sex = \"\";\r\n                testKitUserDetails.maritalStatus = \"\";\r\n                testKitUserDetails.clientCode = \"\";\r\n                testKitUserDetails.typeOfHivSelfTest = \"\";\r\n            }\r\n            // always clear the userInformationList when the user selects a new user\r\n            // setUserInformationList([]);\r\n            setObjValues(newValues);\r\n        // }\r\n    };\r\n    const checkClientCode = (e) => {\r\n        let code = \"\";\r\n        if (e.target.name === \"serialNumber\") {\r\n            code = createdCode + e.target.value;\r\n            setCreatedCode(code);\r\n            // // console.log(\"Code created is &&&& \", createdCode);\r\n            setObjValues({...objValues, clientCode: code});\r\n        }\r\n\r\n        async function getIndexClientCode() {\r\n            const indexClientCode = objValues.clientCode;\r\n            // // console.log(indexClientCode);\r\n            const response = await axios.get(\r\n                `${baseUrl}hts/client/${indexClientCode}`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"text/plain\",\r\n                    },\r\n                }\r\n            );\r\n        }\r\n\r\n        getIndexClientCode();\r\n    };\r\n\r\n\r\n    const Sex = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n                headers: {Authorization: `Bearer ${token}`},\r\n            })\r\n            .then((response) => {\r\n                //// console.log(response.data);\r\n                setSexs(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //// console.log(error);\r\n            });\r\n    };\r\n\r\n    const MARITALSTATUS = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n                headers: {Authorization: `Bearer ${token}`},\r\n            })\r\n            .then((response) => {\r\n                //// console.log(response.data);\r\n                setMaritalStatus(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //// console.log(error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        Sex();\r\n        MARITALSTATUS();\r\n    }, []);\r\n\r\n\r\n    const setAge = () => {\r\n        const age = calculate_age(testKitUserDetails.basicUserInfo?.dateOfBirth);\r\n        setUserInformation(prevState => ({\r\n            ...prevState,\r\n            basicUserInfo: {\r\n                ...prevState.basicUserInfo,\r\n                age: age\r\n            }\r\n        }));\r\n        return age;\r\n    }\r\n\r\n    const handleDateOfBirthChange1 = (e) => {\r\n        let newUserInformation = {...testKitUserDetails};\r\n        newUserInformation.basicUserInfo[e.target.name] = e.target.value;\r\n        if (e.target.value && new Date(e.target.value) <= new Date()) {\r\n            const age_now = calculate_age(e.target.value);\r\n            newUserInformation.basicUserInfo.age = age_now;\r\n        } else {\r\n            newUserInformation.basicUserInfo.age = \"\";\r\n        }\r\n        setUserInformation(newUserInformation);\r\n    }\r\n\r\n    console.log(\"userInformationList :\",  userInformationList )\r\n    console.log(\"saviing :\",  saving )\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (validateObjValues()) {\r\n            const userInfoList = userInformationList;\r\n            objValues.testKitUserDetails = userInformationList;\r\n            setSaving(true)\r\n            axios\r\n                .post(`${baseUrl}hivst`, objValues, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        setSaving(false)\r\n                        toast.success(\"HIVST Registration Successful\");\r\n                        history.push(\"/patient/hivst\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    toast.error(\"An error occurred. Please try again.\");\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleDobChange = (e) => {\r\n        const today = new Date();\r\n        const birthDate = new Date(e.target.value);\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n        setUserInformation({\r\n            ...testKitUserDetails,\r\n            basicUserInfo: {\r\n                ...testKitUserDetails.basicUserInfo,\r\n                dateOfBirth: e.target.value,\r\n                age: age_now\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setUserInformation({\r\n                ...testKitUserDetails,\r\n                basicUserInfo: {\r\n                    ...testKitUserDetails.basicUserInfo,\r\n                    isDateOfBirthEstimated: false\r\n                }\r\n            });\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setUserInformation({\r\n                ...testKitUserDetails,\r\n                basicUserInfo: {\r\n                    ...testKitUserDetails.basicUserInfo,\r\n                    isDateOfBirthEstimated: true\r\n                }\r\n            });\r\n            setAgeDisabled(false);\r\n        }\r\n    };\r\n\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n            setUserInformation({\r\n                ...testKitUserDetails,\r\n                basicUserInfo: {\r\n                    ...testKitUserDetails.basicUserInfo,\r\n                    age: e.target.value,\r\n                    dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\")\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    // console.log(\"selectedUsers\", selectedUsers)\r\n   console.log(\"objValues\", objValues)\r\n   console.log(\"testKitUserDetails\", testKitUserDetails)\r\n   console.log(\"userInformationList\", userInformationList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2 style={{color: \"#000\"}}> HIV SELF - TEST AND RESPONSE CARD </h2>\r\n                    <br/>\r\n                    <form>\r\n                        <div className=\"row mb-7\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Visit Date <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfVisit\"\r\n                                        id=\"dateOfVisit\"\r\n                                        value={objValues.dateOfVisit}\r\n                                        onChange={handleInputChange}\r\n                                        min=\"1929-12-31\"\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                    />\r\n                                    {errors.dateOfVisit !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfVisit}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        Service Delivery Point\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"serviceDeliveryPoint\"\r\n                                        id=\"serviceDeliveryPoint\"\r\n                                        value={objValues.serviceDeliveryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Health Facility\">Health Facility</option>\r\n                                        <option value=\"Comunity Pharmacy\">Community Pharmacy</option>\r\n                                        <option value=\"PPMV\">PPMV</option>\r\n                                        <option value=\"Mobile Distribution\">Mobile Distribution</option>\r\n                                        <option value=\"Workplace\">WorkPlace</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        <option value=\"Home based\">Home based</option>\r\n                                        <option value=\"Door to Door\">Door to Door</option>\r\n                                    </select>\r\n                                    {errors.serviceDeliveryPoint !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.serviceDeliveryPoint}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        User Type\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"userType\"\r\n                                        id=\"userType\"\r\n                                        value={objValues.userType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Primary User\">Primary User</option>\r\n                                        <option value=\"Secondary User\">secondary user</option>\r\n                                    </select>\r\n                                    {errors.userType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.userType}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Serial Number <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"serialNumber\"\r\n                                        id=\"serialNumber\"\r\n                                        value={serialNumber}\r\n                                        //value={Math.floor(Math.random() * 1093328)}\r\n                                        onBlur={checkClientCode}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                    />\r\n                                    {errors.serialNumber !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.serialNumber}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Client Code <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"clientCode\"\r\n                                        id=\"clientCode\"\r\n                                        value={objValues.clientCode}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        //readOnly={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                     {errors.clientCode !== \"\" ? (\r\n                                         <span className={classes.error}>{errors.clientCode}</span>\r\n                                        ) : (\r\n                                         \"\"\r\n                                        )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Have you previously tested for HIV in the last 12 months?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTestedWithin12Months\"\r\n                                        id=\"previouslyTestedWithin12Months\"\r\n                                        value={objValues.previouslyTestedWithin12Months}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">YES</option>\r\n                                        <option value=\"No\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTestedWithin12Months !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTestedWithin12Months}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues?.previouslyTestedWithin12Months === \"Yes\" ? (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label >\r\n                                            What was the test result?\r\n                                            <span style={{color: \"red\"}}> *</span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"resultOfPreviouslyTestedWithin12Months\"\r\n                                            id=\"resultOfPreviouslyTestedWithin12Months\"\r\n                                            value={objValues.resultOfPreviouslyTestedWithin12Months}\r\n                                            onChange={handleInputChange}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Positive\">Positive</option>\r\n                                            <option value=\"Negative\">Negative</option>\r\n                                            <option value=\"Unknown\">Unknown</option>\r\n                                        </select>\r\n                                        {errors.resultOfPreviouslyTestedWithin12Months !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.resultOfPreviouslyTestedWithin12Months}</span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            ) : \"\"}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        Do you consent to be followed-up via phone calls?\r\n                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consentForFollowUpCalls\"\r\n                                        id=\"consentForFollowUpCalls\"\r\n                                        value={objValues.consentForFollowUpCalls}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">YES</option>\r\n                                        <option value=\"No\">NO</option>\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label >\r\n                                        What type of HIVST kit did you receive/purchase today?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeOfHivstKitReceived\"\r\n                                        id=\"typeOfHivstKitReceived\"\r\n                                        value={objValues.typeOfHivstKitReceived}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Oral fluid\">Oral fluid</option>\r\n                                        <option value=\"Blood\">Blood</option>\r\n                                    </select>\r\n                                    {errors.typeOfHivstKitReceived !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.typeOfHivstKitReceived}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Number of individual HIV self-test kits received? {\" \"}\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numberOfHivstKitsReceived\"\r\n                                        id=\"numberOfHivstKitsReceived\"\r\n                                        value={objValues.numberOfHivstKitsReceived}\r\n                                        min=\"1\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"providerNameCompletingForm\">\r\n                                        Name of Test Kit ?\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"nameOfTestKit\"\r\n                                        id=\"nameOfTestKit\"\r\n                                        value={objValues.nameOfTestKit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    />\r\n                                    {errors.nameOfTestKit !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.nameOfTestKit}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"providerNameCompletingForm\">\r\n                                        Lot No\r\n                                        <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"lotNumber\"\r\n                                        id=\"\" lotNumber\r\n                                        value={objValues.lotNumber}\r\n                                        onChange={handleInputChange}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                    />\r\n                                    {errors.lotNumber !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.lotNumber}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">\r\n                                        Expiry Date <span style={{color: \"red\"}}> *</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"expiryDate\"\r\n                                        id=\"expirtyDate\"\r\n                                        value={objValues.expiryDate}\r\n                                        onChange={handleInputChange}\r\n                                        min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        max={moment(new Date()).add(5, 'years').format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                    />\r\n                                    {errors.expiryDate !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.expiryDate}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"dualListBox\">\r\n                                        Who do you want to use the kit for?\r\n                                    </Label>\r\n                                    <DualListBox\r\n                                        options={options}\r\n                                        selected={selectedUsers}\r\n                                        onChange={handleKitSelectUserChange}\r\n                                        // disabled={objValues.userType === \"Secondary User\" ? true : false}\r\n                                    />\r\n                                    {errors.testKitUsers !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                                            {errors.testKitUsers}\r\n                                        </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/*<div className=\"form-group mb-7 col-md-4\">*/}\r\n                            {/*    <FormGroup>*/}\r\n                            {/*        <Label for=\"testKitUsers\">*/}\r\n                            {/*            Who do you want to use the kit for?*/}\r\n                            {/*        </Label>*/}\r\n                            {/*        <Select*/}\r\n                            {/*            isMulti*/}\r\n                            {/*            name=\"whoDoYouWantToUseTheKitFor\"*/}\r\n                            {/*            options={options}*/}\r\n                            {/*            className=\"basic-multi-select\"*/}\r\n                            {/*            classNamePrefix=\"select\"*/}\r\n                            {/*            onChange={handleKitSelectUserChange}*/}\r\n                            {/*            styles={{*/}\r\n                            {/*                control: (provided) => ({*/}\r\n                            {/*                    ...provided,*/}\r\n                            {/*                    border: \"1px solid #014D88\",*/}\r\n                            {/*                    borderRadius: \"0.25rem\",*/}\r\n                            {/*                }),*/}\r\n                            {/*            }}*/}\r\n                            {/*        />*/}\r\n                            {/*    </FormGroup>*/}\r\n                            {/*</div>*/}\r\n\r\n                            {selectedUsers && selectedUsers.length === 1 && selectedUsers[0] === 'others' &&\r\n                                <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"testKitUsers\">\r\n                                            Please Specify\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"otherText\"\r\n                                            id=\"otherText\"\r\n                                            value={otherText}\r\n                                            onChange={e => setOtherText(e.target.value)}\r\n                                            placeholder=\"Please specify\"\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.25rem\",\r\n                                            }}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            }\r\n                            {showUserInfo &&\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label >\r\n                                            Is user information available?\r\n                                            <span style={{color: \"red\"}}> *</span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"otherTestKitUserInfoAvailable\"\r\n                                            id=\"otherTestKitUserInfoAvailable\"\r\n                                            value={objValues.otherTestKitUserInfoAvailable}\r\n                                            onChange={handleInputChange}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            // disabled={objValues.userType === \"Secondary User\" ? true : false}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Yes\">YES</option>\r\n                                            <option value=\"No\">NO</option>\r\n                                        </select>\r\n                                        {/*                {errors.firstTimeVisit !== \"\" ? (*/}\r\n                                        {/*                    <span className={classes.error}>*/}\r\n                                        {/*  {errors.firstTimeVisit}*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                ) : (*/}\r\n                                        {/*                    \"\"*/}\r\n                                        {/*                )}*/}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            }\r\n                            {/*{objValues?.otherTestKitUserInfoAvailable === \"Yes\" &&*/}\r\n                            {selectedUsers.length === 0 ? (\"\") : (\r\n                                <>\r\n                                    <div className=\"row center\">\r\n                                        <div\r\n                                            className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                            style={{\r\n                                                backgroundColor: \"#992E62\",\r\n                                                width: \"125%\",\r\n                                                height: \"35px\",\r\n                                                color: \"#fff\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            Intended Kit User Information\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">\r\n                                                    Registration Date\r\n                                                    {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                </Label>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"dateOfRegistration\"\r\n                                                    id=\"dateOfRegistration\"\r\n                                                    min=\"1929-12-31\"\r\n                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                    value={testKitUserDetails.basicUserInfo.dateOfRegistration}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    // disabled\r\n                                                />\r\n                                                {/*{errors.dateOfVisit !== \"\" ? (*/}\r\n                                                {/*    <span className={classes.error}>{errors.dateOfVisit}</span>*/}\r\n                                                {/*) : (*/}\r\n                                                {/*    \"\"*/}\r\n                                                {/*)}*/}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    First Name\r\n                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"firstName\"\r\n                                                    id=\"firstName\"\r\n                                                    value={testKitUserDetails.basicUserInfo.firstName}\r\n                                                    // onChange={handleInputChange1}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                                {userInformationErrors.firstName !== \"\" ? (\r\n                                                    <span\r\n                                                        className={classes.error}>{userInformationErrors.firstName}</span>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Surname\r\n                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"surname\"\r\n                                                    id=\"surname\"\r\n                                                    value={testKitUserDetails.basicUserInfo.surname}\r\n                                                    // onChange={handleInputChange1}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                                {userInformationErrors.surname !== \"\" ? (\r\n                                                    <span\r\n                                                        className={classes.error}>{userInformationErrors.surname}</span>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Other name\r\n                                                </Label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"otherName\"\r\n                                                    id=\"otherName\"\r\n                                                    value={testKitUserDetails.basicUserInfo.otherName}\r\n                                                    // onChange={handleInputChange1}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    user Category\r\n                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"userCategory\"\r\n                                                    id=\"userCategory\"\r\n                                                    value={testKitUserDetails.basicUserInfo.userCategory}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {/*{options.map(option => (*/}\r\n                                                    {/*    <option key={option.value} value={option.value}>*/}\r\n                                                    {/*        {option.label}*/}\r\n                                                    {/*    </option>*/}\r\n                                                    {/*))}*/}\r\n                                                    {selectedUsers.map((user, index) => (\r\n                                                        <option key={index} value={user}>{user}</option>\r\n                                                    ))}\r\n                                                    ))\r\n                                                </select>\r\n                                                {userInformationErrors.userCategory !== \"\" ? (\r\n                                                    <span\r\n                                                        className={classes.error}>{userInformationErrors.userCategory}</span>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {testKitUserDetails.basicUserInfo.userCategory === \"others\" ? (\r\n                                            <div className=\"form-group col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>\r\n                                                        Specify Other Category\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"otherCategory\"\r\n                                                        id=\"otherCategory\"\r\n                                                        value={testKitUserDetails.basicUserInfo.otherCategory}\r\n                                                        // onChange={handleInputChange1}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        ) : \"\"}\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Client Code\r\n                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"clientCode\"\r\n                                                    id=\"clientCode\"\r\n                                                    value={testKitUserDetails.basicUserInfo.clientCode}\r\n                                                    // onChange={handleInputChange1}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                                {userInformationErrors.clientCode !== \"\" ? (\r\n                                                    <span\r\n                                                        className={classes.error}>{userInformationErrors.clientCode}</span>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group mb-2 col-md-2\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Date Of Birth <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <div className=\"radio\">\r\n                                                    <label>\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            value=\"Actual\"\r\n                                                            name=\"dateOfBirth\"\r\n                                                            defaultChecked\r\n                                                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        />{\" \"}\r\n                                                        Actual\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"radio\">\r\n                                                    <label>\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            value=\"Estimated\"\r\n                                                            name=\"dateOfBirth\"\r\n                                                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        />{\" \"}\r\n                                                        Estimated\r\n                                                    </label>\r\n                                                </div>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group mb-3 col-md-3\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Date <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"date\"\r\n                                                    name=\"dob\"\r\n                                                    id=\"dob\"\r\n                                                    min=\"1929-12-31\"\r\n                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                    value={testKitUserDetails.basicUserInfo.dateOfBirth}\r\n                                                    onChange={handleDobChange}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group mb-3 col-md-3\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Age <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"number\"\r\n                                                    name=\"age\"\r\n                                                    id=\"age\"\r\n                                                    value={testKitUserDetails.basicUserInfo.age}\r\n                                                    disabled={ageDisabled}\r\n                                                    onChange={handleAgeChange}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Sex\r\n                                                    {/*<span style={{color: \"red\"}}> *</span> */}\r\n                                                </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"sex\"\r\n                                                    id=\"sex\"\r\n                                                    value={testKitUserDetails.basicUserInfo.sex}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {sexs.map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {testKitUserDetails.basicUserInfo.age > 9 && (\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Marital Status</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"maritalStatusId\"\r\n                                                        id=\"maritalStatusId\"\r\n                                                        value={testKitUserDetails.basicUserInfo.maritalStatusId}\r\n                                                        // onChange={handleInputChange1}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {maritalStatus.map((value) => (\r\n                                                            <option key={value.id} value={value.id}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label> Type of HIV Self-Test </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"typeOfHivst\"\r\n                                                    id=\"typeOfHivst\"\r\n                                                    value={testKitUserDetails.basicUserInfo.typeOfHivst}\r\n                                                    onChange={(e) => handleUserInformationInputChange(e, \"basicUserInfo\")}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Assisted\">\r\n                                                        Assisted\r\n                                                    </option>\r\n                                                    <option value=\"Unassisted\">\r\n                                                        Unassisted\r\n                                                    </option>\r\n                                                </select>\r\n                                                {\r\n                                                    userInformationErrors.typeOfHivst !== \"\" ? (\r\n                                                        <span\r\n                                                            className={classes.error}>{userInformationErrors.typeOfHivst}</span>\r\n                                                    ) : (\"\")\r\n\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n                                        {/*    <LabelSui*/}\r\n                                        {/*        as=\"a\"*/}\r\n                                        {/*        color=\"black\"*/}\r\n                                        {/*        // onClick={handleSubmitfamilyIndexRequestDto}*/}\r\n                                        {/*        size=\"small\"*/}\r\n                                        {/*        style={{marginTop: 35}}*/}\r\n                                        {/*    >*/}\r\n                                        {/*        <Icon name=\"plus\"/> Add*/}\r\n                                        {/*    </LabelSui>*/}\r\n                                        {/*</div>*/}\r\n                                    </div>\r\n\r\n\r\n                                </>\r\n                            )}\r\n\r\n                            {/*Checkbox to select if the User has conducted the HIVST – if checked, display the*/}\r\n                            {/*following questions, else the user should be able to save the form.*/}\r\n                            {/*<div className=\"row mb-7\">*/}\r\n                            {/*    <div className=\"form-group mb-3 col-md-4\">*/}\r\n                            {/*        <FormGroup>*/}\r\n                            {/*            <label>*/}\r\n                            {/*                <input*/}\r\n                            {/*                    type=\"checkbox\"*/}\r\n                            {/*                    checked={objValues.hasConductedHIVST}*/}\r\n                            {/*                    onChange={() => {*/}\r\n                            {/*                        setObjValues(prevState => ({*/}\r\n                            {/*                            ...prevState,*/}\r\n                            {/*                            hasConductedHIVST: !prevState.hasConductedHIVST*/}\r\n                            {/*                        }));*/}\r\n                            {/*                        // console.log(\"Has Conducted HIVST\", !objValues.hasConductedHIVST);*/}\r\n                            {/*                    }}*/}\r\n                            {/*                    style={{marginRight: \"10px\"}}*/}\r\n                            {/*                />*/}\r\n                            {/*                Have you conducted the HIVST ?*/}\r\n                            {/*            </label>*/}\r\n                            {/*        </FormGroup>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</div>*/}\r\n\r\n\r\n                            {objValues && objValues.otherTestKitUserInfoAvailable === \"Yes\" &&\r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <hr style={{width: '100%'}}/>\r\n                                </div>\r\n                            }\r\n                            {objValues && selectedUsers.length > 0 &&\r\n                                <div className=\"row mb-7\">\r\n                                    <div className=\"form-group  col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Have you conducted the HIVST ?\r\n                                                {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"hasConductedHIVST\"\r\n                                                id=\"hasConductedHIVST\"\r\n                                                value={objValues.hasConductedHIVST}\r\n                                                onChange={handleInputChange}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.2rem\",\r\n                                                }}\r\n                                            >\r\n                                                <option value={\"\"}></option>\r\n                                                <option value=\"Yes\">YES</option>\r\n                                                <option value=\"No\">NO</option>\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"row mb-7\">\r\n                                {objValues.hasConductedHIVST === \"Yes\" ? (\r\n                                    // Display the following questions if the checkbox is checked\r\n                                    <>\r\n                                        <div className=\"row center\">\r\n                                            <div\r\n                                                className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                                style={{\r\n                                                    backgroundColor: \"green\",\r\n                                                    width: \"125%\",\r\n                                                    height: \"35px\",\r\n                                                    color: \"#fff\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n\r\n                                                Section B : HIVST Post Test Assessment\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        Have you ever used HIVST kit?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"everUsedHivstKit\"\r\n                                                        id=\"everUsedHivstKitl\"\r\n                                                        // value={objValues.hasConductedHIVST ? \"Yes\" : \"No\"}\r\n                                                        value={testKitUserDetails?.postTestAssessment?.everUsedHivstKit}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Yes\">YES</option>\r\n                                                        <option value=\"No\">NO</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        Did you use the HIVST kit for yourself or someone else?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"everUsedHivstKitForSelfOrOthers\"\r\n                                                        id=\"everUsedHivstKitForSelfOrOthers\"\r\n                                                        value={testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Self\">Self</option>\r\n                                                        <option value=\"Someone else\">Someone else</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {testKitUserDetails.postTestAssessment.everUsedHivstKitForSelfOrOthers === \"Someone else\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Who did you give it to?\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"otherHivstKitUserCategory\"\r\n                                                            id=\"otherHivstKitUserCategory\"\r\n                                                            value={testKitUserDetails.postTestAssessment.otherHivstKitUserCategory}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            {options.map(option => (\r\n                                                                <option key={option.value} value={option.value}>\r\n                                                                    {option.label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n                                            {testKitUserDetails.postTestAssessment?.otherHivstKitUserCategory === \"others\" ? (\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Please Specify Other Category\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"otherHivstKitUserCategoryText\"\r\n                                                            id=\"otherHivstKitUserCategoryText\"\r\n                                                            value={testKitUserDetails.postTestAssessment.otherHivstKitUserCategoryText}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            ) : \"\"}\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label >\r\n                                                        What was the result of the HIVST?\r\n                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"resultOfHivstTest\"\r\n                                                        id=\"resultOfHivstTest\"\r\n                                                        value={testKitUserDetails.postTestAssessment.resultOfHivstTest}\r\n                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"Reactive\">Reactive</option>\r\n                                                        <option value=\"Non-Reactive\">Non Reactive</option>\r\n                                                        <option value=\"Indeterminate\">Indeterminate</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {testKitUserDetails?.postTestAssessment?.resultOfHivstTest === \"Reactive\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Would you like to access HIV testing to confirm my HIVST\r\n                                                            result?\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"accessConfirmatoryHts\"\r\n                                                            id=\"accessConfirmatoryHts\"\r\n                                                            value={testKitUserDetails.postTestAssessment.accessConfirmatoryHts}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"Yes\">YES</option>\r\n                                                            <option value=\"No\">NO</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n                                            {testKitUserDetails?.postTestAssessment?.resultOfHivstTest === \"Non-Reactive\" &&\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label >\r\n                                                            Would you like to be referred for prevention services\r\n                                                            {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"referPreventionServices\"\r\n                                                            id=\"referPreventionServices\"\r\n                                                            value={testKitUserDetails.postTestAssessment.referPreventionServices}\r\n                                                            onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"Yes\">YES</option>\r\n                                                            <option value=\"No\">NO</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        {\r\n                                            testKitUserDetails.postTestAssessment\r\n                                            && testKitUserDetails.postTestAssessment.accessConfirmatoryHts === \"Yes\"\r\n                                            || testKitUserDetails.postTestAssessment.referPreventionServices === \"Yes\" ?\r\n                                                (\r\n                                                    <div className=\"row center\">\r\n                                                        <div\r\n                                                            className=\"form-group col-md-12 ml-3 text-center pt-2 mb-4\"\r\n                                                            style={{\r\n                                                                backgroundColor: \"rgba(25, 96, 176, 0.8)\",\r\n                                                                width: \"125%\",\r\n                                                                height: \"35px\",\r\n                                                                color: \"#fff\",\r\n                                                                fontWeight: \"bold\",\r\n                                                            }}\r\n                                                        >\r\n                                                            Section C : Referral Information\r\n                                                        </div>\r\n                                                        {testKitUserDetails.postTestAssessment.accessConfirmatoryHts === \"Yes\" && <div className=\"form-group  col-md-4\">\r\n                                                            <FormGroup>\r\n                                                                <Label >\r\n                                                                    Referred for Confirmatory HTS Testing\r\n                                                                    {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                </Label>\r\n                                                                <select\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"referredForConfirmatoryHts\"\r\n                                                                    id=\"referredForConfirmatoryHts\"\r\n                                                                    value={testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts}\r\n                                                                    onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                                    style={{\r\n                                                                        border: \"1px solid #014D88\",\r\n                                                                        borderRadius: \"0.2rem\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <option value={\"\"}></option>\r\n                                                                    <option value=\"Yes\">YES</option>\r\n                                                                    <option value=\"No\">NO</option>\r\n                                                                </select>\r\n                                                            </FormGroup>\r\n                                                        </div>}\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails.postTestAssessment.referralInformation.referredForConfirmatoryHts === \"Yes\" &&\r\n                                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\">\r\n                                                                        Date referred for confirmatory HTS testing\r\n                                                                        field\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"dateReferredForConfirmatoryHts\"\r\n                                                                        id=\"dateReferredForConfirmatoryHts\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.dateReferredForConfirmatoryHts}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n\r\n                                                                        min={objValues.dateOfVisit}\r\n                                                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>}\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails?.postTestAssessment?.referPreventionServices === \"Yes\" &&\r\n                                                            <div className=\"form-group  col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label >\r\n                                                                        Referred for Prevention Services\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"referredForPreventionServices\"\r\n                                                                        id=\"referredForPreventionServices\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">YES</option>\r\n                                                                        <option value=\"No\">NO</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        }\r\n                                                        {testKitUserDetails.postTestAssessment.referralInformation && testKitUserDetails.postTestAssessment.referralInformation.referredForPreventionServices === \"Yes\" &&\r\n                                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\">\r\n                                                                        Date referred for prevention services\r\n                                                                        {/*<span style={{color: \"red\"}}> *</span>*/}\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"dateReferredForPreventionServices\"\r\n                                                                        id=\"dateReferredForPreventionServices\"\r\n                                                                        value={testKitUserDetails.postTestAssessment.referralInformation.dateReferredForPreventionServices}\r\n                                                                        onChange={(e) => handleUserInformationInputChange(e, \"postTestAssessment\")}\r\n                                                                        min={objValues.dateOfVisit}\r\n                                                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {/*{errors.dateOfVisit !== \"\" ? (*/}\r\n                                                                    {/*    <span className={classes.error}>{errors.dateOfVisit}</span>*/}\r\n                                                                    {/*) : (*/}\r\n                                                                    {/*    \"\"*/}\r\n                                                                    {/*)}*/}\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        }\r\n\r\n                                                    </div>) : \"\"}\r\n                                    </>\r\n                                  ) : ( \"\"\r\n                                    // Display the save form button if the checkbox is not checked\r\n                                    // <div className=\"row\">\r\n                                    //     {// if selected user  is myself only show save button and save secondary user information\r\n                                    //         selectedUsers && selectedUsers.length === 1 && selectedUsers[0] === \"myself\" &&\r\n                                    //         <div className=\"form-group mb-3 col-md-6\">\r\n                                    //             <Button\r\n                                    //                 content=\"save myself information\"\r\n                                    //                 icon=\"save\"\r\n                                    //                 labelPosition=\"right\"\r\n                                    //                 style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                    //                 onClick={handleSubmit}\r\n                                    //                 disabled={saving}\r\n                                    //             />\r\n                                    //         </div>\r\n                                    //     }\r\n                                    //\r\n                                    // </div>\r\n                                )}\r\n                            </div>\r\n                            {selectedUsers.length > 0 && <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <LabelSui\r\n                                        as=\"a\"\r\n                                        color=\"black\"\r\n                                        onClick={addUserInformation}\r\n                                        size=\"small\"\r\n                                        style={{marginTop: 35}}\r\n                                    >\r\n                                        <Icon name=\"plus\"/> Add\r\n                                    </LabelSui>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                            {/*added kit user */}\r\n                            {userInformationList.length > 0 ? (\r\n                                <div class=\"row\">\r\n                                    <List className=\"mb-5\">\r\n                                        <Table striped responsive>\r\n                                            <thead style={{\r\n                                                backgroundColor: \"#014D88\",\r\n                                                color: \"white\",\r\n                                                fontSize: \"10px\"\r\n                                            }}>\r\n                                            <tr>\r\n                                                <th>Client Code</th>\r\n                                                <th>HIV Self Test Type</th>\r\n                                                {/*<th>Ever used HIVST Kit</th>*/}\r\n                                                <th>User Category</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {userInformationList.map((item, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{item.basicUserInfo.clientCode}</td>\r\n                                                    <td>{item.basicUserInfo.typeOfHivst}</td>\r\n                                                    {/*<th>{item.postTestAssessment.everUsedHivstKit}</th>*/}\r\n                                                    <td>{item.basicUserInfo.userCategory}</td>\r\n                                                    <td>\r\n                                                        <IconButton\r\n                                                            aria-label=\"delete\"\r\n                                                            size=\"small\"\r\n                                                            color=\"error\"\r\n                                                            onClick={() => removeUserInformation(index)}\r\n                                                        >\r\n                                                            <DeleteIcon fontSize=\"inherit\"/>\r\n                                                        </IconButton>\r\n                                                        {/*<IconButton>*/}\r\n                                                        {/*    <EditIcon fontSize=\"inherit\"/>*/}\r\n                                                        {/*</IconButton>*/}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </List>\r\n                                </div>\r\n                                ) : \" \"}\r\n                            {/*{selectedUsers.length > 0 &&*/}\r\n                            {/*    <div className=\"row\">*/}\r\n                            {/*        <div className=\"form-group mb-3 col-md-6\">*/}\r\n                            {/*            <Button*/}\r\n                            {/*                content=\"save\"*/}\r\n                            {/*                icon=\"save\"*/}\r\n                            {/*                labelPosition=\"right\"*/}\r\n                            {/*                style={{backgroundColor: \"#014d88\", color: \"#fff\"}}*/}\r\n                            {/*                onClick={handleSubmit}*/}\r\n                            {/*                // disabled={saving}*/}\r\n                            {/*                disabled={userInformationList.length === 0}*/}\r\n                            {/*            />*/}\r\n                            {/*        </div>*/}\r\n                            {/*    </div>*/}\r\n                            {/*}*/}\r\n\r\n                            {\r\n                                objValues?.otherTestKitUserInfoAvailable === \"No\" ?\r\n                                    (\r\n                                        <div className=\"row mb-7\">\r\n                                            <div className=\"form-group mb-3 col-md-6\">\r\n                                                <Button\r\n                                                    content=\"Save without user Info\"\r\n                                                    icon=\"save\"\r\n                                                    labelPosition=\"right\"\r\n                                                    style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                                    onClick={handleSubmit}\r\n                                                    disabled={saving}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    ) :\r\n                                    (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-6\">\r\n                                                <Button\r\n                                                    content=\"Save\"\r\n                                                    icon=\"save\"\r\n                                                    labelPosition=\"right\"\r\n                                                    style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                                    onClick={handleSubmit}\r\n                                                    disabled={userInformationList.length === 0}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n                show={open}\r\n                toggle={toggle}\r\n                className=\"fade\"\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        onClick={toggle}\r\n                        style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default HIVSTPatientRegistration;","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["1182","1183","1184","1185","1186","1187","1188"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\nimport { getCheckModality } from \"../../../../utility\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    //console.log(\"data1\", props.patientObj)\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \n            } \n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n \n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            \n            \n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        let modality = getCheckModality(\n          props.patientObj?.riskStratificationResponseDto?.modality\n        );\n              let latestForm = getNextForm(\n                \"Pre_Test_Counseling\",\n                props.patientAge,\n                modality,\n                \"unknown\"\n              );\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick(latestForm[0], latestForm[1]);\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                \n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n                                         \n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {/* <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/> */}\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js",["1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as moment from \"moment\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllGenders,\r\n  alphabetOnly,\r\n  getAllProvinces,\r\n  getAllCountry,\r\n  getAllStateByCountryId,\r\n} from \"../../../../../utility\";\r\n// import {calculate_age} from \"../../utils\";\r\nimport { calculate_age } from \"../../.././utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CardBody, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ReferralUnit = (props) => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [serviceNeeded, setServiceNeeded] = useState([]);\r\n\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [allFacilities, setAllFacilities] = useState([]);\r\n  // console.log(Cookies.get(\"facilityName\"));\r\n  const [statesOfTheReceivingFacility, setStateOfTheReceivingFacility] =\r\n    useState([]);\r\n  const [lgasOfTheReceivingFacility, setLgasOfTheReceivingFacility] = useState(\r\n    []\r\n  );\r\n  const [receivingFacilities, setReceivingFacilities] = useState([]);\r\n  const [receivingFacility, setReceivingFacility] = useState([]);\r\n  const [selectedReceivingState, setSelectedReceivingState] = useState({});\r\n  const [selectedReceivingFacility, setSelectedReceivingFacility] = useState(\r\n    {}\r\n  );\r\n  const [selectedReceivingLga, setSelectedReceivingLga] = useState({});\r\n  const history = useHistory();\r\n\r\n  const [payload, setPayload] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: \"\",\r\n    comments: \"\",\r\n    receivingFacilityStateName: \"\",\r\n    receivingFacilityLgaNam: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  console.log(\"payload in referalUnit\", payload);\r\n\r\n  const getProvincesWithId = (id) => {\r\n    getAllProvinces(id)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  // console.log(\"PAYLOAD\", payload);\r\n  const loadGenders = useCallback(async () => {\r\n    getAllGenders()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    getCountry();\r\n    getStateByCountryId();\r\n    if (props?.patientObj?.personResponseDto?.address?.address[0]?.stateId) {\r\n      getProvincesWithId(\r\n        props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n  }, []);\r\n console.log(\r\n   \"heeelooeeeo\",\r\n   props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n );\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfReceivingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfReceivingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    // console.log(e);\r\n    setPayload({\r\n      ...payload,\r\n      nameOfReceivingFacility: e.name,\r\n      addressOfReceivingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfReceivingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n      });\r\n\r\n    // console.log(response);\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setPayload({ ...payload, [inputName]: NumberValue });\r\n  };\r\n\r\n  // ########################################################################\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStateOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch states error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLgasOfTheReceivingFacility(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch LGA error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setReceivingFacilities(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const SERVICE_NEEDED = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setServiceNeeded(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStates();\r\n    SERVICE_NEEDED();\r\n  }, []);\r\n\r\n  // ###########################################################################\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonReferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dob: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({ ...payload, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      payload.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.dateVisit = payload.dateVisit ? \"\" : \"This field is required.\";\r\n    temp.firstName = payload.firstName ? \"\" : \"This field is required.\";\r\n    temp.lastName = payload.lastName ? \"\" : \"This field is required.\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.province = payload.province ? \"\" : \"This field is required.\";\r\n    // temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    temp.sexId = payload.sexId ? \"\" : \"This field is required.\";\r\n    temp.dob = payload.dob ? \"\" : \"This field is required.\";\r\n    // temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    // temp.stateTransferTo = payload.receivingStateFacility? \"\" : \"This field is required.\";\r\n    temp.receivingFacilityLgaName = payload.receivingFacilityLgaName\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.receivingFacilityStateName = payload.receivingFacilityStateName\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    // temp.referredFromFacility = payload.referredFromFacility\r\n    //     ? \"\"\r\n    //     : \"This field is required.\";\r\n    temp.nameOfPersonReferringClient = payload.nameOfPersonReferringClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    temp.nameOfReferringFacility = payload.nameOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReferringFacility = payload.addressOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReferringFacility = payload.phoneNoOfReferringFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfContactPerson = payload.nameOfContactPerson\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.nameOfReceivingFacility = payload.nameOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfReceivingFacility = payload.addressOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.phoneNoOfReceivingFacility = payload.phoneNoOfReceivingFacility\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.serviceNeeded = payload.serviceNeeded ? \"\" : \"This field is required.\";\r\n\r\n    // console.log(\"temp\", temp)\r\n    // temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // console.log(\"payload before submit\", payload)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      try {\r\n        setSaving(true);\r\n        await axios.post(`${baseUrl}hts-client-referral`, payload, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setSaving(false);\r\n        toast.success(\"Record saved successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        // props.handleItemClick(\"refferal-history\");\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n        setSaving(false);\r\n        const errorMessage =\r\n          error.response?.data?.apierror?.message ||\r\n          \"Something went wrong, please try again\";\r\n        toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>Client Referral Form </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Referral Form For Referring Unit\r\n              </div>\r\n            \r\n              <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                <i>\r\n                  Note: This form is to be filed by the organization making the\r\n                  referal (Referring unit or organization)\r\n                </i>\r\n              </p>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateVisit\"\r\n                      id=\"dateVisit\"\r\n                      value={payload.dateVisit}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      value={payload.firstName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.firstName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.firstName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Middle Name</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"middleName\"\r\n                      id=\"middleName\"\r\n                      value={payload.middleName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Last Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      value={payload.lastName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.lastName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.lastName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"patientId\">\r\n                      Hospital Number <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"hospitalNumber\"\r\n                      id=\"hospitalNumber\"\r\n                      value={payload.hospitalNumber}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.hospitalNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hospitalNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {hospitalNumStatus === true ? (\r\n                      <span className={classes.error}>\r\n                        {\"Hospital number already exist\"}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Country <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"countryId\"\r\n                      id=\"countryId\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      value={payload.countryId}\r\n                      disabled\r\n                      //onChange={getStates}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {countries.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      State <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"stateId\"\r\n                      id=\"stateId\"\r\n                      value={payload.stateId}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={getProvinces}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {states.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.stateId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.stateId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Province/District/LGA{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"province\"\r\n                      id=\"province\"\r\n                      value={payload.province}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {provinces.map((value, index) => (\r\n                        <option key={index} value={value.id}>\r\n                          {value.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.province !== \"\" ? (\r\n                      <span className={classes.error}>{errors.province}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Street Address <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={payload.address}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                      <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Landmark</Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"landmark\"\r\n                      id=\"landmark\"\r\n                      value={payload.landmark}\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/*          <div className=\"form-group  col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label>*/}\r\n                {/*                      Phone Number <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      disabled={true}*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNumber\"*/}\r\n                {/*                      id=\"phoneNumber\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNumber}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNumber\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNumber !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNumber}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                      }}\r\n                      value={payload.phoneNumber}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      // required\r\n                    />\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sexId\"\r\n                      id=\"sexId\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.sexId}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                        genders.map((gender, index) => (\r\n                          <option key={gender.id} value={gender.id}>\r\n                            {gender.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.sexId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sexId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      name=\"dob\"\r\n                      id=\"dob\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      value={payload.dob}\r\n                      onChange={handleDobChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dob !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dob}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      id=\"age\"\r\n                      disabled={ageDisabled}\r\n                      onChange={payload.age}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      value={calculate_age(\r\n                        props?.patientObj.personResponseDto?.dateOfBirth\r\n                          ? props?.patientObj?.personResponseDto?.dateOfBirth\r\n                          : props?.patientObj?.personResponseDto?.dateOfBirth\r\n                      )}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV Status<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"hivStatus\"\r\n                      id=\"hivStatus\"\r\n                      value={payload.hivStatus}\r\n                      disabled={ageDisabled}\r\n                      onChange={handleAgeChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {/*<select*/}\r\n                    {/*  className=\"form-control\"*/}\r\n                    {/*  name=\"hivStatus\"*/}\r\n                    {/*  id=\"hivStatus\"*/}\r\n                    {/*  onChange={handleInputChange}*/}\r\n                    {/*  value={payload.hivStatus}*/}\r\n                    {/*  style={{*/}\r\n                    {/*    border: \"1px solid #014D88\",*/}\r\n                    {/*    borderRadius: \"0.2rem\",*/}\r\n                    {/*  }}*/}\r\n                    {/*>*/}\r\n                    {/*<option value={\"\"}>Select</option>*/}\r\n                    {/*{hivStatus.map((gender, index) => (*/}\r\n                    {/*  <option key={gender.id} value={gender.id}>*/}\r\n                    {/*    {gender.display}*/}\r\n                    {/*  </option>*/}\r\n                    {/*))}*/}\r\n                    {/*</select>*/}\r\n                    {errors.hivStatus !== \"\" ? (\r\n                      <span className={classes.error}>{errors.hivStatus}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Referred from (Department):\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"referredFromFacility\"\r\n                      id=\"referredFromFacility\"\r\n                      value={payload.referredFromFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n\r\n                    {errors.referredFromFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referredFromFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Person Referring Client\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfPersonReferringClient\"\r\n                      id=\"nameOfPersonReferringClient\"\r\n                      value={payload.nameOfPersonReferringClient}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.nameOfPersonReferringClient !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfPersonReferringClient}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      <span style={{ color: \"red\" }}> *</span>Name of Referring\r\n                      Facility\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfReferringFacility\"\r\n                      id=\"nameOfReferringFacility\"\r\n                      value={payload.nameOfReferringFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.nameOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of Referring Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"addressOfReferringFacility\"\r\n                      id=\"addressOfReferringFacility\"\r\n                      value={payload.addressOfReferringFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      // disabled\r\n                    />\r\n                    {errors.addressOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.addressOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/*          <div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label for=\"firstName\">*/}\r\n                {/*                      Phone Number of Referring Facility*/}\r\n                {/*                      /!* <span style={{ color: \"red\" }}> *</span> *!/*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNoOfReferringFacility\"*/}\r\n                {/*                      id=\"phoneNoOfReferringFacility\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNoOfReferringFacility}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNoOfReferringFacility\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNoOfReferringFacility !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNoOfReferringFacility}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number of Referring Facility{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNoOfReferringFacility\"\r\n                      id=\"phoneNoOfReferringFacility\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(\r\n                          e,\r\n                          \"phoneNoOfReferringFacility\"\r\n                        );\r\n                      }}\r\n                      value={payload.phoneNoOfReferringFacility}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.phoneNoOfReferringFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNoOfReferringFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">Referred to (Department)</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"referredTo\"\r\n                      id=\"referredTo\"\r\n                      value={payload.referredTo}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Name of Contact Person:\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"nameOfContactPerson\"\r\n                      id=\"nameOfContactPerson\"\r\n                      value={payload.nameOfContactPerson}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.nameOfContactPerson !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfContactPerson}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Receiving Facility State{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stateId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      // onChange={loadLGA1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterState =\r\n                            statesOfTheReceivingFacility.filter((st) => {\r\n                              return Number(st.id) === Number(e.target.value);\r\n                            });\r\n                          setSelectedReceivingState(filterState);\r\n\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            receivingFacilityStateName: filterState[0].name,\r\n                          }));\r\n                        }\r\n                        loadLGA(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option>Select State</option>\r\n                      {states.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.receivingFacilityStateName !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.receivingFacilityStateName}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Receiving Facility LGA{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lgaId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      // onChange={loadFacilities1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterlga = lgasOfTheReceivingFacility.filter(\r\n                            (lg) => {\r\n                              return Number(lg.id) === Number(e.target.value);\r\n                            }\r\n                          );\r\n                          setSelectedReceivingLga(filterlga);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            receivingFacilityLgaName: filterlga[0].name,\r\n                          }));\r\n                        }\r\n                        loadFacilities(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option>Select LGA</option>\r\n                      {lgasOfTheReceivingFacility.map((lga) => (\r\n                        <option key={lga.id} value={lga.id}>\r\n                          {lga.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.receivingFacilityLgaName !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.receivingFacilityLgaName}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Name of Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"nameOfReceivingFacility\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      onChange={(e) => {\r\n                        // setPayload(prevPayload => ({ ...prevPayload, facilityTransferTo: e.target.value }));\r\n                        if (e.target.value !== \"\") {\r\n                          const filterFacility = receivingFacilities.filter(\r\n                            (fa) => {\r\n                              return Number(fa.id) === Number(e.target.value);\r\n                            }\r\n                          );\r\n                          setSelectedReceivingFacility(filterFacility);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            nameOfReceivingFacility: filterFacility[0].name,\r\n                          }));\r\n                        }\r\n                      }}\r\n                    >\r\n                      <option>Select Facility</option>\r\n                      {receivingFacilities.map((facility) => (\r\n                        <option key={facility.id} value={facility.id}>\r\n                          {facility.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.nameOfReceivingFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.nameOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Address of the Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"addressOfReceivingFacility\"\r\n                      id=\"addressOfReceivingFacility\"\r\n                      value={payload.addressOfReceivingFacility}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n                {/*          <div className=\"form-group mb-3 col-md-4\">*/}\r\n                {/*              <FormGroup>*/}\r\n                {/*                  <Label for=\"firstName\">*/}\r\n                {/*                      Phone No of Receiving Facility*/}\r\n                {/*                      <span style={{color: \"red\"}}> *</span>*/}\r\n                {/*                  </Label>*/}\r\n                {/*                  <PhoneInput*/}\r\n                {/*                      containerStyle={{*/}\r\n                {/*                          width: \"100%\",*/}\r\n                {/*                          border: \"1px solid #014D88\",*/}\r\n                {/*                      }}*/}\r\n                {/*                      inputStyle={{width: \"100%\", borderRadius: \"0px\"}}*/}\r\n                {/*                      country={\"ng\"}*/}\r\n                {/*                      placeholder=\"(234)7099999999\"*/}\r\n                {/*                      maxLength={5}*/}\r\n                {/*                      name=\"phoneNoOfReceivingFacility\"*/}\r\n                {/*                      id=\"phoneNoOfReceivingFacility\"*/}\r\n                {/*                      masks={{ng: \"...-...-....\", at: \"(....) ...-....\"}}*/}\r\n                {/*                      value={payload.phoneNoOfReceivingFacility}*/}\r\n                {/*                      onChange={(e) => {*/}\r\n                {/*                          checkPhoneNumberBasic(e, \"phoneNoOfReceivingFacility\");*/}\r\n                {/*                      }}*/}\r\n                {/*                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}*/}\r\n                {/*                  />*/}\r\n\r\n                {/*                  {errors.phoneNoOfReceivingFacility !== \"\" ? (*/}\r\n                {/*                      <span className={classes.error}>*/}\r\n                {/*  {errors.phoneNoOfReceivingFacility}*/}\r\n                {/*</span>*/}\r\n                {/*                  ) : (*/}\r\n                {/*                      \"\"*/}\r\n                {/*                  )}*/}\r\n                {/*              </FormGroup>*/}\r\n                {/*          </div>*/}\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone No of Receiving Facility\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNoOfReceivingFacility\"\r\n                      id=\"phoneNoOfReceivingFacility\"\r\n                      onChange={(e) => {\r\n                        handleInputChangePhoneNumber(\r\n                          e,\r\n                          \"phoneNoOfReceivingFacility\"\r\n                        );\r\n                      }}\r\n                      value={payload.phoneNoOfReceivingFacility}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.phoneNoOfReceivingFacility !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNoOfReceivingFacility}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Services needed\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"serviceNeeded\"\r\n                      id=\"serviceNeeded\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.serviceNeeded}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select Service</option>\r\n                      {serviceNeeded.map((value, index) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    {errors.serviceNeeded !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.serviceNeeded}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Comments\r\n                      {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"textarea\"\r\n                      rows=\"4\"\r\n                      cols=\"7\"\r\n                      name=\"comments\"\r\n                      id=\"comments\"\r\n                      value={payload.comments}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              {/* <hr /> */}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Add Form\"\r\n                    type=\"submit\"\r\n                    // icon=\"right arrow\"\r\n                    // labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n        {/* <CardBody>\r\n          <ServicesProvided />\r\n        </CardBody> */}\r\n\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReferralUnit;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["1217","1218"],"import Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nexport const NewlyEnrolledArtByAge = {\n    chart: {\n        \n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Number of Adults and Children newly enrolled on ART '\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n        point: {\n            valueSuffix: '%'\n        }\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'black'\n            },\n            showInLegend: true\n        }\n    },\n    series: [{\n        name: 'Newly Enrolled on ART by Age',\n        data: [\n            \n            { name: '25 + ', sliced: true, y: 61.41 },\n            { name: '20-24 ', y: 11.84 },\n            { name: '10-19 ', y: 10.85 },\n            { name: '≤ 9 ', y: 4.67 },\n        ]\n    }]\n};","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["1219","1220","1221","1222","1223","1224","1225","1226"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          //{ title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n  useEffect(() => {\n    getStates();\n    Sex();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n  }, []);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      //     age_now--;\n      // }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n\n      //console.log(\"obj\", objValues);\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\");\n\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n\n          // handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Sex <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        Address <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Relationship to Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Do you currently live with this partner?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Notification Method selected{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["1244","1245","1246","1247","1248","1249","1250","1251"],{"ruleId":"1252","severity":1,"message":"1253","line":4,"column":10,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":23},{"ruleId":"1256","replacedBy":"1257"},{"ruleId":"1258","replacedBy":"1259"},{"ruleId":"1252","severity":1,"message":"1260","line":2,"column":26,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":32},{"ruleId":"1261","severity":1,"message":"1262","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":24,"fix":"1265"},{"ruleId":"1252","severity":1,"message":"1266","line":5,"column":10,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1267","line":9,"column":8,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1268","line":10,"column":10,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1269","line":10,"column":15,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1271","line":5,"column":26,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1272","line":8,"column":16,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1273","line":12,"column":22,"nodeType":"1254","messageId":"1255","endLine":12,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1274","line":22,"column":8,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1275","line":31,"column":7,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1276","line":46,"column":10,"nodeType":"1254","messageId":"1255","endLine":46,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1277","line":46,"column":18,"nodeType":"1254","messageId":"1255","endLine":46,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1278","line":51,"column":10,"nodeType":"1254","messageId":"1255","endLine":51,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1279","line":59,"column":23,"nodeType":"1254","messageId":"1255","endLine":59,"endColumn":36},{"ruleId":"1280","severity":1,"message":"1281","line":275,"column":6,"nodeType":"1282","endLine":275,"endColumn":8,"suggestions":"1283"},{"ruleId":"1284","severity":1,"message":"1285","line":352,"column":34,"nodeType":"1286","messageId":"1287","endLine":352,"endColumn":36},{"ruleId":"1284","severity":1,"message":"1285","line":373,"column":39,"nodeType":"1286","messageId":"1287","endLine":373,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1266","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1288","line":34,"column":8,"nodeType":"1254","messageId":"1255","endLine":34,"endColumn":23},{"ruleId":"1261","severity":1,"message":"1262","line":5,"column":10,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":24,"fix":"1289"},{"ruleId":"1252","severity":1,"message":"1266","line":26,"column":10,"nodeType":"1254","messageId":"1255","endLine":26,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1290","line":24,"column":10,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1291","line":24,"column":16,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1292","line":30,"column":10,"nodeType":"1254","messageId":"1255","endLine":30,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1293","line":31,"column":10,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1294","line":31,"column":16,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1295","line":31,"column":26,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1296","line":31,"column":38,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":46},{"ruleId":"1252","severity":1,"message":"1297","line":33,"column":10,"nodeType":"1254","messageId":"1255","endLine":33,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1298","line":34,"column":8,"nodeType":"1254","messageId":"1255","endLine":34,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1275","line":60,"column":7,"nodeType":"1254","messageId":"1255","endLine":60,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1299","line":104,"column":9,"nodeType":"1254","messageId":"1255","endLine":104,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1300","line":126,"column":6,"nodeType":"1282","endLine":126,"endColumn":8,"suggestions":"1301"},{"ruleId":"1252","severity":1,"message":"1302","line":141,"column":9,"nodeType":"1254","messageId":"1255","endLine":141,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":144,"column":25,"nodeType":"1286","messageId":"1287","endLine":144,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1303","line":70,"column":10,"nodeType":"1254","messageId":"1255","endLine":70,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":70,"column":21,"nodeType":"1254","messageId":"1255","endLine":70,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1305","line":73,"column":10,"nodeType":"1254","messageId":"1255","endLine":73,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1306","line":78,"column":6,"nodeType":"1282","endLine":78,"endColumn":8,"suggestions":"1307"},{"ruleId":"1284","severity":1,"message":"1285","line":113,"column":25,"nodeType":"1286","messageId":"1287","endLine":113,"endColumn":27},{"ruleId":"1284","severity":1,"message":"1285","line":120,"column":25,"nodeType":"1286","messageId":"1287","endLine":120,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1271","line":5,"column":26,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1308","line":8,"column":10,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1273","line":13,"column":22,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1309","line":34,"column":8,"nodeType":"1254","messageId":"1255","endLine":34,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1310","line":35,"column":10,"nodeType":"1254","messageId":"1255","endLine":35,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1311","line":35,"column":24,"nodeType":"1254","messageId":"1255","endLine":35,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1312","line":49,"column":9,"nodeType":"1254","messageId":"1255","endLine":49,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1313","line":52,"column":10,"nodeType":"1254","messageId":"1255","endLine":52,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1279","line":65,"column":23,"nodeType":"1254","messageId":"1255","endLine":65,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1314","line":73,"column":27,"nodeType":"1254","messageId":"1255","endLine":73,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1315","line":79,"column":9,"nodeType":"1254","messageId":"1255","endLine":79,"endColumn":21},{"ruleId":"1284","severity":1,"message":"1285","line":163,"column":60,"nodeType":"1286","messageId":"1287","endLine":163,"endColumn":62},{"ruleId":"1261","severity":1,"message":"1262","line":5,"column":10,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":24,"fix":"1316"},{"ruleId":"1252","severity":1,"message":"1266","line":26,"column":10,"nodeType":"1254","messageId":"1255","endLine":26,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1317","line":4,"column":15,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1318","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1319","line":10,"column":8,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1320","line":13,"column":9,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1308","line":16,"column":9,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1321","line":16,"column":27,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1322","line":24,"column":8,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1323","line":108,"column":11,"nodeType":"1254","messageId":"1255","endLine":108,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1324","line":115,"column":26,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1325","line":120,"column":12,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1326","line":120,"column":43,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":72},{"ruleId":"1252","severity":1,"message":"1327","line":121,"column":12,"nodeType":"1254","messageId":"1255","endLine":121,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1328","line":121,"column":32,"nodeType":"1254","messageId":"1255","endLine":121,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1329","line":122,"column":12,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1330","line":123,"column":12,"nodeType":"1254","messageId":"1255","endLine":123,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1331","line":123,"column":31,"nodeType":"1254","messageId":"1255","endLine":123,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1332","line":221,"column":11,"nodeType":"1254","messageId":"1255","endLine":221,"endColumn":16},{"ruleId":"1284","severity":1,"message":"1285","line":276,"column":51,"nodeType":"1286","messageId":"1287","endLine":276,"endColumn":53},{"ruleId":"1284","severity":1,"message":"1285","line":296,"column":51,"nodeType":"1286","messageId":"1287","endLine":296,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1333","line":547,"column":11,"nodeType":"1254","messageId":"1255","endLine":547,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1334","line":556,"column":11,"nodeType":"1254","messageId":"1255","endLine":556,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1335","line":603,"column":19,"nodeType":"1254","messageId":"1255","endLine":603,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1336","line":652,"column":11,"nodeType":"1254","messageId":"1255","endLine":652,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1337","line":664,"column":11,"nodeType":"1254","messageId":"1255","endLine":664,"endColumn":35},{"ruleId":"1284","severity":1,"message":"1285","line":730,"column":28,"nodeType":"1286","messageId":"1287","endLine":730,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":733,"column":35,"nodeType":"1286","messageId":"1287","endLine":733,"endColumn":37},{"ruleId":"1338","severity":1,"message":"1339","line":1912,"column":45,"nodeType":"1340","messageId":"1341","endLine":1912,"endColumn":47},{"ruleId":"1338","severity":1,"message":"1339","line":1913,"column":45,"nodeType":"1340","messageId":"1341","endLine":1913,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1342","line":3,"column":10,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1343","line":3,"column":20,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1268","line":3,"column":25,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1344","line":5,"column":8,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1308","line":6,"column":10,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1345","line":9,"column":8,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1346","line":10,"column":8,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1347","line":11,"column":9,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1348","line":13,"column":7,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1349","line":91,"column":7,"nodeType":"1254","messageId":"1255","endLine":91,"endColumn":15},{"ruleId":"1261","severity":1,"message":"1262","line":4,"column":10,"nodeType":"1263","messageId":"1264","endLine":4,"endColumn":24,"fix":"1350"},{"ruleId":"1252","severity":1,"message":"1299","line":36,"column":10,"nodeType":"1254","messageId":"1255","endLine":36,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":36,"column":23,"nodeType":"1254","messageId":"1255","endLine":36,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1351","line":39,"column":10,"nodeType":"1254","messageId":"1255","endLine":39,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1352","line":40,"column":10,"nodeType":"1254","messageId":"1255","endLine":40,"endColumn":23},{"ruleId":"1280","severity":1,"message":"1353","line":62,"column":6,"nodeType":"1282","endLine":62,"endColumn":42,"suggestions":"1354"},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1356","line":88,"column":9,"nodeType":"1254","messageId":"1255","endLine":88,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1299","line":96,"column":10,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":96,"column":23,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1357","line":99,"column":10,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1358","line":99,"column":20,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1359","line":101,"column":21,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1360","line":175,"column":6,"nodeType":"1282","endLine":175,"endColumn":48,"suggestions":"1361"},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1299","line":114,"column":10,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":114,"column":23,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1359","line":117,"column":21,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":33},{"ruleId":"1362","severity":1,"message":"1363","line":247,"column":32,"nodeType":"1364","messageId":"1365","endLine":247,"endColumn":76,"fix":"1366"},{"ruleId":"1362","severity":1,"message":"1363","line":254,"column":32,"nodeType":"1364","messageId":"1365","endLine":254,"endColumn":73,"fix":"1367"},{"ruleId":"1362","severity":1,"message":"1363","line":262,"column":32,"nodeType":"1364","messageId":"1365","endLine":262,"endColumn":70,"fix":"1368"},{"ruleId":"1362","severity":1,"message":"1363","line":269,"column":32,"nodeType":"1364","messageId":"1365","endLine":269,"endColumn":69,"fix":"1369"},{"ruleId":"1362","severity":1,"message":"1363","line":276,"column":32,"nodeType":"1364","messageId":"1365","endLine":276,"endColumn":69,"fix":"1370"},{"ruleId":"1362","severity":1,"message":"1363","line":278,"column":32,"nodeType":"1364","messageId":"1365","endLine":278,"endColumn":62,"fix":"1371"},{"ruleId":"1280","severity":1,"message":"1372","line":306,"column":6,"nodeType":"1282","endLine":311,"endColumn":4,"suggestions":"1373"},{"ruleId":"1374","severity":1,"message":"1375","line":358,"column":5,"nodeType":"1376","messageId":"1377","endLine":363,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":359,"column":28,"nodeType":"1286","messageId":"1287","endLine":359,"endColumn":30},{"ruleId":"1374","severity":1,"message":"1375","line":365,"column":5,"nodeType":"1376","messageId":"1377","endLine":368,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":366,"column":28,"nodeType":"1286","messageId":"1287","endLine":366,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":370,"column":47,"nodeType":"1286","messageId":"1287","endLine":370,"endColumn":49},{"ruleId":"1378","severity":1,"message":"1379","line":811,"column":31,"nodeType":"1380","messageId":"1381","endLine":811,"endColumn":65},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1382","line":9,"column":3,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":8},{"ruleId":"1252","severity":1,"message":"1355","line":10,"column":3,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":7},{"ruleId":"1252","severity":1,"message":"1317","line":13,"column":16,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1383","line":23,"column":19,"nodeType":"1254","messageId":"1255","endLine":23,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1384","line":98,"column":27,"nodeType":"1254","messageId":"1255","endLine":98,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1385","line":129,"column":28,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1386","line":130,"column":24,"nodeType":"1254","messageId":"1255","endLine":130,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1299","line":150,"column":10,"nodeType":"1254","messageId":"1255","endLine":150,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":150,"column":23,"nodeType":"1254","messageId":"1255","endLine":150,"endColumn":36},{"ruleId":"1280","severity":1,"message":"1387","line":227,"column":6,"nodeType":"1282","endLine":227,"endColumn":24,"suggestions":"1388"},{"ruleId":"1252","severity":1,"message":"1359","line":236,"column":21,"nodeType":"1254","messageId":"1255","endLine":236,"endColumn":33},{"ruleId":"1389","severity":1,"message":"1390","line":270,"column":5,"nodeType":"1391","messageId":"1287","endLine":270,"endColumn":36},{"ruleId":"1389","severity":1,"message":"1392","line":271,"column":5,"nodeType":"1391","messageId":"1287","endLine":271,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1383","line":19,"column":19,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":19,"column":32,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":20,"column":8,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1318","line":21,"column":8,"nodeType":"1254","messageId":"1255","endLine":21,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1395","line":28,"column":3,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1396","line":107,"column":9,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1397","line":115,"column":10,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1398","line":115,"column":19,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1303","line":122,"column":10,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":122,"column":21,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1399","line":124,"column":10,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1400","line":124,"column":24,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1401","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1402","line":125,"column":25,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1403","line":132,"column":10,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1404","line":132,"column":29,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1405","line":133,"column":10,"nodeType":"1254","messageId":"1255","endLine":133,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1406","line":134,"column":10,"nodeType":"1254","messageId":"1255","endLine":134,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1407","line":137,"column":10,"nodeType":"1254","messageId":"1255","endLine":137,"endColumn":30},{"ruleId":"1280","severity":1,"message":"1408","line":226,"column":6,"nodeType":"1282","endLine":226,"endColumn":8,"suggestions":"1409"},{"ruleId":"1252","severity":1,"message":"1410","line":247,"column":9,"nodeType":"1254","messageId":"1255","endLine":247,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1411","line":266,"column":9,"nodeType":"1254","messageId":"1255","endLine":266,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1412","line":305,"column":11,"nodeType":"1254","messageId":"1255","endLine":305,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1413","line":484,"column":9,"nodeType":"1254","messageId":"1255","endLine":484,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":485,"column":24,"nodeType":"1286","messageId":"1287","endLine":485,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":488,"column":31,"nodeType":"1286","messageId":"1287","endLine":488,"endColumn":33},{"ruleId":"1284","severity":1,"message":"1285","line":584,"column":47,"nodeType":"1286","messageId":"1287","endLine":584,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":6,"column":16,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1414","line":99,"column":10,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1299","line":101,"column":10,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":101,"column":23,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1357","line":104,"column":10,"nodeType":"1254","messageId":"1255","endLine":104,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1358","line":104,"column":20,"nodeType":"1254","messageId":"1255","endLine":104,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1415","line":120,"column":9,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1416","line":378,"column":12,"nodeType":"1254","messageId":"1255","endLine":378,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1417","line":384,"column":12,"nodeType":"1254","messageId":"1255","endLine":384,"endColumn":28},{"ruleId":"1284","severity":1,"message":"1285","line":440,"column":47,"nodeType":"1286","messageId":"1287","endLine":440,"endColumn":49},{"ruleId":"1280","severity":1,"message":"1418","line":530,"column":6,"nodeType":"1282","endLine":530,"endColumn":27,"suggestions":"1419"},{"ruleId":"1280","severity":1,"message":"1418","line":552,"column":6,"nodeType":"1282","endLine":552,"endColumn":31,"suggestions":"1420"},{"ruleId":"1280","severity":1,"message":"1418","line":569,"column":6,"nodeType":"1282","endLine":569,"endColumn":29,"suggestions":"1421"},{"ruleId":"1280","severity":1,"message":"1418","line":581,"column":6,"nodeType":"1282","endLine":581,"endColumn":29,"suggestions":"1422"},{"ruleId":"1280","severity":1,"message":"1418","line":589,"column":6,"nodeType":"1282","endLine":589,"endColumn":33,"suggestions":"1423"},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":6,"column":16,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1320","line":10,"column":10,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1322","line":20,"column":8,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1424","line":24,"column":10,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1425","line":26,"column":10,"nodeType":"1254","messageId":"1255","endLine":26,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1356","line":101,"column":9,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1426","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1427","line":105,"column":24,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1428","line":109,"column":10,"nodeType":"1254","messageId":"1255","endLine":109,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1429","line":123,"column":27,"nodeType":"1254","messageId":"1255","endLine":123,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1324","line":126,"column":24,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1299","line":128,"column":10,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":128,"column":23,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":36},{"ruleId":"1284","severity":1,"message":"1285","line":136,"column":25,"nodeType":"1286","messageId":"1287","endLine":136,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1415","line":169,"column":9,"nodeType":"1254","messageId":"1255","endLine":169,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1430","line":313,"column":9,"nodeType":"1254","messageId":"1255","endLine":313,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1431","line":418,"column":6,"nodeType":"1282","endLine":418,"endColumn":70,"suggestions":"1432"},{"ruleId":"1252","severity":1,"message":"1335","line":662,"column":13,"nodeType":"1254","messageId":"1255","endLine":662,"endColumn":21},{"ruleId":"1284","severity":1,"message":"1285","line":706,"column":24,"nodeType":"1286","messageId":"1287","endLine":706,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":709,"column":31,"nodeType":"1286","messageId":"1287","endLine":709,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1410","line":730,"column":9,"nodeType":"1254","messageId":"1255","endLine":730,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":768,"column":47,"nodeType":"1286","messageId":"1287","endLine":768,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1412","line":784,"column":11,"nodeType":"1254","messageId":"1255","endLine":784,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1433","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":38,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1309","line":2,"column":8,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1382","line":3,"column":47,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":52},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1298","line":4,"column":13,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1271","line":8,"column":10,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1310","line":11,"column":10,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1311","line":11,"column":24,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1383","line":19,"column":19,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":19,"column":32,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":20,"column":8,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1434","line":23,"column":8,"nodeType":"1254","messageId":"1255","endLine":23,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1435","line":103,"column":10,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":12},{"ruleId":"1252","severity":1,"message":"1436","line":103,"column":14,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1437","line":104,"column":18,"nodeType":"1254","messageId":"1255","endLine":104,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1438","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1439","line":105,"column":23,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":37},{"ruleId":"1252","severity":1,"message":"1276","line":106,"column":10,"nodeType":"1254","messageId":"1255","endLine":106,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1277","line":106,"column":18,"nodeType":"1254","messageId":"1255","endLine":106,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1440","line":107,"column":7,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":11},{"ruleId":"1252","severity":1,"message":"1397","line":110,"column":10,"nodeType":"1254","messageId":"1255","endLine":110,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1398","line":110,"column":19,"nodeType":"1254","messageId":"1255","endLine":110,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1441","line":111,"column":10,"nodeType":"1254","messageId":"1255","endLine":111,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1442","line":111,"column":29,"nodeType":"1254","messageId":"1255","endLine":111,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1443","line":112,"column":10,"nodeType":"1254","messageId":"1255","endLine":112,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1444","line":112,"column":21,"nodeType":"1254","messageId":"1255","endLine":112,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1445","line":113,"column":10,"nodeType":"1254","messageId":"1255","endLine":113,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1446","line":113,"column":18,"nodeType":"1254","messageId":"1255","endLine":113,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1447","line":114,"column":10,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1448","line":114,"column":19,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1449","line":115,"column":10,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1450","line":115,"column":28,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1451","line":118,"column":10,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1393","line":4,"column":38,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":4,"column":54,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1319","line":8,"column":8,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1383","line":20,"column":19,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":20,"column":32,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":21,"column":8,"nodeType":"1254","messageId":"1255","endLine":21,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1452","line":22,"column":10,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1453","line":23,"column":10,"nodeType":"1254","messageId":"1255","endLine":23,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1454","line":23,"column":16,"nodeType":"1254","messageId":"1255","endLine":23,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1455","line":23,"column":31,"nodeType":"1254","messageId":"1255","endLine":23,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1456","line":24,"column":8,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1457","line":25,"column":8,"nodeType":"1254","messageId":"1255","endLine":25,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1318","line":27,"column":8,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1441","line":122,"column":10,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1443","line":123,"column":10,"nodeType":"1254","messageId":"1255","endLine":123,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1458","line":124,"column":10,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1459","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1460","line":125,"column":34,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":57},{"ruleId":"1252","severity":1,"message":"1303","line":128,"column":10,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":128,"column":21,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1461","line":132,"column":10,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1462","line":132,"column":31,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1463","line":138,"column":10,"nodeType":"1254","messageId":"1255","endLine":138,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1464","line":138,"column":41,"nodeType":"1254","messageId":"1255","endLine":138,"endColumn":73},{"ruleId":"1252","severity":1,"message":"1465","line":140,"column":21,"nodeType":"1254","messageId":"1255","endLine":140,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1279","line":145,"column":23,"nodeType":"1254","messageId":"1255","endLine":145,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1466","line":148,"column":19,"nodeType":"1254","messageId":"1255","endLine":148,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1399","line":153,"column":10,"nodeType":"1254","messageId":"1255","endLine":153,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1400","line":153,"column":24,"nodeType":"1254","messageId":"1255","endLine":153,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1467","line":166,"column":10,"nodeType":"1254","messageId":"1255","endLine":166,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1468","line":166,"column":38,"nodeType":"1254","messageId":"1255","endLine":166,"endColumn":67},{"ruleId":"1252","severity":1,"message":"1469","line":170,"column":5,"nodeType":"1254","messageId":"1255","endLine":170,"endColumn":40},{"ruleId":"1252","severity":1,"message":"1470","line":171,"column":5,"nodeType":"1254","messageId":"1255","endLine":171,"endColumn":43},{"ruleId":"1252","severity":1,"message":"1471","line":176,"column":10,"nodeType":"1254","messageId":"1255","endLine":176,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1472","line":177,"column":10,"nodeType":"1254","messageId":"1255","endLine":177,"endColumn":26},{"ruleId":"1389","severity":1,"message":"1473","line":278,"column":5,"nodeType":"1391","messageId":"1287","endLine":278,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1474","line":283,"column":10,"nodeType":"1254","messageId":"1255","endLine":283,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1475","line":284,"column":10,"nodeType":"1254","messageId":"1255","endLine":284,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1476","line":285,"column":10,"nodeType":"1254","messageId":"1255","endLine":285,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1477","line":335,"column":9,"nodeType":"1254","messageId":"1255","endLine":335,"endColumn":34},{"ruleId":"1284","severity":1,"message":"1285","line":373,"column":49,"nodeType":"1286","messageId":"1287","endLine":373,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1478","line":488,"column":9,"nodeType":"1254","messageId":"1255","endLine":488,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1479","line":489,"column":11,"nodeType":"1254","messageId":"1255","endLine":489,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1480","line":536,"column":6,"nodeType":"1282","endLine":536,"endColumn":8,"suggestions":"1481"},{"ruleId":"1252","severity":1,"message":"1410","line":546,"column":9,"nodeType":"1254","messageId":"1255","endLine":546,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1411","line":567,"column":9,"nodeType":"1254","messageId":"1255","endLine":567,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1482","line":709,"column":9,"nodeType":"1254","messageId":"1255","endLine":709,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1483","line":733,"column":9,"nodeType":"1254","messageId":"1255","endLine":733,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1484","line":779,"column":9,"nodeType":"1254","messageId":"1255","endLine":779,"endColumn":29},{"ruleId":"1485","severity":1,"message":"1486","line":782,"column":47,"nodeType":"1487","messageId":"1488","endLine":782,"endColumn":49},{"ruleId":"1485","severity":1,"message":"1486","line":791,"column":49,"nodeType":"1487","messageId":"1488","endLine":791,"endColumn":51},{"ruleId":"1485","severity":1,"message":"1486","line":800,"column":49,"nodeType":"1487","messageId":"1488","endLine":800,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1413","line":963,"column":9,"nodeType":"1254","messageId":"1255","endLine":963,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":964,"column":24,"nodeType":"1286","messageId":"1287","endLine":964,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":967,"column":31,"nodeType":"1286","messageId":"1287","endLine":967,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1489","line":1000,"column":9,"nodeType":"1254","messageId":"1255","endLine":1000,"endColumn":17},{"ruleId":"1284","severity":1,"message":"1285","line":1028,"column":47,"nodeType":"1286","messageId":"1287","endLine":1028,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1412","line":1092,"column":11,"nodeType":"1254","messageId":"1255","endLine":1092,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1272","line":13,"column":10,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1383","line":25,"column":19,"nodeType":"1254","messageId":"1255","endLine":25,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1299","line":116,"column":10,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":116,"column":23,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1358","line":119,"column":20,"nodeType":"1254","messageId":"1255","endLine":119,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1449","line":120,"column":10,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1490","line":187,"column":6,"nodeType":"1282","endLine":187,"endColumn":21,"suggestions":"1491"},{"ruleId":"1284","severity":1,"message":"1285","line":422,"column":24,"nodeType":"1286","messageId":"1287","endLine":422,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":425,"column":31,"nodeType":"1286","messageId":"1287","endLine":425,"endColumn":33},{"ruleId":"1284","severity":1,"message":"1285","line":548,"column":47,"nodeType":"1286","messageId":"1287","endLine":548,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1433","line":1,"column":29,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1309","line":2,"column":8,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1492","line":4,"column":8,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1355","line":5,"column":52,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":56},{"ruleId":"1252","severity":1,"message":"1298","line":6,"column":13,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1317","line":8,"column":15,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1277","line":95,"column":20,"nodeType":"1254","messageId":"1255","endLine":95,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1493","line":96,"column":12,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1437","line":96,"column":20,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1290","line":3,"column":20,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1383","line":8,"column":18,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":2,"column":54,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1322","line":19,"column":8,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1494","line":21,"column":8,"nodeType":"1254","messageId":"1255","endLine":21,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1495","line":26,"column":8,"nodeType":"1254","messageId":"1255","endLine":26,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1414","line":101,"column":10,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1496","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1497","line":105,"column":25,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1459","line":107,"column":10,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1498","line":107,"column":34,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":59},{"ruleId":"1252","severity":1,"message":"1299","line":116,"column":10,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":116,"column":23,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1465","line":121,"column":21,"nodeType":"1254","messageId":"1255","endLine":121,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1466","line":127,"column":19,"nodeType":"1254","messageId":"1255","endLine":127,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1499","line":135,"column":10,"nodeType":"1254","messageId":"1255","endLine":135,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1500","line":135,"column":26,"nodeType":"1254","messageId":"1255","endLine":135,"endColumn":43},{"ruleId":"1252","severity":1,"message":"1501","line":252,"column":9,"nodeType":"1254","messageId":"1255","endLine":252,"endColumn":19},{"ruleId":"1280","severity":1,"message":"1502","line":358,"column":6,"nodeType":"1282","endLine":358,"endColumn":24,"suggestions":"1503"},{"ruleId":"1252","severity":1,"message":"1504","line":506,"column":9,"nodeType":"1254","messageId":"1255","endLine":506,"endColumn":34},{"ruleId":"1252","severity":1,"message":"1505","line":519,"column":9,"nodeType":"1254","messageId":"1255","endLine":519,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1506","line":564,"column":9,"nodeType":"1254","messageId":"1255","endLine":564,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1413","line":638,"column":9,"nodeType":"1254","messageId":"1255","endLine":638,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1410","line":661,"column":9,"nodeType":"1254","messageId":"1255","endLine":661,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1412","line":672,"column":11,"nodeType":"1254","messageId":"1255","endLine":672,"endColumn":16},{"ruleId":"1284","severity":1,"message":"1285","line":716,"column":47,"nodeType":"1286","messageId":"1287","endLine":716,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1303","line":733,"column":9,"nodeType":"1254","messageId":"1255","endLine":733,"endColumn":18},{"ruleId":"1284","severity":1,"message":"1285","line":745,"column":42,"nodeType":"1286","messageId":"1287","endLine":745,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":38,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1382","line":3,"column":47,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":52},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1298","line":4,"column":13,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1271","line":8,"column":10,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1383","line":19,"column":19,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":19,"column":32,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":20,"column":8,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1507","line":22,"column":8,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1435","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":12},{"ruleId":"1252","severity":1,"message":"1436","line":105,"column":14,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1437","line":106,"column":18,"nodeType":"1254","messageId":"1255","endLine":106,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1438","line":107,"column":10,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1439","line":107,"column":23,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":37},{"ruleId":"1252","severity":1,"message":"1276","line":108,"column":10,"nodeType":"1254","messageId":"1255","endLine":108,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1277","line":108,"column":18,"nodeType":"1254","messageId":"1255","endLine":108,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1440","line":109,"column":7,"nodeType":"1254","messageId":"1255","endLine":109,"endColumn":11},{"ruleId":"1252","severity":1,"message":"1397","line":112,"column":10,"nodeType":"1254","messageId":"1255","endLine":112,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1398","line":112,"column":19,"nodeType":"1254","messageId":"1255","endLine":112,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1441","line":113,"column":10,"nodeType":"1254","messageId":"1255","endLine":113,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1442","line":113,"column":29,"nodeType":"1254","messageId":"1255","endLine":113,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1443","line":114,"column":10,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1444","line":114,"column":21,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1445","line":115,"column":10,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1446","line":115,"column":18,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1447","line":116,"column":10,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1448","line":116,"column":19,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1449","line":117,"column":10,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1450","line":117,"column":28,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1451","line":119,"column":10,"nodeType":"1254","messageId":"1255","endLine":119,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1508","line":178,"column":6,"nodeType":"1282","endLine":178,"endColumn":8,"suggestions":"1509"},{"ruleId":"1252","severity":1,"message":"1510","line":3,"column":8,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":15},{"ruleId":"1284","severity":1,"message":"1511","line":3,"column":27,"nodeType":"1286","messageId":"1287","endLine":3,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1512","line":6,"column":11,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":20},{"ruleId":"1513","severity":1,"message":"1514","line":144,"column":3,"nodeType":"1515","messageId":"1516","endLine":207,"endColumn":4},{"ruleId":"1517","severity":1,"message":"1518","line":152,"column":7,"nodeType":"1519","messageId":"1520","endLine":152,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":160,"column":7,"nodeType":"1519","messageId":"1520","endLine":160,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":168,"column":7,"nodeType":"1519","messageId":"1520","endLine":168,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":176,"column":7,"nodeType":"1519","messageId":"1520","endLine":176,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":184,"column":7,"nodeType":"1519","messageId":"1520","endLine":184,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":192,"column":7,"nodeType":"1519","messageId":"1520","endLine":192,"endColumn":13},{"ruleId":"1517","severity":1,"message":"1518","line":200,"column":7,"nodeType":"1519","messageId":"1520","endLine":200,"endColumn":13},{"ruleId":"1485","severity":1,"message":"1521","line":270,"column":39,"nodeType":"1487","messageId":"1522","endLine":270,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1523","line":287,"column":7,"nodeType":"1254","messageId":"1255","endLine":287,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1524","line":288,"column":7,"nodeType":"1254","messageId":"1255","endLine":288,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1525","line":289,"column":7,"nodeType":"1254","messageId":"1255","endLine":289,"endColumn":25},{"ruleId":"1485","severity":1,"message":"1521","line":391,"column":41,"nodeType":"1487","messageId":"1522","endLine":391,"endColumn":43},{"ruleId":"1252","severity":1,"message":"1526","line":437,"column":5,"nodeType":"1254","messageId":"1255","endLine":437,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1527","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1342","line":29,"column":10,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1293","line":29,"column":28,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1453","line":29,"column":34,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1275","line":56,"column":7,"nodeType":"1254","messageId":"1255","endLine":56,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1528","line":102,"column":9,"nodeType":"1254","messageId":"1255","endLine":102,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1529","line":108,"column":6,"nodeType":"1282","endLine":108,"endColumn":8,"suggestions":"1530"},{"ruleId":"1252","severity":1,"message":"1531","line":124,"column":9,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":2,"column":54,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1414","line":98,"column":10,"nodeType":"1254","messageId":"1255","endLine":98,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1499","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1500","line":105,"column":26,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":43},{"ruleId":"1280","severity":1,"message":"1532","line":152,"column":6,"nodeType":"1282","endLine":152,"endColumn":24,"suggestions":"1533"},{"ruleId":"1252","severity":1,"message":"1534","line":168,"column":12,"nodeType":"1254","messageId":"1255","endLine":168,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1535","line":260,"column":9,"nodeType":"1254","messageId":"1255","endLine":260,"endColumn":24},{"ruleId":"1284","severity":1,"message":"1285","line":347,"column":47,"nodeType":"1286","messageId":"1287","endLine":347,"endColumn":49},{"ruleId":"1284","severity":1,"message":"1285","line":354,"column":42,"nodeType":"1286","messageId":"1287","endLine":354,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1275","line":49,"column":7,"nodeType":"1254","messageId":"1255","endLine":49,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1536","line":96,"column":10,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1329","line":97,"column":10,"nodeType":"1254","messageId":"1255","endLine":97,"endColumn":23},{"ruleId":"1280","severity":1,"message":"1529","line":107,"column":6,"nodeType":"1282","endLine":107,"endColumn":8,"suggestions":"1537"},{"ruleId":"1252","severity":1,"message":"1527","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1298","line":30,"column":8,"nodeType":"1254","messageId":"1255","endLine":30,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1275","line":58,"column":7,"nodeType":"1254","messageId":"1255","endLine":58,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1528","line":109,"column":9,"nodeType":"1254","messageId":"1255","endLine":109,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1529","line":115,"column":6,"nodeType":"1282","endLine":115,"endColumn":8,"suggestions":"1538"},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1383","line":20,"column":19,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":20,"column":32,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":21,"column":8,"nodeType":"1254","messageId":"1255","endLine":21,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1318","line":22,"column":8,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1396","line":110,"column":9,"nodeType":"1254","messageId":"1255","endLine":110,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1397","line":118,"column":10,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1398","line":118,"column":19,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1303","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":125,"column":21,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1399","line":128,"column":10,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1400","line":128,"column":24,"nodeType":"1254","messageId":"1255","endLine":128,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1401","line":129,"column":10,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1402","line":129,"column":25,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1403","line":137,"column":10,"nodeType":"1254","messageId":"1255","endLine":137,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1404","line":137,"column":29,"nodeType":"1254","messageId":"1255","endLine":137,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1405","line":138,"column":10,"nodeType":"1254","messageId":"1255","endLine":138,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1406","line":139,"column":10,"nodeType":"1254","messageId":"1255","endLine":139,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1539","line":139,"column":37,"nodeType":"1254","messageId":"1255","endLine":139,"endColumn":65},{"ruleId":"1252","severity":1,"message":"1407","line":142,"column":10,"nodeType":"1254","messageId":"1255","endLine":142,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1356","line":143,"column":9,"nodeType":"1254","messageId":"1255","endLine":143,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1540","line":225,"column":6,"nodeType":"1282","endLine":225,"endColumn":8,"suggestions":"1541"},{"ruleId":"1252","severity":1,"message":"1410","line":244,"column":9,"nodeType":"1254","messageId":"1255","endLine":244,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1411","line":263,"column":9,"nodeType":"1254","messageId":"1255","endLine":263,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1412","line":307,"column":11,"nodeType":"1254","messageId":"1255","endLine":307,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1542","line":404,"column":6,"nodeType":"1282","endLine":404,"endColumn":8,"suggestions":"1543"},{"ruleId":"1252","severity":1,"message":"1413","line":503,"column":9,"nodeType":"1254","messageId":"1255","endLine":503,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":504,"column":24,"nodeType":"1286","messageId":"1287","endLine":504,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":507,"column":31,"nodeType":"1286","messageId":"1287","endLine":507,"endColumn":33},{"ruleId":"1284","severity":1,"message":"1285","line":593,"column":47,"nodeType":"1286","messageId":"1287","endLine":593,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1544","line":596,"column":9,"nodeType":"1254","messageId":"1255","endLine":596,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":38,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1291","line":3,"column":28,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1290","line":6,"column":10,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1322","line":19,"column":8,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1438","line":100,"column":10,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1439","line":100,"column":23,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":37},{"ruleId":"1252","severity":1,"message":"1545","line":104,"column":9,"nodeType":"1254","messageId":"1255","endLine":104,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1447","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1356","line":126,"column":8,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1546","line":129,"column":10,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1474","line":130,"column":10,"nodeType":"1254","messageId":"1255","endLine":130,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1547","line":130,"column":25,"nodeType":"1254","messageId":"1255","endLine":130,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1475","line":131,"column":10,"nodeType":"1254","messageId":"1255","endLine":131,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1548","line":131,"column":28,"nodeType":"1254","messageId":"1255","endLine":131,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1476","line":132,"column":10,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1549","line":132,"column":23,"nodeType":"1254","messageId":"1255","endLine":132,"endColumn":37},{"ruleId":"1252","severity":1,"message":"1535","line":134,"column":11,"nodeType":"1254","messageId":"1255","endLine":134,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1412","line":148,"column":15,"nodeType":"1254","messageId":"1255","endLine":148,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1542","line":196,"column":8,"nodeType":"1282","endLine":196,"endColumn":10,"suggestions":"1550"},{"ruleId":"1252","severity":1,"message":"1551","line":253,"column":9,"nodeType":"1254","messageId":"1255","endLine":253,"endColumn":34},{"ruleId":"1252","severity":1,"message":"1410","line":292,"column":9,"nodeType":"1254","messageId":"1255","endLine":292,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":361,"column":47,"nodeType":"1286","messageId":"1287","endLine":361,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":2,"column":54,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1414","line":98,"column":10,"nodeType":"1254","messageId":"1255","endLine":98,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1499","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1500","line":105,"column":26,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":43},{"ruleId":"1280","severity":1,"message":"1532","line":152,"column":6,"nodeType":"1282","endLine":152,"endColumn":24,"suggestions":"1552"},{"ruleId":"1252","severity":1,"message":"1534","line":168,"column":12,"nodeType":"1254","messageId":"1255","endLine":168,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1535","line":260,"column":9,"nodeType":"1254","messageId":"1255","endLine":260,"endColumn":24},{"ruleId":"1284","severity":1,"message":"1285","line":312,"column":24,"nodeType":"1286","messageId":"1287","endLine":312,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":315,"column":31,"nodeType":"1286","messageId":"1287","endLine":315,"endColumn":33},{"ruleId":"1284","severity":1,"message":"1285","line":347,"column":47,"nodeType":"1286","messageId":"1287","endLine":347,"endColumn":49},{"ruleId":"1284","severity":1,"message":"1285","line":354,"column":42,"nodeType":"1286","messageId":"1287","endLine":354,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1527","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1275","line":55,"column":7,"nodeType":"1254","messageId":"1255","endLine":55,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1553","line":105,"column":6,"nodeType":"1282","endLine":105,"endColumn":24,"suggestions":"1554"},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1492","line":2,"column":10,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1271","line":5,"column":26,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1308","line":8,"column":10,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1272","line":8,"column":16,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1273","line":11,"column":22,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1555","line":24,"column":8,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1556","line":28,"column":10,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1275","line":31,"column":7,"nodeType":"1254","messageId":"1255","endLine":31,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1279","line":54,"column":23,"nodeType":"1254","messageId":"1255","endLine":54,"endColumn":36},{"ruleId":"1284","severity":1,"message":"1285","line":317,"column":39,"nodeType":"1286","messageId":"1287","endLine":317,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1433","line":1,"column":30,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1492","line":2,"column":10,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1266","line":4,"column":10,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1271","line":5,"column":26,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":31},{"ruleId":"1252","severity":1,"message":"1308","line":8,"column":10,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1272","line":8,"column":16,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1273","line":11,"column":22,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1313","line":33,"column":12,"nodeType":"1254","messageId":"1255","endLine":33,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1557","line":1,"column":28,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":36},{"ruleId":"1261","severity":1,"message":"1262","line":5,"column":10,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":24,"fix":"1558"},{"ruleId":"1252","severity":1,"message":"1527","line":28,"column":10,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1275","line":56,"column":7,"nodeType":"1254","messageId":"1255","endLine":56,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":15,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1559","line":3,"column":35,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1560","line":3,"column":46,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":54},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1347","line":9,"column":9,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1561","line":10,"column":9,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1562","line":13,"column":10,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1312","line":35,"column":9,"nodeType":"1254","messageId":"1255","endLine":35,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1563","line":36,"column":10,"nodeType":"1254","messageId":"1255","endLine":36,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1545","line":39,"column":9,"nodeType":"1254","messageId":"1255","endLine":39,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1535","line":42,"column":9,"nodeType":"1254","messageId":"1255","endLine":42,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1564","line":43,"column":11,"nodeType":"1254","messageId":"1255","endLine":43,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1565","line":44,"column":9,"nodeType":"1254","messageId":"1255","endLine":44,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1566","line":51,"column":9,"nodeType":"1254","messageId":"1255","endLine":51,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1567","line":53,"column":9,"nodeType":"1254","messageId":"1255","endLine":53,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1568","line":57,"column":9,"nodeType":"1254","messageId":"1255","endLine":57,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1319","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1383","line":19,"column":19,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":19,"column":32,"nodeType":"1254","messageId":"1255","endLine":19,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":20,"column":8,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1318","line":28,"column":8,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1441","line":123,"column":10,"nodeType":"1254","messageId":"1255","endLine":123,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1443","line":124,"column":10,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1458","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1459","line":126,"column":10,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1460","line":126,"column":34,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":57},{"ruleId":"1252","severity":1,"message":"1303","line":129,"column":10,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":129,"column":21,"nodeType":"1254","messageId":"1255","endLine":129,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1461","line":133,"column":10,"nodeType":"1254","messageId":"1255","endLine":133,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1462","line":133,"column":31,"nodeType":"1254","messageId":"1255","endLine":133,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1463","line":139,"column":10,"nodeType":"1254","messageId":"1255","endLine":139,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1464","line":139,"column":41,"nodeType":"1254","messageId":"1255","endLine":139,"endColumn":73},{"ruleId":"1252","severity":1,"message":"1465","line":141,"column":21,"nodeType":"1254","messageId":"1255","endLine":141,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1466","line":147,"column":19,"nodeType":"1254","messageId":"1255","endLine":147,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1399","line":152,"column":10,"nodeType":"1254","messageId":"1255","endLine":152,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1400","line":152,"column":24,"nodeType":"1254","messageId":"1255","endLine":152,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1569","line":168,"column":10,"nodeType":"1254","messageId":"1255","endLine":168,"endColumn":24},{"ruleId":"1389","severity":1,"message":"1473","line":261,"column":5,"nodeType":"1391","messageId":"1287","endLine":261,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1474","line":267,"column":10,"nodeType":"1254","messageId":"1255","endLine":267,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1475","line":268,"column":10,"nodeType":"1254","messageId":"1255","endLine":268,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1476","line":269,"column":10,"nodeType":"1254","messageId":"1255","endLine":269,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1570","line":309,"column":9,"nodeType":"1254","messageId":"1255","endLine":309,"endColumn":27},{"ruleId":"1284","severity":1,"message":"1285","line":429,"column":49,"nodeType":"1286","messageId":"1287","endLine":429,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1478","line":544,"column":9,"nodeType":"1254","messageId":"1255","endLine":544,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1479","line":545,"column":11,"nodeType":"1254","messageId":"1255","endLine":545,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1571","line":592,"column":6,"nodeType":"1282","endLine":592,"endColumn":8,"suggestions":"1572"},{"ruleId":"1252","severity":1,"message":"1410","line":602,"column":9,"nodeType":"1254","messageId":"1255","endLine":602,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1411","line":623,"column":9,"nodeType":"1254","messageId":"1255","endLine":623,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1573","line":648,"column":9,"nodeType":"1254","messageId":"1255","endLine":648,"endColumn":42},{"ruleId":"1252","severity":1,"message":"1574","line":699,"column":9,"nodeType":"1254","messageId":"1255","endLine":699,"endColumn":51},{"ruleId":"1284","severity":1,"message":"1285","line":743,"column":51,"nodeType":"1286","messageId":"1287","endLine":743,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1482","line":748,"column":9,"nodeType":"1254","messageId":"1255","endLine":748,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1412","line":778,"column":11,"nodeType":"1254","messageId":"1255","endLine":778,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1483","line":789,"column":9,"nodeType":"1254","messageId":"1255","endLine":789,"endColumn":39},{"ruleId":"1485","severity":1,"message":"1486","line":838,"column":47,"nodeType":"1487","messageId":"1488","endLine":838,"endColumn":49},{"ruleId":"1485","severity":1,"message":"1486","line":847,"column":49,"nodeType":"1487","messageId":"1488","endLine":847,"endColumn":51},{"ruleId":"1485","severity":1,"message":"1486","line":856,"column":49,"nodeType":"1487","messageId":"1488","endLine":856,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1413","line":1050,"column":9,"nodeType":"1254","messageId":"1255","endLine":1050,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":1051,"column":24,"nodeType":"1286","messageId":"1287","endLine":1051,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":1054,"column":31,"nodeType":"1286","messageId":"1287","endLine":1054,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1489","line":1087,"column":9,"nodeType":"1254","messageId":"1255","endLine":1087,"endColumn":17},{"ruleId":"1284","severity":1,"message":"1285","line":1115,"column":47,"nodeType":"1286","messageId":"1287","endLine":1115,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1383","line":24,"column":19,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1356","line":99,"column":9,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1575","line":183,"column":6,"nodeType":"1282","endLine":183,"endColumn":24,"suggestions":"1576"},{"ruleId":"1284","severity":1,"message":"1285","line":470,"column":47,"nodeType":"1286","messageId":"1287","endLine":470,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":2,"column":54,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1494","line":21,"column":8,"nodeType":"1254","messageId":"1255","endLine":21,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1495","line":24,"column":8,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1414","line":99,"column":10,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1577","line":99,"column":23,"nodeType":"1254","messageId":"1255","endLine":99,"endColumn":37},{"ruleId":"1252","severity":1,"message":"1496","line":103,"column":10,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1497","line":103,"column":25,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1459","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1498","line":105,"column":34,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":59},{"ruleId":"1252","severity":1,"message":"1465","line":111,"column":21,"nodeType":"1254","messageId":"1255","endLine":111,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1466","line":117,"column":19,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1578","line":122,"column":10,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1499","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1500","line":125,"column":26,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":43},{"ruleId":"1389","severity":1,"message":"1579","line":199,"column":7,"nodeType":"1391","messageId":"1287","endLine":199,"endColumn":47},{"ruleId":"1389","severity":1,"message":"1579","line":232,"column":5,"nodeType":"1391","messageId":"1287","endLine":232,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1412","line":253,"column":11,"nodeType":"1254","messageId":"1255","endLine":253,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1580","line":278,"column":9,"nodeType":"1254","messageId":"1255","endLine":278,"endColumn":21},{"ruleId":"1280","severity":1,"message":"1581","line":354,"column":6,"nodeType":"1282","endLine":354,"endColumn":24,"suggestions":"1582"},{"ruleId":"1252","severity":1,"message":"1504","line":499,"column":9,"nodeType":"1254","messageId":"1255","endLine":499,"endColumn":34},{"ruleId":"1252","severity":1,"message":"1506","line":559,"column":9,"nodeType":"1254","messageId":"1255","endLine":559,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1413","line":630,"column":9,"nodeType":"1254","messageId":"1255","endLine":630,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":690,"column":47,"nodeType":"1286","messageId":"1287","endLine":690,"endColumn":49},{"ruleId":"1284","severity":1,"message":"1285","line":709,"column":42,"nodeType":"1286","messageId":"1287","endLine":709,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1356","line":92,"column":9,"nodeType":"1254","messageId":"1255","endLine":92,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1359","line":103,"column":21,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1360","line":205,"column":6,"nodeType":"1282","endLine":205,"endColumn":24,"suggestions":"1583"},{"ruleId":"1252","severity":1,"message":"1290","line":3,"column":20,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1584","line":4,"column":8,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1527","line":6,"column":10,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1308","line":7,"column":10,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1383","line":9,"column":19,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":6,"column":16,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1359","line":106,"column":21,"nodeType":"1254","messageId":"1255","endLine":106,"endColumn":33},{"ruleId":"1362","severity":1,"message":"1363","line":220,"column":32,"nodeType":"1364","messageId":"1365","endLine":220,"endColumn":76,"fix":"1585"},{"ruleId":"1362","severity":1,"message":"1363","line":227,"column":32,"nodeType":"1364","messageId":"1365","endLine":227,"endColumn":73,"fix":"1586"},{"ruleId":"1362","severity":1,"message":"1363","line":235,"column":32,"nodeType":"1364","messageId":"1365","endLine":235,"endColumn":70,"fix":"1587"},{"ruleId":"1362","severity":1,"message":"1363","line":242,"column":32,"nodeType":"1364","messageId":"1365","endLine":242,"endColumn":69,"fix":"1588"},{"ruleId":"1362","severity":1,"message":"1363","line":249,"column":32,"nodeType":"1364","messageId":"1365","endLine":249,"endColumn":69,"fix":"1589"},{"ruleId":"1362","severity":1,"message":"1363","line":251,"column":32,"nodeType":"1364","messageId":"1365","endLine":251,"endColumn":62,"fix":"1590"},{"ruleId":"1280","severity":1,"message":"1372","line":281,"column":6,"nodeType":"1282","endLine":286,"endColumn":4,"suggestions":"1591"},{"ruleId":"1374","severity":1,"message":"1375","line":335,"column":5,"nodeType":"1376","messageId":"1377","endLine":340,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":336,"column":28,"nodeType":"1286","messageId":"1287","endLine":336,"endColumn":30},{"ruleId":"1374","severity":1,"message":"1375","line":342,"column":5,"nodeType":"1376","messageId":"1377","endLine":345,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":343,"column":28,"nodeType":"1286","messageId":"1287","endLine":343,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":347,"column":47,"nodeType":"1286","messageId":"1287","endLine":347,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1592","line":351,"column":11,"nodeType":"1254","messageId":"1255","endLine":351,"endColumn":21},{"ruleId":"1261","severity":1,"message":"1262","line":5,"column":10,"nodeType":"1263","messageId":"1264","endLine":5,"endColumn":24,"fix":"1593"},{"ruleId":"1252","severity":1,"message":"1527","line":28,"column":10,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1275","line":57,"column":7,"nodeType":"1254","messageId":"1255","endLine":57,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1356","line":101,"column":7,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":14},{"ruleId":"1280","severity":1,"message":"1594","line":132,"column":6,"nodeType":"1282","endLine":132,"endColumn":24,"suggestions":"1595"},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1433","line":1,"column":29,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1309","line":2,"column":8,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1492","line":4,"column":8,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1355","line":5,"column":52,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":56},{"ruleId":"1252","severity":1,"message":"1298","line":6,"column":13,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1317","line":8,"column":15,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1277","line":95,"column":20,"nodeType":"1254","messageId":"1255","endLine":95,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1493","line":96,"column":12,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1437","line":96,"column":20,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":53,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":57},{"ruleId":"1252","severity":1,"message":"1317","line":6,"column":15,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1596","line":89,"column":12,"nodeType":"1254","messageId":"1255","endLine":89,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1597","line":89,"column":26,"nodeType":"1254","messageId":"1255","endLine":89,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1415","line":117,"column":11,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":21},{"ruleId":"1284","severity":1,"message":"1285","line":412,"column":51,"nodeType":"1286","messageId":"1287","endLine":412,"endColumn":53},{"ruleId":"1280","severity":1,"message":"1418","line":505,"column":8,"nodeType":"1282","endLine":505,"endColumn":29,"suggestions":"1598"},{"ruleId":"1280","severity":1,"message":"1418","line":527,"column":8,"nodeType":"1282","endLine":527,"endColumn":33,"suggestions":"1599"},{"ruleId":"1280","severity":1,"message":"1418","line":544,"column":8,"nodeType":"1282","endLine":544,"endColumn":31,"suggestions":"1600"},{"ruleId":"1280","severity":1,"message":"1418","line":556,"column":8,"nodeType":"1282","endLine":556,"endColumn":31,"suggestions":"1601"},{"ruleId":"1280","severity":1,"message":"1418","line":564,"column":8,"nodeType":"1282","endLine":564,"endColumn":35,"suggestions":"1602"},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1382","line":3,"column":46,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":52,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":56},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":15,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1383","line":15,"column":18,"nodeType":"1254","messageId":"1255","endLine":15,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1359","line":105,"column":23,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":35},{"ruleId":"1280","severity":1,"message":"1387","line":185,"column":8,"nodeType":"1282","endLine":185,"endColumn":26,"suggestions":"1603"},{"ruleId":"1252","severity":1,"message":"1604","line":3,"column":8,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1393","line":4,"column":38,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":4,"column":54,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":7,"column":16,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1319","line":8,"column":8,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1320","line":11,"column":10,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1308","line":14,"column":10,"nodeType":"1254","messageId":"1255","endLine":14,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1321","line":14,"column":28,"nodeType":"1254","messageId":"1255","endLine":14,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":22,"column":8,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1605","line":24,"column":10,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1356","line":97,"column":9,"nodeType":"1254","messageId":"1255","endLine":97,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1428","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1606","line":174,"column":6,"nodeType":"1282","endLine":174,"endColumn":24,"suggestions":"1607"},{"ruleId":"1252","severity":1,"message":"1608","line":294,"column":9,"nodeType":"1254","messageId":"1255","endLine":294,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":330,"column":47,"nodeType":"1286","messageId":"1287","endLine":330,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1290","line":3,"column":20,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1527","line":6,"column":10,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1308","line":7,"column":10,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1383","line":9,"column":18,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1604","line":3,"column":8,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1393","line":4,"column":38,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":4,"column":54,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":7,"column":16,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1319","line":8,"column":8,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1320","line":11,"column":10,"nodeType":"1254","messageId":"1255","endLine":11,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1308","line":14,"column":10,"nodeType":"1254","messageId":"1255","endLine":14,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1321","line":14,"column":28,"nodeType":"1254","messageId":"1255","endLine":14,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":22,"column":8,"nodeType":"1254","messageId":"1255","endLine":22,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1605","line":24,"column":10,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1356","line":103,"column":9,"nodeType":"1254","messageId":"1255","endLine":103,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1428","line":110,"column":10,"nodeType":"1254","messageId":"1255","endLine":110,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1609","line":115,"column":10,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1610","line":116,"column":10,"nodeType":"1254","messageId":"1255","endLine":116,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1611","line":117,"column":10,"nodeType":"1254","messageId":"1255","endLine":117,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1324","line":120,"column":24,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1430","line":179,"column":9,"nodeType":"1254","messageId":"1255","endLine":179,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1612","line":249,"column":6,"nodeType":"1282","endLine":249,"endColumn":38,"suggestions":"1613"},{"ruleId":"1284","severity":1,"message":"1285","line":430,"column":47,"nodeType":"1286","messageId":"1287","endLine":430,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1393","line":3,"column":38,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":45},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1383","line":24,"column":19,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1356","line":101,"column":9,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1614","line":148,"column":10,"nodeType":"1254","messageId":"1255","endLine":148,"endColumn":28},{"ruleId":"1284","severity":1,"message":"1285","line":434,"column":47,"nodeType":"1286","messageId":"1287","endLine":434,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1356","line":89,"column":9,"nodeType":"1254","messageId":"1255","endLine":89,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1359","line":100,"column":21,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1360","line":188,"column":6,"nodeType":"1282","endLine":188,"endColumn":48,"suggestions":"1615"},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":6,"column":16,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1414","line":100,"column":10,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1415","line":118,"column":9,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":19},{"ruleId":"1284","severity":1,"message":"1285","line":394,"column":47,"nodeType":"1286","messageId":"1287","endLine":394,"endColumn":49},{"ruleId":"1280","severity":1,"message":"1418","line":483,"column":6,"nodeType":"1282","endLine":483,"endColumn":27,"suggestions":"1616"},{"ruleId":"1280","severity":1,"message":"1418","line":505,"column":6,"nodeType":"1282","endLine":505,"endColumn":31,"suggestions":"1617"},{"ruleId":"1280","severity":1,"message":"1418","line":522,"column":6,"nodeType":"1282","endLine":522,"endColumn":29,"suggestions":"1618"},{"ruleId":"1280","severity":1,"message":"1418","line":534,"column":6,"nodeType":"1282","endLine":534,"endColumn":29,"suggestions":"1619"},{"ruleId":"1280","severity":1,"message":"1418","line":542,"column":6,"nodeType":"1282","endLine":542,"endColumn":33,"suggestions":"1620"},{"ruleId":"1252","severity":1,"message":"1290","line":3,"column":20,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1527","line":6,"column":10,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1308","line":7,"column":10,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1383","line":9,"column":18,"nodeType":"1254","messageId":"1255","endLine":9,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1433","line":1,"column":29,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1309","line":2,"column":8,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1492","line":4,"column":8,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1355","line":5,"column":52,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":56},{"ruleId":"1252","severity":1,"message":"1298","line":6,"column":13,"nodeType":"1254","messageId":"1255","endLine":6,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1317","line":8,"column":15,"nodeType":"1254","messageId":"1255","endLine":8,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1277","line":95,"column":20,"nodeType":"1254","messageId":"1255","endLine":95,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1493","line":96,"column":12,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1437","line":96,"column":20,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":54,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1299","line":105,"column":10,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":21},{"ruleId":"1252","severity":1,"message":"1279","line":105,"column":23,"nodeType":"1254","messageId":"1255","endLine":105,"endColumn":36},{"ruleId":"1252","severity":1,"message":"1359","line":108,"column":21,"nodeType":"1254","messageId":"1255","endLine":108,"endColumn":33},{"ruleId":"1362","severity":1,"message":"1363","line":244,"column":32,"nodeType":"1364","messageId":"1365","endLine":244,"endColumn":76,"fix":"1621"},{"ruleId":"1362","severity":1,"message":"1363","line":251,"column":32,"nodeType":"1364","messageId":"1365","endLine":251,"endColumn":73,"fix":"1622"},{"ruleId":"1362","severity":1,"message":"1363","line":259,"column":32,"nodeType":"1364","messageId":"1365","endLine":259,"endColumn":70,"fix":"1623"},{"ruleId":"1362","severity":1,"message":"1363","line":266,"column":32,"nodeType":"1364","messageId":"1365","endLine":266,"endColumn":69,"fix":"1624"},{"ruleId":"1362","severity":1,"message":"1363","line":273,"column":32,"nodeType":"1364","messageId":"1365","endLine":273,"endColumn":69,"fix":"1625"},{"ruleId":"1362","severity":1,"message":"1363","line":275,"column":32,"nodeType":"1364","messageId":"1365","endLine":275,"endColumn":62,"fix":"1626"},{"ruleId":"1280","severity":1,"message":"1372","line":277,"column":6,"nodeType":"1282","endLine":282,"endColumn":4,"suggestions":"1627"},{"ruleId":"1374","severity":1,"message":"1375","line":329,"column":5,"nodeType":"1376","messageId":"1377","endLine":334,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":330,"column":28,"nodeType":"1286","messageId":"1287","endLine":330,"endColumn":30},{"ruleId":"1374","severity":1,"message":"1375","line":336,"column":5,"nodeType":"1376","messageId":"1377","endLine":339,"endColumn":6},{"ruleId":"1284","severity":1,"message":"1285","line":337,"column":28,"nodeType":"1286","messageId":"1287","endLine":337,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":341,"column":47,"nodeType":"1286","messageId":"1287","endLine":341,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1317","line":4,"column":15,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1318","line":7,"column":8,"nodeType":"1254","messageId":"1255","endLine":7,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1319","line":10,"column":8,"nodeType":"1254","messageId":"1255","endLine":10,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1320","line":13,"column":9,"nodeType":"1254","messageId":"1255","endLine":13,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1308","line":16,"column":9,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":13},{"ruleId":"1252","severity":1,"message":"1321","line":16,"column":27,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1322","line":24,"column":8,"nodeType":"1254","messageId":"1255","endLine":24,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1628","line":30,"column":8,"nodeType":"1254","messageId":"1255","endLine":30,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1324","line":113,"column":26,"nodeType":"1254","messageId":"1255","endLine":113,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1325","line":118,"column":12,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1326","line":118,"column":43,"nodeType":"1254","messageId":"1255","endLine":118,"endColumn":72},{"ruleId":"1252","severity":1,"message":"1327","line":119,"column":12,"nodeType":"1254","messageId":"1255","endLine":119,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1328","line":119,"column":32,"nodeType":"1254","messageId":"1255","endLine":119,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1329","line":120,"column":12,"nodeType":"1254","messageId":"1255","endLine":120,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1330","line":121,"column":12,"nodeType":"1254","messageId":"1255","endLine":121,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1331","line":121,"column":31,"nodeType":"1254","messageId":"1255","endLine":121,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1332","line":213,"column":11,"nodeType":"1254","messageId":"1255","endLine":213,"endColumn":16},{"ruleId":"1284","severity":1,"message":"1285","line":268,"column":51,"nodeType":"1286","messageId":"1287","endLine":268,"endColumn":53},{"ruleId":"1284","severity":1,"message":"1285","line":288,"column":55,"nodeType":"1286","messageId":"1287","endLine":288,"endColumn":57},{"ruleId":"1252","severity":1,"message":"1333","line":537,"column":11,"nodeType":"1254","messageId":"1255","endLine":537,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1334","line":546,"column":11,"nodeType":"1254","messageId":"1255","endLine":546,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1335","line":599,"column":19,"nodeType":"1254","messageId":"1255","endLine":599,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1336","line":648,"column":11,"nodeType":"1254","messageId":"1255","endLine":648,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1337","line":660,"column":11,"nodeType":"1254","messageId":"1255","endLine":660,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1629","line":678,"column":19,"nodeType":"1254","messageId":"1255","endLine":678,"endColumn":31},{"ruleId":"1284","severity":1,"message":"1285","line":723,"column":28,"nodeType":"1286","messageId":"1287","endLine":723,"endColumn":30},{"ruleId":"1284","severity":1,"message":"1285","line":732,"column":35,"nodeType":"1286","messageId":"1287","endLine":732,"endColumn":37},{"ruleId":"1338","severity":1,"message":"1339","line":1859,"column":45,"nodeType":"1340","messageId":"1341","endLine":1859,"endColumn":47},{"ruleId":"1338","severity":1,"message":"1339","line":1860,"column":45,"nodeType":"1340","messageId":"1341","endLine":1860,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":16,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1382","line":3,"column":46,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":51},{"ruleId":"1252","severity":1,"message":"1355","line":3,"column":52,"nodeType":"1254","messageId":"1255","endLine":3,"endColumn":56},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":15,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1383","line":15,"column":18,"nodeType":"1254","messageId":"1255","endLine":15,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1359","line":107,"column":23,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":35},{"ruleId":"1280","severity":1,"message":"1387","line":187,"column":8,"nodeType":"1282","endLine":187,"endColumn":26,"suggestions":"1630"},{"ruleId":"1252","severity":1,"message":"1319","line":4,"column":8,"nodeType":"1254","messageId":"1255","endLine":4,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1383","line":16,"column":19,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1394","line":16,"column":32,"nodeType":"1254","messageId":"1255","endLine":16,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1322","line":17,"column":8,"nodeType":"1254","messageId":"1255","endLine":17,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1318","line":18,"column":8,"nodeType":"1254","messageId":"1255","endLine":18,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1396","line":107,"column":9,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1397","line":115,"column":10,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1398","line":115,"column":19,"nodeType":"1254","messageId":"1255","endLine":115,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1303","line":122,"column":10,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":19},{"ruleId":"1252","severity":1,"message":"1304","line":122,"column":21,"nodeType":"1254","messageId":"1255","endLine":122,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1399","line":125,"column":10,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1400","line":125,"column":24,"nodeType":"1254","messageId":"1255","endLine":125,"endColumn":39},{"ruleId":"1252","severity":1,"message":"1401","line":126,"column":10,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1402","line":126,"column":25,"nodeType":"1254","messageId":"1255","endLine":126,"endColumn":41},{"ruleId":"1252","severity":1,"message":"1403","line":134,"column":10,"nodeType":"1254","messageId":"1255","endLine":134,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1404","line":134,"column":29,"nodeType":"1254","messageId":"1255","endLine":134,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1405","line":135,"column":10,"nodeType":"1254","messageId":"1255","endLine":135,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1406","line":136,"column":10,"nodeType":"1254","messageId":"1255","endLine":136,"endColumn":35},{"ruleId":"1252","severity":1,"message":"1407","line":139,"column":10,"nodeType":"1254","messageId":"1255","endLine":139,"endColumn":30},{"ruleId":"1280","severity":1,"message":"1631","line":213,"column":6,"nodeType":"1282","endLine":213,"endColumn":8,"suggestions":"1632"},{"ruleId":"1252","severity":1,"message":"1410","line":226,"column":9,"nodeType":"1254","messageId":"1255","endLine":226,"endColumn":30},{"ruleId":"1252","severity":1,"message":"1411","line":245,"column":9,"nodeType":"1254","messageId":"1255","endLine":245,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1412","line":289,"column":11,"nodeType":"1254","messageId":"1255","endLine":289,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1413","line":458,"column":9,"nodeType":"1254","messageId":"1255","endLine":458,"endColumn":32},{"ruleId":"1284","severity":1,"message":"1285","line":459,"column":24,"nodeType":"1286","messageId":"1287","endLine":459,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":462,"column":31,"nodeType":"1286","messageId":"1287","endLine":462,"endColumn":33},{"ruleId":"1252","severity":1,"message":"1535","line":493,"column":9,"nodeType":"1254","messageId":"1255","endLine":493,"endColumn":24},{"ruleId":"1284","severity":1,"message":"1285","line":554,"column":47,"nodeType":"1286","messageId":"1287","endLine":554,"endColumn":49},{"ruleId":"1252","severity":1,"message":"1345","line":1,"column":8,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1346","line":2,"column":8,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1527","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1342","line":29,"column":10,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1293","line":29,"column":28,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1453","line":29,"column":34,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1275","line":56,"column":7,"nodeType":"1254","messageId":"1255","endLine":56,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1528","line":102,"column":9,"nodeType":"1254","messageId":"1255","endLine":102,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1529","line":108,"column":6,"nodeType":"1282","endLine":108,"endColumn":8,"suggestions":"1633"},{"ruleId":"1252","severity":1,"message":"1531","line":124,"column":9,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":25},{"ruleId":"1252","severity":1,"message":"1270","line":1,"column":17,"nodeType":"1254","messageId":"1255","endLine":1,"endColumn":28},{"ruleId":"1252","severity":1,"message":"1355","line":2,"column":54,"nodeType":"1254","messageId":"1255","endLine":2,"endColumn":58},{"ruleId":"1252","severity":1,"message":"1317","line":5,"column":16,"nodeType":"1254","messageId":"1255","endLine":5,"endColumn":27},{"ruleId":"1252","severity":1,"message":"1634","line":100,"column":10,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1635","line":100,"column":28,"nodeType":"1254","messageId":"1255","endLine":100,"endColumn":47},{"ruleId":"1252","severity":1,"message":"1636","line":101,"column":10,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":29},{"ruleId":"1252","severity":1,"message":"1637","line":101,"column":31,"nodeType":"1254","messageId":"1255","endLine":101,"endColumn":53},{"ruleId":"1252","severity":1,"message":"1535","line":107,"column":9,"nodeType":"1254","messageId":"1255","endLine":107,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1499","line":114,"column":10,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":24},{"ruleId":"1252","severity":1,"message":"1500","line":114,"column":26,"nodeType":"1254","messageId":"1255","endLine":114,"endColumn":43},{"ruleId":"1280","severity":1,"message":"1532","line":155,"column":6,"nodeType":"1282","endLine":155,"endColumn":8,"suggestions":"1638"},{"ruleId":"1252","severity":1,"message":"1534","line":171,"column":12,"nodeType":"1254","messageId":"1255","endLine":171,"endColumn":26},{"ruleId":"1252","severity":1,"message":"1639","line":290,"column":13,"nodeType":"1254","messageId":"1255","endLine":290,"endColumn":14},{"ruleId":"1284","severity":1,"message":"1285","line":305,"column":24,"nodeType":"1286","messageId":"1287","endLine":305,"endColumn":26},{"ruleId":"1284","severity":1,"message":"1285","line":308,"column":31,"nodeType":"1286","messageId":"1287","endLine":308,"endColumn":33},{"ruleId":"1284","severity":1,"message":"1285","line":340,"column":47,"nodeType":"1286","messageId":"1287","endLine":340,"endColumn":49},{"ruleId":"1284","severity":1,"message":"1285","line":347,"column":42,"nodeType":"1286","messageId":"1287","endLine":347,"endColumn":44},{"ruleId":"1252","severity":1,"message":"1527","line":27,"column":10,"nodeType":"1254","messageId":"1255","endLine":27,"endColumn":20},{"ruleId":"1252","severity":1,"message":"1342","line":29,"column":10,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1293","line":29,"column":28,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":32},{"ruleId":"1252","severity":1,"message":"1453","line":29,"column":34,"nodeType":"1254","messageId":"1255","endLine":29,"endColumn":38},{"ruleId":"1252","severity":1,"message":"1275","line":56,"column":7,"nodeType":"1254","messageId":"1255","endLine":56,"endColumn":16},{"ruleId":"1252","severity":1,"message":"1528","line":102,"column":9,"nodeType":"1254","messageId":"1255","endLine":102,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1529","line":108,"column":6,"nodeType":"1282","endLine":108,"endColumn":8,"suggestions":"1640"},{"ruleId":"1252","severity":1,"message":"1531","line":124,"column":9,"nodeType":"1254","messageId":"1255","endLine":124,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1641"],"no-negated-in-lhs",["1642"],"'Router' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1643","text":"1644"},"'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'ClientRefferalForm' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'patientObjAge' is assigned a value but never used.","'setPermission' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["1645"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'momentLocalizer' is defined but never used.",{"range":"1646","text":"1644"},"'Card' is defined but never used.","'CardBody' is defined but never used.","'MdDashboard' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'Label' is defined but never used.","'moment' is defined but never used.","'permissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getServiceCode'. Either include it or remove the dependency array.",["1647"],"'getHospitalNumber' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'htsResult2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PatientCurrentObject' and 'props'. Either include them or remove the dependency array.",["1648"],"'Link' is defined but never used.","'axios' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'classes' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'setFamilyIndexList' is assigned a value but never used.","'handleAction' is assigned a value but never used.",{"range":"1649","text":"1644"},"'CardContent' is defined but never used.","'Select' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'patient' is assigned a value but never used.","'setSerialNumber' is assigned a value but never used.","'otherTestKitUserInfoAvailable' is assigned a value but never used.","'setIsUserInformationAvailable' is assigned a value but never used.","'kitUserInformation' is assigned a value but never used.","'setKitUserInformation' is assigned a value but never used.","'serviceNeeded' is assigned a value but never used.","'hasConductedHIVST' is assigned a value but never used.","'setHasConductedHIVST' is assigned a value but never used.","'style' is assigned a value but never used.","'updateUserInformation' is assigned a value but never used.","'clearUserInformationList' is assigned a value but never used.","'response' is assigned a value but never used.","'setAge' is assigned a value but never used.","'handleDateOfBirthChange1' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.",{"range":"1650","text":"1644"},"'lastVisitCount' is assigned a value but never used.","'checkModality' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["1651"],"'Form' is defined but never used.","'history' is assigned a value but never used.","'nextForm' is assigned a value but never used.","'setNextForm' is assigned a value but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["1652"],"no-useless-computed-key","Unnecessarily computed property [\"rencencyInterpretation\"] found.","Property","unnecessarilyComputedProperty",{"range":"1653","text":"1654"},{"range":"1655","text":"1654"},{"range":"1656","text":"1654"},{"range":"1657","text":"1654"},{"range":"1658","text":"1654"},{"range":"1659","text":"1654"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["1660"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Input' is defined but never used.","'LabelRibbon' is defined but never used.","'setPredictionValue' is assigned a value but never used.","'setSavingPrediction' is assigned a value but never used.","'setSavingRsult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["1661"],"no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","'Spinner' is defined but never used.","'Message' is defined but never used.","'getAllGenders' is defined but never used.","'patientObj' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'setFacilityName' is assigned a value but never used.","'allFacilities' is assigned a value but never used.","'setAllFacilities' is assigned a value but never used.","'receivingFacility' is assigned a value but never used.","'setReceivingFacility' is assigned a value but never used.","'selectedReceivingState' is assigned a value but never used.","'selectedReceivingFacility' is assigned a value but never used.","'selectedReceivingLga' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProvincesWithId', 'loadGenders', and 'props?.patientObj'. Either include them or remove the dependency array.",["1662"],"'checkPhoneNumberBasic' is assigned a value but never used.","'handleInputChangeObject' is assigned a value but never used.","'limit' is assigned a value but never used.","'handleDateOfBirthChange' is assigned a value but never used.","'hivTestDate' is assigned a value but never used.","'patientAge' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","React Hook useEffect has a missing dependency: 'objValues'. Either include it or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1663"],["1664"],["1665"],["1666"],["1667"],"'fontWeight' is defined but never used.","'getDoubleSkipForm' is defined but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'setClientCodeCheck' is assigned a value but never used.","'facilityShortCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateClientCode', 'country', 'getStates', 'objValues', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1668"],"'useEffect' is defined but never used.","'Cookies' is defined but never used.","'kP' is assigned a value but never used.","'setKP' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'ageDisabled' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'temp' is assigned a value but never used.","'hospitalNumStatus' is assigned a value but never used.","'setHospitalNumStatus' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'targetGroupValue' is assigned a value but never used.","'setTargetGroupValue' is assigned a value but never used.","'contentDropDown' is assigned a value but never used.","'Table' is defined but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'LabelSui' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'provinces' is assigned a value but never used.","'isClientCurrentlyOnHiv' is assigned a value but never used.","'setClientCurrentlyOnHiv' is assigned a value but never used.","'selectedFamilyIndex' is assigned a value but never used.","'setSelectedFamilyIndex' is assigned a value but never used.","'isWillingToHaveChildrenTested' is assigned a value but never used.","'setIsWillingToHaveChildrenTested' is assigned a value but never used.","'setStateInfo' is assigned a value but never used.","'setLgaInfo' is assigned a value but never used.","'arrayFamilyIndexRequestDto' is assigned a value but never used.","'setArrayFamilyIndexRequestDto' is assigned a value but never used.","'arrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'setArrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'addIndexTracker' is assigned a value but never used.","'addIndexTracker2' is assigned a value but never used.","Duplicate key 'recencyTesting'.","'selectedState' is assigned a value but never used.","'selectedFacility' is assigned a value but never used.","'selectedLga' is assigned a value but never used.","'validateAddFamilyINdexDTO' is assigned a value but never used.","'generateIndexClientId' is assigned a value but never used.","'indexClientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1669"],"'getProvinces' is assigned a value but never used.","'handleFamilyRelationshipChange' is assigned a value but never used.","'convertCodeToDisplay' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'validate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TargetGroupSetup' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1670"],"'Button' is defined but never used.","'errors' is assigned a value but never used.","'Badge' is defined but never used.","'PersonIcon' is defined but never used.","'elicitedCount' is assigned a value but never used.","'setElicitedCount' is assigned a value but never used.","'setIsClientCurrentlyOnHiv' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'getPNSInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPartnerId', 'getStates', 'htsClientInformation', 'objValues', 'props?.basicInfo?.personResponseDto?.address?.address', and 'props.organizationInfo'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1671"],"'getAllRecordByHTSClientId' is assigned a value but never used.","'viewPnsInfo' is assigned a value but never used.","'handleItemClickPage' is assigned a value but never used.","'RefferalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'viewReferralInfo'. Either include it or remove the dependency array.",["1672"],"'PNSList' is defined but never used.","Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ageCondition' is assigned a value but never used.","'pmctctModalityCondition' is assigned a value but never used.","'HivStatuscondition' is assigned a value but never used.","'latestNextForm' is assigned a value but never used.","'FaUserPlus' is defined but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["1673"],"'handleIEditIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1674"],"'getProvincesId' is defined but never used.","'handleItemClick' is assigned a value but never used.","'serviceMapping' is assigned a value but never used.",["1675"],["1676"],"'setSelectedReceivingFacility' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStateByCountryId', 'loadGenders', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1677"],"React Hook useEffect has a missing dependency: 'props.row.row.id'. Either include it or remove the dependency array.",["1678"],"'postPayload' is assigned a value but never used.","'toggle' is assigned a value but never used.","'facilities1' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'setSelectedLga' is assigned a value but never used.",["1679"],"'handleInputChangeLocation' is assigned a value but never used.",["1680"],"React Hook useEffect has a missing dependency: 'FetchHivstHistory'. Either include it or remove the dependency array.",["1681"],"'ReferralUnit' is defined but never used.","'set' is defined but never used.","'useState' is defined but never used.",{"range":"1682","text":"1644"},"'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'familIndexInfo' is assigned a value but never used.","'getFamilyIndexInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getListoFFamilyIndexInfo', 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1683"],"'handleSubmitfamilyIndexRequestDto' is assigned a value but never used.","'handleSubmitfamilyTestingTrackerRequestDTO' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject.riskStratificationResponseDto'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject.riskStratificationResponseDto', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject.riskStratificationResponseDto' in the reducer.",["1684"],"'setHivTestDate' is assigned a value but never used.","'partnerId' is assigned a value but never used.","Duplicate key 'numberOfPartnerIdentifiedFromClientIndex'.","'getPartnerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStates', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'viewPnIsnfo'. Either include them or remove the dependency array.",["1685"],["1686"],"'AddIndexContact' is defined but never used.",{"range":"1687","text":"1654"},{"range":"1688","text":"1654"},{"range":"1689","text":"1654"},{"range":"1690","text":"1654"},{"range":"1691","text":"1654"},{"range":"1692","text":"1654"},["1693"],"'latestForm' is assigned a value but never used.",{"range":"1694","text":"1644"},"React Hook useEffect has a missing dependency: 'getListoFFamilyIndexInfo'. Either include it or remove the dependency array.",["1695"],"'resultStatus' is assigned a value but never used.","'setResultStatus' is assigned a value but never used.",["1696"],["1697"],["1698"],["1699"],["1700"],["1701"],"'MatButton' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["1702"],"'handleClientCodeCheck' is assigned a value but never used.","'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","'clientCodeCheck' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateClientCode'. Either include it or remove the dependency array.",["1703"],"'showRiskAssessment' is assigned a value but never used.",["1704"],["1705"],["1706"],["1707"],["1708"],["1709"],{"range":"1710","text":"1654"},{"range":"1711","text":"1654"},{"range":"1712","text":"1654"},{"range":"1713","text":"1654"},{"range":"1714","text":"1654"},{"range":"1715","text":"1654"},["1716"],"'EditIcon' is defined but never used.","'userInfoList' is assigned a value but never used.",["1717"],"React Hook useEffect has missing dependencies: 'loadGenders' and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1718"],["1719"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["1720"],"'m' is assigned a value but never used.",["1721"],"no-global-assign","no-unsafe-negation",[147,161],"token",{"desc":"1722","fix":"1723"},[152,166],{"desc":"1724","fix":"1725"},{"desc":"1726","fix":"1727"},[156,170],[150,164],{"desc":"1728","fix":"1729"},{"desc":"1730","fix":"1731"},[7884,7910],"\"rencencyInterpretation\"",[8174,8200],[8522,8548],[8802,8828],[9081,9107],[9169,9195],{"desc":"1732","fix":"1733"},{"desc":"1734","fix":"1735"},{"desc":"1736","fix":"1737"},{"desc":"1738","fix":"1739"},{"desc":"1740","fix":"1741"},{"desc":"1742","fix":"1743"},{"desc":"1744","fix":"1745"},{"desc":"1746","fix":"1747"},{"desc":"1748","fix":"1749"},{"desc":"1750","fix":"1751"},{"desc":"1752","fix":"1753"},{"desc":"1754","fix":"1755"},{"desc":"1756","fix":"1757"},{"desc":"1758","fix":"1759"},{"desc":"1760","fix":"1761"},{"desc":"1758","fix":"1762"},{"desc":"1758","fix":"1763"},{"desc":"1764","fix":"1765"},{"desc":"1766","fix":"1767"},{"desc":"1766","fix":"1768"},{"desc":"1760","fix":"1769"},{"desc":"1770","fix":"1771"},[185,199],{"desc":"1772","fix":"1773"},{"desc":"1774","fix":"1775"},{"desc":"1776","fix":"1777"},{"desc":"1778","fix":"1779"},[7169,7195],[7459,7485],[7807,7833],[8087,8113],[8366,8392],[8454,8480],{"desc":"1732","fix":"1780"},[191,205],{"desc":"1781","fix":"1782"},{"desc":"1738","fix":"1783"},{"desc":"1740","fix":"1784"},{"desc":"1742","fix":"1785"},{"desc":"1744","fix":"1786"},{"desc":"1746","fix":"1787"},{"desc":"1734","fix":"1788"},{"desc":"1789","fix":"1790"},{"desc":"1791","fix":"1792"},{"desc":"1730","fix":"1793"},{"desc":"1738","fix":"1794"},{"desc":"1740","fix":"1795"},{"desc":"1742","fix":"1796"},{"desc":"1744","fix":"1797"},{"desc":"1746","fix":"1798"},[7958,7984],[8248,8274],[8596,8622],[8876,8902],[9155,9181],[9243,9269],{"desc":"1732","fix":"1799"},{"desc":"1734","fix":"1800"},{"desc":"1801","fix":"1802"},{"desc":"1758","fix":"1803"},{"desc":"1804","fix":"1805"},{"desc":"1758","fix":"1806"},"Update the dependencies array to be: [locationState]",{"range":"1807","text":"1808"},"Update the dependencies array to be: [getServiceCode]",{"range":"1809","text":"1810"},"Update the dependencies array to be: [PatientCurrentObject, props]",{"range":"1811","text":"1812"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"1813","text":"1814"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"1815","text":"1816"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"1817","text":"1818"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"1819","text":"1820"},"Update the dependencies array to be: [getProvincesWithId, loadGenders, props?.patientObj]",{"range":"1821","text":"1822"},"Update the dependencies array to be: [initialTest1.result, objValues]",{"range":"1823","text":"1824"},"Update the dependencies array to be: [confirmatoryTest.result, objValues]",{"range":"1825","text":"1826"},"Update the dependencies array to be: [objValues, tieBreakerTest.result]",{"range":"1827","text":"1828"},"Update the dependencies array to be: [initialTest12.result2, objValues]",{"range":"1829","text":"1830"},"Update the dependencies array to be: [confirmatoryTest2.result2, objValues]",{"range":"1831","text":"1832"},"Update the dependencies array to be: [objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",{"range":"1833","text":"1834"},"Update the dependencies array to be: [loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1835","text":"1836"},"Update the dependencies array to be: [TargetGroupSetup, objValues.age, props]",{"range":"1837","text":"1838"},"Update the dependencies array to be: [getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1839","text":"1840"},"Update the dependencies array to be: [viewReferralInfo]",{"range":"1841","text":"1842"},"Update the dependencies array to be: [patients]",{"range":"1843","text":"1844"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"1845","text":"1846"},{"range":"1847","text":"1844"},{"range":"1848","text":"1844"},"Update the dependencies array to be: [getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1849","text":"1850"},"Update the dependencies array to be: [props.row.row.id]",{"range":"1851","text":"1852"},{"range":"1853","text":"1852"},{"range":"1854","text":"1846"},"Update the dependencies array to be: [FetchHivstHistory, props.patientObj]",{"range":"1855","text":"1856"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1857","text":"1858"},"Update the dependencies array to be: [props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",{"range":"1859","text":"1860"},"Update the dependencies array to be: [getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",{"range":"1861","text":"1862"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"1863","text":"1864"},{"range":"1865","text":"1818"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, props.patientObj]",{"range":"1866","text":"1867"},{"range":"1868","text":"1824"},{"range":"1869","text":"1826"},{"range":"1870","text":"1828"},{"range":"1871","text":"1830"},{"range":"1872","text":"1832"},{"range":"1873","text":"1820"},"Update the dependencies array to be: [props.activePage.activeObject, props?.patientObj]",{"range":"1874","text":"1875"},"Update the dependencies array to be: [props.patientObj, facilityCode, CreateClientCode]",{"range":"1876","text":"1877"},{"range":"1878","text":"1816"},{"range":"1879","text":"1824"},{"range":"1880","text":"1826"},{"range":"1881","text":"1828"},{"range":"1882","text":"1830"},{"range":"1883","text":"1832"},{"range":"1884","text":"1818"},{"range":"1885","text":"1820"},"Update the dependencies array to be: [loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1886","text":"1887"},{"range":"1888","text":"1844"},"Update the dependencies array to be: [getStates]",{"range":"1889","text":"1890"},{"range":"1891","text":"1844"},[8162,8164],"[locationState]",[4487,4489],"[getServiceCode]",[2678,2680],"[PatientCurrentObject, props]",[2300,2336],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[5693,5735],"[props.patientObj, postTest.hivTestResult, postTest]",[10031,10145],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[7477,7495],"[knowledgeAssessment, props.patientObj, riskAssessment]",[7317,7319],"[getProvincesWithId, loadGenders, props?.patientObj]",[16388,16409],"[initialTest1.result, objValues]",[16929,16954],"[confirmatoryTest.result, objValues]",[17400,17423],"[objValues, tieBreakerTest.result]",[17675,17698],"[initialTest12.result2, objValues]",[17875,17902],"[confirmatoryTest2.result2, objValues]",[14566,14630],"[objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",[16668,16670],"[loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[5689,5704],"[TargetGroupSetup, objValues.age, props]",[11352,11370],"[getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[5804,5806],"[viewReferralInfo]",[3841,3843],"[patients]",[4161,4179],"[getStates, props.patientObj]",[3914,3916],[4178,4180],[7842,7844],"[getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[12997,12999],"[props.row.row.id]",[6733,6735],[4161,4179],[3739,3757],"[FetchHivstHistory, props.patientObj]",[19343,19345],"[getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[5730,5748],"[props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",[11349,11367],"[getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",[7227,7245],"[postTest, props.patientObj]",[9351,9465],[4570,4588],"[getListoFFamilyIndexInfo, props.patientObj]",[17661,17682],[18288,18313],[18826,18849],[19146,19169],[19371,19398],[7175,7193],[5308,5326],"[props.activePage.activeObject, props?.patientObj]",[8075,8107],"[props.patientObj, facilityCode, CreateClientCode]",[6403,6445],[15054,15075],[15595,15620],[16066,16089],[16341,16364],[16541,16568],[9291,9405],[7254,7272],[6959,6961],"[loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[3841,3843],[4331,4333],"[getStates]",[3841,3843]]