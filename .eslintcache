[{"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\index.js":"1","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\App.js":"2","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"5","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"9","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"10","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"11","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"12","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"13","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"14","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"15","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"16","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"17","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"18","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"19","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"20","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\api.js":"21","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"22","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"23","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"24","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"25","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"26","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"27","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"28","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"29","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\History.js":"30","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"31","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"32","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"33","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"34","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"35","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"36","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"37","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"38","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"39","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"40","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"41","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"42","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"43","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"44"},{"size":739,"mtime":1663427910628,"results":"45","hashOfConfig":"46"},{"size":1311,"mtime":1663427910628,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1663427915005,"results":"48","hashOfConfig":"46"},{"size":9235,"mtime":1663427911468,"results":"49","hashOfConfig":"46"},{"size":3803,"mtime":1668092256103,"results":"50","hashOfConfig":"46"},{"size":2228,"mtime":1663427914940,"results":"51","hashOfConfig":"46"},{"size":3056,"mtime":1663427911469,"results":"52","hashOfConfig":"46"},{"size":18157,"mtime":1668090384678,"results":"53","hashOfConfig":"46"},{"size":8326,"mtime":1667908138550,"results":"54","hashOfConfig":"46"},{"size":11301,"mtime":1668142856556,"results":"55","hashOfConfig":"46"},{"size":14830,"mtime":1667910269647,"results":"56","hashOfConfig":"46"},{"size":30786,"mtime":1668142116619,"results":"57","hashOfConfig":"46"},{"size":56529,"mtime":1668141769909,"results":"58","hashOfConfig":"46"},{"size":79179,"mtime":1668142088292,"results":"59","hashOfConfig":"46"},{"size":1717,"mtime":1667555234372,"results":"60","hashOfConfig":"46"},{"size":32023,"mtime":1668142103070,"results":"61","hashOfConfig":"46"},{"size":66720,"mtime":1668141732765,"results":"62","hashOfConfig":"46"},{"size":12827,"mtime":1664604640078,"results":"63","hashOfConfig":"46"},{"size":61153,"mtime":1668142126983,"results":"64","hashOfConfig":"46"},{"size":3029,"mtime":1668093099975,"results":"65","hashOfConfig":"46"},{"size":424,"mtime":1668144404990,"results":"66","hashOfConfig":"46"},{"size":33708,"mtime":1667907097934,"results":"67","hashOfConfig":"46"},{"size":30150,"mtime":1668143348270,"results":"68","hashOfConfig":"46"},{"size":32861,"mtime":1667489040688,"results":"69","hashOfConfig":"46"},{"size":1977,"mtime":1667366478524,"results":"70","hashOfConfig":"46"},{"size":12827,"mtime":1664605065959,"results":"71","hashOfConfig":"46"},{"size":60868,"mtime":1667533145412,"results":"72","hashOfConfig":"46"},{"size":64450,"mtime":1668143127671,"results":"73","hashOfConfig":"46"},{"size":17583,"mtime":1668092059156,"results":"74","hashOfConfig":"46"},{"size":7229,"mtime":1667373195616,"results":"75","hashOfConfig":"46"},{"size":8631,"mtime":1666944259899,"results":"76","hashOfConfig":"46"},{"size":34058,"mtime":1668141656027,"results":"77","hashOfConfig":"46"},{"size":50257,"mtime":1668141403187,"results":"78","hashOfConfig":"46"},{"size":32026,"mtime":1668142171818,"results":"79","hashOfConfig":"46"},{"size":30859,"mtime":1668142190957,"results":"80","hashOfConfig":"46"},{"size":12827,"mtime":1664604384293,"results":"81","hashOfConfig":"46"},{"size":78653,"mtime":1668142180971,"results":"82","hashOfConfig":"46"},{"size":35303,"mtime":1668141456585,"results":"83","hashOfConfig":"46"},{"size":60047,"mtime":1668142200008,"results":"84","hashOfConfig":"46"},{"size":2014,"mtime":1667555283060,"results":"85","hashOfConfig":"46"},{"size":8631,"mtime":1666944259899,"results":"86","hashOfConfig":"46"},{"size":34058,"mtime":1668141506296,"results":"87","hashOfConfig":"46"},{"size":8631,"mtime":1667367097179,"results":"88","hashOfConfig":"46"},{"size":33445,"mtime":1664604967218,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lswsll",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":7,"source":"140","usedDeprecatedRules":"135"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"135"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"135"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"135"},"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\index.js",["186"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\App.js",["187"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["188","189"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Home.js",["190","191","192","193","194"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["195","196","197","198","199","200","201","202","203"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["204","205","206","207","208","209","210","211","212"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["213","214","215","216","217"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["218","219","220","221","222","223"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["224","225","226","227","228"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["281","282"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["316","317","318","319","320","321","322","323","324","325"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["326","327","328","329","330","331","332"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["333","334","335"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    //console.log(props.activePage)\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [hideNumChild, setHideNumChild] = useState(false);\r\n    const [kP, setKP] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [gender, setGender] = useState([])\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    let temp = { ...errors }\r\n    //console.log(props.patientObj)\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            active: true,\r\n            clientCode: \"\",\r\n            age:\"\",\r\n            dob:\"\",\r\n            breastFeeding:\"\",\r\n            dateVisit: \"\",\r\n            firstTimeVisit: null,\r\n            indexClient: null,\r\n            numChildren: \"\",\r\n            numWives: \"\",\r\n            pregnant:\"\",            \r\n            dateOfBirth: null,\r\n            dateOfRegistration:null,\r\n            deceased: true,\r\n            deceasedDateTime: null,\r\n            educationId: \"\",\r\n            employmentStatusId: \"\",\r\n            facilityId: \"\",\r\n            firstName: \"\",\r\n            genderId: \"\",\r\n            address: \"\",\r\n            phoneNumber:\"\",           \r\n            isDateOfBirthEstimated: \"\",\r\n            maritalStatusId: \"\",\r\n            organizationId:\"\",\r\n            otherName: \"\",\r\n            sexId: \"\",\r\n            state:null,\r\n            lga:\"\",\r\n            surname: \"\",\r\n            previouslyTested: \"\",\r\n            referredFrom: \"\",\r\n            targetGroup: \"\",\r\n            testingSetting:\"\",\r\n            typeCounseling: \"\",\r\n            relationshipWithIndexClient:\"\",\r\n            indexClientCode:\"\"\r\n        }\r\n    )\r\n\r\n    useEffect(() => { \r\n        KP(); \r\n        EnrollmentSetting(); \r\n        SourceReferral();\r\n        Genders();\r\n        CounselingType();\r\n        PregnancyStatus()\r\n        IndexTesting();\r\n        setObjValues(props.patientObj)\r\n        // if(props.patientObj){\r\n        //     objValues.referredFrom=props.patientObj.referredFrom\r\n        // }\r\n        //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\r\n        //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\r\n    }, [props.patientObj]);\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n     //Get list of IndexTesting\r\n     const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    \r\n    //Get list of KP\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of Genders from \r\n    const Genders =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setGender(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        \r\n            temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\r\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.targetGroup = objValues.targetGroup!==\"\"  ? \"\" : \"This field is required.\"\r\n            temp.referredFrom = objValues.referredFrom!==\"\"  ? \"\" : \"This field is required.\"\r\n            temp.previouslyTested = objValues.previouslyTested!==\"\"  ? \"\" : \"This field is required.\" \r\n            temp.indexClient = objValues.indexClient!==\"\"  ? \"\" : \"This field is required.\"  \r\n            temp.firstTimeVisit = objValues.firstTimeVisit!==\"\" ? \"\" : \"This field is required.\" \r\n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(props.activePage.actionType==='update'){\r\n        //e.preventDefault();\r\n            const patientForm ={\r\n            clientCode: objValues.clientCode,\r\n            dateVisit: objValues.dateVisit,\r\n            extra: {},\r\n            firstTimeVisit: objValues.firstTimeVisit,\r\n            indexClient: objValues.indexClient,\r\n            numChildren: objValues.numChildren,\r\n            numWives: objValues.numWives,\r\n            personId: props.patientObj.personId,\r\n            hospitalNumber:objValues.clientCode,\r\n            previouslyTested: objValues.previouslyTested,\r\n            referredFrom: objValues.referredFrom,\r\n            targetGroup: objValues.targetGroup,\r\n            testingSetting: objValues.testingSetting,\r\n            typeCounseling:objValues.typeCounseling,\r\n            breastFeeding:objValues.breastFeeding,\r\n            pregnant:objValues.pregnant,\r\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient\r\n            }\r\n\r\n            if(validate()){\r\n            axios.put(`${baseUrl}hts/${props.patientObj.id}`,patientForm,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                toast.success(\"HTS Test successful\");\r\n                if(props.patientAge>14){\r\n                    handleItemClick('pre-test-counsel', 'basic' )\r\n                }else{\r\n                    handleItemClick('hiv-test', 'basic')\r\n                }\r\n               \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            }\r\n        }\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            if(props.patientAge >14){\r\n                handleItemClick('pre-test-counsel', 'basic' )\r\n            }else{\r\n                handleItemClick('hiv-test', 'pre-test-counsel')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM </h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Client Code *</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"clientCode\"\r\n                                    id=\"clientCode\"\r\n                                    value={objValues.clientCode}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                {errors.clientCode !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientCode}</span>\r\n                                ) : \"\" }                                \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Referred From *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredFrom\"\r\n                                        id=\"referredFrom\"\r\n                                        value={objValues.referredFrom}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sourceReferral.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.referredFrom !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.referredFrom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Setting*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateVisit\"\r\n                                    id=\"dateVisit\"\r\n                                    value={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                    onChange={handleInputChange}\r\n                                    min={objValues.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n                             {(objValues.age > 9 && objValues.sexId=='376') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of wives/co-wives</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numWives\"\r\n                                        id=\"numWives\"\r\n                                        min={0}\r\n                                        value={objValues.numWives}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {(objValues.age>9 ) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of Children {'<5'} years</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numChildren\"\r\n                                        id=\"numChildren\"\r\n                                        min={0}\r\n                                        value={objValues.numChildren}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    /> \r\n                                     \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Index Testing</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"indexClient\"\r\n                                        id=\"indexClient\"\r\n                                        value={objValues.indexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.indexClient !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.indexClient}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.indexClient==='true' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship of the index client</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relationshipWithIndexClient\"\r\n                                        id=\"relationshipWithIndexClient\"\r\n                                        value={objValues.relationshipWithIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                             <div className=\"form-group  col-md-4\">\r\n                             <FormGroup>\r\n                                 <Label>Index Client Code/ID</Label>\r\n                                 <Input\r\n                                     type=\"text\"\r\n                                     name=\"indexClientCode\"\r\n                                     id=\"indexClientCode\"\r\n                                     value={objValues.indexClientCode}\r\n                                     onChange={handleInputChange}\r\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                \r\n                                 />\r\n                                   \r\n                             </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                            {objValues.sex==='377' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Pregnant</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"pregnant\"\r\n                                        id=\"pregnant\"\r\n                                        value={objValues.pregnant}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>First time visit</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"firstTimeVisit\"\r\n                                        id=\"firstTimeVisit\"\r\n                                        value={objValues.firstTimeVisit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.firstTimeVisit !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTested\"\r\n                                        id=\"previouslyTested\"\r\n                                        value={objValues.previouslyTested}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTested !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Type of Counseling</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeCounseling\"\r\n                                        id=\"typeCounseling\"\r\n                                        value={objValues.typeCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.typeCounseling !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            {props.activePage.actionType==='update' && (\r\n                                <Button content='Update & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                            {props.activePage.actionType==='view' && (\r\n                                <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                            \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n                                  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo",["353","354"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["355","356","357","358","359"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    let temp = { ...errors }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            recency: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [recency, setRecency]= useState(\r\n        {\r\n            optOutRTRI:\"\", \r\n            optOutRTRITestName:\"\", \r\n            optOutRTRITestDate:\"\", \r\n            rencencyId:\"\",  \r\n            controlLine:\"\",  \r\n            verififcationLine:\"\", \r\n            longTermLine:\"\",  \r\n            rencencyInterpretation:\"\", \r\n            hasViralLoad:\"\",\r\n            sampleCollectedDate:\"\",\r\n            sampleReferanceNumber:\"\",\r\n            dateSampleSentToPCRLab:\"\",\r\n            sampleTestDate:\"\", \r\n            receivingPcrLab:\"\",\r\n            sampleType:\"\", \r\n            viralLoadResultClassification:\"\",\r\n            recencyResult:\"\", \r\n            finalRecencyResult:\"\", \r\n        }\r\n    )\r\n    const handleInputChangeRecency = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        if(e.target.name ==='viralLoadResultClassification'){\r\n            \r\n            if(e.target.value ==='>=1000'){\r\n                recency.finalRecencyResult='RITA Recent'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            \r\n            }else if(e.target.value ==='<1000') {\r\n                recency.finalRecencyResult='RITA Long term'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Failed run') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Invalid viral load result') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else{\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }\r\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\r\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\r\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\r\n        }else {\r\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n        }\r\n         \r\n    }\r\n    const checkRecencyLimit=(e)=>{\r\n        const limit = 10;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    useEffect(() => { \r\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Long Term\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \r\n            //console.log(\"Long Term\")\r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Recent\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\r\n            setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n            \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Negative\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\r\n            //console.log(\"Negative\")\r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            //console.log(\"Invalid\")\r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            //console.log(\"Invalid\")\r\n        }else{\r\n            //console.log(\"empty\")\r\n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\r\n        }\r\n\r\n\r\n    }, [recency.longTermLine,recency.verififcationLine, recency.controlLine]);\r\n    useEffect(() => { \r\n        if(props.patientObj){\r\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\r\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\r\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n        setRecency ({recency, ...props.patientObj.recency}) \r\n        \r\n\r\n    }, [ props.patientObj]);\r\n   //console.log(props.patientObj)\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            {objValues.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = objValues.sampleReferanceNumber ? \"\" : \"This field is required.\")}\r\n            {objValues.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = objValues.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n            {objValues.sampleCollectedDate!=='' && (temp.sampleType = objValues.sampleType ? \"\" : \"This field is required.\")}\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            handleItemClick('indexing', 'recency-testing' )\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n        \r\n        if(validate()){\r\n            objValues.htsClientId= clientId\r\n            objValues.recency= recency\r\n            objValues.personId= patientID\r\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('indexing', 'recency-testing' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        } \r\n        }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>               \r\n                <h2>RECENCY FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\r\n                        </LabelRibbon>\r\n                        <br/><br/><br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Opt Out of RTRI?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRI\"\r\n                                        id=\"optOutRTRI\"\r\n                                        value={recency.optOutRTRI}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-8\"></div>\r\n                            {recency.optOutRTRI==='false' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Name *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRITestName\"\r\n                                        id=\"optOutRTRITestName\"\r\n                                        value={recency.optOutRTRITestName}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Asante\">Asante</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Date *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"optOutRTRITestDate\"\r\n                                        id=\"optOutRTRITestDate\"\r\n                                        value={recency.optOutRTRITestDate}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency ID *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyId\"\r\n                                        id=\"rencencyId\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyId}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                        \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Control Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"controlLine\"\r\n                                        id=\"controlLine\"\r\n                                        value={recency.controlLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Verification Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"verififcationLine\"\r\n                                        id=\"verififcationLine\"\r\n                                        value={recency.verififcationLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Long Term Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"longTermLine\"\r\n                                        id=\"longTermLine\"\r\n                                        value={recency.longTermLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency Interpretation *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyInterpretation\"\r\n                                        id=\"rencencyInterpretation\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyInterpretation}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                       \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {recency.rencencyInterpretation==='Recent' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has viral load request been made? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasViralLoad\"\r\n                                        id=\"hasViralLoad\"\r\n                                        value={recency.hasViralLoad}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {recency.hasViralLoad==='true' && (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <h4>Viral Load Classification :</h4>\r\n                                    <br/>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Collected Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleCollectedDate\"\r\n                                            id=\"sampleCollectedDate\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.sampleCollectedDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                    \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Refernce Number</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleReferanceNumber\"\r\n                                            id=\"sampleReferanceNumber\"\r\n                                            type=\"text\"\r\n                                            value={recency.sampleReferanceNumber}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                         {errors.sampleReferanceNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Type</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleType\"\r\n                                            id=\"sampleType\"\r\n                                            value={recency.sampleType}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"DBS\">DBS</option>\r\n                                            <option value=\"Plasma\">Plasma</option>\r\n                                            \r\n                                        </select>\r\n                                        {errors.sampleType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleType}</span>\r\n                                        ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Date Sample Sent to PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"dateSampleSentToPCRLab\"\r\n                                            id=\"dateSampleSentToPCRLab\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.dateSampleSentToPCRLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        {errors.dateSampleSentToPCRLab !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Test Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleTestDate\"\r\n                                            id=\"sampleTestDate\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.sampleTestDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Receiving PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"receivingPcrLab\"\r\n                                            id=\"receivingPcrLab\"\r\n                                            type=\"text\"\r\n                                            value={recency.receivingPcrLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"viralLoadResultClassification\"\r\n                                            id=\"viralLoadResultClassification\"\r\n                                            value={recency.viralLoadResultClassification}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\r\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\r\n                                            <option value=\"Failed run\">Failed run</option>\r\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\r\n                                        </select>\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Final Recency Result</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"finalRecencyResult\"\r\n                                            id=\"finalRecencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.finalRecencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                            </>)}\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\r\n                            {props.activePage.actionType==='update' && (\r\n                            <Button content='Update & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                            {props.activePage.actionType==='view' && (\r\n                                <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                            \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["377","378","379","380","381"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=()=>{\r\n      props.setActivePage({...props.activePage, activePage:\"home\",})\r\n    }\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["382","383","384","385","386","387","388","389","390","391"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["392","393","394","395","396","397"],"import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst HivTestResult = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    console.log(props.patientObj)\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth : 0).format(\"DD-MM-YYYY\"))\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            confirmatoryTest: {},\r\n            confirmatoryTest2: {},\r\n            hivTestResult: \"\",\r\n            hivTestResult2: \"\",\r\n            htsClientId:\"\",\r\n            personId: props.patientObj  ? props.patientObj.id : \"\",\r\n            test1: {},\r\n            test2: {},\r\n            tieBreakerTest: {},\r\n            tieBreakerTest2: {},\r\n            syphilisTesting:{},\r\n            hepatitisTesting:{},\r\n            others:{},\r\n            cd4:{},\r\n        }\r\n    )\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [initialTest1, setInitailTest]= useState(\r\n        {\r\n            date:\"\",\r\n            result:\"\",            \r\n        }\r\n    )\r\n    const [initialTest12, setInitailTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeCd4Count = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [cd4Count, setCd4Count]= useState(\r\n        {\r\n            cd4Count:\"\",\r\n            cd4SemiQuantitative:\"\",\r\n            cd4FlowCyteometry:\"\"            \r\n        }\r\n    )\r\n    const handleInputChangeInitial = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.value==='No'){\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value}); \r\n            setConfirmatoryTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n                \r\n        }else{\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true)\r\n        }            \r\n    }\r\n    const handleInputChangeInitial2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        if(e.target.value==='No'){\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});  \r\n            setConfirmatoryTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true) \r\n        }           \r\n    }\r\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [confirmatoryTest2, setConfirmatoryTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeConfirmatory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section \r\n        if(initialTest1.result==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }              \r\n    }\r\n    const handleInputChangeConfirmatory2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest2 ({...confirmatoryTest2,  [e.target.name]: e.target.value}); \r\n        //This is to show cd4 count section \r\n        if(initialTest12.result2==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                 \r\n    }\r\n    const [tieBreakerTest, setTieBreakerTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [tieBreakerTest2, setTieBreakerTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeTie = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});  \r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest.result==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest.result==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }         \r\n    }\r\n    const handleInputChangeTie2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest2 ({...tieBreakerTest2,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest2.result2==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest2.result2==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                     \r\n    }\r\n    const [syphills, setSyphills]= useState(\r\n        {\r\n            syphilisTestResult :\"\",\r\n           // result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeSyphills = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [hepatitis, setHepatitis]= useState(\r\n        {\r\n            hepatitisCTestResult :\"\",\r\n            hepatitisBTestResult  :\"\", \r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    const handleInputChangeHepatitis = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [others, setOthers]= useState(\r\n        {\r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj){\r\n            setCd4Count(props.patientObj  && props.patientObj.cd4!==null? props.patientObj.cd4 : {})\r\n            setInitailTest(props.patientObj  && props.patientObj.test1!==null? props.patientObj.test1 : {})\r\n            setConfirmatoryTest(props.patientObj  && props.patientObj.confirmatoryTest!==null? props.patientObj.confirmatoryTest : {})\r\n            setTieBreakerTest(props.patientObj && props.patientObj.tieBreakerTest!==null ? props.patientObj.tieBreakerTest : {})\r\n            setSyphills(props.patientObj  && props.patientObj.syphilisTesting!==null ? props.patientObj.syphilisTesting : {})\r\n            setHepatitis(props.patientObj  && props.patientObj.hepatitisTesting!==null ? props.patientObj.hepatitisTesting : {})\r\n            setOthers(props.patientObj  && props.patientObj.others!==null ? props.patientObj.others : {})\r\n            \r\n            setInitailTest2(props.patientObj  && props.patientObj.test2!==null? props.patientObj.test2 : {})\r\n            setConfirmatoryTest2(props.patientObj  && props.patientObj.confirmatoryTest2!==null? props.patientObj.confirmatoryTest2 : {})\r\n            setTieBreakerTest2(props.patientObj && props.patientObj.tieBreakerTest2!==null ? props.patientObj.tieBreakerTest2 : {})\r\n            //Logic for cd4 count section to show\r\n            if(props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult==='Positive'){\r\n                setShowCD4Count(true)\r\n            }else{\r\n                setShowCD4Count(false)\r\n            }\r\n            if(props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2!==\"\" && props.patientObj.hivTestResult2==='Positive'){\r\n                setShowCD4Count(true)\r\n            }else{\r\n                setShowCD4Count(false)\r\n            }\r\n        }\r\n    }, [props.patientObj]);//initialTest12, tieBreakerTest2, confirmatoryTest2, \r\n\r\n    const handleInputChangeOthers = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setOthers ({...others,  [e.target.name]: e.target.value});            \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date!==\"\" &&  (temp.date = initialTest1.result ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n              \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(validate()){\r\n                    //logic to get Hiv result test\r\n        if(initialTest12.result2==='No' ){\r\n            objValues.hivTestResult2=\"Negative\"\r\n        }else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }\r\n        // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n        //     objValues.hivTestResult2=\"Negative\" \r\n        // }\r\n        else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No'){\r\n            objValues.hivTestResult2=\"Negative\" \r\n        }else{\r\n            objValues.hivTestResult2=\"\"\r\n        }\r\n      \r\n        if(initialTest1.result==='No' ){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else if(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }\r\n        // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n        //     objValues.hivTestResult=\"Negative\"\r\n        // }\r\n        else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='No'){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else{\r\n            objValues.hivTestResult=\"\"\r\n        }\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n        handleItemClick('post-test', 'hiv-test')\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n            objValues.htsClientId= clientId\r\n            objValues.confirmatoryTest= confirmatoryTest\r\n            objValues.confirmatoryTest2= confirmatoryTest2\r\n            objValues.personId= patientID\r\n            objValues.test1= initialTest1\r\n            objValues.test2= initialTest12\r\n            objValues.tieBreakerTest=tieBreakerTest\r\n            objValues.tieBreakerTest2=tieBreakerTest2\r\n            objValues.syphilisTesting=syphills\r\n            objValues.hepatitisTesting=hepatitis\r\n           \r\n            objValues.cd4=cd4Count\r\n            objValues.others=others\r\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                console.log(response.data)\r\n                //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                //toast.success(\"HIV test successful\");\r\n                handleItemClick('post-test', 'hiv-test')\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }\r\n    }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\r\n                        </LabelRibbon>\r\n                           <br/>\r\n                           <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial HIV Test 1:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={initialTest1.date}\r\n                                    onChange={handleInputChangeInitial}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.date !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.date}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={initialTest1.result}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={ initialTest1.date===\"\"? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.result !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.result}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result ==='Yes' && (\r\n                            <>\r\n                            <h4>Confirmatory Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={confirmatoryTest.date}\r\n                                    onChange={handleInputChangeConfirmatory}\r\n                                    min={initialTest1.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.dateOfEac1 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {confirmatoryTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={confirmatoryTest.result}\r\n                                        onChange={handleInputChangeConfirmatory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={confirmatoryTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                            )}\r\n                            {confirmatoryTest.result ==='No' && (\r\n                            <>\r\n                            <h4>Tie Breaker Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={tieBreakerTest.date}\r\n                                    onChange={handleInputChangeTie}\r\n                                    min={confirmatoryTest.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                            </div>\r\n                            {tieBreakerTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={tieBreakerTest.result}\r\n                                        onChange={handleInputChangeTie}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={tieBreakerTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n\r\n                            </>)}\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-12\">  \r\n                                {initialTest1.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}                       \r\n                                {initialTest1.result==='No' && confirmatoryTest.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                    Negative\r\n                                </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={confirmatoryTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                   \r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {/* This is result for Test 1 */}\r\n                                {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (<>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                   \r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={ tieBreakerTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' && (initialTest1.result==='Yes' || initialTest1.result==='Yes' || initialTest1.result==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                 {/* END of  result for Test 1 */}\r\n                                {/* This is result for Test 2 */}\r\n                                {initialTest12.result2==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} \r\n                                {initialTest12.result2==='No' && confirmatoryTest2.result2==='No'  && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    </>\r\n                                )}\r\n                                {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes' ) && (\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No' && (initialTest12.result2==='Yes' || initialTest12.result2==='Yes' || initialTest12.result2==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                 {/* END of  result for Test 2*/}\r\n                            </div>\r\n                            </div>\r\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (<>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4Count\"\r\n                                        id=\"cd4Count\"\r\n                                        value={cd4Count.cd4Count}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\r\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count Value</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4SemiQuantitative\"\r\n                                        id=\"cd4SemiQuantitative\"\r\n                                        value={cd4Count.cd4SemiQuantitative}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\r\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">CD4 Count Value</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"cd4FlowCyteometry\"\r\n                                    id=\"cd4FlowCyteometry\"\r\n                                    value={cd4Count.cd4FlowCyteometry}\r\n                                    onChange={handleInputChangeCd4Count}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                 \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-7\"></div>\r\n                           \r\n                            </>)}\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                        <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n \r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    value={others.longitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    value={others.latitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    value={others.adhocCode}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            {patientAge<=15 ? \r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\r\n                            </>)\r\n                            :\r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\r\n                            </>)\r\n                            }\r\n                            {props.activePage.actionType==='update' && (\r\n                            <Button content='Update & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                            {props.activePage.actionType==='view' && (\r\n                                <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            )}\r\n                           \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["398","399","400","401","402","403","404","405","406"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["407","408","409","410","411","412","413","414","415","416"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\History.js",["417","418","419","420","421","422","423","424","425"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["426","427","428","429","430","431","432","433"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["434","435","436","437","438","439","440","441","442","443"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["444","445","446","447","448","449","450","451","452","453"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["470","471","472","473","474"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["475","476","477","478","479","480","481","482","483","484"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["539","540","541","542","543"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["544","545","546","547","548"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["549","550","551","552","553","554","555","556"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["557","558","559","560","561","562","563","564","565","566"],"C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["567","568","569","570","571","572","573","574"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of index client \"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n              { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["575","576","577","578","579","580","581","582","583","584"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n    }, []);\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();     \r\n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\");\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={objValues.middleName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={objValues.lastName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number</Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Alternative Phone Number</Label>\r\n                                <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"altPhoneNumber\"\r\n                                        id=\"altPhoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.altPhoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={objValues.address}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Hang-out spots</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hangOutSpots\"\r\n                                    id=\"hangOutSpots\"\r\n                                    value={objValues.hangOutSpots}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship to Index Client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relativeToIndexClient\"\r\n                                        id=\"relativeToIndexClient\"\r\n                                        value={objValues.relativeToIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you currently live with this partner? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyLiveWithPartner\"\r\n                                        id=\"currentlyLiveWithPartner\"\r\n                                        value={objValues.currentlyLiveWithPartner}\r\n                                        onChange={handleInputChange}        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value={\"true\"}>Yes</option>\r\n                                        <option value={\"false\"}>No</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerTestedPositive\"\r\n                                        id=\"partnerTestedPositive\"\r\n                                        value={objValues.partnerTestedPositive}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                       {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"physicalHurt\"\r\n                                        id=\"physicalHurt\"\r\n                                        value={objValues.physicalHurt}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"threatenToHurt\"\r\n                                        id=\"threatenToHurt\"\r\n                                        value={objValues.threatenToHurt}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                       {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexuallyUncomfortable\"\r\n                                        id=\"sexuallyUncomfortable\"\r\n                                        value={objValues.sexuallyUncomfortable}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Notification Method selected*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"notificationMethod\"\r\n                                        id=\"notificationMethod\"\r\n                                        value={objValues.notificationMethod}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {notificationContact.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"datePartnerCameForTesting\"\r\n                                    id=\"datePartnerCameForTesting\"\r\n                                    value={objValues.datePartnerCameForTesting}\r\n                                    onChange={handleInputChange}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact",{"ruleId":"585","severity":1,"message":"586","line":4,"column":10,"nodeType":"587","messageId":"588","endLine":4,"endColumn":23},{"ruleId":"585","severity":1,"message":"589","line":3,"column":19,"nodeType":"587","messageId":"588","endLine":3,"endColumn":25},{"ruleId":"585","severity":1,"message":"590","line":10,"column":12,"nodeType":"587","messageId":"588","endLine":10,"endColumn":15},{"ruleId":"585","severity":1,"message":"591","line":10,"column":17,"nodeType":"587","messageId":"588","endLine":10,"endColumn":21},{"ruleId":"585","severity":1,"message":"592","line":2,"column":10,"nodeType":"587","messageId":"588","endLine":2,"endColumn":20},{"ruleId":"585","severity":1,"message":"590","line":3,"column":27,"nodeType":"587","messageId":"588","endLine":3,"endColumn":30},{"ruleId":"585","severity":1,"message":"591","line":3,"column":32,"nodeType":"587","messageId":"588","endLine":3,"endColumn":36},{"ruleId":"585","severity":1,"message":"593","line":16,"column":12,"nodeType":"587","messageId":"588","endLine":16,"endColumn":15},{"ruleId":"585","severity":1,"message":"594","line":16,"column":17,"nodeType":"587","messageId":"588","endLine":16,"endColumn":23},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"596","line":5,"column":25,"nodeType":"587","messageId":"588","endLine":5,"endColumn":30},{"ruleId":"585","severity":1,"message":"597","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":25},{"ruleId":"585","severity":1,"message":"598","line":12,"column":22,"nodeType":"587","messageId":"588","endLine":12,"endColumn":28},{"ruleId":"585","severity":1,"message":"599","line":25,"column":7,"nodeType":"587","messageId":"588","endLine":25,"endColumn":16},{"ruleId":"585","severity":1,"message":"600","line":42,"column":12,"nodeType":"587","messageId":"588","endLine":42,"endColumn":18},{"ruleId":"585","severity":1,"message":"601","line":42,"column":20,"nodeType":"587","messageId":"588","endLine":42,"endColumn":29},{"ruleId":"602","severity":1,"message":"603","line":253,"column":8,"nodeType":"604","endLine":253,"endColumn":10,"suggestions":"605"},{"ruleId":"606","severity":1,"message":"607","line":300,"column":43,"nodeType":"608","messageId":"609","endLine":300,"endColumn":45},{"ruleId":"585","severity":1,"message":"610","line":6,"column":8,"nodeType":"587","messageId":"588","endLine":6,"endColumn":29},{"ruleId":"585","severity":1,"message":"611","line":8,"column":8,"nodeType":"587","messageId":"588","endLine":8,"endColumn":29},{"ruleId":"585","severity":1,"message":"612","line":9,"column":8,"nodeType":"587","messageId":"588","endLine":9,"endColumn":22},{"ruleId":"585","severity":1,"message":"613","line":11,"column":8,"nodeType":"587","messageId":"588","endLine":11,"endColumn":15},{"ruleId":"585","severity":1,"message":"614","line":67,"column":9,"nodeType":"587","messageId":"588","endLine":67,"endColumn":20},{"ruleId":"585","severity":1,"message":"615","line":68,"column":22,"nodeType":"587","messageId":"588","endLine":68,"endColumn":35},{"ruleId":"602","severity":1,"message":"616","line":71,"column":6,"nodeType":"604","endLine":71,"endColumn":24,"suggestions":"617"},{"ruleId":"606","severity":1,"message":"607","line":105,"column":74,"nodeType":"608","messageId":"609","endLine":105,"endColumn":76},{"ruleId":"606","severity":1,"message":"607","line":110,"column":73,"nodeType":"608","messageId":"609","endLine":110,"endColumn":75},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"596","line":5,"column":25,"nodeType":"587","messageId":"588","endLine":5,"endColumn":30},{"ruleId":"585","severity":1,"message":"618","line":8,"column":9,"nodeType":"587","messageId":"588","endLine":8,"endColumn":13},{"ruleId":"585","severity":1,"message":"598","line":12,"column":22,"nodeType":"587","messageId":"588","endLine":12,"endColumn":28},{"ruleId":"585","severity":1,"message":"619","line":38,"column":11,"nodeType":"587","messageId":"588","endLine":38,"endColumn":18},{"ruleId":"620","severity":1,"message":"621","line":5,"column":10,"nodeType":"622","messageId":"623","endLine":5,"endColumn":24,"fix":"624"},{"ruleId":"585","severity":1,"message":"625","line":35,"column":10,"nodeType":"587","messageId":"588","endLine":35,"endColumn":20},{"ruleId":"585","severity":1,"message":"626","line":36,"column":9,"nodeType":"587","messageId":"588","endLine":36,"endColumn":23},{"ruleId":"585","severity":1,"message":"599","line":64,"column":7,"nodeType":"587","messageId":"588","endLine":64,"endColumn":16},{"ruleId":"585","severity":1,"message":"627","line":109,"column":12,"nodeType":"587","messageId":"588","endLine":109,"endColumn":23},{"ruleId":"606","severity":1,"message":"607","line":148,"column":76,"nodeType":"608","messageId":"609","endLine":148,"endColumn":78},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"630","line":94,"column":23,"nodeType":"587","messageId":"588","endLine":94,"endColumn":35},{"ruleId":"602","severity":1,"message":"631","line":137,"column":8,"nodeType":"604","endLine":137,"endColumn":50,"suggestions":"632"},{"ruleId":"585","severity":1,"message":"633","line":4,"column":38,"nodeType":"587","messageId":"588","endLine":4,"endColumn":45},{"ruleId":"585","severity":1,"message":"629","line":4,"column":52,"nodeType":"587","messageId":"588","endLine":4,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":7,"column":15,"nodeType":"587","messageId":"588","endLine":7,"endColumn":26},{"ruleId":"585","severity":1,"message":"635","line":8,"column":8,"nodeType":"587","messageId":"588","endLine":8,"endColumn":16},{"ruleId":"585","severity":1,"message":"636","line":11,"column":9,"nodeType":"587","messageId":"588","endLine":11,"endColumn":23},{"ruleId":"585","severity":1,"message":"637","line":21,"column":8,"nodeType":"587","messageId":"588","endLine":21,"endColumn":18},{"ruleId":"585","severity":1,"message":"638","line":25,"column":18,"nodeType":"587","messageId":"588","endLine":25,"endColumn":29},{"ruleId":"585","severity":1,"message":"600","line":107,"column":12,"nodeType":"587","messageId":"588","endLine":107,"endColumn":18},{"ruleId":"639","severity":1,"message":"640","line":125,"column":13,"nodeType":"641","messageId":"609","endLine":125,"endColumn":17},{"ruleId":"602","severity":1,"message":"642","line":159,"column":8,"nodeType":"604","endLine":159,"endColumn":23,"suggestions":"643"},{"ruleId":"606","severity":1,"message":"607","line":277,"column":28,"nodeType":"608","messageId":"609","endLine":277,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":280,"column":35,"nodeType":"608","messageId":"609","endLine":280,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":333,"column":49,"nodeType":"608","messageId":"609","endLine":333,"endColumn":51},{"ruleId":"585","severity":1,"message":"644","line":346,"column":12,"nodeType":"587","messageId":"588","endLine":346,"endColumn":33},{"ruleId":"585","severity":1,"message":"645","line":346,"column":35,"nodeType":"587","messageId":"588","endLine":346,"endColumn":59},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"638","line":15,"column":18,"nodeType":"587","messageId":"588","endLine":15,"endColumn":29},{"ruleId":"585","severity":1,"message":"646","line":19,"column":13,"nodeType":"587","messageId":"588","endLine":19,"endColumn":19},{"ruleId":"585","severity":1,"message":"647","line":98,"column":11,"nodeType":"587","messageId":"588","endLine":98,"endColumn":24},{"ruleId":"602","severity":1,"message":"648","line":130,"column":8,"nodeType":"604","endLine":130,"endColumn":26,"suggestions":"649"},{"ruleId":"585","severity":1,"message":"630","line":139,"column":23,"nodeType":"587","messageId":"588","endLine":139,"endColumn":35},{"ruleId":"585","severity":1,"message":"650","line":258,"column":12,"nodeType":"587","messageId":"588","endLine":258,"endColumn":20},{"ruleId":"651","severity":1,"message":"652","line":261,"column":12,"nodeType":"653","messageId":"654","endLine":261,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":275,"column":13,"nodeType":"653","messageId":"654","endLine":275,"endColumn":177},{"ruleId":"651","severity":1,"message":"652","line":276,"column":13,"nodeType":"653","messageId":"654","endLine":276,"endColumn":182},{"ruleId":"651","severity":1,"message":"652","line":277,"column":13,"nodeType":"653","messageId":"654","endLine":277,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":278,"column":13,"nodeType":"653","messageId":"654","endLine":278,"endColumn":198},{"ruleId":"651","severity":1,"message":"652","line":279,"column":13,"nodeType":"653","messageId":"654","endLine":279,"endColumn":202},{"ruleId":"651","severity":1,"message":"652","line":281,"column":13,"nodeType":"653","messageId":"654","endLine":281,"endColumn":161},{"ruleId":"651","severity":1,"message":"652","line":282,"column":13,"nodeType":"653","messageId":"654","endLine":282,"endColumn":167},{"ruleId":"651","severity":1,"message":"652","line":283,"column":13,"nodeType":"653","messageId":"654","endLine":283,"endColumn":189},{"ruleId":"651","severity":1,"message":"652","line":284,"column":13,"nodeType":"653","messageId":"654","endLine":284,"endColumn":205},{"ruleId":"651","severity":1,"message":"652","line":285,"column":13,"nodeType":"653","messageId":"654","endLine":285,"endColumn":155},{"ruleId":"651","severity":1,"message":"652","line":287,"column":13,"nodeType":"653","messageId":"654","endLine":287,"endColumn":147},{"ruleId":"651","severity":1,"message":"652","line":288,"column":13,"nodeType":"653","messageId":"654","endLine":288,"endColumn":147},{"ruleId":"651","severity":1,"message":"652","line":289,"column":13,"nodeType":"653","messageId":"654","endLine":289,"endColumn":189},{"ruleId":"651","severity":1,"message":"652","line":290,"column":13,"nodeType":"653","messageId":"654","endLine":290,"endColumn":185},{"ruleId":"651","severity":1,"message":"652","line":293,"column":13,"nodeType":"653","messageId":"654","endLine":293,"endColumn":141},{"ruleId":"651","severity":1,"message":"652","line":295,"column":13,"nodeType":"653","messageId":"654","endLine":295,"endColumn":153},{"ruleId":"651","severity":1,"message":"652","line":296,"column":13,"nodeType":"653","messageId":"654","endLine":296,"endColumn":131},{"ruleId":"651","severity":1,"message":"652","line":297,"column":13,"nodeType":"653","messageId":"654","endLine":297,"endColumn":145},{"ruleId":"651","severity":1,"message":"652","line":298,"column":13,"nodeType":"653","messageId":"654","endLine":298,"endColumn":175},{"ruleId":"651","severity":1,"message":"652","line":299,"column":13,"nodeType":"653","messageId":"654","endLine":299,"endColumn":149},{"ruleId":"651","severity":1,"message":"652","line":302,"column":13,"nodeType":"653","messageId":"654","endLine":302,"endColumn":186},{"ruleId":"651","severity":1,"message":"652","line":303,"column":13,"nodeType":"653","messageId":"654","endLine":303,"endColumn":166},{"ruleId":"651","severity":1,"message":"652","line":304,"column":13,"nodeType":"653","messageId":"654","endLine":304,"endColumn":167},{"ruleId":"651","severity":1,"message":"652","line":305,"column":13,"nodeType":"653","messageId":"654","endLine":305,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":306,"column":13,"nodeType":"653","messageId":"654","endLine":306,"endColumn":160},{"ruleId":"606","severity":1,"message":"607","line":309,"column":49,"nodeType":"608","messageId":"609","endLine":309,"endColumn":51},{"ruleId":"585","severity":1,"message":"655","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"638","line":8,"column":18,"nodeType":"587","messageId":"588","endLine":8,"endColumn":29},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"630","line":101,"column":23,"nodeType":"587","messageId":"588","endLine":101,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":144,"column":39,"nodeType":"658","messageId":"659","endLine":144,"endColumn":78,"fix":"660"},{"ruleId":"656","severity":1,"message":"657","line":148,"column":39,"nodeType":"658","messageId":"659","endLine":148,"endColumn":75,"fix":"661"},{"ruleId":"656","severity":1,"message":"657","line":153,"column":39,"nodeType":"658","messageId":"659","endLine":153,"endColumn":77,"fix":"662"},{"ruleId":"656","severity":1,"message":"657","line":157,"column":39,"nodeType":"658","messageId":"659","endLine":157,"endColumn":76,"fix":"663"},{"ruleId":"656","severity":1,"message":"657","line":161,"column":39,"nodeType":"658","messageId":"659","endLine":161,"endColumn":76,"fix":"664"},{"ruleId":"656","severity":1,"message":"657","line":165,"column":39,"nodeType":"658","messageId":"659","endLine":165,"endColumn":69,"fix":"665"},{"ruleId":"602","severity":1,"message":"666","line":167,"column":7,"nodeType":"604","endLine":167,"endColumn":94,"suggestions":"667"},{"ruleId":"585","severity":1,"message":"650","line":203,"column":11,"nodeType":"587","messageId":"588","endLine":203,"endColumn":19},{"ruleId":"651","severity":1,"message":"652","line":205,"column":13,"nodeType":"653","messageId":"654","endLine":205,"endColumn":144},{"ruleId":"651","severity":1,"message":"652","line":206,"column":13,"nodeType":"653","messageId":"654","endLine":206,"endColumn":148},{"ruleId":"651","severity":1,"message":"652","line":207,"column":13,"nodeType":"653","messageId":"654","endLine":207,"endColumn":123},{"ruleId":"606","severity":1,"message":"607","line":209,"column":49,"nodeType":"608","messageId":"609","endLine":209,"endColumn":51},{"ruleId":"585","severity":1,"message":"633","line":4,"column":38,"nodeType":"587","messageId":"588","endLine":4,"endColumn":45},{"ruleId":"585","severity":1,"message":"629","line":4,"column":52,"nodeType":"587","messageId":"588","endLine":4,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":7,"column":15,"nodeType":"587","messageId":"588","endLine":7,"endColumn":26},{"ruleId":"585","severity":1,"message":"635","line":8,"column":8,"nodeType":"587","messageId":"588","endLine":8,"endColumn":16},{"ruleId":"585","severity":1,"message":"636","line":11,"column":9,"nodeType":"587","messageId":"588","endLine":11,"endColumn":23},{"ruleId":"585","severity":1,"message":"668","line":25,"column":10,"nodeType":"587","messageId":"588","endLine":25,"endColumn":20},{"ruleId":"585","severity":1,"message":"669","line":103,"column":11,"nodeType":"587","messageId":"588","endLine":103,"endColumn":18},{"ruleId":"585","severity":1,"message":"600","line":105,"column":12,"nodeType":"587","messageId":"588","endLine":105,"endColumn":18},{"ruleId":"585","severity":1,"message":"670","line":106,"column":12,"nodeType":"587","messageId":"588","endLine":106,"endColumn":24},{"ruleId":"585","severity":1,"message":"671","line":106,"column":26,"nodeType":"587","messageId":"588","endLine":106,"endColumn":41},{"ruleId":"585","severity":1,"message":"672","line":110,"column":12,"nodeType":"587","messageId":"588","endLine":110,"endColumn":18},{"ruleId":"606","severity":1,"message":"607","line":127,"column":79,"nodeType":"608","messageId":"609","endLine":127,"endColumn":81},{"ruleId":"602","severity":1,"message":"673","line":223,"column":8,"nodeType":"604","endLine":223,"endColumn":58,"suggestions":"674"},{"ruleId":"606","severity":1,"message":"607","line":478,"column":28,"nodeType":"608","messageId":"609","endLine":478,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":481,"column":35,"nodeType":"608","messageId":"609","endLine":481,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":535,"column":49,"nodeType":"608","messageId":"609","endLine":535,"endColumn":51},{"ruleId":"606","severity":1,"message":"607","line":1061,"column":67,"nodeType":"608","messageId":"609","endLine":1061,"endColumn":69},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"675","line":1,"column":29,"nodeType":"587","messageId":"588","endLine":1,"endColumn":38},{"ruleId":"585","severity":1,"message":"676","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":13},{"ruleId":"585","severity":1,"message":"677","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":14},{"ruleId":"585","severity":1,"message":"629","line":5,"column":52,"nodeType":"587","messageId":"588","endLine":5,"endColumn":56},{"ruleId":"585","severity":1,"message":"646","line":6,"column":13,"nodeType":"587","messageId":"588","endLine":6,"endColumn":19},{"ruleId":"585","severity":1,"message":"634","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":26},{"ruleId":"585","severity":1,"message":"601","line":95,"column":20,"nodeType":"587","messageId":"588","endLine":95,"endColumn":29},{"ruleId":"585","severity":1,"message":"678","line":96,"column":12,"nodeType":"587","messageId":"588","endLine":96,"endColumn":18},{"ruleId":"585","severity":1,"message":"679","line":96,"column":20,"nodeType":"587","messageId":"588","endLine":96,"endColumn":29},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"680","line":133,"column":11,"nodeType":"587","messageId":"588","endLine":133,"endColumn":28},{"ruleId":"585","severity":1,"message":"681","line":338,"column":14,"nodeType":"587","messageId":"588","endLine":338,"endColumn":29},{"ruleId":"585","severity":1,"message":"682","line":346,"column":14,"nodeType":"587","messageId":"588","endLine":346,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":373,"column":49,"nodeType":"608","messageId":"609","endLine":373,"endColumn":51},{"ruleId":"620","severity":1,"message":"621","line":4,"column":10,"nodeType":"622","messageId":"623","endLine":4,"endColumn":24,"fix":"683"},{"ruleId":"585","severity":1,"message":"592","line":5,"column":10,"nodeType":"587","messageId":"588","endLine":5,"endColumn":20},{"ruleId":"602","severity":1,"message":"684","line":28,"column":10,"nodeType":"604","endLine":28,"endColumn":46,"suggestions":"685"},{"ruleId":"585","severity":1,"message":"686","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":17},{"ruleId":"585","severity":1,"message":"633","line":5,"column":38,"nodeType":"587","messageId":"588","endLine":5,"endColumn":45},{"ruleId":"585","severity":1,"message":"629","line":5,"column":52,"nodeType":"587","messageId":"588","endLine":5,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":26},{"ruleId":"585","severity":1,"message":"635","line":9,"column":8,"nodeType":"587","messageId":"588","endLine":9,"endColumn":16},{"ruleId":"585","severity":1,"message":"636","line":12,"column":9,"nodeType":"587","messageId":"588","endLine":12,"endColumn":23},{"ruleId":"585","severity":1,"message":"618","line":15,"column":9,"nodeType":"587","messageId":"588","endLine":15,"endColumn":13},{"ruleId":"585","severity":1,"message":"687","line":15,"column":27,"nodeType":"587","messageId":"588","endLine":15,"endColumn":38},{"ruleId":"585","severity":1,"message":"637","line":23,"column":8,"nodeType":"587","messageId":"588","endLine":23,"endColumn":18},{"ruleId":"585","severity":1,"message":"688","line":25,"column":11,"nodeType":"587","messageId":"588","endLine":25,"endColumn":16},{"ruleId":"585","severity":1,"message":"669","line":98,"column":11,"nodeType":"587","messageId":"588","endLine":98,"endColumn":18},{"ruleId":"585","severity":1,"message":"600","line":101,"column":12,"nodeType":"587","messageId":"588","endLine":101,"endColumn":18},{"ruleId":"585","severity":1,"message":"670","line":102,"column":12,"nodeType":"587","messageId":"588","endLine":102,"endColumn":24},{"ruleId":"585","severity":1,"message":"671","line":102,"column":26,"nodeType":"587","messageId":"588","endLine":102,"endColumn":41},{"ruleId":"585","severity":1,"message":"672","line":106,"column":12,"nodeType":"587","messageId":"588","endLine":106,"endColumn":18},{"ruleId":"606","severity":1,"message":"607","line":285,"column":49,"nodeType":"608","messageId":"609","endLine":285,"endColumn":51},{"ruleId":"606","severity":1,"message":"607","line":498,"column":68,"nodeType":"608","messageId":"609","endLine":498,"endColumn":70},{"ruleId":"689","replacedBy":"690"},{"ruleId":"691","replacedBy":"692"},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"630","line":97,"column":23,"nodeType":"587","messageId":"588","endLine":97,"endColumn":35},{"ruleId":"602","severity":1,"message":"631","line":144,"column":8,"nodeType":"604","endLine":144,"endColumn":27,"suggestions":"693"},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"630","line":101,"column":23,"nodeType":"587","messageId":"588","endLine":101,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":166,"column":39,"nodeType":"658","messageId":"659","endLine":166,"endColumn":78,"fix":"694"},{"ruleId":"656","severity":1,"message":"657","line":170,"column":39,"nodeType":"658","messageId":"659","endLine":170,"endColumn":75,"fix":"695"},{"ruleId":"656","severity":1,"message":"696","line":171,"column":39,"nodeType":"658","messageId":"659","endLine":171,"endColumn":63,"fix":"697"},{"ruleId":"656","severity":1,"message":"657","line":175,"column":39,"nodeType":"658","messageId":"659","endLine":175,"endColumn":77,"fix":"698"},{"ruleId":"656","severity":1,"message":"657","line":179,"column":39,"nodeType":"658","messageId":"659","endLine":179,"endColumn":76,"fix":"699"},{"ruleId":"656","severity":1,"message":"657","line":183,"column":39,"nodeType":"658","messageId":"659","endLine":183,"endColumn":76,"fix":"700"},{"ruleId":"656","severity":1,"message":"657","line":187,"column":39,"nodeType":"658","messageId":"659","endLine":187,"endColumn":69,"fix":"701"},{"ruleId":"602","severity":1,"message":"666","line":191,"column":8,"nodeType":"604","endLine":191,"endColumn":77,"suggestions":"702"},{"ruleId":"602","severity":1,"message":"666","line":206,"column":8,"nodeType":"604","endLine":206,"endColumn":27,"suggestions":"703"},{"ruleId":"651","severity":1,"message":"652","line":211,"column":13,"nodeType":"653","messageId":"654","endLine":211,"endColumn":148},{"ruleId":"651","severity":1,"message":"652","line":212,"column":13,"nodeType":"653","messageId":"654","endLine":212,"endColumn":150},{"ruleId":"651","severity":1,"message":"652","line":213,"column":13,"nodeType":"653","messageId":"654","endLine":213,"endColumn":126},{"ruleId":"606","severity":1,"message":"607","line":215,"column":49,"nodeType":"608","messageId":"609","endLine":215,"endColumn":51},{"ruleId":"585","severity":1,"message":"655","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"625","line":6,"column":10,"nodeType":"587","messageId":"588","endLine":6,"endColumn":20},{"ruleId":"585","severity":1,"message":"618","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":14},{"ruleId":"585","severity":1,"message":"638","line":9,"column":18,"nodeType":"587","messageId":"588","endLine":9,"endColumn":29},{"ruleId":"585","severity":1,"message":"704","line":18,"column":11,"nodeType":"587","messageId":"588","endLine":18,"endColumn":26},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"675","line":1,"column":29,"nodeType":"587","messageId":"588","endLine":1,"endColumn":38},{"ruleId":"585","severity":1,"message":"676","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":13},{"ruleId":"585","severity":1,"message":"677","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":14},{"ruleId":"585","severity":1,"message":"629","line":5,"column":52,"nodeType":"587","messageId":"588","endLine":5,"endColumn":56},{"ruleId":"585","severity":1,"message":"646","line":6,"column":13,"nodeType":"587","messageId":"588","endLine":6,"endColumn":19},{"ruleId":"585","severity":1,"message":"634","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":26},{"ruleId":"585","severity":1,"message":"601","line":95,"column":20,"nodeType":"587","messageId":"588","endLine":95,"endColumn":29},{"ruleId":"585","severity":1,"message":"678","line":96,"column":12,"nodeType":"587","messageId":"588","endLine":96,"endColumn":18},{"ruleId":"585","severity":1,"message":"679","line":96,"column":20,"nodeType":"587","messageId":"588","endLine":96,"endColumn":29},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"705","line":96,"column":12,"nodeType":"587","messageId":"588","endLine":96,"endColumn":24},{"ruleId":"585","severity":1,"message":"680","line":132,"column":11,"nodeType":"587","messageId":"588","endLine":132,"endColumn":28},{"ruleId":"606","severity":1,"message":"607","line":347,"column":49,"nodeType":"608","messageId":"609","endLine":347,"endColumn":51},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"638","line":15,"column":18,"nodeType":"587","messageId":"588","endLine":15,"endColumn":29},{"ruleId":"585","severity":1,"message":"678","line":95,"column":12,"nodeType":"587","messageId":"588","endLine":95,"endColumn":18},{"ruleId":"585","severity":1,"message":"679","line":95,"column":20,"nodeType":"587","messageId":"588","endLine":95,"endColumn":29},{"ruleId":"585","severity":1,"message":"630","line":105,"column":23,"nodeType":"587","messageId":"588","endLine":105,"endColumn":35},{"ruleId":"602","severity":1,"message":"706","line":224,"column":8,"nodeType":"604","endLine":224,"endColumn":27,"suggestions":"707"},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"677","line":2,"column":10,"nodeType":"587","messageId":"588","endLine":2,"endColumn":16},{"ruleId":"585","severity":1,"message":"596","line":5,"column":25,"nodeType":"587","messageId":"588","endLine":5,"endColumn":30},{"ruleId":"585","severity":1,"message":"618","line":8,"column":9,"nodeType":"587","messageId":"588","endLine":8,"endColumn":13},{"ruleId":"585","severity":1,"message":"598","line":11,"column":22,"nodeType":"587","messageId":"588","endLine":11,"endColumn":28},{"ruleId":"585","severity":1,"message":"619","line":37,"column":11,"nodeType":"587","messageId":"588","endLine":37,"endColumn":18},{"ruleId":"585","severity":1,"message":"669","line":38,"column":11,"nodeType":"587","messageId":"588","endLine":38,"endColumn":18},{"ruleId":"585","severity":1,"message":"600","line":42,"column":12,"nodeType":"587","messageId":"588","endLine":42,"endColumn":18},{"ruleId":"585","severity":1,"message":"601","line":42,"column":20,"nodeType":"587","messageId":"588","endLine":42,"endColumn":29},{"ruleId":"602","severity":1,"message":"603","line":250,"column":8,"nodeType":"604","endLine":250,"endColumn":10,"suggestions":"708"},{"ruleId":"585","severity":1,"message":"676","line":3,"column":8,"nodeType":"587","messageId":"588","endLine":3,"endColumn":13},{"ruleId":"585","severity":1,"message":"709","line":4,"column":17,"nodeType":"587","messageId":"588","endLine":4,"endColumn":24},{"ruleId":"620","severity":1,"message":"621","line":5,"column":10,"nodeType":"622","messageId":"623","endLine":5,"endColumn":24,"fix":"710"},{"ruleId":"585","severity":1,"message":"711","line":5,"column":19,"nodeType":"587","messageId":"588","endLine":5,"endColumn":24},{"ruleId":"585","severity":1,"message":"625","line":27,"column":10,"nodeType":"587","messageId":"588","endLine":27,"endColumn":20},{"ruleId":"585","severity":1,"message":"599","line":52,"column":7,"nodeType":"587","messageId":"588","endLine":52,"endColumn":16},{"ruleId":"585","severity":1,"message":"627","line":98,"column":12,"nodeType":"587","messageId":"588","endLine":98,"endColumn":23},{"ruleId":"585","severity":1,"message":"712","line":98,"column":25,"nodeType":"587","messageId":"588","endLine":98,"endColumn":39},{"ruleId":"585","severity":1,"message":"713","line":100,"column":11,"nodeType":"587","messageId":"588","endLine":100,"endColumn":20},{"ruleId":"585","severity":1,"message":"625","line":27,"column":10,"nodeType":"587","messageId":"588","endLine":27,"endColumn":20},{"ruleId":"585","severity":1,"message":"714","line":29,"column":10,"nodeType":"587","messageId":"588","endLine":29,"endColumn":18},{"ruleId":"585","severity":1,"message":"715","line":29,"column":27,"nodeType":"587","messageId":"588","endLine":29,"endColumn":31},{"ruleId":"585","severity":1,"message":"716","line":29,"column":33,"nodeType":"587","messageId":"588","endLine":29,"endColumn":37},{"ruleId":"585","severity":1,"message":"599","line":52,"column":7,"nodeType":"587","messageId":"588","endLine":52,"endColumn":16},{"ruleId":"585","severity":1,"message":"713","line":101,"column":11,"nodeType":"587","messageId":"588","endLine":101,"endColumn":20},{"ruleId":"602","severity":1,"message":"684","line":106,"column":10,"nodeType":"604","endLine":106,"endColumn":12,"suggestions":"717"},{"ruleId":"585","severity":1,"message":"718","line":123,"column":11,"nodeType":"587","messageId":"588","endLine":123,"endColumn":27},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":2,"column":52,"nodeType":"587","messageId":"588","endLine":2,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"679","line":94,"column":20,"nodeType":"587","messageId":"588","endLine":94,"endColumn":29},{"ruleId":"585","severity":1,"message":"719","line":102,"column":12,"nodeType":"587","messageId":"588","endLine":102,"endColumn":26},{"ruleId":"585","severity":1,"message":"720","line":102,"column":28,"nodeType":"587","messageId":"588","endLine":102,"endColumn":45},{"ruleId":"585","severity":1,"message":"704","line":200,"column":11,"nodeType":"587","messageId":"588","endLine":200,"endColumn":26},{"ruleId":"606","severity":1,"message":"607","line":255,"column":28,"nodeType":"608","messageId":"609","endLine":255,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":258,"column":35,"nodeType":"608","messageId":"609","endLine":258,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":287,"column":74,"nodeType":"608","messageId":"609","endLine":287,"endColumn":76},{"ruleId":"585","severity":1,"message":"633","line":4,"column":38,"nodeType":"587","messageId":"588","endLine":4,"endColumn":45},{"ruleId":"585","severity":1,"message":"629","line":4,"column":52,"nodeType":"587","messageId":"588","endLine":4,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":7,"column":15,"nodeType":"587","messageId":"588","endLine":7,"endColumn":26},{"ruleId":"585","severity":1,"message":"635","line":8,"column":8,"nodeType":"587","messageId":"588","endLine":8,"endColumn":16},{"ruleId":"585","severity":1,"message":"636","line":11,"column":9,"nodeType":"587","messageId":"588","endLine":11,"endColumn":23},{"ruleId":"585","severity":1,"message":"637","line":21,"column":8,"nodeType":"587","messageId":"588","endLine":21,"endColumn":18},{"ruleId":"585","severity":1,"message":"638","line":25,"column":18,"nodeType":"587","messageId":"588","endLine":25,"endColumn":29},{"ruleId":"585","severity":1,"message":"669","line":101,"column":11,"nodeType":"587","messageId":"588","endLine":101,"endColumn":18},{"ruleId":"585","severity":1,"message":"600","line":107,"column":12,"nodeType":"587","messageId":"588","endLine":107,"endColumn":18},{"ruleId":"606","severity":1,"message":"607","line":262,"column":49,"nodeType":"608","messageId":"609","endLine":262,"endColumn":51},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"630","line":101,"column":23,"nodeType":"587","messageId":"588","endLine":101,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":144,"column":39,"nodeType":"658","messageId":"659","endLine":144,"endColumn":78,"fix":"721"},{"ruleId":"656","severity":1,"message":"657","line":148,"column":39,"nodeType":"658","messageId":"659","endLine":148,"endColumn":75,"fix":"722"},{"ruleId":"656","severity":1,"message":"657","line":153,"column":39,"nodeType":"658","messageId":"659","endLine":153,"endColumn":77,"fix":"723"},{"ruleId":"656","severity":1,"message":"657","line":157,"column":39,"nodeType":"658","messageId":"659","endLine":157,"endColumn":76,"fix":"724"},{"ruleId":"656","severity":1,"message":"657","line":161,"column":39,"nodeType":"658","messageId":"659","endLine":161,"endColumn":76,"fix":"725"},{"ruleId":"656","severity":1,"message":"657","line":165,"column":39,"nodeType":"658","messageId":"659","endLine":165,"endColumn":69,"fix":"726"},{"ruleId":"602","severity":1,"message":"666","line":167,"column":7,"nodeType":"604","endLine":167,"endColumn":94,"suggestions":"727"},{"ruleId":"585","severity":1,"message":"650","line":203,"column":11,"nodeType":"587","messageId":"588","endLine":203,"endColumn":19},{"ruleId":"651","severity":1,"message":"652","line":205,"column":13,"nodeType":"653","messageId":"654","endLine":205,"endColumn":144},{"ruleId":"651","severity":1,"message":"652","line":206,"column":13,"nodeType":"653","messageId":"654","endLine":206,"endColumn":148},{"ruleId":"651","severity":1,"message":"652","line":207,"column":13,"nodeType":"653","messageId":"654","endLine":207,"endColumn":123},{"ruleId":"606","severity":1,"message":"607","line":209,"column":49,"nodeType":"608","messageId":"609","endLine":209,"endColumn":51},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"630","line":95,"column":23,"nodeType":"587","messageId":"588","endLine":95,"endColumn":35},{"ruleId":"602","severity":1,"message":"631","line":138,"column":8,"nodeType":"604","endLine":138,"endColumn":49,"suggestions":"728"},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"675","line":1,"column":29,"nodeType":"587","messageId":"588","endLine":1,"endColumn":38},{"ruleId":"585","severity":1,"message":"676","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":13},{"ruleId":"585","severity":1,"message":"677","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":14},{"ruleId":"585","severity":1,"message":"629","line":5,"column":52,"nodeType":"587","messageId":"588","endLine":5,"endColumn":56},{"ruleId":"585","severity":1,"message":"646","line":6,"column":13,"nodeType":"587","messageId":"588","endLine":6,"endColumn":19},{"ruleId":"585","severity":1,"message":"634","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":26},{"ruleId":"585","severity":1,"message":"601","line":95,"column":20,"nodeType":"587","messageId":"588","endLine":95,"endColumn":29},{"ruleId":"585","severity":1,"message":"678","line":96,"column":12,"nodeType":"587","messageId":"588","endLine":96,"endColumn":18},{"ruleId":"585","severity":1,"message":"679","line":96,"column":20,"nodeType":"587","messageId":"588","endLine":96,"endColumn":29},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"628","line":3,"column":46,"nodeType":"587","messageId":"588","endLine":3,"endColumn":51},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"638","line":15,"column":18,"nodeType":"587","messageId":"588","endLine":15,"endColumn":29},{"ruleId":"585","severity":1,"message":"630","line":107,"column":23,"nodeType":"587","messageId":"588","endLine":107,"endColumn":35},{"ruleId":"602","severity":1,"message":"729","line":184,"column":8,"nodeType":"604","endLine":184,"endColumn":26,"suggestions":"730"},{"ruleId":"585","severity":1,"message":"650","line":248,"column":12,"nodeType":"587","messageId":"588","endLine":248,"endColumn":20},{"ruleId":"651","severity":1,"message":"652","line":251,"column":12,"nodeType":"653","messageId":"654","endLine":251,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":265,"column":13,"nodeType":"653","messageId":"654","endLine":265,"endColumn":177},{"ruleId":"651","severity":1,"message":"652","line":266,"column":13,"nodeType":"653","messageId":"654","endLine":266,"endColumn":182},{"ruleId":"651","severity":1,"message":"652","line":267,"column":13,"nodeType":"653","messageId":"654","endLine":267,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":268,"column":13,"nodeType":"653","messageId":"654","endLine":268,"endColumn":198},{"ruleId":"651","severity":1,"message":"652","line":269,"column":13,"nodeType":"653","messageId":"654","endLine":269,"endColumn":202},{"ruleId":"651","severity":1,"message":"652","line":271,"column":13,"nodeType":"653","messageId":"654","endLine":271,"endColumn":161},{"ruleId":"651","severity":1,"message":"652","line":272,"column":13,"nodeType":"653","messageId":"654","endLine":272,"endColumn":167},{"ruleId":"651","severity":1,"message":"652","line":273,"column":13,"nodeType":"653","messageId":"654","endLine":273,"endColumn":189},{"ruleId":"651","severity":1,"message":"652","line":274,"column":13,"nodeType":"653","messageId":"654","endLine":274,"endColumn":205},{"ruleId":"651","severity":1,"message":"652","line":275,"column":13,"nodeType":"653","messageId":"654","endLine":275,"endColumn":155},{"ruleId":"651","severity":1,"message":"652","line":277,"column":13,"nodeType":"653","messageId":"654","endLine":277,"endColumn":147},{"ruleId":"651","severity":1,"message":"652","line":278,"column":13,"nodeType":"653","messageId":"654","endLine":278,"endColumn":147},{"ruleId":"651","severity":1,"message":"652","line":279,"column":13,"nodeType":"653","messageId":"654","endLine":279,"endColumn":189},{"ruleId":"651","severity":1,"message":"652","line":280,"column":13,"nodeType":"653","messageId":"654","endLine":280,"endColumn":185},{"ruleId":"651","severity":1,"message":"652","line":283,"column":13,"nodeType":"653","messageId":"654","endLine":283,"endColumn":141},{"ruleId":"651","severity":1,"message":"652","line":285,"column":13,"nodeType":"653","messageId":"654","endLine":285,"endColumn":153},{"ruleId":"651","severity":1,"message":"652","line":286,"column":13,"nodeType":"653","messageId":"654","endLine":286,"endColumn":131},{"ruleId":"651","severity":1,"message":"652","line":287,"column":13,"nodeType":"653","messageId":"654","endLine":287,"endColumn":145},{"ruleId":"651","severity":1,"message":"652","line":288,"column":13,"nodeType":"653","messageId":"654","endLine":288,"endColumn":175},{"ruleId":"651","severity":1,"message":"652","line":289,"column":13,"nodeType":"653","messageId":"654","endLine":289,"endColumn":149},{"ruleId":"651","severity":1,"message":"652","line":292,"column":13,"nodeType":"653","messageId":"654","endLine":292,"endColumn":186},{"ruleId":"651","severity":1,"message":"652","line":293,"column":13,"nodeType":"653","messageId":"654","endLine":293,"endColumn":166},{"ruleId":"651","severity":1,"message":"652","line":294,"column":13,"nodeType":"653","messageId":"654","endLine":294,"endColumn":167},{"ruleId":"651","severity":1,"message":"652","line":295,"column":13,"nodeType":"653","messageId":"654","endLine":295,"endColumn":194},{"ruleId":"651","severity":1,"message":"652","line":296,"column":13,"nodeType":"653","messageId":"654","endLine":296,"endColumn":160},{"ruleId":"606","severity":1,"message":"607","line":299,"column":49,"nodeType":"608","messageId":"609","endLine":299,"endColumn":51},{"ruleId":"585","severity":1,"message":"686","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":17},{"ruleId":"585","severity":1,"message":"633","line":5,"column":38,"nodeType":"587","messageId":"588","endLine":5,"endColumn":45},{"ruleId":"585","severity":1,"message":"629","line":5,"column":52,"nodeType":"587","messageId":"588","endLine":5,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":8,"column":15,"nodeType":"587","messageId":"588","endLine":8,"endColumn":26},{"ruleId":"585","severity":1,"message":"635","line":9,"column":8,"nodeType":"587","messageId":"588","endLine":9,"endColumn":16},{"ruleId":"585","severity":1,"message":"636","line":12,"column":9,"nodeType":"587","messageId":"588","endLine":12,"endColumn":23},{"ruleId":"585","severity":1,"message":"618","line":15,"column":9,"nodeType":"587","messageId":"588","endLine":15,"endColumn":13},{"ruleId":"585","severity":1,"message":"687","line":15,"column":27,"nodeType":"587","messageId":"588","endLine":15,"endColumn":38},{"ruleId":"585","severity":1,"message":"637","line":23,"column":8,"nodeType":"587","messageId":"588","endLine":23,"endColumn":18},{"ruleId":"585","severity":1,"message":"688","line":25,"column":11,"nodeType":"587","messageId":"588","endLine":25,"endColumn":16},{"ruleId":"585","severity":1,"message":"669","line":103,"column":11,"nodeType":"587","messageId":"588","endLine":103,"endColumn":18},{"ruleId":"585","severity":1,"message":"600","line":105,"column":12,"nodeType":"587","messageId":"588","endLine":105,"endColumn":18},{"ruleId":"585","severity":1,"message":"670","line":106,"column":12,"nodeType":"587","messageId":"588","endLine":106,"endColumn":24},{"ruleId":"585","severity":1,"message":"671","line":106,"column":26,"nodeType":"587","messageId":"588","endLine":106,"endColumn":41},{"ruleId":"585","severity":1,"message":"672","line":110,"column":12,"nodeType":"587","messageId":"588","endLine":110,"endColumn":18},{"ruleId":"585","severity":1,"message":"731","line":115,"column":12,"nodeType":"587","messageId":"588","endLine":115,"endColumn":27},{"ruleId":"585","severity":1,"message":"732","line":116,"column":12,"nodeType":"587","messageId":"588","endLine":116,"endColumn":28},{"ruleId":"606","severity":1,"message":"607","line":283,"column":49,"nodeType":"608","messageId":"609","endLine":283,"endColumn":51},{"ruleId":"606","severity":1,"message":"607","line":523,"column":67,"nodeType":"608","messageId":"609","endLine":523,"endColumn":69},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":3,"column":52,"nodeType":"587","messageId":"588","endLine":3,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":6,"column":15,"nodeType":"587","messageId":"588","endLine":6,"endColumn":26},{"ruleId":"585","severity":1,"message":"680","line":133,"column":11,"nodeType":"587","messageId":"588","endLine":133,"endColumn":28},{"ruleId":"606","severity":1,"message":"607","line":342,"column":49,"nodeType":"608","messageId":"609","endLine":342,"endColumn":51},{"ruleId":"585","severity":1,"message":"655","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"625","line":6,"column":10,"nodeType":"587","messageId":"588","endLine":6,"endColumn":20},{"ruleId":"585","severity":1,"message":"618","line":7,"column":10,"nodeType":"587","messageId":"588","endLine":7,"endColumn":14},{"ruleId":"585","severity":1,"message":"638","line":9,"column":18,"nodeType":"587","messageId":"588","endLine":9,"endColumn":29},{"ruleId":"585","severity":1,"message":"704","line":19,"column":11,"nodeType":"587","messageId":"588","endLine":19,"endColumn":26},{"ruleId":"585","severity":1,"message":"625","line":27,"column":10,"nodeType":"587","messageId":"588","endLine":27,"endColumn":20},{"ruleId":"585","severity":1,"message":"714","line":29,"column":10,"nodeType":"587","messageId":"588","endLine":29,"endColumn":18},{"ruleId":"585","severity":1,"message":"715","line":29,"column":27,"nodeType":"587","messageId":"588","endLine":29,"endColumn":31},{"ruleId":"585","severity":1,"message":"716","line":29,"column":33,"nodeType":"587","messageId":"588","endLine":29,"endColumn":37},{"ruleId":"585","severity":1,"message":"599","line":52,"column":7,"nodeType":"587","messageId":"588","endLine":52,"endColumn":16},{"ruleId":"585","severity":1,"message":"713","line":101,"column":11,"nodeType":"587","messageId":"588","endLine":101,"endColumn":20},{"ruleId":"602","severity":1,"message":"684","line":106,"column":10,"nodeType":"604","endLine":106,"endColumn":12,"suggestions":"733"},{"ruleId":"585","severity":1,"message":"718","line":123,"column":11,"nodeType":"587","messageId":"588","endLine":123,"endColumn":27},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":2,"column":52,"nodeType":"587","messageId":"588","endLine":2,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"679","line":94,"column":20,"nodeType":"587","messageId":"588","endLine":94,"endColumn":29},{"ruleId":"585","severity":1,"message":"719","line":102,"column":12,"nodeType":"587","messageId":"588","endLine":102,"endColumn":26},{"ruleId":"585","severity":1,"message":"720","line":102,"column":28,"nodeType":"587","messageId":"588","endLine":102,"endColumn":45},{"ruleId":"585","severity":1,"message":"704","line":200,"column":11,"nodeType":"587","messageId":"588","endLine":200,"endColumn":26},{"ruleId":"606","severity":1,"message":"607","line":255,"column":28,"nodeType":"608","messageId":"609","endLine":255,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":258,"column":35,"nodeType":"608","messageId":"609","endLine":258,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":287,"column":74,"nodeType":"608","messageId":"609","endLine":287,"endColumn":76},{"ruleId":"585","severity":1,"message":"625","line":27,"column":10,"nodeType":"587","messageId":"588","endLine":27,"endColumn":20},{"ruleId":"585","severity":1,"message":"714","line":29,"column":10,"nodeType":"587","messageId":"588","endLine":29,"endColumn":18},{"ruleId":"585","severity":1,"message":"715","line":29,"column":27,"nodeType":"587","messageId":"588","endLine":29,"endColumn":31},{"ruleId":"585","severity":1,"message":"716","line":29,"column":33,"nodeType":"587","messageId":"588","endLine":29,"endColumn":37},{"ruleId":"585","severity":1,"message":"599","line":52,"column":7,"nodeType":"587","messageId":"588","endLine":52,"endColumn":16},{"ruleId":"585","severity":1,"message":"713","line":101,"column":11,"nodeType":"587","messageId":"588","endLine":101,"endColumn":20},{"ruleId":"602","severity":1,"message":"684","line":106,"column":10,"nodeType":"604","endLine":106,"endColumn":12,"suggestions":"734"},{"ruleId":"585","severity":1,"message":"718","line":123,"column":11,"nodeType":"587","messageId":"588","endLine":123,"endColumn":27},{"ruleId":"585","severity":1,"message":"595","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":27},{"ruleId":"585","severity":1,"message":"629","line":2,"column":52,"nodeType":"587","messageId":"588","endLine":2,"endColumn":56},{"ruleId":"585","severity":1,"message":"634","line":5,"column":15,"nodeType":"587","messageId":"588","endLine":5,"endColumn":26},{"ruleId":"585","severity":1,"message":"679","line":95,"column":20,"nodeType":"587","messageId":"588","endLine":95,"endColumn":29},{"ruleId":"585","severity":1,"message":"704","line":101,"column":11,"nodeType":"587","messageId":"588","endLine":101,"endColumn":26},{"ruleId":"585","severity":1,"message":"719","line":110,"column":12,"nodeType":"587","messageId":"588","endLine":110,"endColumn":26},{"ruleId":"585","severity":1,"message":"720","line":110,"column":28,"nodeType":"587","messageId":"588","endLine":110,"endColumn":45},{"ruleId":"606","severity":1,"message":"607","line":244,"column":28,"nodeType":"608","messageId":"609","endLine":244,"endColumn":30},{"ruleId":"606","severity":1,"message":"607","line":247,"column":35,"nodeType":"608","messageId":"609","endLine":247,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":276,"column":74,"nodeType":"608","messageId":"609","endLine":276,"endColumn":76},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["735"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ExpansionPanelDetails' is defined but never used.","'ExpansionPanelActions' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Divider' is defined but never used.","'permissions' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentStatus'. Either include it or remove the dependency array.",["736"],"'Link' is defined but never used.","'classes' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"737","text":"738"},"'FaUserPlus' is defined but never used.","'TiArrowForward' is defined but never used.","'patientList' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["739"],"'Spinner' is defined but never used.","'CardContent' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'PhoneInput' is defined but never used.","'LabelRibbon' is defined but never used.","no-dupe-keys","Duplicate key 'code'.","ObjectExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["740"],"'riskAssessmentPartner' is assigned a value but never used.","'setRiskAssessmentPartner' is assigned a value but never used.","'moment' is defined but never used.","'calculate_age' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.extra.riskAssessment'. Either include it or remove the dependency array. If 'setRiskAssessment' needs the current value of 'props.extra.riskAssessment', you can also switch to useReducer instead of useState and read 'props.extra.riskAssessment' in the reducer.",["741"],"'validate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Card' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['rencencyInterpretation'] found.","Property","unnecessarilyComputedProperty",{"range":"742","text":"743"},{"range":"744","text":"743"},{"range":"745","text":"743"},{"range":"746","text":"743"},{"range":"747","text":"743"},{"range":"748","text":"743"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["749"],"'fontWeight' is defined but never used.","'history' is assigned a value but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'country', 'getStates', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["750"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.",{"range":"751","text":"738"},"React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["752"],"'MatButton' is defined but never used.","'useLocation' is defined but never used.","'Modal' is defined but never used.","no-native-reassign",["753"],"no-negated-in-lhs",["754"],["755"],{"range":"756","text":"743"},{"range":"757","text":"743"},"Unnecessarily computed property ['hasViralLoad'] found.",{"range":"758","text":"759"},{"range":"760","text":"743"},{"range":"761","text":"743"},{"range":"762","text":"743"},{"range":"763","text":"743"},["764"],["765"],"'handleItemClick' is assigned a value but never used.","'showCD4Count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment', 'riskAssessment', 'riskAssessmentPartner', 'stiScreening', and 'tbScreening'. Either include them or remove the dependency array. You can also do a functional update 'setKnowledgeAssessment(k => ...)' if you only need 'knowledgeAssessment' in the 'setKnowledgeAssessment' call.",["766"],["767"],"'baseUrl' is defined but never used.",{"range":"768","text":"738"},"'token' is defined but never used.","'setPatientList' is assigned a value but never used.","'patientId' is assigned a value but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'Icon' is defined but never used.",["769"],"'handleIEditIndex' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.",{"range":"770","text":"743"},{"range":"771","text":"743"},{"range":"772","text":"743"},{"range":"773","text":"743"},{"range":"774","text":"743"},{"range":"775","text":"743"},["776"],["777"],"React Hook useEffect has a missing dependency: 'riskAssessment'. Either include it or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["778"],"'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.",["779"],["780"],{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},[136,150],"token",{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},[4812,4838],"'rencencyInterpretation'",[5079,5105],[5418,5444],[5688,5714],[5956,5982],[6080,6106],{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},[149,163],{"desc":"795","fix":"796"},"no-global-assign","no-unsafe-negation",{"desc":"797","fix":"798"},[5837,5863],[6134,6160],[6213,6229],"'hasViralLoad'",[6471,6497],[6766,6792],[7059,7085],[7229,7255],{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"781","fix":"805"},[184,198],{"desc":"806","fix":"807"},[4812,4838],[5079,5105],[5418,5444],[5688,5714],[5956,5982],[6080,6106],{"desc":"791","fix":"808"},{"desc":"785","fix":"809"},{"desc":"810","fix":"811"},{"desc":"806","fix":"812"},{"desc":"806","fix":"813"},"Update the dependencies array to be: [locationState]",{"range":"814","text":"815"},"Update the dependencies array to be: [PatientCurrentStatus, props.patientObj]",{"range":"816","text":"817"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"818","text":"819"},"Update the dependencies array to be: [objValues.age, props]",{"range":"820","text":"821"},"Update the dependencies array to be: [props.extra.riskAssessment, props.patientObj]",{"range":"822","text":"823"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"824","text":"825"},"Update the dependencies array to be: [objValues.age, props.patientObj, props.extra.age, getStates, props, country]",{"range":"826","text":"827"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients]",{"range":"828","text":"829"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"830","text":"831"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, recency]",{"range":"832","text":"833"},"Update the dependencies array to be: [props.patientObj, recency]",{"range":"834","text":"835"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment, riskAssessmentPartner, stiScreening, tbScreening]",{"range":"836","text":"837"},{"range":"838","text":"815"},"Update the dependencies array to be: [patients]",{"range":"839","text":"840"},{"range":"841","text":"825"},{"range":"842","text":"819"},"Update the dependencies array to be: [props.patientObj, riskAssessment]",{"range":"843","text":"844"},{"range":"845","text":"840"},{"range":"846","text":"840"},[7824,7826],"[locationState]",[2333,2351],"[PatientCurrentStatus, props.patientObj]",[4922,4964],"[props.patientObj, postTest.hivTestResult, postTest]",[4891,4906],"[objValues.age, props]",[4928,4946],"[props.extra.riskAssessment, props.patientObj]",[6132,6219],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[10938,10988],"[objValues.age, props.patientObj, props.extra.age, getStates, props, country]",[978,1014],"[props.patientObj, props.activePage, patients]",[4738,4757],"[postTest, props.patientObj]",[7286,7355],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, recency]",[8041,8060],"[props.patientObj, recency]",[8477,8496],"[knowledgeAssessment, props.patientObj, riskAssessment, riskAssessmentPartner, stiScreening, tbScreening]",[7740,7742],[4009,4011],"[patients]",[6132,6219],[4957,4998],[6910,6928],"[props.patientObj, riskAssessment]",[4009,4011],[4009,4011]]