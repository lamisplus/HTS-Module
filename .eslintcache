[{"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"6","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js":"7","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"8","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"9","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\CheckedInPatients.js":"10","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js":"11","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"12","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js":"13","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"14","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"15","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\api.js":"16","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"17","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"18","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"19","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"20","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js":"21","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"22","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"23","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js":"24","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"25","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js":"26","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js":"27","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"28","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js":"29","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js":"30","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"31","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"32","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js":"33","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js":"34","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\utils\\index.js":"35","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\utility\\index.js":"36","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"37","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js":"38","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"39","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js":"40","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"41","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\History.js":"42","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js":"43","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js":"44","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js":"45","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js":"46","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js":"47","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js":"48","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"49","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"50","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"51","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"52","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"53","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"54","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"55","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"56","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js":"57","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js":"58","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"59","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"60","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"61","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"62","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js":"63","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"64","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"65","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"66","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"67","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"68","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"69","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"70","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"71","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"72","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"73","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"74","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"75"},{"size":715,"mtime":1723913123302,"results":"76","hashOfConfig":"77"},{"size":1469,"mtime":1723913123302,"results":"78","hashOfConfig":"77"},{"size":362,"mtime":1723913124520,"results":"79","hashOfConfig":"77"},{"size":8947,"mtime":1723913124542,"results":"80","hashOfConfig":"77"},{"size":4811,"mtime":1724931995507,"results":"81","hashOfConfig":"77"},{"size":28849,"mtime":1724967451033,"results":"82","hashOfConfig":"77"},{"size":13673,"mtime":1723913166670,"results":"83","hashOfConfig":"77"},{"size":4266,"mtime":1723913166439,"results":"84","hashOfConfig":"77"},{"size":2920,"mtime":1723913124558,"results":"85","hashOfConfig":"77"},{"size":8379,"mtime":1724967366961,"results":"86","hashOfConfig":"77"},{"size":10066,"mtime":1723913166423,"results":"87","hashOfConfig":"77"},{"size":9491,"mtime":1724967412197,"results":"88","hashOfConfig":"77"},{"size":129089,"mtime":1725291587370,"results":"89","hashOfConfig":"77"},{"size":27194,"mtime":1724967406308,"results":"90","hashOfConfig":"77"},{"size":10338,"mtime":1724967389314,"results":"91","hashOfConfig":"77"},{"size":485,"mtime":1725292469676,"results":"92","hashOfConfig":"77"},{"size":6540,"mtime":1723913167225,"results":"93","hashOfConfig":"77"},{"size":72733,"mtime":1725291587337,"results":"94","hashOfConfig":"77"},{"size":79799,"mtime":1725293880565,"results":"95","hashOfConfig":"77"},{"size":55676,"mtime":1725291587337,"results":"96","hashOfConfig":"77"},{"size":8671,"mtime":1724967303210,"results":"97","hashOfConfig":"77"},{"size":12541,"mtime":1723913166755,"results":"98","hashOfConfig":"77"},{"size":28448,"mtime":1724967303200,"results":"99","hashOfConfig":"77"},{"size":11202,"mtime":1724967303193,"results":"100","hashOfConfig":"77"},{"size":82996,"mtime":1724967303210,"results":"101","hashOfConfig":"77"},{"size":66598,"mtime":1725291587337,"results":"102","hashOfConfig":"77"},{"size":104132,"mtime":1725291587337,"results":"103","hashOfConfig":"77"},{"size":40089,"mtime":1725291587337,"results":"104","hashOfConfig":"77"},{"size":89006,"mtime":1725291587356,"results":"105","hashOfConfig":"77"},{"size":121480,"mtime":1725291587348,"results":"106","hashOfConfig":"77"},{"size":2102,"mtime":1724967303213,"results":"107","hashOfConfig":"77"},{"size":6819,"mtime":1724967362350,"results":"108","hashOfConfig":"77"},{"size":3094,"mtime":1723913167141,"results":"109","hashOfConfig":"77"},{"size":8407,"mtime":1724967303213,"results":"110","hashOfConfig":"77"},{"size":1210,"mtime":1723913167410,"results":"111","hashOfConfig":"77"},{"size":15497,"mtime":1724967303250,"results":"112","hashOfConfig":"77"},{"size":7778,"mtime":1724967303213,"results":"113","hashOfConfig":"77"},{"size":5127,"mtime":1724967303213,"results":"114","hashOfConfig":"77"},{"size":40755,"mtime":1725291587356,"results":"115","hashOfConfig":"77"},{"size":7668,"mtime":1724967303213,"results":"116","hashOfConfig":"77"},{"size":28648,"mtime":1724967376013,"results":"117","hashOfConfig":"77"},{"size":7329,"mtime":1724967328357,"results":"118","hashOfConfig":"77"},{"size":65194,"mtime":1725291587367,"results":"119","hashOfConfig":"77"},{"size":28251,"mtime":1725291587348,"results":"120","hashOfConfig":"77"},{"size":10589,"mtime":1724967303213,"results":"121","hashOfConfig":"77"},{"size":125642,"mtime":1725291587370,"results":"122","hashOfConfig":"77"},{"size":2277,"mtime":1723913166940,"results":"123","hashOfConfig":"77"},{"size":88404,"mtime":1725291587356,"results":"124","hashOfConfig":"77"},{"size":30280,"mtime":1724967303213,"results":"125","hashOfConfig":"77"},{"size":12541,"mtime":1723913166539,"results":"126","hashOfConfig":"77"},{"size":44932,"mtime":1725291587376,"results":"127","hashOfConfig":"77"},{"size":35768,"mtime":1725291587381,"results":"128","hashOfConfig":"77"},{"size":44328,"mtime":1725291635941,"results":"129","hashOfConfig":"77"},{"size":82237,"mtime":1725293920396,"results":"130","hashOfConfig":"77"},{"size":2199,"mtime":1724967303238,"results":"131","hashOfConfig":"77"},{"size":81774,"mtime":1724967303213,"results":"132","hashOfConfig":"77"},{"size":62951,"mtime":1725291587381,"results":"133","hashOfConfig":"77"},{"size":10312,"mtime":1724967303213,"results":"134","hashOfConfig":"77"},{"size":7777,"mtime":1724967303238,"results":"135","hashOfConfig":"77"},{"size":40755,"mtime":1725291587381,"results":"136","hashOfConfig":"77"},{"size":1137,"mtime":1723913167341,"results":"137","hashOfConfig":"77"},{"size":2530,"mtime":1723913167256,"results":"138","hashOfConfig":"77"},{"size":49164,"mtime":1725291587367,"results":"139","hashOfConfig":"77"},{"size":38723,"mtime":1725291587365,"results":"140","hashOfConfig":"77"},{"size":31164,"mtime":1724967303213,"results":"141","hashOfConfig":"77"},{"size":12541,"mtime":1723913167056,"results":"142","hashOfConfig":"77"},{"size":114935,"mtime":1725293999406,"results":"143","hashOfConfig":"77"},{"size":2177,"mtime":1723913167209,"results":"144","hashOfConfig":"77"},{"size":83929,"mtime":1724967303213,"results":"145","hashOfConfig":"77"},{"size":36731,"mtime":1725291587356,"results":"146","hashOfConfig":"77"},{"size":1172,"mtime":1723913167378,"results":"147","hashOfConfig":"77"},{"size":1540,"mtime":1723913167378,"results":"148","hashOfConfig":"77"},{"size":1163,"mtime":1723913167341,"results":"149","hashOfConfig":"77"},{"size":7777,"mtime":1724967303213,"results":"150","hashOfConfig":"77"},{"size":41244,"mtime":1725291587370,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},"1m6m577",{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"155"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165","usedDeprecatedRules":"155"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"155"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"155"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"155"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"155"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"182","usedDeprecatedRules":"155"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"185","usedDeprecatedRules":"155"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"155"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"155"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"216","usedDeprecatedRules":"155"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"155"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"155"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"235","usedDeprecatedRules":"155"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"155"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"155"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"155"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"155"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"155"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"155"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"155"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"155"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"264","usedDeprecatedRules":"155"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"155"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"155"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"155"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"155"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"155"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"155"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"155"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"155"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"155"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"155"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"155"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"155"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"155"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\index.js",["343"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["344","345"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\App.js",["346"],"import React from \"react\";\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Home from \"./main/webapp/jsx/components/Home\";\nimport RegisterPatient from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\n//import RegisterPatientEnrollment from './main/webapp/jsx/components/Patient/RegisterPatientEnrollment';\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\n// import HIVSTPatientRegistration from './main/webapp/jsx/components/Patient/HIVST/HIVSTPatientRegistration';\nimport HIVSTPatient from \"./main/webapp/jsx/components/Patient/HIVST/HIVSTPatient\";\n\nexport default function App() {\n  return (\n    <div>\n      <ToastContainer />\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/patient-history\">\n          <PatientDetail />\n        </Route>\n        <Route path=\"/register-patient\">\n          <RegisterPatient />\n        </Route>\n        <Route path=\"/register-hivst-patient\">\n          <HIVSTPatient />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Home.js",["347","348","349","350"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../api\";\nimport { token as token } from \"./../../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\nimport Dashboard from \"./Patient/PatientList\";\nimport HTSList from \"./Patient/HTSList\";\nimport VisualisationHome from \"./Visualisation/Index\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport HIVSTPatient from \"./Patient/HIVST/HIVSTPatient\";\nimport CheckedInPatients from \"./Patient/CheckedInPatients\";\nimport { getListOfPermission } from \"../../utility\";\nimport { getAcount } from \"../../utility\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n  const [key, setKey] = useState(\"home\");\n\n  const getPermissions = async () => {\n    await axios\n      .get(`${baseUrl}account`, {\n        \n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        \n        let staticPermission =[\n          \"admin_read\",\n          \"admin_delete\",\n          \"all_permission\",\n          \"admin_write\"\n      ]\n\n      localStorage.setItem(\"permissions\", staticPermission);\n      localStorage.setItem(\"FacId\", response.data.currentOrganisationUnitId);\n\n        //*** UNCOMMENT WHEN THE POC IS READY \n        // let generatedPermission = getListOfPermission(\n        //   response.data.permissions\n        // );\n        // localStorage.setItem(\"permissions\", response.data.permissions);\n            /********* THE END  */\n\n\n\n\n\n      \n         let generatedPermission = getListOfPermission(\n          staticPermission\n        );\n     \n        localStorage.setItem(\n          \"generatedPermission\",\n          JSON.stringify(generatedPermission)\n        );\n        let stringifiedPermmision = generatedPermission.map((each, index) => {\n          return each.name;\n        });\n\n        localStorage.setItem(\n          \"stringifiedPermmision\",\n          JSON.stringify(stringifiedPermmision)\n        );\n\n        console.log(\n          \"permissison and permission\",\n          stringifiedPermmision,\n          getListOfPermission(staticPermission)\n        );\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    getPermissions();\n    const permissions = localStorage.getItem(\"permissions\")?.split(\",\");\n    console.log(\"perms\", permissions);\n  }, []);\n\n  return (\n    <Fragment>\n      <div\n        className=\"row page-titles mx-0\"\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\n      >\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item active\">\n            <h4>HTS</h4>\n          </li>\n        </ol>\n      </div>\n      <Link to={\"register-patient\"}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"mt-2 mr-3 mb-0 float-end\"\n          startIcon={<FaUserPlus size=\"10\" />}\n          style={{ backgroundColor: \"#014d88\" }}\n        >\n          <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n        </Button>\n      </Link>\n      {/*  <Link to={key === \"hivst\" ? \"register-hivst-patient\" : \"register-patient\"}>*/}\n      {/*      <Button*/}\n      {/*          variant=\"contained\"*/}\n      {/*          color=\"primary\"*/}\n      {/*          className=\"mt-2 mr-3 mb-0 float-end\"*/}\n      {/*          startIcon={<FaUserPlus size=\"10\" />}*/}\n      {/*          style={{ backgroundColor: \"#014d88\" }}*/}\n      {/*      >*/}\n      {/*    <span style={{ textTransform: \"capitalize\" }}>*/}\n      {/*      {key === \"hivst\" ? \"New HIVST Patient\" : \"New Patient\"}*/}\n      {/*    </span>*/}\n      {/*      </Button>*/}\n      {/*  </Link>*/}\n      <br />\n      <br /> <br />\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"home\" title=\"Patients\">\n                    <Dashboard />\n                  </Tab>\n                  <Tab eventKey=\"checkedin\" title=\"Checked-In Patients\">\n                    <CheckedInPatients />\n                  </Tab>\n                  <Tab eventKey=\"hts\" title=\"HTS Patients\">\n                    <HTSList />\n                  </Tab>\n\n                  <Tab eventKey=\"hivst\" title=\"HIVST Patients\">\n                    <HIVSTPatient />\n                  </Tab>\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n//import {TiArrowBack} from 'react-icons/ti'\n//import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport BasicInfo from \"./NewRegistration/BasicInfo\";\nimport PreTest from \"./NewRegistration/PreTest\";\nimport HivTestResult from \"./NewRegistration/HivTestResult\";\nimport IndexingContactTracing from \"./NewRegistration/Elicitation/Index\";\nimport Others from \"./NewRegistration/Others\";\nimport PostTest from \"./NewRegistration/PostTest\";\nimport RecencyTesting from \"./NewRegistration/RecencyTesting\";\nimport RiskStratification from \"./NewRegistration/RiskStratification\";\nimport ClientRefferalForm from \"./NewRegistration/RefferalForm\";\nimport { getAcount } from \"../../../utility\";\nimport { getCheckModality } from \"../../../utility\";\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\nimport FamilyIndexHistory from \"./NewRegistration/PartnerNotificationServices/FamilyIndexhIstory\";\nimport ViewFamilyIndexTestingForm from \"./NewRegistration/PartnerNotificationServices/ViewFamilyIndexForm\";\nimport { getPreviousForm } from \"../../../utility\";\nimport { calculate_age } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst UserRegistration = (props) => {\n  //const classes = useStyles();\n  const location = useLocation();\n  const locationState = location.state;\n  const history = useHistory();\n  const [saving, setSaving] = useState(false);\n  const [activeItem, setactiveItem] = useState(\"risk\");\n  const [completed, setCompleted] = useState([]);\n  const [basicInfo, setBasicInfo] = useState({});\n  const [organizationInfo, setOrganizationInfo] = useState({});\n  const [patientObjAge, setPatientObjAge] = useState(0);\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\n  const [row, setRow] = useState({});\n  const [showBackButton, setShowBackButton] = useState(false);\n\n  const handleItemClick = (activeItem) => {\n    setactiveItem(activeItem);\n\n    //setCompleted({...completed, ...completedMenu})\n  };  const [action, setAction] = useState(\"\");\n\n  const [permissions, setPermission] = useState(\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\n  );\n\n  const getFacilityAccount = () => {\n    getAcount()\n      .then((response) => {\n      })\n      .catch(() => {});\n  };\n  const [selectedRow, setSelectedRow] = useState({});\n  const [extra, setExtra] = useState({\n    risk: \"\",\n    index: \"\",\n    pre: \"\",\n    post: \"\",\n    recency: \"\",\n    elicitation: \"\",\n  });\n  const [patientObj, setPatientObj] = useState({\n    breastFeeding: \"\",\n    capturedBy: \"\",\n    riskStratificationCode: \"\",\n    cd4: {},\n    clientCode: \"\",\n    confirmatoryTest: {},\n    dateVisit: \"\",\n    extra: {},\n    firstTimeVisit: \"\",\n    hepatitisTesting: {},\n    hivTestResult: \"\",\n    id: \"\",\n    indexClient: \"\",\n    indexClientCode: \"\",\n    indexElicitation: [\n      {\n        address: \"\",\n        altPhoneNumber: \"\",\n        archived: 0,\n        currentlyLiveWithPartner: true,\n        datePartnerCameForTesting: \"\",\n        dob: \"\",\n        extra: {},\n        facilityId: 0,\n        firstName: \"\",\n        hangOutSpots: \"\",\n        htsClient: {\n          archived: 0,\n          breastFeeding: 0,\n          capturedBy: \"\",\n          cd4: {},\n          clientCode: \"\",\n          confirmatoryTest: {},\n          dateVisit: \"\",\n          extra: {},\n          facilityId: 0,\n          firstTimeVisit: true,\n          hepatitisTesting: {},\n          hivTestResult: \"\",\n          id: 0,\n          indexClient: true,\n          indexClientCode: \"\",\n          indexNotificationServicesElicitation: {},\n          knowledgeAssessment: {},\n          numChildren: 0,\n          numWives: 0,\n          others: {},\n          person: {\n            active: \"\",\n            address: {},\n            archived: 0,\n            contact: {},\n            contactPoint: {},\n            createdDate: \"\",\n            dateOfBirth: \"\",\n            dateOfRegistration: \"\",\n            deceased: true,\n            deceasedDateTime: \"\",\n            education: {},\n            employmentStatus: {},\n            emrId: \"\",\n            facilityId: 0,\n            firstName: \"string\",\n            gender: {},\n            hospitalNumber: \"\",\n            id: \"\",\n            identifier: {},\n            isDateOfBirthEstimated: true,\n            lastModifiedDate: \"\",\n            maritalStatus: {},\n            new: true,\n            ninNumber: \"\",\n            organization: {},\n            otherName: \"\",\n            sex: \"\",\n            surname: \"\",\n            uuid: \"\",\n          },\n          personUuid: \"\",\n          postTestCounselingKnowledgeAssessment: {},\n          pregnant: \"\",\n          previouslyTested: true,\n          recency: {},\n          referredFrom: \"\",\n          relationWithIndexClient: \"\",\n          riskAssessment: {},\n          sexPartnerRiskAssessment: {},\n          stiScreening: {},\n          syphilisTesting: {},\n          targetGroup: 0,\n          tbScreening: {},\n          test1: {},\n          testingSetting: \"\",\n          tieBreakerTest: {},\n          typeCounseling: \"\",\n          uuid: \"\",\n        },\n        htsClientUuid: \"\",\n        id: \"\",\n        isDateOfBirthEstimated: true,\n        lastName: \"\",\n        middleName: \"\",\n        notificationMethod: \"\",\n        partnerTestedPositive: \"\",\n        phoneNumber: \"\",\n        physicalHurt: \"\",\n        relationshipToIndexClient: \"\",\n        sex: \"\",\n        sexuallyUncomfortable: \"\",\n        threatenToHurt: \"\",\n        uuid: \"\",\n      },\n    ],\n    indexNotificationServicesElicitation: {},\n    knowledgeAssessment: {},\n    numChildren: \"\",\n    numWives: \"\",\n    others: {},\n    personId: \"\",\n    personResponseDto: {\n      active: true,\n\n      address: {\n        address: [\n          {\n            city: \"\",\n            line: [\"\"],\n            stateId: \"\",\n            district: \"\",\n            countryId: 1,\n            postalCode: \"\",\n            organisationUnitId: 0,\n          },\n        ],\n      },\n      biometricStatus: true,\n      checkInDate: \"\",\n      contact: {},\n      contactPoint: {\n        contactPoint: [\n          {\n            type: \"phone\",\n            value: \"\",\n          },\n        ],\n      },\n      dateOfBirth: \"\",\n      dateOfRegistration: \"\",\n      deceased: true,\n      deceasedDateTime: \"\",\n      education: {},\n      employmentStatus: {},\n      emrId: \"\",\n      encounterDate: \"\",\n      facilityId: \"\",\n      firstName: \"\",\n      gender: {},\n      id: \"\",\n      identifier: {},\n      isDateOfBirthEstimated: true,\n      maritalStatus: {},\n      ninNumber: \"\",\n      organization: {},\n      otherName: \"\",\n      sex: \"\",\n      surname: \"\",\n      visitId: \"\",\n    },\n    postTestCounselingKnowledgeAssessment: {},\n    pregnant: \"\",\n    previouslyTested: \"\",\n    recency: {},\n    referredFrom: \"\",\n    relationWithIndexClient: \"\",\n    riskAssessment: {},\n    sexPartnerRiskAssessment: {},\n    stiScreening: {},\n    syphilisTesting: {},\n    targetGroup: \"\",\n    tbScreening: {},\n    test1: {},\n    testingSetting: \"\",\n    tieBreakerTest: {},\n    typeCounseling: \"\",\n    riskStratificationResponseDto: null,\n  });\n  const [modalityCheck, setModalityCheck] = useState(\"\");\n\n  useEffect(() => {\n    getFacilityAccount();\n    if (locationState && locationState.patientObj) {\n      setPatientObj(locationState.patientObj);\n    }\n  }, []);\n\n\n  const getPrevForm=(e)=>{\n\n      e.preventDefault()\n          let age = calculate_age(\n            basicInfo?.personResponseDto?.dateOfBirth\n              ? basicInfo?.personResponseDto?.dateOfBirth\n              : patientObj?.personResponseDto?.dateOfBirth\n          );\n\n          let hivStatus = patientObj?.hivTestResult;\n      let answer =  getPreviousForm(\"Nigeria_PNS_Form\", age, \"\", hivStatus); \n   if (answer[0]  && answer[1]) {\n     handleItemClick(answer[0]);\n   }else{\n       history.push(\"/\");\n\n   }\n  } \n\n  useEffect(() => {\n  \n    setModalityCheck(\n      getCheckModality(patientObj?.riskStratificationResponseDto?.modality)\n    );\n  }, [patientObj]);\n  return (\n    <>\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <div\n        className=\"row page-titles mx-0\"\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\n      >\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item active\">\n            <h4>\n              HTS /{\" \"}\n              <span\n                style={{\n                  color: \"#014D88\",\n                  fontSize: \"1.1rem\",\n                  fontWeight: \"bolder\",\n                }}\n              >\n                NEW HTS CLIENT\n              </span>\n            </h4>\n          </li>\n        </ol>\n      </div>\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <h3>\n                HIV COUNSELLING AND TESTING\n                {activeItem === \"pns\" || activeItem === \"pns-history\" ? (\n                  <div>\n                    {/* <Link to={\"/\"}> */}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\" float-end\"\n                      //startIcon={<FaUserPlus size=\"10\"/>}\n                      onClick={getPrevForm}\n                      style={{ backgroundColor: \"#014d88\" }}\n                    >\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                    </Button>\n                    {/* </Link> */}\n                  </div>\n                ) : (\n                  <div>\n                    <Link to={\"/\"}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\" float-end\"\n                        //startIcon={<FaUserPlus size=\"10\"/>}\n                        style={{ backgroundColor: \"#014d88\" }}\n                        // onClick={LoadViewPage}\n                      >\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Back\n                        </span>\n                      </Button>\n                    </Link>\n                  </div>\n                )}\n              </h3>\n              <br />\n              <br />\n\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\n                <Menu\n                  size=\"large\"\n                  vertical\n                  style={{ backgroundColor: \"#014D88\" }}\n                >\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"risk\"}\n                    onClick={() => handleItemClick(\"risk\")}\n                    style={{\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\n                    }}\n                    disabled={activeItem !== \"risk\" ? true : false}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Risk Stratification\n                      {completed.includes(\"risk\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>\n\n                  {hideOtherMenu == false && (\n                    <>\n                      <Menu.Item\n                        name=\"inbox\"\n                        active={activeItem === \"basic\"}\n                        onClick={() => handleItemClick(\"basic\")}\n                        style={{\n                          backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\n                        }}\n                        disabled={activeItem !== \"basic\" ? true : false}\n                      >\n                        <span style={{ color: \"#fff\" }}>\n                          {\" \"}\n                          Basic Information\n                          {completed.includes(\"basic\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n\n                      {patientObj?.riskStratificationResponseDto?.age >= 15 &&\n                        modalityCheck == \"fill\" && (\n                          <Menu.Item\n                            name=\"spam\"\n                            active={activeItem === \"pre-test-counsel\"}\n                            onClick={() => handleItemClick(\"pre-test-counsel\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\n                            }}\n                            disabled={\n                              activeItem !== \"pre-test-counsel\" ? true : false\n                            }\n                          >\n                            {/* <Label>2</Label> */}\n                            <span style={{ color: \"#fff\" }}>\n                              Pre Test Counseling\n                              {completed.includes(\"pre-test-counsel\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n\n                      {permissions.includes(\"Request_and_Result_Form\") && (\n                        <Menu.Item\n                          name=\"inbox\"\n                          active={activeItem === \"hiv-test\"}\n                          onClick={() => handleItemClick(\"hiv-test\")}\n                          style={{\n                            backgroundColor:\n                              activeItem === \"hiv-test\" ? \"#000\" : \"\",\n                          }}\n                          disabled={activeItem !== \"hiv-test\" ? true : false}\n                        >\n                          <span style={{ color: \"#fff\" }}>\n                            Request {\"&\"} Result Form\n                            {completed.includes(\"hiv-test\") && (\n                              <Icon name=\"check\" color=\"green\" />\n                            )}\n                          </span>\n                        </Menu.Item>\n                      )}\n                      <Menu.Item\n                        name=\"spam\"\n                        active={activeItem === \"post-test\"}\n                        onClick={() => handleItemClick(\"post-test\")}\n                        style={{\n                          backgroundColor:\n                            activeItem === \"post-test\" ? \"#000\" : \"\",\n                        }}\n                        disabled={activeItem !== \"post-test\" ? true : false}\n                      >\n                        {/* <Label>4</Label> */}\n                        <span style={{ color: \"#fff\" }}>\n                          Post Test Counseling\n                          {completed.includes(\"post-test\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                      {patientObj.hivTestResult &&\n                        patientObj.hivTestResult.toLowerCase() === \"positive\" &&\n                        patientObj?.riskStratificationResponseDto?.age >=\n                          15 && (\n                          <Menu.Item\n                            name=\"spam\"\n                            active={activeItem === \"recency-testing\"}\n                            onClick={() => handleItemClick(\"recency-testing\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"recency-testing\" ? \"#000\" : \"\",\n                            }}\n                            disabled={\n                              activeItem !== \"recency-testing\" ? true : false\n                            }\n                          >\n                            {/* <Label>4</Label> */}\n                            <span style={{ color: \"#fff\" }}>\n                              HIV Recency Testing\n                              {completed.includes(\"recency-testing\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n\n                      {patientObj.hivTestResult &&\n                        patientObj.hivTestResult.toLowerCase() ===\n                          \"positive\" && (\n                          <Menu.Item\n                            name=\"inbox\"\n                            active={activeItem === \"fit\"}\n                            onClick={() => handleItemClick(\"fit\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"fit\" ? \"#000\" : \"\",\n                            }}\n                            disabled={completed.includes(\"fit\") ? true : false}\n                          >\n                            <span style={{ color: \"#fff\" }}>\n                              Family Index Testing form\n                              {completed.includes(\"fit\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n\n                      {permissions.includes(\"Nigeria_PNS_Form\") &&\n                        patientObj.hivTestResult &&\n                        patientObj.hivTestResult.toLowerCase() ===\n                          \"positive\" && (\n                          <Menu.Item\n                            name=\"inbox\"\n                            active={activeItem === \"pns\"}\n                            onClick={() => handleItemClick(\"pns\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"pns\" ? \"#000\" : \"\",\n                            }}\n                          >\n                            <span style={{ color: \"#fff\" }}>\n                              {\" \"}\n                              Partner Notification Services\n                              {completed.includes(\"pns\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n\n                      {permissions.includes(\"Referral_Form\") && (\n                        <Menu.Item\n                          name=\"inbox\"\n                          active={activeItem === \"refferal-history\"}\n                          onClick={() => handleItemClick(\"refferal-history\")}\n                          style={{\n                            backgroundColor:\n                              activeItem === \"refferal-history\" ? \"#000\" : \"\",\n                          }}\n                        >\n                          <span style={{ color: \"#fff\" }}>\n                            {\" \"}\n                            Client Referral Service\n                            {completed.includes(\"refferal\") && (\n                              <Icon name=\"check\" color=\"green\" />\n                            )}\n                          </span>\n                        </Menu.Item>\n                      )}\n                    </>\n                  )}\n                </Menu>\n              </div>\n\n              <div\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\n                style={{\n                  backgroundColor: \"#fff\",\n                  margingLeft: \"-50px\",\n                  paddingLeft: \"-20px\",\n                }}\n              >\n                {activeItem === \"risk\" && (\n                  <RiskStratification\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setPatientObjAge={setPatientObjAge}\n                    setHideOtherMenu={setHideOtherMenu}\n                    setExtra={setExtra}\n                    extra={extra}\n                    setOrganizationInfo={setOrganizationInfo}\n                  />\n                )}\n                {activeItem === \"basic\" && (\n                  <BasicInfo\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setPatientObjAge={setPatientObjAge}\n                    setExtra={setExtra}\n                    extra={extra}\n                    setBasicInfo={setBasicInfo}\n                  />\n                )}\n                {activeItem === \"pre-test-counsel\" && (\n                  <PreTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"hiv-test\" && (\n                  <HivTestResult\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"post-test\" && (\n                  <PostTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"indexing\" && (\n                  <IndexingContactTracing\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"recency-testing\" && (\n                  <RecencyTesting\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"others\" && (\n                  <Others\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                  />\n                )}\n                {activeItem === \"fit\" && (\n                  <FamilyIndexTestingForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    history={false}\n                  />\n                )}\n\n                {activeItem === \"fit-history\" && (\n                  <FamilyIndexHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={true}\n                    nextButton={true}\n                    selectedRow={selectedRow}\n                    setSelectedRow={setSelectedRow}\n\n                    // row={row}\n                    setAction={setAction}\n                  />\n                )}\n\n                {activeItem === \"view-fit\" && (\n                  <ViewFamilyIndexTestingForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    action={action}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                    selectedRow={selectedRow}\n                  />\n                )}\n\n                {activeItem === \"pns\" && (\n                  <PnsForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                  />\n                )}\n\n                {activeItem === \"client-referral\" && (\n                  <RefferralUnit\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                  />\n                )}\n                {activeItem === \"refferal-history\" && (\n                  <ClientReferralHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setRow={setRow}\n                  />\n                )}\n                {activeItem === \"view-referral\" && (\n                  <ViewClientReferral\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                  />\n                )}\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default UserRegistration;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js",["365","366"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\n// import { token as token, url as baseUrl } from \"./../../../api\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n//Dtate Picker package\nMoment.locale(\"en\");\nconst HIVSTPatient = () => {\n    //const [patientList, setPatientList] = useState([])\n    //const [loading, setLoading] = useState(false)\n    const [showPPI, setShowPPI] = useState(true);\n    //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n    useEffect(() => {\n        //patients()\n    }, []);\n\n    const handleCheckBox = (e) => {\n        if (e.target.checked) {\n            setShowPPI(false);\n        } else {\n            setShowPPI(true);\n        }\n    };\n\n    return (\n        <div>\n            <MaterialTable\n                icons={tableIcons}\n                title=\"Find HTS Patient \"\n                columns={[\n                    // { title: \" ID\", field: \"Id\" },\n                    {\n                        title: \"Patient Name\",\n                        field: \"name\",\n                        hidden: showPPI,\n                    },\n                    // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                    { title: \"Client Code\", field: \"clientCode\", filtering: false },\n                    // { title: \"Sex\", field: \"gender\", filtering: false },\n                    { title: \"Age\", field: \"age\", filtering: false },\n\n                    //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n                    { title: \"HIVST Count\", field: \"count\", filtering: false },\n                    { title: \"Actions\", field: \"actions\", filtering: false },\n                ]}\n                data={(query) =>\n                    new Promise((resolve, reject) =>\n                        axios\n                            .get(\n                                `${baseUrl}hivst/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                                { headers: { Authorization: `Bearer ${token}` } }\n                            )\n                            .then((response) => response)\n                            .then((result) => {\n                                //setLoading(false)\n                                resolve({\n                                    data:\n                                        result?.data?.records &&\n                                        result?.data?.records\n                                            .filter((client) => {\n                                                return client.clientCode !== null;\n                                            })\n                                            .map((row) => ({\n                                                //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                                                name: row.firstName + \" \" + row.surname,\n                                                // hospital_number: row.hospitalNumber,\n                                                clientCode: row.clientCode,\n                                                gender: row.gender,\n                                                age: row.age,\n                                                count: (\n                                                    <Label color=\"blue\" size=\"mini\">\n                                                        {row.hivstCount}\n                                                    </Label>\n                                                ),\n                                                actions: (\n                                                    <div>\n                                                        {row.hivstCount >= 0 && (\n                                                            <>\n                                                                <Link\n                                                                    to={{\n                                                                        pathname: \"/patient-history\",\n                                                                        state: {\n                                                                            patientObject: row,\n                                                                            patientObj: row,\n                                                                            clientCode: row.clientCode,\n                                                                        },\n                                                                    }}\n                                                                >\n                                                                    <ButtonGroup\n                                                                        variant=\"contained\"\n                                                                        aria-label=\"split button\"\n                                                                        style={{\n                                                                            backgroundColor: \"rgb(153, 46, 98)\",\n                                                                            height: \"30px\",\n                                                                            width: \"215px\",\n                                                                        }}\n                                                                        size=\"large\"\n                                                                    >\n                                                                        <Button\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            aria-label=\"select merge strategy\"\n                                                                            aria-haspopup=\"menu\"\n                                                                            style={{\n                                                                                backgroundColor: \"rgb(153, 46, 98)\",\n                                                                            }}\n                                                                        >\n                                                                            <MdDashboard />\n                                                                        </Button>\n                                                                        <Button\n                                                                            style={{\n                                                                                backgroundColor: \"rgb(153, 46, 98)\",\n                                                                            }}\n                                                                        >\n                                                                            <span\n                                                                                style={{\n                                                                                    fontSize: \"12px\",\n                                                                                    color: \"#fff\",\n                                                                                    fontWeight: \"bolder\",\n                                                                                }}\n                                                                            >\n                                                                                Patient Dashboard\n                                                                            </span>\n                                                                        </Button>\n                                                                    </ButtonGroup>\n                                                                </Link>\n                                                            </>\n                                                        )}\n                                                    </div>\n                                                ),\n                                            })),\n                                    page: query.page,\n                                    totalCount: result.data.totalRecords,\n                                });\n                                //setLoading(false)\n                            })\n                    )\n                }\n                options={{\n                    headerStyle: {\n                        backgroundColor: \"#014d88\",\n                        color: \"#fff\",\n                    },\n                    searchFieldStyle: {\n                        width: \"200%\",\n                        margingLeft: \"250px\",\n                    },\n                    filtering: false,\n                    exportButton: false,\n                    searchFieldAlignment: \"left\",\n                    pageSizeOptions: [10, 20, 100],\n                    pageSize: 10,\n                    debounceInterval: 400,\n                }}\n                components={{\n                    Toolbar: (props) => (\n                        <div>\n                            <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    name=\"showPP!\"\n                                    id=\"showPP\"\n                                    value=\"showPP\"\n                                    checked={showPPI === true ? false : true}\n                                    onChange={handleCheckBox}\n                                    style={{\n                                        border: \"1px solid #014D88\",\n                                        borderRadius: \"0.25rem\",\n                                    }}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                                    <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                                        SHOW PII\n                                    </b>\n                                </label>\n                            </div>\n                            <MTableToolbar {...props} />\n                        </div>\n                    ),\n                }}\n            />\n        </div>\n    );\n};\nexport default HIVSTPatient","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["367","368"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport PatientCardDetail from \"./PatientCard\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport PatientHistory from \"./../History/PatientHistory\";\nimport PatientHtsEnrollment from \"./PatientHtsEnrollment\";\nimport ViewEditHivst from \"../Patient/HIVST/ViewEditHivst\";\nimport { calculate_age } from \"../utils\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"20.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  let history = useHistory();\n  const patientObject =\n    history.location && history.location.state\n      ? history.location.state.patientObject\n      : {};\n  const patientObj =\n    history.location && history.location.state\n      ? history.location.state.patientObj\n      : {};\n  const clientCode =\n    history.location && history.location.state\n      ? history.location.state.clientCode\n      : \"\";\n\n  const [activePage, setActivePage] = useState({\n    activePage: \"home\",\n    activeObject: {},\n    actionType: \"\",\n  });\n  useEffect(() => {}, [activePage]);\n  const patientAge = calculate_age(\n    moment(patientObj.dateOfBirth).format(\"YYYY-MM-DD\")\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className=\"row page-titles mx-0\"\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\n      >\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item active\">\n            <h4>\n              {\" \"}\n              <Link to={\"/\"}>HTS /</Link> Patient Dashboard\n            </h4>\n          </li>\n        </ol>\n      </div>\n      <Card>\n        <CardContent>\n          <PatientCardDetail\n            patientObj={patientObj}\n            clientCode={clientCode}\n            patientObject={patientObject}\n          />\n          {activePage.activePage === \"home\" && (\n            <PatientHistory\n              patientObj={patientObj}\n              activePage={\n                history?.location?.state?.activepage\n                  ? history?.location?.state?.activepage\n                  : \"home\"\n              }\n              checkedInPatient={\n                history?.location?.state?.checkedInPatient\n                  ? history?.location?.state?.checkedInPatient\n                  : \"\"\n              }\n              setActivePage={setActivePage}\n              clientCode={clientCode}\n              patientAge={patientAge}\n              patientObject={patientObject}\n            />\n          )}\n          {activePage.activePage === \"view\" && (\n            <PatientHtsEnrollment\n              patientObj={patientObj}\n              activePage={activePage}\n              setActivePage={setActivePage}\n              clientCode={clientCode}\n              patientAge={patientAge}\n              patientObject={patientObject}\n            />\n          )}\n\n          {activePage.activePage === \"hivst_view\" && (\n            <ViewEditHivst\n              patientObj={patientObj}\n              activePage={activePage}\n              setActivePage={setActivePage}\n              clientCode={clientCode}\n              patientAge={patientAge}\n              patientObject={patientObject}\n            />\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\CheckedInPatients.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport { calculate_age } from \"../../components/utils\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Card, CardBody } from \"reactstrap\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { TiArrowForward } from \"react-icons/ti\";\nimport { MdDashboard } from \"react-icons/md\";\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst CheckedInPatients = (props) => {\n  const permissions = localStorage.getItem(\"permissions\")?.split(\",\");\n  const [patientList, setPatientList] = useState([]);\n\n  const getServiceCode = () => {\n    axios\n      .get(`${baseUrl}opd-setting`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        let data = response.data;\n        let htsCode = data.find(\n          (item) => item.moduleServiceName.toUpperCase() === \"HTS\"\n        )?.moduleServiceCode;\n        if (htsCode !== null || htsCode !== null) {\n          patients(htsCode);\n        }\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    getServiceCode();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients(htsCode) {\n    axios\n      .get(`${baseUrl}patient/checked-in-by-service/${htsCode}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n\n        setPatientList(response.data.reverse());\n      })\n      .catch((error) => {});\n  }\n\n  const getHospitalNumber = (identifier) => {\n    const identifiers = identifier;\n    const hospitalNumber = identifiers.identifier.find(\n      (obj) => obj.type == \"HospitalNumber\"\n    );\n    return hospitalNumber ? hospitalNumber.value : \"\";\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Checked In Patients \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n          },\n          {\n            title: \"Hospital Number\",\n            field: \"hospital_number\",\n            filtering: false,\n          },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n          //   { title: \"ART Status\", field: \"status\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={patientList.map((row) => ({\n          name: row.fullname,\n          hospital_number: row.hospitalNumber,\n          gender: row.sex,\n          age:\n            row.dateOfBirth === 0 ||\n            row.dateOfBirth === undefined ||\n            row.dateOfBirth === null ||\n            row.dateOfBirth === \"\"\n              ? 0\n              : calculate_age(row.dateOfBirth),\n\n          actions: (\n            <div>\n              <>\n                <Link\n                  to={{\n                    pathname: \"/patient-history\",\n                    state: {\n                      patientObject: row,\n                      patientObj: row,\n                      clientCode: row?.clientCode,\n                      activepage: \"NEW HTS\",\n                      checkedInPatient: true\n                    },\n                  }}\n                >\n                  <ButtonGroup\n                    variant=\"contained\"\n                    aria-label=\"split button\"\n                    style={{\n                      backgroundColor: \"rgb(153, 46, 98)\",\n                      height: \"30px\",\n                      width: \"215px\",\n                    }}\n                    size=\"large\"\n                  >\n                    <Button\n                      color=\"primary\"\n                      size=\"small\"\n                      aria-label=\"select merge strategy\"\n                      aria-haspopup=\"menu\"\n                      style={{\n                        backgroundColor: \"rgb(153, 46, 98)\",\n                      }}\n                    >\n                      <TiArrowForward />\n                    </Button>\n                    <Button\n                      style={{\n                        backgroundColor: \"rgb(153, 46, 98)\",\n                      }}\n                    >\n                      <span\n                        style={{\n                          fontSize: \"12px\",\n                          color: \"#fff\",\n                          fontWeight: \"bolder\",\n                        }}\n                      >\n                        Enroll Patient\n                      </span>\n                    </Button>\n                  </ButtonGroup>\n                </Link>\n              </>\n            </div>\n          ),\n        }))}\n        options={{\n          search: true,\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CheckedInPatients;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js",["383","384"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst HTSList = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find HTS Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/only/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                //setLoading(false)\n                resolve({\n                  data:\n                    result?.data?.records &&\n                    result?.data?.records\n                      .filter((client) => {\n                        return client.clientCode !== null;\n                      })\n                      .map((row) => ({\n                        //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                        name: row.firstName + \" \" + row.surname,\n                        // hospital_number: row.hospitalNumber,\n                        clientCode: row.clientCode,\n                        gender: row.gender,\n                        age: row.age,\n                        count: (\n                          <Label color=\"blue\" size=\"mini\">\n                            {row.htsCount}\n                          </Label>\n                        ),\n                        actions: (\n                          <div>\n                            {row.htsCount >= 0 && (\n                              <>\n                                <Link\n                                  to={{\n                                    pathname: \"/patient-history\",\n                                    state: {\n                                      patientObject: row,\n                                      patientObj: row,\n                                      clientCode: row.clientCode,\n                                    },\n                                  }}\n                                >\n                                  <ButtonGroup\n                                    variant=\"contained\"\n                                    aria-label=\"split button\"\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                      height: \"30px\",\n                                      width: \"215px\",\n                                    }}\n                                    size=\"large\"\n                                  >\n                                    <Button\n                                      color=\"primary\"\n                                      size=\"small\"\n                                      aria-label=\"select merge strategy\"\n                                      aria-haspopup=\"menu\"\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <MdDashboard />\n                                    </Button>\n                                    <Button\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          fontSize: \"12px\",\n                                          color: \"#fff\",\n                                          fontWeight: \"bolder\",\n                                        }}\n                                      >\n                                        Patient Dashboard\n                                      </span>\n                                    </Button>\n                                  </ButtonGroup>\n                                </Link>\n                              </>\n                            )}\n                          </div>\n                        ),\n                      })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HTSList;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["385","386"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst Patients = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                resolve({\n                  data: result.data.records\n                    .filter((a) => {\n                      return a.personId !== null;\n                    })\n                    .map((row) => ({\n                      name: row.firstName + \" \" + row.surname,\n                      // hospital_number: row.hospitalNumber,\n\n                      clientCode: row.clientCode,\n                      gender: row.gender,\n                      age: row.age,\n                      count: (\n                        <Label color=\"blue\" size=\"mini\">\n                          {row.htsCount}\n                        </Label>\n                      ),\n                      actions: (\n                        <div>\n                          {row.htsCount >= 0 && (\n                            <>\n                              <Link\n                                to={{\n                                  pathname: \"/patient-history\",\n                                  state: {\n                                    patientObject: row,\n                                    patientObj: row,\n                                    clientCode: row.clientCode,\n                                  },\n                                }}\n                              >\n                                <ButtonGroup\n                                  variant=\"contained\"\n                                  aria-label=\"split button\"\n                                  style={{\n                                    backgroundColor: \"rgb(153, 46, 98)\",\n                                    height: \"30px\",\n                                    width: \"215px\",\n                                  }}\n                                  size=\"large\"\n                                >\n                                  <Button\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    aria-label=\"select merge strategy\"\n                                    aria-haspopup=\"menu\"\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                    }}\n                                  >\n                                    <MdDashboard />\n                                  </Button>\n                                  <Button\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        fontSize: \"12px\",\n                                        color: \"#fff\",\n                                        fontWeight: \"bolder\",\n                                      }}\n                                    >\n                                      Patient Dashboard\n                                    </span>\n                                  </Button>\n                                </ButtonGroup>\n                              </Link>\n                            </>\n                          )}\n                        </div>\n                      ),\n                    })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Patients;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["415","416","417","418","419","420","421","422","423","424","425","426","427"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getCheckModality } from \"../../../utility\";\n//import {TiArrowBack} from 'react-icons/ti'\n//import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport BasicInfo from \"./NewRegistrationEnrollement/BasicInfo\";\nimport PreTest from \"./NewRegistrationEnrollement/PreTest\";\nimport HivTestResult from \"./NewRegistrationEnrollement/HivTestResult\";\nimport IndexingContactTracing from \"./NewRegistrationEnrollement/Elicitation/Index\";\nimport Others from \"./NewRegistrationEnrollement/Others\";\nimport PostTest from \"./NewRegistrationEnrollement/PostTest\";\nimport RecencyTesting from \"./NewRegistrationEnrollement/RecencyTesting\";\nimport RiskStratification from \"./NewRegistrationEnrollement/RiskStratification\";\n// import FamilyIndexTesting from \"./NewRegistrationEnrollement/familyIndexTesting\";\n// import PartnerNotificationService from \"./NewRegistrationEnrollement/partnerNotificationService\";\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\nimport PNSHistory from \"./NewRegistration/PartnerNotificationServices/PNSHistory\";\nimport ViewPNSForm from \"./NewRegistration/PartnerNotificationServices/ViewPnsForm\";\nimport ViewFamilyIndexTestingForm from \"./NewRegistration/PartnerNotificationServices/ViewFamilyIndexForm\";\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\nimport FamilyIndexHistory from \"./NewRegistration/PartnerNotificationServices/FamilyIndexhIstory\";\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../api\";\nimport { getPreviousForm } from \"../../../utility\";\nimport { calculate_age } from \"../utils\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst UserRegistration = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [activeItem, setactiveItem] = useState(\"basic\");\n  const [completed, setCompleted] = useState([]);\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\n  const [patientObj, setPatientObj] = useState(props.activePage.activeObject);\n  const [extra, setExtra] = useState({\n    risk: \"\",\n    index: \"\",\n    pre: \"\",\n    post: \"\",\n    recency: \"\",\n    elicitation: \"\",\n    familyIndexTesting: \"\",\n    pns: \"\",\n  });\n  const [modalityCheck, setModalityCheck] = useState(\"\");\n  const [permissions, setPermission] = useState(\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\n  );\n  const [selectedRow, setSelectedRow] = useState({});\n\n  const [basicInfo, setBasicInfo] = useState({});\n  const [organizationInfo, setOrganizationInfo] = useState({});\n  const [row, setRow] = useState({});\n  const [action, setAction] = useState(\"\");\n  const [familyIndexList, setFamilyIndexList] = useState([]);\n  const handleItemClick = (activeItem) => {\n    setactiveItem(activeItem);\n    //setCompleted({...completed, ...completedMenu})\n  };\n\n  const handleAction = (activeItem) => {\n    setactiveItem(activeItem);\n    //setCompleted({...completed, ...completedMenu})\n  };\n\n  const LoadViewPage = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"home\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n const getPrevForm = (e) => {\n   e.preventDefault();\n   let age = calculate_age(\n     basicInfo?.personResponseDto?.dateOfBirth\n       ? basicInfo?.personResponseDto?.dateOfBirth\n       : patientObj?.personResponseDto?.dateOfBirth\n   );\n\n   let hivStatus = patientObj?.hivTestResult;\n   let answer = getPreviousForm(\"Nigeria_PNS_Form\", age, \"\", hivStatus);\n   if (answer[0] && answer[1]) {\n     handleItemClick(answer[0]);\n   } else {\n     history.push(\"/\");\n   }\n }; \n  useEffect(() => {\n    setModalityCheck(\n      getCheckModality(patientObj?.riskStratificationResponseDto?.modality)\n    );\n  }, [patientObj]);\n  return (\n    <>\n      <ToastContainer autoClose={3000} hideProgressBar />\n\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <h3>\n                HIV COUNSELLING AND TESTING -{\" \"}\n                {patientObj && patientObj.dateVisit ? patientObj.dateVisit : \"\"}\n                {activeItem === \"pns\" || activeItem === \"pns-history\" ? (\n                  <div>\n                    {/* <Link to={\"/\"}> */}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\" float-end\"\n                      //startIcon={<FaUserPlus size=\"10\"/>}\n                      onClick={getPrevForm}\n                      style={{ backgroundColor: \"#014d88\" }}\n                    >\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                    </Button>\n                    {/* </Link> */}\n                  </div>\n                ) : (\n                  <div>\n                    <Link to={\"/\"}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\" float-end\"\n                        //startIcon={<FaUserPlus size=\"10\"/>}\n                        style={{ backgroundColor: \"#014d88\" }}\n                        onClick={LoadViewPage}\n                      >\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Back\n                        </span>\n                      </Button>\n                    </Link>\n                  </div>\n                )}\n              </h3>\n              <br />\n              <br />\n\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\n                <Menu\n                  size=\"large\"\n                  vertical\n                  style={{ backgroundColor: \"#014D88\" }}\n                >\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"risk\"}\n                    onClick={() => handleItemClick(\"risk\")}\n                    style={{\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Risk Stratification\n                      {completed.includes(\"risk\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"basic\"}\n                    onClick={() => handleItemClick(\"basic\")}\n                    style={{\n                      backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Basic Information\n                      {completed.includes(\"basic\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>\n\n                  {props.patientAge >= 15 && modalityCheck == \"fill\" && (\n                    <Menu.Item\n                      name=\"spam\"\n                      active={activeItem === \"pre-test-counsel\"}\n                      onClick={() => handleItemClick(\"pre-test-counsel\")}\n                      style={{\n                        backgroundColor:\n                          activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\n                      }}\n                      //disabled={activeItem !== 'pre-test-counsel' ? true : false}\n                    >\n                      {/* <Label>2</Label> */}\n                      <span style={{ color: \"#fff\" }}>\n                        Pre Test Counseling\n                        {completed.includes(\"pre-test-counsel\") && (\n                          <Icon name=\"check\" color=\"green\" />\n                        )}\n                      </span>\n                    </Menu.Item>\n                  )}\n                  {permissions.includes(\"Request_and_Result_Form\") && (\n                    <Menu.Item\n                      name=\"inbox\"\n                      active={activeItem === \"hiv-test\"}\n                      onClick={() => handleItemClick(\"hiv-test\")}\n                      style={{\n                        backgroundColor:\n                          activeItem === \"hiv-test\" ? \"#000\" : \"\",\n                      }}\n                      //disabled={activeItem !== 'hiv-test' ? true : false}\n                    >\n                      <span style={{ color: \"#fff\" }}>\n                        Request {\"&\"} Result Form\n                        {completed.includes(\"hiv-test\") && (\n                          <Icon name=\"check\" color=\"green\" />\n                        )}\n                      </span>\n                      {/* <Label color='teal'>3</Label> */}\n                    </Menu.Item>\n                  )}\n                  <Menu.Item\n                    name=\"spam\"\n                    active={activeItem === \"post-test\"}\n                    onClick={() => handleItemClick(\"post-test\")}\n                    style={{\n                      backgroundColor: activeItem === \"post-test\" ? \"#000\" : \"\",\n                    }}\n                    //disabled={activeItem !== 'post-test' ? true : false}\n                  >\n                    {/* <Label>4</Label> */}\n                    <span style={{ color: \"#fff\" }}>\n                      Post Test Counseling\n                      {completed.includes(\"post-test\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>\n\n                  {patientObj.hivTestResult &&\n                    patientObj.hivTestResult.toLowerCase() === \"positive\" &&\n                    patientObj.riskStratificationResponseDto?.age >= 15 && (\n                      <Menu.Item\n                        name=\"spam\"\n                        active={activeItem === \"recency-testing\"}\n                        onClick={() => handleItemClick(\"recency-testing\")}\n                        style={{\n                          backgroundColor:\n                            activeItem === \"recency-testing\" ? \"#000\" : \"\",\n                        }}\n                        //disabled={activeItem !== 'recency-testing' ? true : false}\n                      >\n                        {/* <Label>4</Label> */}\n                        <span style={{ color: \"#fff\" }}>\n                          HIV Recency Testing\n                          {completed.includes(\"recency-testing\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                    )}\n                  {/* \n                  <Menu.Item\n                    name=\"spam\"\n                    active={activeItem === \"indexing\"}\n                    onClick={() => handleItemClick(\"indexing\")}\n                    style={{\n                      backgroundColor: activeItem === \"indexing\" ? \"#000\" : \"\",\n                    }}\n                  > */}\n                  {/* <Label>4</Label> */}\n                  {/* <span style={{ color: \"#fff\" }}>\n                      Index Notification Services - Elicitation\n                      {completed.includes(\"indexing\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item> */}\n\n                  {/* <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"pns-history\"}\n                    onClick={() => handleItemClick(\"pns-history\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"pns-history\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Partner Notification Services\n                      {completed.includes(\"pns\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item> */}\n                  {/* Family Index Testing form */}\n                  {/* {patientObj.hivTestResult && patientObj.hivTestResult.toLowerCase() ===\n                    \"positive\" &&  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"fit-history\"}\n                    onClick={() => handleItemClick(\"fit-history\")}\n                    style={{\n                      backgroundColor:\n                        activeItem === \"fit-history\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Family Index Testing form\n                      {completed.includes(\"fit\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>}  */}\n\n                  {permissions.includes(\"Nigeria_PNS_Form\") &&\n                    patientObj.hivTestResult &&\n                    patientObj.hivTestResult.toLowerCase() === \"positive\" && (\n                      <Menu.Item\n                        name=\"inbox\"\n                        active={activeItem === \"fit-history\"}\n                        onClick={() => handleItemClick(\"fit-history\")}\n                        style={{\n                          backgroundColor:\n                            activeItem === \"fit-history\" ? \"#000\" : \"\",\n                        }}\n                      >\n                        <span style={{ color: \"#fff\" }}>\n                          {\" \"}\n                          Family Index Testing form\n                          {completed.includes(\"fit\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                    )}\n\n                  {patientObj.hivTestResult &&\n                    patientObj.hivTestResult.toLowerCase() === \"positive\" && (\n                      <Menu.Item\n                        name=\"inbox\"\n                        active={activeItem === \"pns-history\"}\n                        onClick={() => handleItemClick(\"pns-history\")}\n                        style={{\n                          backgroundColor:\n                            activeItem === \"pns-history\" ? \"#000\" : \"\",\n                        }}\n                      >\n                        <span style={{ color: \"#fff\" }}>\n                          {\" \"}\n                          Partner Notification Services\n                          {completed.includes(\"pns\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                    )}\n                  {permissions.includes(\"Referral_Form\") && (\n                    <Menu.Item\n                      name=\"inbox\"\n                      active={activeItem === \"refferal-history\"}\n                      onClick={() => handleItemClick(\"refferal-history\")}\n                      style={{\n                        backgroundColor:\n                          activeItem === \"refferal-history\" ? \"#000\" : \"\",\n                      }}\n                    >\n                      <span style={{ color: \"#fff\" }}>\n                        {\" \"}\n                        Client Referral Service\n                        {completed.includes(\"refferal\") && (\n                          <Icon name=\"check\" color=\"green\" />\n                        )}\n                      </span>\n                    </Menu.Item>\n                  )}\n                </Menu>\n              </div>\n\n              <div\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\n                style={{\n                  backgroundColor: \"#fff\",\n                  margingLeft: \"-50px\",\n                  paddingLeft: \"-20px\",\n                }}\n              >\n                {activeItem === \"risk\" && (\n                  <RiskStratification\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setHideOtherMenu={setHideOtherMenu}\n                    setExtra={setExtra}\n                    extra={extra}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                    setOrganizationInfo={setOrganizationInfo}\n                  />\n                )}\n                {activeItem === \"basic\" && (\n                  <BasicInfo\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                    setBasicInfo={setBasicInfo}\n                  />\n                )}\n                {activeItem === \"pre-test-counsel\" && (\n                  <PreTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"hiv-test\" && (\n                  <HivTestResult\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"post-test\" && (\n                  <PostTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"indexing\" && (\n                  <IndexingContactTracing\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"recency-testing\" && (\n                  <RecencyTesting\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"others\" && (\n                  <Others\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                  />\n                )}\n                {activeItem === \"pns-history\" && (\n                  <PNSHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setRow={setRow}\n                  />\n                )}\n\n                {activeItem === \"pns\" && (\n                  <PnsForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    history={true}\n                  />\n                )}\n\n                {activeItem === \"view-pns\" && (\n                  <ViewPNSForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                  />\n                )}\n\n                {activeItem === \"view-fit\" && (\n                  <ViewFamilyIndexTestingForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    action={action}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                    setRow={setRow}\n                    selectedRow={selectedRow}\n                  />\n                )}\n\n                {activeItem === \"fit-history\" && (\n                  <FamilyIndexHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    selectedRow={selectedRow}\n                    setSelectedRow={setSelectedRow}\n                    // row={row}\n                    setAction={setAction}\n                  />\n                )}\n\n                {activeItem === \"fit\" && (\n                  <FamilyIndexTestingForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    history={true}\n                  />\n                )}\n                {activeItem === \"view-referral\" && (\n                  <ViewClientReferral\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                  />\n                )}\n                {activeItem === \"refferal-history\" && (\n                  <ClientReferralHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setRow={setRow}\n                  />\n                )}\n                {activeItem === \"client-referral\" && (\n                  <RefferralUnit\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj}\n                    patientObj={patientObj}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                  />\n                )}\n              </div>\n            </div>{\" \"}\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default UserRegistration;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["428","429","430","431","432","433"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n//import classNames from 'classnames';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import Chip from '@material-ui/core/Chip';\n//import Divider from '@material-ui/core/Divider';\nimport { Link } from \"react-router-dom\";\nimport ButtonMui from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Label, Sticky } from \"semantic-ui-react\";\nimport { calculate_age } from \"../utils\";\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"20.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\n  const patientObjs = props.patientObj ? props.patientObj : {};\n  //const permissions= props.permissions ? props.permissions : [];\n  const [patientObj, setPatientObj] = useState(null);\n  const [hivStatus, setHivStatus] = useState(\"false\");\n  const [htscount, setHtscount] = useState(0);\n  const [htsResult, setHtsResult] = useState(\"\");\n  const [htsResult2, setHtsResult2] = useState(\"\");\n\n  useEffect(() => {\n    PatientCurrentObject();\n  }, []);\n\n  ///GET LIST OF Patients\n  async function PatientCurrentObject() {\n    axios\n      .get(\n        `${baseUrl}hts/persons/${\n          patientObjs.personId ? patientObjs.personId : patientObjs.id\n        }`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        setPatientObj(response.data);\n\n        setHtscount(response.data.htsCount);\n        setHtsResult(\n          response.data.htsClientDtoList[\n            response.data.htsClientDtoList.length - 1\n          ].hivTestResult\n        );\n        setHtsResult2(\n          response.data.htsClientDtoList[\n            response.data.htsClientDtoList.length - 1\n          ].hivTestResult2\n        );\n      })\n      .catch((error) => {});\n  }\n\n  const getHospitalNumber = (identifier) => {\n    const identifiers = identifier;\n    const hospitalNumber = identifiers?.identifier?.find(\n      (obj) => obj.type == \"HospitalNumber\"\n    );\n    return hospitalNumber ? hospitalNumber.value : \"\";\n  };\n  const getPhoneNumber = (identifier) => {\n    const identifiers = identifier;\n    const phoneNumber = identifiers?.contactPoint?.find(\n      (obj) => obj.type == \"phone\"\n    );\n    return phoneNumber ? phoneNumber.value : \"\";\n  };\n  const getAddress = (identifier) => {\n    const identifiers = identifier;\n    const address = identifiers?.address?.find((obj) => obj.city);\n    const houseAddress =\n      address && address.line[0] !== null ? address.line[0] : \"\";\n    const landMark =\n      address && address.city && address.city !== null ? address.city : \"\";\n    return address ? houseAddress + \" \" + landMark : \"\";\n  };\n\n  return (\n    <Sticky>\n      <div className={classes.root}>\n        <ExpansionPanel>\n          <ExpansionPanelSummary>\n            <Row>\n              <Col md={12}>\n                <Row className={\"mt-1\"}>\n                  {patientObj && patientObj !== null ? (\n                    <>\n                      <Col md={12} className={classes.root2}>\n                        <b\n                          style={{\n                            fontSize: \"25px\",\n                            color: \"rgb(153, 46, 98)\",\n                          }}\n                        >\n                          {patientObj.personResponseDto.firstName +\n                            \" \" +\n                            patientObj.personResponseDto.surname}\n                        </b>\n                        <Link to={\"/\"}>\n                          <ButtonMui\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"float-end ms-2 mr-2 mt-2\"\n                            //startIcon={<FaUserPlus size=\"10\"/>}\n                            style={{\n                              backgroundColor: \"rgb(153, 46, 98)\",\n                              color: \"#fff\",\n                              height: \"35px\",\n                            }}\n                          >\n                            <span style={{ textTransform: \"capitalize\" }}>\n                              Back\n                            </span>\n                          </ButtonMui>\n                        </Link>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Patient ID :\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getHospitalNumber(\n                              patientObj.personResponseDto.identifier\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          Date Of Birth :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj.personResponseDto.dateOfBirth}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Age :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {calculate_age(\n                              moment(\n                                patientObj.personResponseDto.dateOfBirth\n                              ).format(\"YYYY-MM-DD\")\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4}>\n                        <span>\n                          {\" \"}\n                          Gender :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj.personResponseDto &&\n                            patientObj.personResponseDto.sex !== null\n                              ? patientObj.personResponseDto.sex\n                              : \"\"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Phone Number :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getPhoneNumber(\n                              patientObj.personResponseDto.contactPoint\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Address :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getAddress(patientObj.personResponseDto.address)}{\" \"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Client Code :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj && patientObj?.clientCode\n                              ? patientObj?.clientCode\n                              : \"\"}{\" \"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={12}>\n                        <div>\n                          <Typography variant=\"caption\">\n                            {htscount < 1 ? (\n                              <Label color=\"blue\" size={\"mini\"}>\n                                STATUS : Not Tested\n                              </Label>\n                            ) : patientObj &&\n                              (htsResult === \"Positive\" ||\n                                htsResult === \"Positive\") ? (\n                              <Label color={\"red\"} size={\"mini\"}>\n                                STATUS : Positive\n                              </Label>\n                            ) : (\n                              <Label color=\"teal\" size={\"mini\"}>\n                                STATUS : Negative\n                              </Label>\n                            )}\n                          </Typography>\n                        </div>\n                      </Col>\n                    </>\n                  ) : (\n                    <p>Loading Please wait...</p>\n                  )}\n                </Row>\n              </Col>\n            </Row>\n          </ExpansionPanelSummary>\n        </ExpansionPanel>\n      </div>\n    </Sticky>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["434","435","436","437","438","439","440","441","442","443"],"import React, { Fragment } from \"react\";\n// BS\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Link } from \"react-router-dom\";\n// images\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\n\nconst options = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [20, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [200, 45, 30,20]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 10, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst options2 = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [200, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [2000, 450, 300,200]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 100, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst Widget = () => {\n  return (\n    <Fragment>     \n      <div className=\"row\">\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-primary text-danger\">\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY TESTED</p>\n                  <h4 className=\"mb-0\">3280</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-warning text-warning\">\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENT ON ART</p>\n                  <h4 className=\"mb-0\">2570</h4>\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body  p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-danger text-danger\">\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\n                  <h4 className=\"mb-0\">50</h4>\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-success text-success\">\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\n                  <h4 className=\"mb-0\">2340</h4>\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <SummaryView />\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n          />\n        </div> */}\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options2}\n          />\n        </div> */}\n        \n      </div>\n    </Fragment>\n  );\n};\n\nexport default Widget;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["487","488","489","490","491","492","493","494","495","496","497","498","499"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport ServicesProvided from \"./ServicesProvided\";\nimport RefferralUnit from \"./RefferalUnit\";\nimport Cookies from \"js-cookie\";\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst ClientRefferalForm = (props) => {\n  const classes = useStyles();\n  console.log(\"props.patientObj\", props.patientObj)\n  const [content, setContent] = useState({\n    showReferringUnit: false,\n    showServiceProviderUnit: false,\n  });\n  const patientObj = props.patientObj;\n  const [kP, setKP] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [saving, setSaving] = useState(false);\n  let temp = {...errors};\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  const [setting, setSetting] = useState([]);\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [genders, setGenders] = useState([]);\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\n\n\n  const [contentDropDown, setContentDropDown] = useState(\"\");\n  // const [formInfo, setFormInfo] = useState({\n  //   dateVisit: \"\",\n  //   firstName: props?.patientObj?.personResponseDto?.firstName,\n  //   middleName:  props?.patientObj?.personResponseDto?.otherName,\n  //   lastName:  props?.patientObj?.personResponseDto?.surname,\n  //   hospitalNumber:props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\n  //   countryId: \"1\",\n  //   stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\n  //   province: Number(props?.patientObj?.personResponseDto?.address?.address[0]?.district) ,\n  //   address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\n  //   landmark: \"\",\n  //   phoneNumber:  props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\n  //   sexId:  props?.patientObj?.personResponseDto?.gender?.id,\n  //   dob: props?.patientObj.personResponseDto?.dateOfBirth,\n  //   age:  \"\",\n  //   dateOfBirth:props?.patientObj.personResponseDto?.dateOfBirth,\n  //   hivStatus:props?.patientObj?.hivTestResult2 ? props?.patientObj?.hivTestResult2 :\n  //       props?.patientObj?.hivTestResult ? props?.patientObj?.hivTestResult : \"\",\n  //   referredFromFacility: \"\",\n  //   nameOfPersonReferringClient: \"\",\n  //   nameOfReferringFacility: Cookies.get(\"facilityName\"),\n  //   addressOfReferringFacility: \"\",\n  //   phoneNoOfReferringFacility: \"\",\n  //   referredTo: \"\",\n  //   nameOfContactPerson: \"\",\n  //   nameOfReceivingFacility: \"\",\n  //   addressOfReceivingFacility: \"\",\n  //   phoneNoOfReceivingFacility: \"\",\n  //   isDateOfBirthEstimated: false,\n  //   serviceNeeded: \"\",\n  //   comments: \"\",\n  //   receivingStateFacility: \"\",\n  //   receivingLgaFacility: \"\",\n  //   htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\n  //   htsClientUuid:props && props.patientObj ? props.patientObj?.uuid : \"\"\n  // });\n  // const viewReferralInfo = () => {\n  //   axios\n  //       .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\n  //         headers: { Authorization: `Bearer ${token}` },\n  //       })\n  //       .then((response) => {\n  //         // setObjValues(response.data);\n  //         console.log(\" form information\", response.data);\n  //         // setFormInfo(response.data);\n  //         // setReceivingOrganization(response.data.receivingOrganization);\n  //       })\n  //       .catch((error) => {\n  //         //console.log(error);\n  //       });\n  // };\n  // useEffect(() => {\n  //   viewReferralInfo();\n  // }, []);\n\n  const handleContentChange = (e) => {\n    console.log(e.target.value);\n    setContentDropDown(e.target.value);\n    if (e.target.value === \"showReferringUnit\") {\n      setContent({\n        showReferringUnit: true,\n        showServiceProviderUnit: false,\n      });\n    }\n\n    if (e.target.value === \"showServiceProviderUnit\") {\n      setContent({\n        showReferringUnit: false,\n        showServiceProviderUnit: true,\n      });\n    }\n  };\n\n  return (\n      <>\n        <div>\n          <div className=\"form-group  col-md-8\">\n            <FormGroup>\n              <Label>\n                Referral Type <span style={{ color: \"red\" }}> *</span>\n              </Label>\n              <select\n                  className=\"form-control\"\n                  name=\"contentDropDown\"\n                  id=\"contentDropDown\"\n                  onChange={handleContentChange}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.2rem\",\n                  }}\n              >\n                <option value={\"\"}>Select Refarral form type</option>\n                <option value={\"showReferringUnit\"}>Referral form</option>\n                <option value={\"showServiceProviderUnit\"}>\n                  Service Provider form\n                </option>\n              </select>\n            </FormGroup>\n          </div>\n        </div>\n        <Card className={classes.root}>\n          {content.showReferringUnit\n              && <RefferralUnit\n                  patientObj={patientObj}\n                  // formInfo={formInfo}\n                  // row={props.row}\n                  handleClicked={props.handleClicked}\n              />}\n          {content.showServiceProviderUnit && (\n              <CardBody>\n                <ServicesProvided\n                    patientObj = {patientObj}\n                    // formInfo={props.formInfo}\n                    // row={props.row}\n                />\n              </CardBody>\n          )}\n          {/* recieving facility  */}\n        </Card>\n        <Modal\n            show={open}\n            toggle={toggle}\n            className=\"fade\"\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n          <Modal.Header>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Notification!\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h4>Are you Sure of the Age entered?</h4>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n                onClick={toggle}\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n            >\n              Yes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  );\n};\n\n\nexport default ClientRefferalForm;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["536","537","538","539","540","541","542","543","544","545"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["546","547","548","549","550","551","552","553","554"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst PostTest = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  const [permissions, setPermission] = useState(\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\n  );\n  const [nextForm, setNextForm] = useState([]);\n  ///const [errors, setErrors] = useState({});\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    postTestCounselingKnowledgeAssessment: {},\n    personId: patientID,\n  });\n  const [postTest, setPostTest] = useState({\n    hivTestResult: \"\",\n    hivTestBefore:\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.lastHivTestDone !== \"Never\" &&\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.whatWasTheResult === \"Positive\"\n        ? \"Previously tested positive in HIV care\"\n        : \"\",\n    hivRequestResult: \"\",\n    hivRequestResultCt: \"\",\n    clientReceivedHivTestResult: \"\",\n    postTestCounseling: \"\",\n    riskReduction: \"\",\n    postTestDisclosure: \"\",\n    bringPartnerHivtesting: \"\",\n    childrenHivtesting: \"\",\n    informationFp: \"\",\n    partnerFpThanCondom: \"\",\n    partnerFpUseCondom: \"\",\n    correctCondomUse: \"\",\n    condomProvidedToClient: \"\",\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\n    referredToServices: \"\",\n    condomProvidedToClientCount: \"\",\n    lubricantProvidedToClientCount: \"\",\n  });\n  useEffect(() => {\n    if (\n      props.patientObj &&\n      props.patientObj.postTestCounselingKnowledgeAssessment\n    ) {\n      setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment);\n    } else {\n      ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {})\n      if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult2 !== \"\" &&\n        props.patientObj.hivTestResult2 !== null &&\n        props.patientObj.hivTestResult2 === \"Positive\"\n      ) {\n        postTest.hivTestResult = \"true\";\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult2 !== \"\" &&\n        props.patientObj.hivTestResult2 !== null &&\n        props.patientObj.hivTestResult2 === \"Negative\"\n      ) {\n        postTest.hivTestResult = \"false\";\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult !== \"\" &&\n        props.patientObj.hivTestResult !== null &&\n        props.patientObj.hivTestResult === \"Positive\"\n      ) {\n        postTest.hivTestResult = \"true\";\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult !== \"\" &&\n        props.patientObj.hivTestResult !== null &&\n        props.patientObj.hivTestResult === \"Negative\"\n      ) {\n        postTest.hivTestResult = \"false\";\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\n      }\n    }\n  }, [props.patientObj, postTest.hivTestResult]);\n  const handleInputChangePostTest = (e) => {\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      }\n    } else if (e.target.name === \"condomProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      } else {\n        setPostTest({ ...postTest, [e.target.name]: 0 });\n      }\n    } else {\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\n    }\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSaving(true);\n     let latestForm = getNextForm(\n       \"Post_Test_Counseling\",\n       props?.patientObj?.riskStratificationResponseDto?.age,\n       '',\n       props?.patientObj?.hivTestResult\n     );\n\n    objValues.htsClientId = props.patientObj.id;\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\n    objValues.personId = props.patientObj.personResponseDto.id;\n    axios\n      .put(\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\n        objValues,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setSaving(false);\n        props.setPatientObj(response.data);\n        toast.success(\"Post test  successful\");\n        \n      handleItemClick(latestForm[0], latestForm[1]);\n\n\n      })\n      .catch((error) => {\n        setSaving(false);\n        console.log(error);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n    // }else{\n    //     toast.error(\"All post test fields are required\")\n\n    // }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>POST TEST COUNSELING</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n              </LabelRibbon>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestResult\"\n                    id=\"hivTestResult\"\n                    value={postTest.hivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={true}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Positive</option>\n                    <option value=\"false\">Negative</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you been tested for HIV before within this year?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestBefore\"\n                    id=\"hivTestBefore\"\n                    value={postTest.hivTestBefore}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Not previously tested\">\n                      Not previously tested\n                    </option>\n                    <option value=\"Previously tested negative\">\n                      Previously tested negative\n                    </option>\n                    <option value=\"Previously tested positive in HIV care\">\n                      Previously tested positive in HIV care\n                    </option>\n                    <option value=\"Previously tested positive not in HIV care\">\n                      Previously tested positive not in HIV care\n                    </option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV Request and Result form signed by tester </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResult\"\n                    id=\"hivRequestResult\"\n                    value={postTest.hivRequestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResultCt\"\n                    id=\"hivRequestResultCt\"\n                    value={postTest.hivRequestResultCt}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client received HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientReceivedHivTestResult\"\n                    id=\"clientReceivedHivTestResult\"\n                    value={postTest.clientReceivedHivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test counseling done </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestCounseling\"\n                    id=\"postTestCounseling\"\n                    value={postTest.postTestCounseling}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Risk reduction plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"riskReduction\"\n                    id=\"riskReduction\"\n                    value={postTest.riskReduction}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test disclosure plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestDisclosure\"\n                    id=\"postTestDisclosure\"\n                    value={postTest.postTestDisclosure}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Will bring partner(s) for HIV testing </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"bringPartnerHivtesting\"\n                    id=\"bringPartnerHivtesting\"\n                    value={postTest.bringPartnerHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"childrenHivtesting\"\n                    id=\"childrenHivtesting\"\n                    value={postTest.childrenHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Provided with information on FP and dual contraception{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informationFp\"\n                    id=\"informationFp\"\n                    value={postTest.informationFp}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client/Partner use FP methods (other than condom)\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpThanCondom\"\n                    id=\"partnerFpThanCondom\"\n                    value={postTest.partnerFpThanCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpUseCondom\"\n                    id=\"partnerFpUseCondom\"\n                    value={postTest.partnerFpUseCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Correct condom use demonstrated </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"correctCondomUse\"\n                    id=\"correctCondomUse\"\n                    value={postTest.correctCondomUse}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Condoms provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"condomProvidedToClient\"\n                    id=\"condomProvidedToClient\"\n                    value={postTest.condomProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.condomProvidedToClient !== null &&\n                postTest.condomProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many condoms were provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"condomProvidedToClientCount\"\n                        id=\"condomProvidedToClientCount\"\n                        value={postTest.condomProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lubricant were provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lubricantProvidedToClient\"\n                    id=\"lubricantProvidedToClient\"\n                    value={postTest.lubricantProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.lubricantProvidedToClient !== null &&\n                postTest.lubricantProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many lubricant provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"lubricantProvidedToClientCount\"\n                        id=\"lubricantProvidedToClientCount\"\n                        value={postTest.lubricantProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client referred to other services </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredToServices\"\n                    id=\"referredToServices\"\n                    value={postTest.referredToServices}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <Message success>\n                <h4>\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\n                  re-testing after 3 months\n                </h4>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {/* <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\n                  /> */}\n\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default PostTest;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js",["555","556","557","558","559"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../../../api\";\nimport { token as token } from \"./../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst FamilyIndexHistory = (props) => {\n  let history = useHistory();\n  const [familyIndexList, setFamilyIndexList] = useState([]);\n  const toggle = () => setOpen(!open);\n  const [recordSelected, setRecordSelected] = useState({});\n  const [open, setOpen] = React.useState(false);\n\n  const getListoFFamilyIndexInfo = () => {\n    axios\n      .get(\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data) {\n          setFamilyIndexList([response.data]);\n          getListOfFamliyIndices(response.data.uuid);\n          props.handleItemClick(\"fit-history\");\n        } else {\n          setFamilyIndexList([]);\n        }\n      })\n      .catch((e) => {\n        // console.log(\"Fetch Facilities error\" + e);\n      });\n  };\n\n  const convertRelationship = (relationship) => {\n    if (relationship === \"FAMILY_RELATIONSHIP_FATHER\") {\n      return \"Father\";\n    } else if (relationship === \"FAMILY_RELATIONSHIP_MOTHER\") {\n      return \"Mother\";\n    } else if (relationship === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\") {\n      return \"Child\";\n    } else {\n      return relationship;\n    }\n  };\n\n  const getListOfFamliyIndices = (uuid) => {\n    axios\n      .get(\n        `${baseUrl}hts-family-index-testing/family-index?familyIndexTestingUuid=${uuid}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data) {\n          setFamilyIndexList(response.data);\n          props.handleItemClick(\"fit-history\");\n        } else {\n          setFamilyIndexList([]);\n        }\n      })\n      .catch((e) => {\n        // console.log(\"Fetch Facilities error\" + e);\n      });\n  };\n\n  useEffect(() => {\n    getListoFFamilyIndexInfo();\n  }, [props.patientObj]);\n\n  const LoadViewPage = (row, actionType) => {\n    console.log(row);\n    console.log(props);\n\n    props.handleItemClick(\"view-fit\");\n    props.setSelectedRow(row);\n    props.setAction(actionType);\n  };\n\n  const LoadModal = (row) => {\n    toggle();\n    setRecordSelected(row);\n  };\n  const LoadDeletePage = (row) => {\n    // setSaving(true);\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n    axios\n      .delete(\n        `${baseUrl}hts-family-index-testing/family-index/${recordSelected.id}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        toast.success(\"Record Deleted Successfully\");\n        getListoFFamilyIndexInfo();\n\n        toggle();\n      })\n      .catch((error) => {\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"form-group mb-3 col-md-12\">\n          {console.log(familyIndexList)}\n          {\n            <Button\n              content=\"Add New form\"\n              icon=\"left add\"\n              labelPosition=\"left\"\n              style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n              onClick={() => props.handleItemClick(\"fit\")}\n            />\n          }\n          {/* <Button\n            content=\"Done\"\n            icon=\"list\"\n            labelPosition=\"left\"\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n            onClick={() => handleDone()}\n          /> */}\n        </div>\n        <MaterialTable\n          icons={tableIcons}\n          // title=''\n          columns={[\n            { title: \"ID\", field: \"id\" },\n            { title: \"Date Of Birth\", field: \"date\" },\n            { title: \"family Relationship\", field: \"familyRelationship\" },\n            // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\n\n            { title: \"Actions\", field: \"actions\", filtering: false },\n          ]}\n          isLoading={props.loading}\n          data={familyIndexList.map((row) => ({\n            id: row.id,\n            date: row.dateOfBirth,\n            familyRelationship: convertRelationship(row.familyRelationship),\n\n            //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\n\n            actions: (\n              <div>\n                <Menu.Menu position=\"right\">\n                  <Menu.Item>\n                    <div\n                    style={{ backgroundColor: \"rgb(153,46,98)\", color: \"white\", borderRadius:\"5px\", width: \"100px\" }}\n                    primary\n                   className=\"px-3 py-2\"\n                  >\n                    <Dropdown item text=\"Action\">\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"view\")}\n                        >\n                          {\" \"}\n                          <Icon name=\"eye\" />\n                          View\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"update\")}\n                        >\n                          <Icon name=\"edit\" />\n                          Edit\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={() => LoadModal(row)}>\n                          <Icon name=\"delete\" />\n                          Delete\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                    </div>\n                  </Menu.Item>\n                </Menu.Menu>\n              </div>\n            ),\n          }))}\n          options={{\n            toolbar: false,\n            search: false,\n            headerStyle: {\n              //backgroundColor: \"#9F9FA5\",\n              color: \"#000\",\n            },\n            searchFieldStyle: {\n              width: \"200%\",\n              margingLeft: \"250px\",\n            },\n            filtering: false,\n            exportButton: false,\n            searchFieldAlignment: \"left\",\n            pageSizeOptions: [10, 20, 100],\n            pageSize: 10,\n            debounceInterval: 400,\n          }}\n        />\n      </div>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>\n            Are you Sure you want to delete ?\n            {/* <b>{row && record.activityName}</b> */}\n          </h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => LoadDeletePage(recordSelected)}\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            Yes\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\n          </Button>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default FamilyIndexHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { checkPregnantPatient } from \"../../../../utility\";\nimport {\n  FormGroup,\n  Label,\n  CardBody,\n  Spinner,\n  Badge,\n  Input,\n  Form,\n} from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PanToolIcon from \"@mui/icons-material/PanTool\";\n//import * as moment from 'moment';\nimport { getCheckModality } from \"../../../../utility\";\nimport { getNextForm } from \"../../../../utility\";\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst BasicInfo = (props) => {\n  const [predictionValue, setPredictionValue] = useState(0);\n\n  const predictionRanges = (prediction) => {\n    if (parseFloat(prediction) <= 0.2) {\n      return <Badge color=\"success\">Low Risk</Badge>;\n    } else if (\n      parseFloat(prediction) >= 0.21 &&\n      parseFloat(prediction) <= 0.4\n    ) {\n      return <Badge color=\"info\">Medium Risk</Badge>;\n    } else if (\n      parseFloat(prediction) >= 0.41 &&\n      parseFloat(prediction) <= 0.8\n    ) {\n      return <Badge color=\"warning\">High Risk</Badge>;\n    } else if (parseFloat(prediction) >= 0.81) {\n      return <Badge color=\"danger\">Highest Risk</Badge>;\n    } else {\n      return <Badge color=\"dark\">No Prediction Result</Badge>;\n    }\n  };\n\n  const classes = useStyles();\n  //let patientAge=\"\"\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  const [savingPrediction, setSavingPrediction] = useState(false);\n  const [savingResult, setSavingRsult] = useState(false);\n  const [errors, setErrors] = useState({});\n  let temp = { ...errors };\n  const [modalityCheck, setModalityCheck] = useState(\"\");\n  //console.log(\"data_pre_test\", props.patientObj);\n  // const calculate_age = dob => {\n  //     var today = new Date();\n  //     var dateParts = dob.split(\"-\");\n  //     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n  //     var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n  //     var age_now = today.getFullYear() - birthDate.getFullYear();\n  //     var m = today.getMonth() - birthDate.getMonth();\n  //         if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n  //                 age_now--;\n  //             }\n  //         if (age_now === 0) {\n  //                 return m + \" month(s)\";\n  //             }\n  //             return age_now ;\n  // };\n  const [permissions, setPermission] = useState(\n    localStorage.getItem(\"stringifiedPermmision\")?.split(\",\")\n  );\n  const [knowledgeAssessment, setKnowledgeAssessment] = useState({\n    previousTestedHIVNegative: \"\",\n    timeLastHIVNegativeTestResult: \"\",\n    clientPregnant: \"\",\n    clientInformHivTransRoutes: \"\",\n    clientInformRiskkHivTrans: \"\",\n    clientInformPreventingsHivTrans: \"\",\n    clientInformPossibleTestResult: \"\",\n    informConsentHivTest: \"\",\n  });\n  useEffect(() => {\n\n        \n\n    if (props.patientObj) {\n      setKnowledgeAssessment(\n        props.patientObj.knowledgeAssessment &&\n          props.patientObj.knowledgeAssessment !== null\n          ? props.patientObj.knowledgeAssessment\n          : {}\n      );\n      setRiskAssessment(\n        props.patientObj.riskAssessment &&\n          props.patientObj.riskAssessment !== null\n          ? props.patientObj.riskAssessment\n          : {}\n      );\n      setRiskAssessmentPartner(\n        props.patientObj.sexPartnerRiskAssessment &&\n          props.patientObj.sexPartnerRiskAssessment !== null\n          ? props.patientObj.sexPartnerRiskAssessment\n          : {}\n      );\n      setStiScreening(\n        props.patientObj.stiScreening && props.patientObj.stiScreening !== null\n          ? props.patientObj.stiScreening\n          : {}\n      );\n      setTbScreening(\n        props.patientObj.tbScreening && props.patientObj.tbScreening !== null\n          ? props.patientObj.tbScreening\n          : {}\n      );\n\n                 if (props?.patientObj?.pregnant) {\n                   checkPregnantPatient(props.patientObj.pregnant).then(\n                     (res) => {\n                       console.log(\"my result\", res);\n                       setKnowledgeAssessment({\n                         ...knowledgeAssessment,\n                         clientPregnant: res ? \"true\" : \"false\",\n                       });\n                     }\n                   );\n                 }\n      //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n      //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n      if (\n        props.patientObj.riskStratificationResponseDto &&\n        Object.keys(\n          props.patientObj.riskStratificationResponseDto.riskAssessment\n        ).length !== 0 &&\n        props.patientObj.riskAssessment === null\n      ) {\n        //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n        props.patientObj.riskStratificationResponseDto.riskAssessment\n          .whatWasTheResult !== \"\" &&\n        props.patientObj.riskStratificationResponseDto.riskAssessment\n          .whatWasTheResult === \"Positive\"\n          ? (knowledgeAssessment.previousTestedHIVNegative = \"false\")\n          : (knowledgeAssessment.previousTestedHIVNegative = \"true\");\n      } else {\n        setRiskAssessment({\n          ...riskAssessment,\n          ...props.patientObj.riskAssessment,\n        });\n      }\n      knowledgeAssessment.clientPregnant =\n        props.patientObj.pregnant === 73 ? \"true\" : \"\";\n\n      setModalityCheck(\n        getCheckModality(\n          props.patientObj?.riskStratificationResponseDto?.modality\n        )\n      );\n    }\n  }, [props.patientObj]);\n\n  const handleItemClick = (page, completedMenu) => {\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n    props.handleItemClick(page);\n  };\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    knowledgeAssessment: {},\n    personId: patientID,\n    riskAssessment: {},\n    stiScreening: {},\n    tbScreening: {},\n    sexPartnerRiskAssessment: {},\n  });\n\n  const handleInputChangeKnowledgeAssessment = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n\n    setKnowledgeAssessment({\n      ...knowledgeAssessment,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const [riskAssessment, setRiskAssessment] = useState({\n    everHadSexualIntercourse: \"\",\n    bloodtransInlastThreeMonths: \"\",\n    uprotectedSexWithCasualLastThreeMonths: \"\",\n    uprotectedSexWithRegularPartnerLastThreeMonths: \"\",\n    unprotectedVaginalSex: \"\",\n    uprotectedAnalSex: \"\",\n    stiLastThreeMonths: \"\",\n    sexUnderInfluence: \"\",\n    moreThanOneSexPartnerLastThreeMonths: \"\",\n    experiencePain: \"\",\n    haveSexWithoutCondom: \"\",\n    abuseDrug: \"\",\n    bloodTransfusion: \"\",\n    consistentWeightFeverNightCough: \"\",\n    soldPaidVaginalSex: \"\",\n    consistentWeightFeverNightCough: \"\",\n    soldPaidVaginalSex: \"\",\n    haveCondomBurst: \"\",\n  });\n\n  // const postPredictions = (name, value) => {\n  //   if (name === \"soldPaidVaginalSex\" && value !== \"null\") {\n  //     setSavingRsult(true);\n  //     let mlData = {\n  //       modelConfigs: {\n  //         debug: \"true\",\n  //         encounterDate: props.patientObj?.dateVisit,\n  //         facilityId: \"LBgwDTw2C8u\",\n  //         modelId: \"hts_v1\",\n  //       },\n  //       variableValues: {\n  //         age: props.patientObj?.riskStratificationResponseDto.age,\n  //         client_pregnant_X0: props.patientObj?.pregnant === null ? 0 : 1,\n  //         first_time_visit_Y:\n  //           props.patientObj?.firstTimeVisit === false ? 0 : 1,\n  //         hts_setting_Other: 0,\n  //         hts_setting_Others: 0,\n  //         hts_setting_Outreach: 1,\n  //         marital_status_Divorced: 0,\n  //         marital_status_Married:\n  //           props.patientObj?.personResponseDto?.maritalStatus === null ? 0 : 1,\n  //         marital_status_Widowed: 0,\n  //         previously_tested_hiv_negative_Missing: 0,\n  //         previously_tested_hiv_negative_TRUE: 0,\n  //         referred_from_Other: 0,\n  //         referred_from_Self: 1,\n  //         session_type_Individual: 0,\n  //         sex_F: props.patientObj?.personResponseDto?.sex === \"Female\" ? 1 : 0,\n  //         sex_M: props.patientObj?.personResponseDto?.sex === \"Male\" ? 1 : 0,\n  //         tested_for_hiv_before_within_this_year_NotPreviouslyTested: 1,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedNegative: 0,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveInHIVCare: 0,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveNotInHIVCare: 0,\n  //       },\n  //     };\n  //     //ML Post\n  //     axios\n  //       .post(`${baseUrl}machine-learning/evaluate`, mlData, {\n  //         headers: { Authorization: `Bearer ${token}` },\n  //       })\n  //       .then((resp) => {\n  //         console.log(\"ML\", resp);\n  //         let predictions = Object.values(resp.data.result.predictions);\n  //         setPredictionValue(predictions);\n  //         setSavingPrediction(true);\n  //         setSavingRsult(false);\n  //       })\n  //       .catch((err) => {\n  //         console.error(\"ML_err\", err);\n  //       });\n  //   }\n  // };\n\n  const handleInputChangeRiskAssessment = (e) => {\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\n    //postPredictions(e.target.name, e.target.value);\n  };\n  // Getting the number count of riskAssessment True\n  const actualRiskCountTrue = Object.values(riskAssessment);\n  const riskCount = actualRiskCountTrue.filter((x) => x === \"true\");\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\n    sexPartnerHivPositive: \"\",\n    newDiagnosedHivlastThreeMonths: \"\",\n    currentlyArvForPmtct: \"\",\n    knowHivPositiveOnArv: \"\",\n    knowHivPositiveAfterLostToFollowUp: \"\",\n    uprotectedAnalSex: \"\",\n  });\n  const handleInputChangeRiskAssessmentPartner = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setRiskAssessmentPartner({\n      ...riskAssessmentPartner,\n      [e.target.name]: e.target.value,\n    });\n    // if(riskAssessmentPartner.sexPartnerHivPositive==='false' || (e.target.name==='sexPartnerHivPositive' &&  e.target.value==='false')){\n    //     setRiskAssessmentPartner ({\n    //         sexPartnerHivPositive:'false',\n    //         newDiagnosedHivlastThreeMonths:\"\",\n    //         currentlyArvForPmtct :\"\",\n    //         knowHivPositiveOnArv :\"\",\n    //         knowHivPositiveAfterLostToFollowUp:\"\",\n    //         uprotectedAnalSex  :\"\",\n    //     })\n    // }\n  };\n  // Getting the number count of sexPartRiskCount True\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(\n    (x) => x === \"true\"\n  );\n  const [stiScreening, setStiScreening] = useState({\n    vaginalDischarge: \"\",\n    lowerAbdominalPains: \"\",\n    urethralDischarge: \"\",\n    complaintsOfScrotal: \"\",\n    complaintsGenitalSore: \"\",\n  });\n  const handleInputChangeStiScreening = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\n  };\n  // Getting the number count of STI True\n  const actualStiTrue = Object.values(stiScreening);\n  const stiCount = actualStiTrue.filter((x) => x === \"true\");\n  const [tbScreening, setTbScreening] = useState({\n    currentCough: \"\",\n    weightLoss: \"\",\n    lymphadenopathy: \"\",\n    fever: \"\",\n    nightSweats: \"\",\n  });\n  const handleInputChangeTbScreening = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTbScreening({ ...tbScreening, [e.target.name]: e.target.value });\n  };\n  // Getting the number count of TB True\n  const actualTBTrue = Object.values(tbScreening);\n  const newTbTrue = actualTBTrue.filter((x) => x === \"true\");\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n    //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n    //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n    //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n    //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n    //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n    //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n    //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n    //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n    //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n    //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n    //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n    //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\n      (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\n      (temp.bloodtransInlastThreeMonths =\n        riskAssessment.bloodtransInlastThreeMonths\n          ? \"\"\n          : \"This field is required.\");\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n    // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.experiencePain = riskAssessment.experiencePain\n        ? \"\"\n        : \"This field is required.\");\n\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.abuseDrug = riskAssessment.abuseDrug\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.bloodTransfusion = riskAssessment.bloodTransfusion\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.consistentWeightFeverNightCough =\n        riskAssessment.consistentWeightFeverNightCough\n          ? \"\"\n          : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex\n        ? \"\"\n        : \"This field is required.\");\n\n    // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x === \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n      let latestForm = getNextForm(\n        \"Pre_Test_Counseling\",\n        objValues.age,\n        modalityCheck,\n        \"unknown\"\n      );\n    if (validate()) {\n      setSaving(true);\n      objValues.htsClientId = clientId;\n      objValues.knowledgeAssessment = knowledgeAssessment;\n      objValues.personId = patientID;\n      objValues.riskAssessment = riskAssessment;\n      objValues.stiScreening = stiScreening;\n      objValues.tbScreening = tbScreening;\n      objValues.sexPartnerRiskAssessment = riskAssessmentPartner;\n\n      axios\n        .put(`${baseUrl}hts/${clientId}/pre-test-counseling`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);    \n          handleItemClick(latestForm[0], latestForm[1]);\n          \n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    } else {\n      toast.error(\"All fields are required\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>PRE TEST COUNSELING</h2>\n          {savingPrediction ? (\n            <Stack sx={{ width: \"50%\" }} spacing={2}>\n              <Alert severity=\"info\" style={{ fontSize: \"16px\", color: \"000\" }}>\n                <b>ML Prediction Result for HTS Patient :</b>{\" \"}\n                {predictionRanges(predictionValue[1])}\n              </Alert>\n            </Stack>\n          ) : (\n            \"\"\n          )}\n          <br />\n          <form>\n            <div className=\"row\">\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"rgb(0,181,173)\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Knowledge Assessment\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Previously tested HIV negative{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"previousTestedHIVNegative\"\n                    id=\"previousTestedHIVNegative\"\n                    value={knowledgeAssessment.previousTestedHIVNegative}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.previousTestedHIVNegative !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.previousTestedHIVNegative}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {knowledgeAssessment.previousTestedHIVNegative === \"true\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Time of last HIV Negative test Result</Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"timeLastHIVNegativeTestResult\"\n                      id=\"timeLastHIVNegativeTestResult\"\n                      value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"<1\"> {\"< 1\"} month</option>\n                      <option value=\"1-3 Months\">1-3 Months</option>\n                      <option value=\"4-6 Months\">4-6 Months</option>\n                      <option value=\">6 Months\"> {\">6\"} Months</option>\n                      {knowledgeAssessment.previousTestedHIVNegative !==\n                        \"true\" && <option value=\"Never\"> Never</option>}\n                    </select>\n                    {errors.timeLastHIVNegativeTestResult !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.timeLastHIVNegativeTestResult}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n              {props.patientObj &&\n                (props.patientObj.personResponseDto.sex === \"Female\" ||\n                  props.patientObj.personResponseDto.sex === \"female\" ||\n                  props.patientObj.personResponseDto.sex === \"FEMALE\") && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Client pregnant </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"clientPregnant\"\n                        id=\"clientPregnant\"\n                        value={knowledgeAssessment.clientPregnant}\n                        onChange={handleInputChangeKnowledgeAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={true}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.clientPregnant !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.clientPregnant}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client informed about HIV transmission routes </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformHivTransRoutes\"\n                    id=\"clientInformHivTransRoutes\"\n                    value={knowledgeAssessment.clientInformHivTransRoutes}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformHivTransRoutes !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformHivTransRoutes}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client informed about risk factors for HIV transmission{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformRiskkHivTrans\"\n                    id=\"clientInformRiskkHivTrans\"\n                    value={knowledgeAssessment.clientInformRiskkHivTrans}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformRiskkHivTrans !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformRiskkHivTrans}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client informed on preventing HIV transmission methods{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformPreventingsHivTrans\"\n                    id=\"clientInformPreventingsHivTrans\"\n                    value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformPreventingsHivTrans !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformPreventingsHivTrans}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client informed about possible test results </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformPossibleTestResult\"\n                    id=\"clientInformPossibleTestResult\"\n                    value={knowledgeAssessment.clientInformPossibleTestResult}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformPossibleTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformPossibleTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Informed consent for HIV testing given </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informConsentHivTest\"\n                    id=\"informConsentHivTest\"\n                    value={knowledgeAssessment.informConsentHivTest}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.informConsentHivTest !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.informConsentHivTest}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <hr />\n              <br />\n              {savingResult ? (\n                <div\n                  style={{\n                    display: \"block\",\n                    width: 1000,\n                    padding: 10,\n                  }}\n                >\n                  <Spinner style={{ width: \"2rem\", height: \"2rem\" }} />\n                  <b style={{ color: \"#992E62\", fontSize: \"14px\" }}>\n                    {\" \"}\n                    <PanToolIcon /> requesting HTS ML predictions...\n                  </b>\n                </div>\n              ) : (\n                \" \"\n              )}\n              {props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" && (\n                <>\n                  <div\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                    style={{\n                      backgroundColor: \"#992E62\",\n                      width: \"125%\",\n                      height: \"35px\",\n                      color: \"#fff\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    HIV Risk Assessment (Last 3 months)\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Ever had sexual intercourse{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"everHadSexualIntercourse\"\n                        id=\"everHadSexualIntercourse\"\n                        value={riskAssessment.everHadSexualIntercourse}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.everHadSexualIntercourse !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.everHadSexualIntercourse}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Blood transfusion in last 3 months{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"bloodtransInlastThreeMonths\"\n                        id=\"bloodtransInlastThreeMonths\"\n                        value={riskAssessment.bloodtransInlastThreeMonths}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.bloodtransInlastThreeMonths !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.bloodtransInlastThreeMonths}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected sex with casual partner in last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedSexWithCasualLastThreeMonths\"\n                            id=\"uprotectedSexWithCasualLastThreeMonths\"\n                            value={\n                              riskAssessment.uprotectedSexWithCasualLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedSexWithCasualLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {errors.uprotectedSexWithCasualLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected sex with regular partner in the last\n                            3months <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                            id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                            value={\n                              riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {\n                                errors.uprotectedSexWithRegularPartnerLastThreeMonths\n                              }\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected vaginal sex{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"unprotectedVaginalSex\"\n                            id=\"unprotectedVaginalSex\"\n                            value={riskAssessment.unprotectedVaginalSex}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.unprotectedVaginalSex !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.unprotectedVaginalSex}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected Anal sex{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedAnalSex\"\n                            id=\"uprotectedAnalSex\"\n                            value={riskAssessment.uprotectedAnalSex}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedAnalSex !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.uprotectedAnalSex}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            STI in last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"stiLastThreeMonths\"\n                            id=\"stiLastThreeMonths\"\n                            value={riskAssessment.stiLastThreeMonths}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.stiLastThreeMonths !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.stiLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Sex under the influence of drugs or alcohol{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"sexUnderInfluence\"\n                            id=\"sexUnderInfluence\"\n                            value={riskAssessment.sexUnderInfluence}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.sexUnderInfluence !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.sexUnderInfluence}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            More than 1 sex partner during last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"moreThanOneSexPartnerLastThreeMonths\"\n                            id=\"moreThanOneSexPartnerLastThreeMonths\"\n                            value={\n                              riskAssessment.moreThanOneSexPartnerLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.moreThanOneSexPartnerLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {errors.moreThanOneSexPartnerLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n\n                  <Message warning>\n                    <h4> Risk assessment score (sum of all 7 answers)</h4>\n                    <b>Score : {riskCount.length}</b>\n                  </Message>\n                  <hr />\n                  <br />\n                </>\n              )}\n              {props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" && (\n                <>\n                  <div\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                    style={{\n                      backgroundColor: \"#992E62\",\n                      width: \"125%\",\n                      height: \"35px\",\n                      color: \"#fff\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    HIV Risk Assessment (Last 3 months)\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/your partner experienced lower abdominal pain,\n                        smelly discharge, blisters and wounds around you/partner\n                        vagina, penis anus or mouth?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"experiencePain\"\n                        id=\"experiencePain\"\n                        value={riskAssessment.experiencePain}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.experiencePain !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.experiencePain}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner had sex without a condom with someone\n                        of unknown HIV status, or you/partner raped by person\n                        with unknown HIV status?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"haveSexWithoutCondom\"\n                        id=\"haveSexWithoutCondom\"\n                        value={riskAssessment.haveSexWithoutCondom}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.haveSexWithoutCondom !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.haveSexWithoutCondom}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you had a condom burst with your partner during\n                        sexual intercourse?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"haveCondomBurst\"\n                        id=\"haveCondomBurst\"\n                        value={riskAssessment.haveCondomBurst}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.haveCondomBurst !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.haveCondomBurst}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Do you/partner share needles/syringes, other sharp\n                        objects or used abuse drug substances of any kind?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"abuseDrug\"\n                        id=\"abuseDrug\"\n                        value={riskAssessment.abuseDrug}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.abuseDrug !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.abuseDrug}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner had any blood or blood product\n                        transfusion? <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"bloodTransfusion\"\n                        id=\"bloodTransfusion\"\n                        value={riskAssessment.bloodTransfusion}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.bloodTransfusion !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.bloodTransfusion}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner experienced coughing, weight loss,\n                        fever, night sweats consistently?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"consistentWeightFeverNightCough\"\n                        id=\"consistentWeightFeverNightCough\"\n                        value={riskAssessment.consistentWeightFeverNightCough}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.consistentWeightFeverNightCough !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.consistentWeightFeverNightCough}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner paid or sold vaginal, anal or oral sex?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"soldPaidVaginalSex\"\n                        id=\"soldPaidVaginalSex\"\n                        value={riskAssessment.soldPaidVaginalSex}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.soldPaidVaginalSex !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.soldPaidVaginalSex}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <Message warning>\n                    <h4> HIV Risk assessment score (sum of all 7 answers)</h4>\n                    <b>Score :{riskCount.length}</b>\n                  </Message>\n                  <hr />\n                  <br />\n                </>\n              )}\n\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#000\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Clinical TB screening\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Current cough </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"currentCough\"\n                    id=\"currentCough\"\n                    value={tbScreening.currentCough}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.currentCough !== \"\" ? (\n                    <span className={classes.error}>{errors.currentCough}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Weight loss </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"weightLoss\"\n                    id=\"weightLoss\"\n                    value={tbScreening.weightLoss}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.weightLoss !== \"\" ? (\n                    <span className={classes.error}>{errors.weightLoss}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lymphadenopathy\"\n                    id=\"lymphadenopathy\"\n                    value={tbScreening.lymphadenopathy}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.lymphadenopathy !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.lymphadenopathy}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Fever </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"fever\"\n                    id=\"fever\"\n                    value={tbScreening.fever}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.fever !== \"\" ? (\n                    <span className={classes.error}>{errors.fever}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Night sweats</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"nightSweats\"\n                    id=\"nightSweats\"\n                    value={tbScreening.nightSweats}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.nightSweats !== \"\" ? (\n                    <span className={classes.error}>{errors.nightSweats}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <Message warning>\n                <h4>\n                  TB Screening score (calculate the sum of the TB assessment) If\n                  score {\">= 1\"}, test for Xper MTB RIF or refer to TB service{\" \"}\n                </h4>\n                <b>Score : {newTbTrue.length}</b>\n              </Message>\n              <hr />\n              <br />\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#992E62\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Sex Partner Risk Assessment (Last 3 months)\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you had sex with a partner who is HIV positive?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"sexPartnerHivPositive\"\n                    id=\"sexPartnerHivPositive\"\n                    value={riskAssessmentPartner.sexPartnerHivPositive}\n                    onChange={handleInputChangeRiskAssessmentPartner}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.sexPartnerHivPositive !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.sexPartnerHivPositive}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {riskAssessmentPartner.sexPartnerHivPositive === \"true\" && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Is sex partner newly diagnosed with HIV and started\n                        treatment less than 3-6 months ago?\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"newDiagnosedHivlastThreeMonths\"\n                        id=\"newDiagnosedHivlastThreeMonths\"\n                        value={\n                          riskAssessmentPartner.newDiagnosedHivlastThreeMonths\n                        }\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.newDiagnosedHivlastThreeMonths !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.newDiagnosedHivlastThreeMonths}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Is sex partner pregnant and currently receiving ARV for\n                        PMTCT?\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyArvForPmtct\"\n                        id=\"currentlyArvForPmtct\"\n                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.currentlyArvForPmtct !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.currentlyArvForPmtct}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Known HIV positive partner on ARV with an unsurpressed\n                        VL\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"knowHivPositiveOnArv\"\n                        id=\"knowHivPositiveOnArv\"\n                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.knowHivPositiveOnArv !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.knowHivPositiveOnArv}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Known HIV positive recently returned to treatment after\n                        being lost to follow up\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                        value={\n                          riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp\n                        }\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.knowHivPositiveAfterLostToFollowUp !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.knowHivPositiveAfterLostToFollowUp}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Unprotected Anal sex</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"uprotectedAnalSex\"\n                        id=\"uprotectedAnalSex\"\n                        value={riskAssessmentPartner.uprotectedAnalSex}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.uprotectedAnalSex !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.uprotectedAnalSex}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n              <Message warning>\n                <h4>\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\n                </h4>\n                <b>Score :{sexPartRiskCount.length}</b>\n              </Message>\n\n              <hr />\n              <br />\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#014D88\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Syndromic STI Screening\n              </div>\n              {props.patientObj.personResponseDto &&\n                props.patientObj.personResponseDto.sex === \"Female\" && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of vaginal discharge or burning when\n                          urinating?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"vaginalDischarge\"\n                          id=\"vaginalDischarge\"\n                          value={stiScreening.vaginalDischarge}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.vaginalDischarge !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.vaginalDischarge}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of lower abdominal pains with or without\n                          vaginal discharge?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lowerAbdominalPains\"\n                          id=\"lowerAbdominalPains\"\n                          value={stiScreening.lowerAbdominalPains}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lowerAbdominalPains !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lowerAbdominalPains}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              {props.patientObj.personResponseDto &&\n                props.patientObj.personResponseDto.sex === \"Male\" && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of urethral discharge or burning when\n                          urinating?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"urethralDischarge\"\n                          id=\"urethralDischarge\"\n                          value={stiScreening.urethralDischarge}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.urethralDischarge !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.urethralDischarge}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Complaints of scrotal swelling and pain</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"complaintsOfScrotal\"\n                          id=\"complaintsOfScrotal\"\n                          value={stiScreening.complaintsOfScrotal}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.complaintsOfScrotal !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.complaintsOfScrotal}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of genital sore(s) or swollen inguinal\n                          lymph nodes with or without pains?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"complaintsGenitalSore\"\n                          id=\"complaintsGenitalSore\"\n                          value={stiScreening.complaintsGenitalSore}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.complaintsGenitalSore !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.complaintsGenitalSore}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              <Message warning>\n                <h4>\n                  Calculate the sum of the STI screening. If {\">= \"}1, should be\n                  referred for STI test{\" \"}\n                </h4>\n                <b>Score :{stiCount.length}</b>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {/* <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"basic\", \"basic\")}\n                  /> */}\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default BasicInfo;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js",["604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js",["674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js",["701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["754","755"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { useHistory, } from \"react-router-dom\";\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const history = useHistory();\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleDone =()=>{\n      history.push('/');\n    }\n    const handleItemClick =(page, completedMenu)=>{        \n      if(props.completed.includes(completedMenu)) {\n      }else{\n          props.setCompleted([...props.completed, completedMenu])\n      }\n      props.handleItemClick(page)\n  }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["756","757","758","759","760","761"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\n//import { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\nimport History from \"./History\";\nimport ContineousRegistrationTesting from \"./../Patient/ContineousRegistrationTesting\";\n//import CheckedInPatients from './Patient/CheckedInPatients'\nimport * as moment from \"moment\";\nimport ExistenceClientHIVSTRegistration from \"../Patient/HIVST/ExistenceClientHIVSTRegistration\";\nimport HIVSTPatientHistory from \"../Patient/HIVST/HIVSTPatientHistory\";\nimport { getCheckModalityForHTS } from \"../../../utility\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = (props) => {\n  const [patientList, setPatientList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const patientId =\n    props.patientObj && props.patientObj.personId\n      ? props.patientObj.personId\n      : props.patientObj.id\n      ? props.patientObj.id\n      : \"\";\n\n  const [key, setKey] = useState(\n    props.activePage === \"NEW HTS\" ? \"new\" : \"home\"\n  );\n\n  const [patientInfo, setPatientInfo] = useState(null);\n  const [permissions, setPermission] = useState(\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\n  );\n  const [lastVisitCount, setLastVisitCount] = useState(null);\n  const [checkModality, setCheckModality] = useState(\"\");\n  const [lastVistAndModality, setLastVistAndModality] = useState(\"\");\n  const [lastVisitModalityAndCheckedIn, setLastVisitModalityAndCheckedIn] =\n    useState(lastVistAndModality || props.checkedInPatient ? true : false);\n\n  //Calculate last date of visit\n  const calculateLastVisitDate = (visitDate) => {\n    const monthDifference = moment(\n      new Date(moment(new Date()).format(\"YYYY-MM-DD\"))\n    ).diff(new Date(visitDate), \"months\", true);\n    return monthDifference;\n  };\n  useEffect(() => {\n    patients();\n    patientsCurrentHts();\n    if (props.activePage.activePage === \"home\") {\n      setKey(\"home\");\n    }\n    if (props.activePage.activePage === \"NEW HTS\") {\n      setKey(\"new\");\n    }\n  }, [props.patientObj, props.activePage]);\n  ///GET LIST OF Patients\n\n  async function patients() {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}hts/persons/${patientId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setLoading(false);\n        setPatientList(response.data.htsClientDtoList);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  }\n  async function patientsCurrentHts() {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}hts/persons/${patientId}/current-hts`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //set the last date of visit after the response\n        setPatientInfo(response.data);\n        setLastVisitCount(\n          Math.round(calculateLastVisitDate(response.data.dateVisit))\n        );\n        setCheckModality(\n          getCheckModalityForHTS(\n            response.data.riskStratificationResponseDto?.modality\n          )\n        );\n\n        // new adjustment-- for patient with pmtct modality, they should skip the 3 month\n        let condition =\n          Math.round(calculateLastVisitDate(response.data.dateVisit)) >= 3 ||\n          getCheckModalityForHTS(\n            response.data.riskStratificationResponseDto?.modality\n          ) === \"show\"\n            ? true\n            : false;\n\n        setLastVistAndModality(condition);\n        setLastVisitModalityAndCheckedIn(\n          condition || props.checkedInPatient ? true : false\n        );\n      })\n      .catch((error) => {\n        //setLoading(false)\n      });\n  }\n\n  return (\n    <Fragment>\n      <br />\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"home\" title=\"HTS HISTORY\">\n                    <History\n                      patientObj={props.patientObj}\n                      setPatientObj={props.setPatientObj}\n                      activePage={props.activePage}\n                      setActivePage={props.setActivePage}\n                      clientCode={props.clientCode}\n                      patientAge={props.patientAge}\n                      patients={patients}\n                      patientList={patientList}\n                      loading={loading}\n                    />\n                  </Tab>\n                  {/* lastVistAndModality */}\n\n                  {lastVisitModalityAndCheckedIn && (\n                    <Tab eventKey=\"new\" title=\"NEW HTS\">\n                      <ContineousRegistrationTesting\n                        patientObj={patientInfo}\n                        activePage={props.activePage}\n                        setActivePage={props.setActivePage}\n                        clientCode={props.clientCode}\n                        patientAge={props.patientAge}\n                        patients={patients}\n                        patientList={patientList}\n                        checkedInPatient={props.checkedInPatient}\n                      />\n                    </Tab>\n                  )}\n                  {/* uncomment E001 */}\n                  <Tab eventKey=\"hivst-history\" title=\"HIVST HISTORY\">\n                    <HIVSTPatientHistory\n                      patientObj={props.patientObj}\n                      setPatientObj={props.setPatientObj}\n                      activePage={props.activePage}\n                      setActivePage={props.setActivePage}\n                      clientCode={props.clientCode}\n                      patientAge={props.patientAge}\n                      patients={patients}\n                      patientList={patientList}\n                      loading={loading}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"new-hivst\" title=\"NEW HIVST\">\n                    <ExistenceClientHIVSTRegistration\n                      patientObj={props.patientObj}\n                      activePage={props.activePage}\n                      setActivePage={props.setActivePage}\n                      clientCode={props.clientCode}\n                      patientAge={props.patientAge}\n                      patients={patients}\n                    />\n                  </Tab>\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js",["762"],"import React, {Fragment, useState} from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport PNSList from \"../../NewRegistration/PartnerNotificationServices/PNSlist\";\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\nimport {Button} from \"semantic-ui-react\";\nimport ClientRerralList from \"./ClientRerralList\";\n\nconst ClientReferralHistory = (props) => {\n    const [activePage, setActivePage] = useState(\"list\");\n    const handleIClickPage = (activeItem) => {\n        setActivePage(activeItem);\n    };\n    const handleItemClick = (page, completedMenu) => {\n        props.handleItemClick(page);\n        if (props.completed.includes(completedMenu)) {\n        } else {\n            props.setCompleted([...props.completed, completedMenu]);\n        }\n    };\n    const handleDone = (row, actionType) => {\n        props.setActivePage({\n            ...props.activePage,\n            activePage: \"home\",\n            activeObject: row,\n            actionType: actionType,\n        });\n    };\n\n    return (\n        <Fragment>\n            <Row>\n                <Col md={12}>\n                    {activePage === \"list\" && (\n                        <ClientRerralList\n                            activePage={activePage}\n                            setActivePage={setActivePage}\n                            handleIClickPage={handleIClickPage}\n                            patientObj={props.patientObj}\n                            handleItemClick={handleItemClick}\n                            setRow={props.setRow}\n                        />\n                    )}\n                    {activePage === \"add\" && (\n                        <AddIndexContact\n                            activePage={activePage}\n                            setActivePage={setActivePage}\n                            handleIClickPage={handleIClickPage}\n                            patientObj={props.patientObj}\n                        />\n                    )}\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"form-group mb-3 col-md-12\">\n                            <Button\n                                content=\"Back\"\n                                icon=\"left arrow\"\n                                labelPosition=\"left\"\n                                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                                onClick={() =>\n                                    handleItemClick(\"recency-testing\", \"recency-testing\")\n                                }\n                            />\n                            <Button\n                                content=\"Done\"\n                                icon=\"list\"\n                                labelPosition=\"left\"\n                                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                                onClick={() => handleDone()}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default ClientReferralHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js",["763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport ServicesProvided from \"../../NewRegistration/ServicesProvided\";\nimport RefferalForm from \"./RefferalUnit\";\nimport RefferralUnit from \"./RefferalUnit\";\nimport Cookies from \"js-cookie\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst ViewClientReferral = (props) => {\n  const classes = useStyles();\n  // console.log(\"props.patientObj\", props.patientObj)\n  const [content, setContent] = useState({\n    showReferringUnit: false,\n    showServiceProviderUnit: false,\n  });\n  const patientObj = props.patientObj;\n  const [kP, setKP] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [saving, setSaving] = useState(false);\n  let temp = { ...errors };\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  const [setting, setSetting] = useState([]);\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [genders, setGenders] = useState([]);\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\n\n  const [contentDropDown, setContentDropDown] = useState(\"\");\n  const [formInfo, setFormInfo] = useState({\n    dateVisit: \"\",\n    firstName: props?.patientObj?.personResponseDto?.firstName,\n    middleName: props?.patientObj?.personResponseDto?.otherName,\n    lastName: props?.patientObj?.personResponseDto?.surname,\n    hospitalNumber:\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\n    countryId: \"1\",\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\n    province: Number(\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\n    ),\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\n    landmark: \"\",\n    phoneNumber:\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\n        ?.value,\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\n    age: \"\",\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\n    hivStatus: props?.patientObj?.hivTestResult2\n      ? props?.patientObj?.hivTestResult2\n      : props?.patientObj?.hivTestResult\n      ? props?.patientObj?.hivTestResult\n      : \"\",\n    referredFromFacility: \"\",\n    nameOfPersonReferringClient: \"\",\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\n    addressOfReferringFacility: \"\",\n    phoneNoOfReferringFacility: \"\",\n    referredTo: \"\",\n    nameOfContactPerson: \"\",\n    nameOfReceivingFacility: \"\",\n    addressOfReceivingFacility: \"\",\n    phoneNoOfReceivingFacility: \"\",\n    isDateOfBirthEstimated: false,\n    serviceNeeded: \"\",\n    comments: \"\",\n    receivingStateFacility: \"\",\n    receivingLgaFacility: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\n  });\n  const viewReferralInfo = () => {\n    axios\n      .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setFormInfo(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  useEffect(() => {\n    viewReferralInfo();\n  }, []);\n\n  const handleContentChange = (e) => {\n    setContentDropDown(e.target.value);\n    if (e.target.value === \"showReferringUnit\") {\n      setContent({\n        showReferringUnit: true,\n        showServiceProviderUnit: false,\n      });\n    }\n\n    if (e.target.value === \"showServiceProviderUnit\") {\n      setContent({\n        showReferringUnit: false,\n        showServiceProviderUnit: true,\n      });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"form-group  col-md-8\">\n          <FormGroup>\n            <Label>\n              Referral Type <span style={{ color: \"red\" }}> *</span>\n            </Label>\n            <select\n              className=\"form-control\"\n              name=\"contentDropDown\"\n              id=\"contentDropDown\"\n              onChange={handleContentChange}\n              style={{\n                border: \"1px solid #014D88\",\n                borderRadius: \"0.2rem\",\n              }}\n            >\n              <option value={\"\"}>Select Refarral form type</option>\n              <option value={\"showReferringUnit\"}>Referral form</option>\n              <option value={\"showServiceProviderUnit\"}>\n                Service Provider form\n              </option>\n            </select>\n          </FormGroup>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        {content.showReferringUnit && (\n          <RefferralUnit\n            patientObj={patientObj}\n            formInfo={formInfo}\n            row={props.row}\n            handleItemClick={props.handleItemClick}\n            setCompleted={props.setCompleted}\n            completed={props.completed}\n          />\n        )}\n        {content.showServiceProviderUnit && (\n          <CardBody>\n            <ServicesProvided\n              patientObj={patientObj}\n              formInfo={formInfo}\n              row={props.row}\n              handleItemClick={props.handleItemClick}\n              etCompleted={props.setCompleted}\n              completed={props.completed}\n            />\n          </CardBody>\n        )}\n        {/* recieving facility  */}\n      </Card>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Are you Sure of the Age entered?</h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n          >\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ViewClientReferral;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\utils\\index.js",["796","797"],"export const calculate_age = (dob) => {\n// the format should be YYYY-MM-DD\n  if (dob !== null && dob != \"\") {\n    //Check if the DOB is not null or empty\n    const today = new Date();\n    const dateParts = dob.split(\"-\");\n    const birthDate = new Date(dob);\n    let todayMonth = today.getMonth();\n    let todayYear = today.getFullYear();\n    let todayDate = today.getDate(); // get the day, month and year from date of birth\n    let birthDateMonth = birthDate.getMonth();\n    let birthDateYear = birthDate.getFullYear();\n    let birthdateDate = birthDate.getDate();\n    let assumedAge = todayYear - birthDateYear;\n    if (assumedAge > 0) {\n      //Checking the month to confirm if the age has been cloocked\n      let monthGap = todayMonth - birthDateMonth;\n      if (monthGap > 0) {\n        return assumedAge;\n      } else if (monthGap < 0) {\n        let confirmedAge = assumedAge - 1;\n        return confirmedAge;\n      } else if (monthGap === 0) {\n        let dateGap = todayDate - birthdateDate;\n        if (dateGap > 0) {\n          return assumedAge;\n        } else if (dateGap < 0) {\n          let confirmedAge = assumedAge - 1;\n          return confirmedAge;\n        }\n      }\n    } else {\n    }\n  }\n};\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\utility\\index.js",["798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815"],"import { token, url as baseUrl } from \"../api\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n//To make a text field accept alphabet value only\nexport const alphabetOnly = (value) => {\n  const result = value.replace(/[^a-z]/gi, \"\");\n  return result;\n};\n\n//*********************** REUSABLE API *****************8*/\n\n// Get all genders\nexport const getAllGenders = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (e) {}\n};\n\n//Get all country\nexport const getAllCountry = async () => {\n  try {\n    const response = await axios.get(\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response.data;\n  } catch (e) {}\n};\n\n//\n//\n\n//Get all state by state by country Id\nexport const getAllStateByCountryId = async () => {\n  try {\n    const response = await axios.get(\n      `${baseUrl}organisation-units/parent-organisation-units/1`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response.data;\n  } catch (e) {}\n};\n\n//Get all state by province by state Id (it needs stateId as parameter)\nexport const getAllProvinces = async (stateId) => {\n  try {\n    const response = await axios.get(\n      `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    return response.data;\n  } catch (e) {}\n};\n\n//Get all state by province by state Id (it needs stateId as parameter)\nexport const getAcount = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}account`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    Cookies.set(\"facilityName\", response.data.currentOrganisationUnitName);\n\n    return response.data;\n  } catch (e) {}\n};\n//get if patient is pregnant\n\n\n\nexport const checkPregnantPatient =  async(id) => {\n   try {\n     const response = await axios.get(\n       `${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n       {\n         headers: { Authorization: `Bearer ${token}` },\n       }\n     );\n     //Get the pregnant object\n     let result = response.data.filter((each, index) => {\n       return each.code === \"PREGANACY_STATUS_PREGNANT\";\n     });\n     //compare the object id with  parameter\n\n     console.log(result[0].id, id, Number(result[0].id) === Number(id));\n\n    //  return result[0].id;\n     if (Number(result[0].id) === Number(id)) {\n       // return true;\n       return true;\n     } else {\n       return false;\n     }\n   } catch (e) {}\n\n\n  \n\n};\n\n\n\n\n\n\n// TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\n\n//check modality\nexport const getCheckModality = (patientObj) => {\n  console.log(\"MODALITY CHECK UP \", patientObj);\n  if (\n    patientObj === \"TEST_SETTING_STI_STI\" ||\n    patientObj === \"TEST_SETTING_TB_TB\" ||\n    patientObj === \"TEST_SETTING_CT_TB\" ||\n    patientObj === \"TEST_SETTING_CT_STI\" ||\n    patientObj === \"TEST_SETTING_CT_PMTCT\" ||\n    patientObj === \"TEST_SETTING_OPD_STI\" ||\n    patientObj === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\n    patientObj === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\n    patientObj === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_STI\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_TB\" ||\n    patientObj === \"PMTCT (Post ANC1: Pregnancy/L&D/BF)\" ||\n    patientObj === \"Post ANC1 Pregnant/L&D ? 72hrs\" ||\n    patientObj ===\n      \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\n    patientObj === \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D ? 72hrs\"\n  ) {\n    console.log(\"IT IS SKIP\");\n            localStorage.setItem(\n              \"modality\",\n              \"skip\")\n            \n\n    return \"skip\";\n  } else {\n    localStorage.setItem(\"modality\", \"fill\");\n    return \"fill\";\n  }\n};\n\n//check modality for new HTS\nexport const getCheckModalityForHTS = (patientObj) => {\n  console.log(patientObj);\n  if (\n    patientObj === \"TEST_SETTING_CT_PMTCT\" ||\n    patientObj === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\n    patientObj === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\n    patientObj === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\" ||\n    patientObj === \"PMTCT (Post ANC1: Pregnancy/L&D/BF)\" ||\n    patientObj === \"Post ANC1 Pregnant/L&D ? 72hrs\" ||\n    patientObj ===\n      \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\n    patientObj ===\n      \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\n    patientObj === \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\n    patientObj === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D ? 72hrs\"\n  ) {\n    return \"show\";\n  } else {\n    return \"hidden\";\n  }\n};\n\n// Permission implementation\n\nconst generateFormCode = (formName) => {\n  switch (formName) {\n    case \"Risk_Stratification\":\n      return {\n        name: \"Risk_Stratification\",\n        code: \"risk\",\n        general: true,\n        condition: [],\n      };\n      break;\n    case \"Client_intake_form\":\n      return {\n        name: \"Client_intake_form\",\n        code: \"basic\",\n        general: true,\n        condition: [],\n      };\n      break;\n    case \"Pre_Test_Counseling\":\n      return {\n        name: \"Pre_Test_Counseling\",\n        code: \"pre-test-counsel\",\n        general: true,\n        condition: [\"age < 15\", \"pmtct modality\"],\n      };\n      break;\n    case \"Request_and_Result_Form\":\n      return {\n        name: \"Request_and_Result_Form\",\n        code: \"hiv-test\",\n        general: true,\n        condition: [],\n      };\n      break;\n    case \"Post_Test_Counseling\":\n      return {\n        name: \"Post_Test_Counseling\",\n        code: \"post-test\",\n        general: true,\n        condition: [],\n      };\n      break;\n    case \"HIV_Recency_Testing\":\n      return {\n        name: \"HIV_Recency_Testing\",\n        code: \"recency-testing\",\n        general: true,\n        condition: [\"age < 15\", \"-HIV status\"],\n      };\n      break;\n    case \"Nigeria_PNS_Form\":\n      return {\n        name: \"Nigeria_PNS_Form\",\n        code: \"pns\",\n        general: false,\n        condition: [\"-HIV status\"],\n      };\n      break;\n    case \"Referral_Form\":\n      return {\n        name: \"Referral_Form\",\n        code: \"refferal-history\",\n        general: false,\n        condition: [],\n      };\n  }\n};\n\n// note people with that condition will not see the form\nlet ArrayOfAllForms = [\n  {\n    name: \"Risk_Stratification\",\n    code: \"risk\",\n    general: true,\n    condition: [],\n  },\n  { name: \"Client_intake_form\", code: \"basic\", general: true, condition: [] },\n  {\n    name: \"Pre_Test_Counseling\",\n    code: \"pre-test-counsel\",\n    general: true,\n    condition: [\"age < 15\", \"pmtct modality\"],\n  },\n  {\n    name: \"Request_and_Result_Form\",\n    code: \"hiv-test\",\n    general: true,\n    condition: [],\n  },\n  {\n    name: \"Post_Test_Counseling\",\n    code: \"post-test\",\n    general: true,\n    condition: [],\n  },\n  {\n    name: \"HIV_Recency_Testing\",\n    code: \"recency-testing\",\n    general: true,\n    condition: [\"age < 15\", \"-HIV status\"],\n  },\n  {\n    name: \"Family_Index_Testing_Form\",\n    code: \"fit\",\n    general: false,\n    condition: [\"-HIV status\"],\n  },\n  {\n    name: \"Nigeria_PNS_Form\",\n    code: \"pns\",\n    general: false,\n    condition: [\"-HIV status\"],\n  },\n  {\n    name: \"Referral_Form\",\n    code: \"refferal-history\",\n    general: false,\n    condition: [],\n  },\n];\n\n\n\n\nexport const getListOfPermission = (permittedForms) => {\n\n  let newListOfForms = [];\n\n  //if it is admin then return all form\n  if (permittedForms.includes(\"all_permission\")) {\n    return ArrayOfAllForms;\n  } else {\n    // map through all form array using nuser as the argument\n\n    ArrayOfAllForms.map((each, index) => {\n      if (each.general) {\n        newListOfForms.push(each);\n      } else {\n        if (permittedForms.includes(each.name)) {\n          // generate object body\n          let objGenerated = generateFormCode(each.name);\n          newListOfForms.push(objGenerated);\n        }\n      }\n    });\n\n    return newListOfForms;\n  }\n};\n\n\nexport const getNextForm = (formName, age, pmtctModality, hivStatus) => {\n  let ageCondition = undefined;\n  let pmctctModalityCondition = undefined;\n  let HivStatuscondition = undefined;\n   pmtctModality = pmtctModality\n     ? pmtctModality\n     : localStorage.getItem(\"modality\");\n\n  let authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\n\n  let lengthOfAuthForm = authorizedForm.length;\n\n  // get the index of the form\n  let IndexOfForm = authorizedForm.findIndex((each) => {\n    return each.name === formName;\n  });\n\n  // use the index of the form to send the code of the next page\n  let nextPage;\n\n  if (lengthOfAuthForm > IndexOfForm + 1) {\n    nextPage = IndexOfForm + 1;\n\n    let nextForm = authorizedForm[nextPage];\n\n    console.log(nextForm);\n    console.log([nextForm.code, authorizedForm[IndexOfForm].code]);\n\n    //  confirm if there are no condition on the  NEXT form\n    if (nextForm.condition.length === 0) {\n      return [nextForm.code, authorizedForm[IndexOfForm].code];\n    } else {\n      let answer = loopThroughForms(\n        nextForm,\n        authorizedForm[IndexOfForm],\n        IndexOfForm,\n        age,\n        pmtctModality,\n        hivStatus\n      );\n      return answer;\n    }\n\n    //\n  } else {\n      return [\n        authorizedForm[IndexOfForm].code,\n        authorizedForm[IndexOfForm].code,\n      ];\n  }\n};\n\n//function to double skip a form due to other condition\n\nexport const getDoubleSkipForm = (code) => {\n  let authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\n\n  let lengthOfAuthForm = authorizedForm.length;\n\n  // get the index of the form\n  let IndexOfForm = authorizedForm.findIndex((each) => {\n    return each.code === code;\n  });\n\n  // use the index of the form to send the code of the next page\n  let nextPage;\n\n  if (lengthOfAuthForm > IndexOfForm + 1) {\n    nextPage = IndexOfForm + 1;\n\n    let nextForm = authorizedForm[nextPage];\n\n    console.log(nextForm);\n    console.log([nextForm.code, authorizedForm[IndexOfForm].code]);\n\n    return [nextForm.code, authorizedForm[IndexOfForm].code];\n  } else {\n    return \"non\";\n  }\n};\n\nexport const checkNextPageCondition = (\n  nextForm,\n  currentForm,\n  IndexOfForm,\n  age,\n  pmtctModality,\n  hivStatus\n) => {\n  let ageCondition = undefined;\n  let pmctctModalityCondition = undefined;\n  let HivStatuscondition = undefined;\nlet authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\nconsole.log(\n  \"length of the authorized form checkNextPageCondition \",\n  authorizedForm.length\n);\n\n  console.log(\n    \"nextform\",\n    nextForm,\n    currentForm,\n    IndexOfForm,\n    age,\n    pmtctModality,\n    hivStatus\n  );\n\n if (nextForm.condition.length === 0) {\n\n    return [nextForm.code, authorizedForm[IndexOfForm].code];\n\n } else {\n   // check if patient obj conform with the codition\n   nextForm.condition.map((each, index) => {\n     if (each === \"age < 15\") {\n       ageCondition = age < 15 ? true : false;\n     } else if (each === \"pmtct modality\") {\n       pmctctModalityCondition = pmtctModality === \"skip\" ? true : false;\n     } else if (each === \"-HIV status\" && hivStatus) {\n       HivStatuscondition =\n         hivStatus.toLowerCase() === \"negative\" ? true : false;\n     } else if (each === \"-HIV status\" && !hivStatus) {\n       HivStatuscondition = true\n       \n     }\n   });\n   //type of form\n   let checkformType = [\n     ageCondition,\n     pmctctModalityCondition,\n     HivStatuscondition,\n   ];\n\n   let confirmedFormType = checkformType.filter((each, index) => {\n     return each !== undefined;\n   });\n\n   console.log(\"total condition seen\", confirmedFormType);\n   // check if any condition is true\n   let answer = confirmedFormType.some((each) => {\n     return each === true;\n   });\n\n   // skip to the next page ie +1+1\n   if (answer) {\n     // indexPage +1 +1 check the next page condtion ;\n\n     return \"recall \" + IndexOfForm;\n   } else {\n     return [nextForm.code, authorizedForm[IndexOfForm].code];\n   }\n }\n};\n\nexport const loopThroughForms = (\n  nextForm,\n  currentForm,\n  IndexOfForm,\n  age,\n  pmtctModality,\n  hivStatus\n) => {\nlet authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\nconsole.log(\"length of the authorized form \", authorizedForm.length);\nlet latestNextForm = nextForm;\nlet nextFormIndex =\n  authorizedForm.length > IndexOfForm + 1 ? IndexOfForm + 1 : IndexOfForm;\n\n  //get the index of the next form\n\n  for (let i = nextFormIndex; i < authorizedForm.length; i++) {\n   \n    let theNextPage = checkNextPageCondition(\n      authorizedForm[i],\n      authorizedForm[IndexOfForm],\n      IndexOfForm,\n      age,\n      pmtctModality,\n      hivStatus\n    );\n\n    if (theNextPage.includes(\"recall\")) {\n      console.log(authorizedForm[i]);\n    } else {\n      return theNextPage;\n    }\n  }\n};\n\n\nexport const loopThroughFormBackward = (\n  nextForm,\n  currentForm,\n  IndexOfForm,\n  age,\n  pmtctModality,\n  hivStatus\n) => {\n  let authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\n  console.log(\"length of the authorized form \", authorizedForm.length);\n  let nextFormIndex =\n  IndexOfForm - 1 >= 0 ? IndexOfForm - 1 : IndexOfForm;\n\n  //get the index of the next form\n\n  for (let i = nextFormIndex; i > 0; i--) {\n    let theNextPage = checkNextPageCondition(\n      authorizedForm[i],\n      authorizedForm[IndexOfForm],\n      IndexOfForm,\n      age,\n      pmtctModality,\n      hivStatus\n    );\n\n    if (theNextPage.includes(\"recall\")) {\n      console.log(authorizedForm[i]);\n    } else {\n      return theNextPage;\n    }\n  }\n};\nexport const getPreviousForm = (formName, age, pmtctModality, hivStatus) => {\n  let ageCondition = undefined;\n  let pmctctModalityCondition = undefined;\n  let HivStatuscondition = undefined;\n  pmtctModality = pmtctModality\n    ? pmtctModality\n    : localStorage.getItem(\"modality\");\n\n  let authorizedForm = JSON.parse(localStorage.getItem(\"generatedPermission\"));\n\n  let lengthOfAuthForm = authorizedForm.length;\n\n  // get the index of the form\n  let IndexOfForm = authorizedForm.findIndex((each) => {\n    return each.name === formName;\n  });\n\n  // use the index of the form to send the code of the next page\n  let prevPage;\n\n  \n  if (IndexOfForm - 1 >= 0) {\n    prevPage = IndexOfForm - 1;\n\n    let nextForm = authorizedForm[prevPage];\n\n    console.log(nextForm);\n    console.log([nextForm.code, authorizedForm[IndexOfForm].code]);\n\n    //  confirm if there are no condition on the  NEXT form\n    if (nextForm.condition.length === 0) {\n      return [nextForm.code, authorizedForm[IndexOfForm].code];\n    } else {\n      let answer = loopThroughFormBackward(\n        nextForm,\n        authorizedForm[IndexOfForm],\n        IndexOfForm,\n        age,\n        pmtctModality,\n        hivStatus\n      );\n      return answer;\n    }\n\n    //\n  } else {\n    return [\"\", \"\"];\n  }\n};","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["816","817","818","819","820","821","822","823"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          // { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js",["824","825","826","827","828","829","830","831","832"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n// import FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport HIVSTPatientRegistration from \"./HIVSTPatientRegistration\";\n// import RiskStratification from \"../ContinuesHTSEnrollment/RiskStratification\";\n// import BasicInfo from \"../ContinuesHTSEnrollment/BasicInfo\";\n// import PreTest from \"../ContinuesHTSEnrollment/PreTest\";\n// import HivTestResult from \"../ContinuesHTSEnrollment/HivTestResult\";\n// import PostTest from \"../ContinuesHTSEnrollment/PostTest\";\n// import IndexingContactTracing from \"../ContinuesHTSEnrollment/Elicitation\";\n// import RecencyTesting from \"../ContinuesHTSEnrollment/RecencyTesting\";\n// import Others from \"../ContinuesHTSEnrollment/Others\";\n// import PNSHistory from \"../NewRegistration/PartnerNotificationServices/PNSHistory\";\n// import PnsForm from \"../NewRegistration/PartnerNotificationServices/PnsForm\";\n// import ViewPNSForm from \"../NewRegistration/PartnerNotificationServices/ViewPnsForm\";\n// import ReferralUnit from \"../ContinuesHTSEnrollment/ClientReferral/ReferralUnit\";\n\nconst ExistenceClientHIVSTRegistration = (props) => {\n    // console.log(\"ExistenceClientHIVSTRegistration\", props.patientObj)\n    const location = useLocation();\n    const locationState = location.state;\n    const [activeItem, setactiveItem] = useState(\"reg\");\n    const [completed, setCompleted] = useState([]);\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\n    // const [saving, setSaving] = useState(false);\n    const [patientObj2, setPatientObj2] = useState({});\n\n    const handleItemClick = (activeItem) => {\n        setactiveItem(activeItem);\n        //setCompleted({...completed, ...completedMenu})\n    };\n\n    // console.log(\"ExistenceClientHIVSTRegistration\", locationState.patientObject)\n    return (<>\n        <ToastContainer autoClose={3000} hideProgressBar />\n\n        <Card>\n            <CardBody>\n                <form>\n                    <div className=\"row\">\n                        <h3> HIV SELF TEST </h3>\n                        <br />\n                        <br />\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\n                            <Menu\n                                size=\"large\"\n                                vertical\n                                style={{ backgroundColor: \"#014D88\" }}\n                            >\n                                <Menu.Item\n                                    name=\"inbox\"\n                                    active={activeItem === \"reg\"}\n                                    onClick={() => handleItemClick(\"reg\")}\n                                    style={{\n                                        backgroundColor: activeItem === \"reg\" ? \"#000\" : \"\",\n                                    }}\n                                >\n                                    <span style={{ color: \"#fff\" }}>\n                                        {\" \"}\n                                        Patient Registration\n                                        {completed.includes(\"reg\") && (<Icon name=\"check\" color=\"green\" />)}\n                                    </span>\n                                </Menu.Item>\n                            </Menu>\n                        </div>\n                        <div\n                            className=\"col-md-9 col-sm-9 col-lg-9 \"\n                            style={{\n                                backgroundColor: \"#fff\", margingLeft: \"-50px\", paddingLeft: \"-20px\",\n                            }}\n                        >\n                            {activeItem === \"reg\" && ( <HIVSTPatientRegistration\n                                handleItemClick={handleItemClick}\n                                setCompleted={setCompleted}\n                                completed={completed}\n                                setPatientObj={setPatientObj2}\n                                patientObj={patientObj2}\n                                setHideOtherMenu={setHideOtherMenu}\n                                // patientAge={props.patientAge}\n                                // setExtra={setExtra}\n                                // extra={extra}\n                                patientObject={locationState.patientObject}\n                            // activePage={props.activePage}\n                            // setActivePage={props.setActivePage}\n                            />)}\n                        </div>\n                    </div>\n                </form>\n            </CardBody>\n        </Card>\n    </>);\n\n};\nexport default ExistenceClientHIVSTRegistration;","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["833","834","835","836","837","838","839","840","841","842","843"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js",["844","845","846"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport { toast } from \"react-toastify\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst HIVSTPatientHistory = (props) => {\n  const [hivstHistory, setHivstHistory] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    //patients()\n    FetchHivstHistory();\n  }, [props.patientObj]);\n  console.log(\"HivstHistory\", hivstHistory);\n\n  const LoadViewPage = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"hivst_view\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n\n  const FetchHivstHistory = () => {\n    axios\n      .get(`${baseUrl}hivst?patientId=${props.patientObj.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //set the last date of visit after the response\n        setHivstHistory(response.data);\n      })\n      .catch((error) => {\n        //setLoading(false)\n      });\n  };\n\n  const handleHTSDelete = (row) => {\n    console.log(props.patientList);\n    axios\n      .delete(`${baseUrl}hivst/${props.patientObj.hivstId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response);\n        toast.success(`HIVST patient deleted successfully`);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"HIV Self Testing History \"\n        columns={[\n          { title: \"Date of Visit\", field: \"dateOfVisit\" },\n          { title: \"Service Delivery Point\", field: \"serviceDeliveryPoint\" },\n          {\n            title: \"Number of Test Kits Received\",\n            field: \"numberOfHivstKitsReceived\",\n          },\n          { title: \"User Type\", field: \"userType\" },\n          {\n            title: \"Type of HIVST Kit Received\",\n            field: \"typeOfHivstKitReceived\",\n            filtering: false,\n          },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        isLoading={props.loading}\n        data={hivstHistory.map((row) => ({\n          // id: row.id,\n          dateOfVisit: row.dateOfVisit,\n          serviceDeliveryPoint: row.serviceDeliveryPoint,\n          numberOfHivstKitsReceived: row.numberOfHivstKitsReceived,\n          userType: row.userType,\n          typeOfHivstKitReceived: row.typeOfHivstKitReceived,\n\n          actions: (\n            <div>\n              <Menu.Menu position=\"right\">\n                <Menu.Item>\n                  <Button\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                    primary\n                    onClick={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <Dropdown item text=\"Action\">\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"view\")}\n                        >\n                          {\" \"}\n                          <Icon name=\"eye\" />\n                          View\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"update\")}\n                        >\n                          <Icon name=\"edit\" />\n                          Edit\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\n                          <Icon name=\"delete\" />\n                          Delete\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Button>\n                </Menu.Item>\n              </Menu.Menu>\n            </div>\n          ),\n        }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HIVSTPatientHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["847","848","849","850","851","852","853","854"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport BasicInfo from \"./ContinuesHTSEnrollment/BasicInfo\";\nimport PreTest from \"./ContinuesHTSEnrollment/PreTest\";\nimport HivTestResult from \"./ContinuesHTSEnrollment/HivTestResult\";\nimport IndexingContactTracing from \"./ContinuesHTSEnrollment/Elicitation/Index\";\nimport Others from \"./ContinuesHTSEnrollment/Others\";\nimport PostTest from \"./ContinuesHTSEnrollment/PostTest\";\nimport RecencyTesting from \"./ContinuesHTSEnrollment/RecencyTesting\";\nimport RiskStratification from \"./ContinuesHTSEnrollment/RiskStratification\";\nimport PNSHistory from \"./NewRegistration/PartnerNotificationServices/PNSHistory\";\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\nimport ViewPNSForm from \"./NewRegistration/PartnerNotificationServices/ViewPnsForm\";\nimport ReferralUnit from \"./ContinuesHTSEnrollment/ClientReferral/ReferralUnit\";\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\nimport { set } from \"js-cookie\";\nimport { getCheckModality } from \"../../../utility\";\nimport { getPreviousForm } from \"../../../utility\";\nimport { calculate_age } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst UserRegistration = (props) => {\n    const history = useHistory();\n\n  const location = useLocation();\n  const locationState = location.state;\n  // const [saving, setSaving] = useState(false);\n  const [activeItem, setactiveItem] = useState(\"risk\");\n  const [completed, setCompleted] = useState([]);\n  const [basicInfo, setBasicInfo] = useState({});\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\n  const [organizationInfo, setOrganizationInfo] = useState({});\n  const [row, setRow] = useState({});\n  const [modalityCheck, setModalityCheck] = useState(\"\");\n\n  const [permissions, setPermission] = useState(\n    JSON.parse(localStorage.getItem(\"stringifiedPermmision\"))\n  );\n\n  const [patientObj2, setPatientObj2] = useState({\n    breastFeeding: \"\",\n    capturedBy: \"\",\n    cd4: {},\n    clientCode: \"\",\n    riskStratificationCode: \"\",\n    confirmatoryTest: {},\n    dateVisit: \"\",\n    extra: {},\n    firstTimeVisit: \"\",\n    hepatitisTesting: {},\n    hivTestResult: \"\",\n    id: \"\",\n    indexClient: \"\",\n    indexClientCode: \"\",\n    indexElicitation: [\n      {\n        address: \"\",\n        altPhoneNumber: \"\",\n        archived: 0,\n        currentlyLiveWithPartner: true,\n        datePartnerCameForTesting: \"\",\n        dob: \"\",\n        extra: {},\n        facilityId: 0,\n        firstName: \"\",\n        hangOutSpots: \"\",\n        htsClient: {\n          archived: 0,\n          breastFeeding: 0,\n          capturedBy: \"\",\n          cd4: {},\n          clientCode: \"\",\n          confirmatoryTest: {},\n          dateVisit: \"\",\n          extra: {},\n          facilityId: 0,\n          firstTimeVisit: true,\n          hepatitisTesting: {},\n          hivTestResult: \"\",\n          id: 0,\n          indexClient: true,\n          indexClientCode: \"\",\n          indexNotificationServicesElicitation: {},\n          knowledgeAssessment: {},\n          numChildren: 0,\n          numWives: 0,\n          others: {},\n          person: {\n            active: \"\",\n            address: {},\n            archived: 0,\n            contact: {},\n            contactPoint: {},\n            createdDate: \"\",\n            dateOfBirth: \"\",\n            dateOfRegistration: \"\",\n            deceased: true,\n            deceasedDateTime: \"\",\n            education: {},\n            employmentStatus: {},\n            emrId: \"\",\n            facilityId: 0,\n            firstName: \"string\",\n            gender: {},\n            hospitalNumber: \"\",\n            id: \"\",\n            identifier: {},\n            isDateOfBirthEstimated: true,\n            lastModifiedDate: \"\",\n            maritalStatus: {},\n            new: true,\n            ninNumber: \"\",\n            organization: {},\n            otherName: \"\",\n            sex: \"\",\n            surname: \"\",\n            uuid: \"\",\n          },\n          personUuid: \"\",\n          postTestCounselingKnowledgeAssessment: {},\n          pregnant: \"\",\n          previouslyTested: true,\n          recency: {},\n          referredFrom: \"\",\n          relationWithIndexClient: \"\",\n          riskAssessment: {},\n          sexPartnerRiskAssessment: {},\n          stiScreening: {},\n          syphilisTesting: {},\n          targetGroup: 0,\n          tbScreening: {},\n          test1: {},\n          testingSetting: \"\",\n          tieBreakerTest: {},\n          typeCounseling: \"\",\n          uuid: \"\",\n        },\n        htsClientUuid: \"\",\n        id: \"\",\n        isDateOfBirthEstimated: true,\n        lastName: \"\",\n        middleName: \"\",\n        notificationMethod: \"\",\n        partnerTestedPositive: \"\",\n        phoneNumber: \"\",\n        physicalHurt: \"\",\n        relationshipToIndexClient: \"\",\n        sex: \"\",\n        sexuallyUncomfortable: \"\",\n        threatenToHurt: \"\",\n        uuid: \"\",\n      },\n    ],\n    indexNotificationServicesElicitation: {},\n    knowledgeAssessment: {},\n    numChildren: \"\",\n    numWives: \"\",\n    others: {},\n    personId: \"\",\n    personResponseDto: {\n      active: true,\n\n      address: {\n        address: [\n          {\n            city: \"\",\n            line: [\"\"],\n            stateId: \"\",\n            district: \"\",\n            countryId: 1,\n            postalCode: \"\",\n            organisationUnitId: 0,\n          },\n        ],\n      },\n      biometricStatus: true,\n      checkInDate: \"\",\n      contact: {},\n      contactPoint: {\n        contactPoint: [\n          {\n            type: \"phone\",\n            value: \"\",\n          },\n        ],\n      },\n      dateOfBirth: \"\",\n      dateOfRegistration: \"\",\n      deceased: true,\n      deceasedDateTime: \"\",\n      education: {},\n      employmentStatus: {},\n      emrId: \"\",\n      encounterDate: \"\",\n      facilityId: \"\",\n      firstName: \"\",\n      gender: {},\n      id: \"\",\n      identifier: {},\n      isDateOfBirthEstimated: true,\n      maritalStatus: {},\n      ninNumber: \"\",\n      organization: {},\n      otherName: \"\",\n      sex: \"\",\n      surname: \"\",\n      visitId: \"\",\n    },\n    postTestCounselingKnowledgeAssessment: {},\n    pregnant: \"\",\n    previouslyTested: \"\",\n    recency: {},\n    referredFrom: \"\",\n    relationWithIndexClient: \"\",\n    riskAssessment: {},\n    sexPartnerRiskAssessment: {},\n    stiScreening: {},\n    syphilisTesting: {},\n    targetGroup: \"\",\n    tbScreening: {},\n    test1: {},\n    testingSetting: \"\",\n    tieBreakerTest: {},\n    typeCounseling: \"\",\n    riskStratificationResponseDto: null,\n  });\n\n  const [extra, setExtra] = useState({\n    risk: \"\",\n    index: \"\",\n    pre: \"\",\n    post: \"\",\n    recency: \"\",\n    elicitation: \"\",\n  });\n  const handleItemClick = (activeItem) => {\n    setactiveItem(activeItem);\n    //setCompleted({...completed, ...completedMenu})\n  };\n\n    const getPrevForm = (e) => {\n      e.preventDefault();\n      let age = calculate_age(patientObj2?.personResponseDto?.dateOfBirth);\n\n      let hivStatus = patientObj2?.hivTestResult;\n      let answer = getPreviousForm(\"Nigeria_PNS_Form\", age, \"\", hivStatus);\n      if (answer[0] && answer[1]) {\n        handleItemClick(answer[0]);\n      } else {\n        history.push(\"/\");\n      }\n    }; \n  useEffect(() => {\n    setModalityCheck(\n      getCheckModality(patientObj2?.riskStratificationResponseDto?.modality)\n    );\n  }, [patientObj2]);\n\n  return (\n    <>\n      <ToastContainer autoClose={3000} hideProgressBar />\n\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <h3>\n                HIV COUNSELLING AND TESTING\n                {activeItem !== \"pns\" ? (\n                  <div>\n                    <Link to={\"/\"}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\" float-end\"\n                        //startIcon={<FaUserPlus size=\"10\"/>}\n                        style={{ backgroundColor: \"#014d88\" }}\n                      >\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Back\n                        </span>\n                      </Button>\n                    </Link>\n                  </div>\n                ) : (\n                  <div>\n                    {/* <Link to={\"/\"}> */}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\" float-end\"\n                      //startIcon={<FaUserPlus size=\"10\"/>}\n                      onClick={getPrevForm}\n                      style={{ backgroundColor: \"#014d88\" }}\n                    >\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                    </Button>\n                    {/* </Link> */}\n                  </div>\n                )}\n              </h3>{\" \"}\n              <br />\n              <br />\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\n                <Menu\n                  size=\"large\"\n                  vertical\n                  style={{ backgroundColor: \"#014D88\" }}\n                >\n                  <Menu.Item\n                    name=\"inbox\"\n                    active={activeItem === \"risk\"}\n                    onClick={() => handleItemClick(\"risk\")}\n                    style={{\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\n                    }}\n                  >\n                    <span style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Risk Stratification\n                      {completed.includes(\"risk\") && (\n                        <Icon name=\"check\" color=\"green\" />\n                      )}\n                    </span>\n                  </Menu.Item>\n                  {hideOtherMenu === false && (\n                    <>\n                      <Menu.Item\n                        name=\"inbox\"\n                        active={activeItem === \"basic\"}\n                        onClick={() => handleItemClick(\"basic\")}\n                        style={{\n                          backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\n                        }}\n                        disabled={activeItem !== \"basic\" ? true : false}\n                      >\n                        <span style={{ color: \"#fff\" }}>\n                          {\" \"}\n                          Basic Information\n                          {completed.includes(\"basic\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                      {patientObj2.riskStratificationResponseDto?.age &&\n                        modalityCheck == \"fill\" && (\n                          <Menu.Item\n                            name=\"spam\"\n                            active={activeItem === \"pre-test-counsel\"}\n                            onClick={() => handleItemClick(\"pre-test-counsel\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\n                            }}\n                            disabled={\n                              activeItem !== \"pre-test-counsel\" ? true : false\n                            }\n                          >\n                            {/* <Label>2</Label> */}\n                            <span style={{ color: \"#fff\" }}>\n                              Pre Test Counseling\n                              {completed.includes(\"pre-test-counsel\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n                      {permissions.includes(\"Request_and_Result_Form\") && (\n                        <Menu.Item\n                          name=\"inbox\"\n                          active={activeItem === \"hiv-test\"}\n                          onClick={() => handleItemClick(\"hiv-test\")}\n                          style={{\n                            backgroundColor:\n                              activeItem === \"hiv-test\" ? \"#000\" : \"\",\n                          }}\n                          //disabled={activeItem !== 'hiv-test' ? true : false}\n                        >\n                          <span style={{ color: \"#fff\" }}>\n                            Request {\"&\"} Result Form\n                            {completed.includes(\"hiv-test\") && (\n                              <Icon name=\"check\" color=\"green\" />\n                            )}\n                          </span>\n\n                          {/* <Label color='teal'>3</Label> */}\n                        </Menu.Item>\n                      )}\n                      <Menu.Item\n                        name=\"spam\"\n                        active={activeItem === \"post-test\"}\n                        onClick={() => handleItemClick(\"post-test\")}\n                        style={{\n                          backgroundColor:\n                            activeItem === \"post-test\" ? \"#000\" : \"\",\n                        }}\n                        disabled={activeItem !== \"post-test\" ? true : false}\n                      >\n                        {/* <Label>4</Label> */}\n                        <span style={{ color: \"#fff\" }}>\n                          Post Test Counseling\n                          {completed.includes(\"post-test\") && (\n                            <Icon name=\"check\" color=\"green\" />\n                          )}\n                        </span>\n                      </Menu.Item>\n                \n                      {patientObj2?.hivTestResult &&\n                        patientObj2?.hivTestResult === \"Positive\" &&\n                        patientObj2.riskStratificationResponseDto?.age >= 15 &&\n                        permissions.includes(\"Request_and_Result_Form\") && (\n                          <Menu.Item\n                            name=\"spam\"\n                            active={activeItem === \"recency-testing\"}\n                            onClick={() => {\n                              handleItemClick(\"recency-testing\");\n                            }}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"recency-testing\" ? \"#000\" : \"\",\n                            }}\n                            disabled={\n                              activeItem !== \"recency-testing\" ? true : false\n                            }\n                          >\n                            {/* <Label>4</Label> */}\n                            <span style={{ color: \"#fff\" }}>\n                              HIV Recency Testing\n                              {completed.includes(\"recency-testing\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )}\n              \n                      {patientObj2?.hivTestResult &&\n                        patientObj2?.hivTestResult === \"Positive\" && (\n                          <Menu.Item\n                            name=\"spam\"\n                            active={activeItem === \"fit\"}\n                            onClick={() => handleItemClick(\"fit\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"fit\" ? \"#000\" : \"\",\n                            }}\n                           \n                          >\n                            <span style={{ color: \"#fff\" }}>\n                              Family Index Testing form\n                              {completed.includes(\"fit\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>\n                        )} \n                      {permissions.includes(\"Nigeria_PNS_Form\") &&\n                        patientObj2?.hivTestResult &&\n                        patientObj2?.hivTestResult === \"Positive\" && (\n                          <Menu.Item\n                            name=\"inbox\"\n                            active={activeItem === \"pns-history\"}\n                            onClick={() => handleItemClick(\"pns-history\")}\n                            style={{\n                              backgroundColor:\n                                activeItem === \"pns-history\" ? \"#000\" : \"\",\n                            }}\n                          >\n                            <span style={{ color: \"#fff\" }}>\n                              {\" \"}\n                              Partner Notification Services\n                              {completed.includes(\"pns\") && (\n                                <Icon name=\"check\" color=\"green\" />\n                              )}\n                            </span>\n                          </Menu.Item>)}\n\n                     \n                     {permissions.includes(\"Referral_Form\") && ( \n                        <Menu.Item\n                          name=\"inbox\"\n                          active={activeItem === \"refferal-history\"}\n                          onClick={() => handleItemClick(\"refferal-history\")}\n                          style={{\n                            backgroundColor:\n                              activeItem === \"refferal-history\" ? \"#000\" : \"\",\n                          }}\n                        >\n                          <span style={{ color: \"#fff\" }}>\n                            {\" \"}\n                            Client Referral Service\n                            {completed.includes(\"refferal\") && (\n                              <Icon name=\"check\" color=\"green\" />\n                            )}\n                          </span>\n                        </Menu.Item>\n                  )}\n                  </>)}\n                </Menu>\n              </div>\n              <div\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\n                style={{\n                  backgroundColor: \"#fff\",\n                  margingLeft: \"-50px\",\n                  paddingLeft: \"-20px\",\n                }}\n              >\n                {activeItem === \"risk\" && (\n                  <RiskStratification\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setHideOtherMenu={setHideOtherMenu}\n                    patientAge={props.patientAge}\n                    setExtra={setExtra}\n                    extra={extra}\n                    patientObject={locationState.patientObject}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setOrganizationInfo={setOrganizationInfo}\n                  />\n                )}\n                {activeItem === \"basic\" && (\n                  <BasicInfo\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                    sex={locationState.patientObject.gender}\n                    setExtra={setExtra}\n                    extra={extra}\n                    patientList={props.patientList}\n                    patientObject={locationState.patientObject}\n                    setBasicInfo={setBasicInfo}\n                    checkedInPatient={props.checkedInPatient}\n                  />\n                )}\n                {activeItem === \"pre-test-counsel\" && (\n                  <PreTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"hiv-test\" && (\n                  <HivTestResult\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"post-test\" && (\n                  <PostTest\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                    patientsHistory={props.patients}\n                  />\n                )}\n                {activeItem === \"indexing\" && (\n                  <IndexingContactTracing\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"recency-testing\" && (\n                  <RecencyTesting\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"others\" && (\n                  <Others\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    clientCode={props.clientCode}\n                    patientAge={props.patientAge}\n                  />\n                )}\n                {activeItem === \"pns-history\" && (\n                  <PNSHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setRow={setRow}\n                  />\n                )}\n\n                {activeItem === \"pns\" && (\n                  <PnsForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    // addNewForm={false}\n                  />\n                )}\n\n                {activeItem === \"view-pns\" && (\n                  <ViewPNSForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                  />\n                )}\n                {activeItem === \"fit\" && (\n                  <FamilyIndexTestingForm\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    history={true}\n                  />\n                )}\n                {/*{activeItem === \"new-referral\" && (*/}\n                {/*  <ReferralUnit*/}\n                {/*    handleItemClick={handleItemClick}*/}\n                {/*    setCompleted={setCompleted}*/}\n                {/*    completed={completed}*/}\n                {/*    setPatientObj={setPatientObj2}*/}\n                {/*    patientObj={patientObj2}*/}\n                {/*    setExtra={setExtra}*/}\n                {/*    extra={extra}*/}\n                {/*    basicInfo={basicInfo}*/}\n                {/*    organizationInfo={organizationInfo}*/}\n                {/*    addNewForm={false}*/}\n                {/*  />*/}\n                {/*)}*/}\n                {activeItem === \"client-referral\" && (\n                  <RefferralUnit\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                  />\n                )}\n                {activeItem === \"refferal-history\" && (\n                  <ClientReferralHistory\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    activePage={props.activePage}\n                    setActivePage={props.setActivePage}\n                    setRow={setRow}\n                  />\n                )}\n                {activeItem === \"view-referral\" && (\n                  <ViewClientReferral\n                    handleItemClick={handleItemClick}\n                    setCompleted={setCompleted}\n                    completed={completed}\n                    setPatientObj={setPatientObj2}\n                    patientObj={patientObj2}\n                    setExtra={setExtra}\n                    extra={extra}\n                    basicInfo={basicInfo}\n                    organizationInfo={organizationInfo}\n                    addNewForm={false}\n                    row={row}\n                  />\n                )}\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default UserRegistration;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\History.js",["855","856","857","858"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { toast } from \"react-toastify\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  let history = useHistory();\n  useEffect(() => {\n    //patients()\n  }, [props.patientObj]);\n\n  const LoadViewPage = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"view\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n\n  const handleHTSDelete = (row) => {\n    axios\n      .delete(`${baseUrl}hts/${row.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        toast.success(\n          `HTS patient with client code ${row.clientCode}, deleted successfully`\n        );\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"HTS HISTORY\"\n        columns={[\n          // { title: \"HTS ID\", field: \"id\" },\n          { title: \"Date\", field: \"date\" },\n          { title: \"Pre Test Counseling\", field: \"pre\" },\n          { title: \"Recency Test\", field: \"rencency\" },\n          { title: \"Post Test\", field: \"post\" },\n          // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\n          {\n            title: \"Request & Result\",\n            field: \"requestResult\",\n            filtering: false,\n          },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        isLoading={props.loading}\n        data={props.patientList.map((row) => ({\n          // id: row.id,\n          date: row.dateVisit,\n          pre: row.knowledgeAssessment ? \"Filled\" : \"Not Filled \",\n          requestResult: row.confirmatoryTest ? \"Filled\" : \"Not Filled \",\n          rencency: row.recency ? \"Filled\" : \"Not Filled \",\n          post: row.postTestCounselingKnowledgeAssessment\n            ? \"Filled\"\n            : \"Not Filled \",\n          //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\n\n          actions: (\n            <div>\n              <Menu.Menu position=\"right\">\n                <Menu.Item>\n                  <Button\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                    primary\n                    onClick={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <Dropdown item text=\"Action\">\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"view\")}\n                        >\n                          {\" \"}\n                          <Icon name=\"eye\" />\n                          View\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"update\")}\n                        >\n                          <Icon name=\"edit\" />\n                          Edit\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\n                          <Icon name=\"delete\" />\n                          Delete\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Button>\n                </Menu.Item>\n              </Menu.Menu>\n            </div>\n          ),\n        }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js",["859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js",["891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js",["916","917","918","919"],"import React, { forwardRef, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport { Button, Dropdown, Icon, Menu } from \"semantic-ui-react\";\nimport MaterialTable from \"material-table\";\nimport { Modal } from \"react-bootstrap\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport Check from \"@material-ui/icons/Check\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport Search from \"@material-ui/icons/Search\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\nconst ClientRerralList = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  const [recordSelected, setRecordSelected] = useState({});\n\n  const [open, setOpen] = React.useState(false);\n  const [serviceMapping, setServiceMapping] = useState({});\n  const [serviceNeeded, setServiceNeeded] = useState([]);\n  const toggle = () => setOpen(!open);\n\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  //get services needed\n  const SERVICE_NEEDED = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        if (response.data) {\n          setServiceNeeded(response.data);\n          const mapping = {};\n          response.data.forEach((item) => {\n            mapping[item.code] = item.display;\n          });\n          setServiceMapping(mapping);\n        }\n      })\n      .catch((e) => {\n        console.error(\"Fetch Services error:\", e);\n      });\n  };\n\n  useEffect(() => {\n    SERVICE_NEEDED();\n  }, []);\n\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts-client-referral/all/${patientId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const addNewPns = (e) => {\n    e.preventDefault();\n    props.handleItemClick(\"client-referral\");\n  };\n  const LoadViewPage = (row, actionType) => {\n    props.handleItemClick(\"view-referral\");\n    props.setRow({ row: row, action: actionType });\n  };\n  const LoadModal = (row) => {\n    toggle();\n    // console.log(row);\n    setRecordSelected(row);\n  };\n  const LoadDeletePage = (row) => {\n    axios\n      .delete(`${baseUrl}hts-client-referral/${recordSelected.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        toast.success(\"Record Deleted Successfully\");\n        toggle();\n        patients();\n        // setSaving(false);\n      })\n      .catch((error) => {\n        // setSaving(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n  return (\n    <>\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\" float-end  mr-2 mt-2\"\n          onClick={(e) => addNewPns(e)}\n          //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n          <span style={{ textTransform: \"capitalize\" }}> Refer Client</span>\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n        <MaterialTable\n          icons={tableIcons}\n          title=\"List of  client submitted referral forms\"\n          columns={[\n            { title: \"Date visited\", field: \"date\" },\n            { title: \"Service needed\", field: \"service\" },\n            //   { title: \"Phone Number\", field: \"phone\" },\n            { title: \"Receiving Facility\", field: \"receiving\" },\n            { title: \"Actions\", field: \"actions\", filtering: false },\n          ]}\n          isLoading={props.loading}\n          data={indexClientList\n            .filter((b) => b.firstName !== \"\")\n            .map((row) => ({\n              date: row.dateVisit,\n              // service: serviceMapping[row.serviceNeeded] || row.serviceNeeded,\n                service: Object.values(row.serviceNeeded).join(', '),\n              // phone: row.phoneNumber,\n              receiving: row.nameOfReceivingFacility,\n              actions: (\n                <div>\n                  <Menu.Menu position=\"right\">\n                    <Menu.Item>\n                      <Button\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                          primary\n                          onClick={(e) => {\n                            e.preventDefault();\n                          }}\n                      >\n                      <Dropdown\n                        item\n                        text=\"Action\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                        }}\n                      >\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                          <Dropdown.Item\n                            onClick={(e) => LoadViewPage(row, \"view\")}\n                          >\n                            {\" \"}\n                            <Icon name=\"eye\" />\n                            View\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            onClick={() => LoadViewPage(row, \"update\")}\n                          >\n                            <Icon name=\"edit\" />\n                            Edit\n                          </Dropdown.Item>\n                          <Dropdown.Item onClick={() => LoadModal(row)}>\n                            <Icon name=\"delete\" />\n                            Delete\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                       </Button>\n                    </Menu.Item>\n                  </Menu.Menu>\n                </div>\n              ),\n            }))}\n          options={{\n            headerStyle: {\n              //backgroundColor: \"#9F9FA5\",\n              color: \"#000\",\n            },\n            searchFieldStyle: {\n              width: \"200%\",\n              margingLeft: \"250px\",\n            },\n            filtering: false,\n            exportButton: false,\n            //   searchFieldAlignment: \"left\",\n            pageSizeOptions: [10, 20, 100],\n            pageSize: 10,\n            debounceInterval: 400,\n          }}\n        />\n      </div>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>\n            Are you Sure you want to delete{\" \"}\n            {/* <b>{row && record.activityName}</b> */}\n          </h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => LoadDeletePage(recordSelected)}\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            Yes\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\n          </Button>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ClientRerralList;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js",["920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js",["949","950","951","952","953"],"import React, { useState, Fragment } from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\n\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n//import Button from '@material-ui/core/Button';\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport PNSList from \"./PNSlist\";\n\nconst PNSHistory = (props) => {\n  const [activePage, setActivePage] = useState(\"list\");\n  const handleIClickPage = (activeItem) => {\n    setActivePage(activeItem);\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleDone = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"home\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <Col md={12}>\n          {activePage === \"list\" && (\n            <PNSList\n              activePage={activePage}\n              setActivePage={setActivePage}\n              handleIClickPage={handleIClickPage}\n              patientObj={props.patientObj}\n              handleItemClick={handleItemClick}\n              setRow={props.setRow}\n            />\n          )}\n          \n          <br />\n          <div className=\"row\">\n            <div className=\"form-group mb-3 col-md-12\">\n              <Button\n                content=\"Back\"\n                icon=\"left arrow\"\n                labelPosition=\"left\"\n                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                onClick={() =>{\n                  handleItemClick(\"recency-testing\", \"recency-testing\")}\n                }\n              />\n              <Button\n                content=\"Done\"\n                icon=\"list\"\n                labelPosition=\"left\"\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                onClick={() => handleDone()}\n              />\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default PNSHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js",["954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["980","981","982","983","984"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst PostTest = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n\n  console.log(\"data3\", props.patientObj);\n  ///const [errors, setErrors] = useState({});\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    postTestCounselingKnowledgeAssessment: {},\n    personId: patientID,\n  });\n\n  const [postTest, setPostTest] = useState({\n    hivTestResult: \"\",\n    hivTestBefore:\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.lastHivTestDone !== \"Never\" &&\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.whatWasTheResult === \"Positive\"\n        ? \"Previously tested positive in HIV care\"\n        : \"\",\n    hivRequestResult: \"\",\n    hivRequestResultCt: \"\",\n    clientReceivedHivTestResult: \"\",\n    postTestCounseling: \"\",\n    riskReduction: \"\",\n    postTestDisclosure: \"\",\n    bringPartnerHivtesting: \"\",\n    childrenHivtesting: \"\",\n    informationFp: \"\",\n    partnerFpThanCondom: \"\",\n    partnerFpUseCondom: \"\",\n    correctCondomUse: \"\",\n    condomProvidedToClient: \"\",\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\n    referredToServices: \"\",\n    lubricantProvidedToClient: \"\",\n    condomProvidedToClientCount: \"\",\n    lubricantProvidedToClientCount: \"\",\n  });\n  useEffect(() => {\n    setPostTest({\n      ...postTest,\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\n    });\n\n    if (\n      props.patientObj?.hivTestResult2?.length > 0 &&\n      props.patientObj.hivTestResult2 === \"Positive\"\n    ) {\n      postTest.hivTestResult = \"true\";\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\n    } else if (\n      props.patientObj?.hivTestResult2?.length > 0 &&\n      props.patientObj.hivTestResult2 === \"Negative\"\n    ) {\n      postTest.hivTestResult = \"false\";\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\n    } else if (\n      props.patientObj?.hivTestResult?.length > 0 &&\n      props.patientObj.hivTestResult === \"Positive\"\n    ) {\n      postTest.hivTestResult = \"true\";\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\n    } else if (\n      props.patientObj?.hivTestResult?.length > 0 &&\n      props.patientObj.hivTestResult === \"Negative\"\n    ) {\n      postTest.hivTestResult = \"false\";\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\n    }\n    // if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\n    //     setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment)\n    // }else{\n    //     if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Positive') {\n    //         postTest.hivTestResult='true'\n    //         setPostTest({...postTest, hivTestResult:'true' })\n    //     }else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Negative') {\n    //         postTest.hivTestResult='false'\n    //         setPostTest({...postTest, hivTestResult:'false' })\n    //     }\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Positive') {\n    //         postTest.hivTestResult='true'\n    //         setPostTest({...postTest, hivTestResult:'true' })\n    //     }\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Negative') {\n    //         postTest.hivTestResult='false'\n    //         setPostTest({...postTest, hivTestResult:'false' })\n    //     }\n    // }\n  }, [props.patientObj, postTest.hivTestResult]);\n  const handleInputChangePostTest = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      }\n    } else if (e.target.name === \"condomProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      } else {\n        setPostTest({ ...postTest, [e.target.name]: 0 });\n      }\n    } else {\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\n    }\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //handleItemClick('recency-testing', 'post-test')\n    // if(!(Object.values(postTest).every(x => x === \"\"))){\n    \n   let latestForm = getNextForm(\n     \"Post_Test_Counseling\",\n     props?.patientObj?.riskStratificationResponseDto?.age,\n     \"\",\n     props?.patientObj?.hivTestResult\n   );\n    setSaving(true);\n    objValues.htsClientId = props.patientObj.id;\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\n    objValues.personId = props.patientObj.personResponseDto.id;\n    axios\n      .put(\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\n        objValues,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setSaving(false);\n        props.setPatientObj(response.data);\n        toast.success(\"Post test successful\");\n         handleItemClick(latestForm[0], latestForm[1]);\n\n        // handleItemClick(\"recency-testing\", \"post-test\");\n      })\n      .catch((error) => {\n        setSaving(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n    // }else{\n    //     toast.error(\"All post test fields are required\")\n\n    // }\n  };\n\n  //console.log(postTest.hivTestResult)\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>POST TEST COUNSELING</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n              </LabelRibbon>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestResult\"\n                    id=\"hivTestResult\"\n                    value={postTest.hivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={true}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Positive</option>\n                    <option value=\"false\">Negative</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you been tested for HIV before within this year?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestBefore\"\n                    id=\"hivTestBefore\"\n                    value={postTest.hivTestBefore}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Not previously tested\">\n                      Not previously tested\n                    </option>\n                    <option value=\"Previously tested negative\">\n                      Previously tested negative\n                    </option>\n                    <option value=\"Previously tested positive in HIV care\">\n                      Previously tested positive in HIV care\n                    </option>\n                    <option value=\"Previously tested positive not in HIV care\">\n                      Previously tested positive not in HIV care\n                    </option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV Request and Result form signed by tester </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResult\"\n                    id=\"hivRequestResult\"\n                    value={postTest.hivRequestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResultCt\"\n                    id=\"hivRequestResultCt\"\n                    value={postTest.hivRequestResultCt}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client received HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientReceivedHivTestResult\"\n                    id=\"clientReceivedHivTestResult\"\n                    value={postTest.clientReceivedHivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test counseling done </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestCounseling\"\n                    id=\"postTestCounseling\"\n                    value={postTest.postTestCounseling}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Risk reduction plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"riskReduction\"\n                    id=\"riskReduction\"\n                    value={postTest.riskReduction}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test disclosure plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestDisclosure\"\n                    id=\"postTestDisclosure\"\n                    value={postTest.postTestDisclosure}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Will bring partner(s) for HIV testing </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"bringPartnerHivtesting\"\n                    id=\"bringPartnerHivtesting\"\n                    value={postTest.bringPartnerHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"childrenHivtesting\"\n                    id=\"childrenHivtesting\"\n                    value={postTest.childrenHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Provided with information on FP and dual contraception{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informationFp\"\n                    id=\"informationFp\"\n                    value={postTest.informationFp}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client/Partner use FP methods (other than condom)\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpThanCondom\"\n                    id=\"partnerFpThanCondom\"\n                    value={postTest.partnerFpThanCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpUseCondom\"\n                    id=\"partnerFpUseCondom\"\n                    value={postTest.partnerFpUseCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Correct condom use demonstrated </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"correctCondomUse\"\n                    id=\"correctCondomUse\"\n                    value={postTest.correctCondomUse}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Condoms provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"condomProvidedToClient\"\n                    id=\"condomProvidedToClient\"\n                    value={postTest.condomProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.condomProvidedToClient !== null &&\n                postTest.condomProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many condoms were provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"condomProvidedToClientCount\"\n                        id=\"condomProvidedToClientCount\"\n                        value={postTest.condomProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lubricant were provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lubricantProvidedToClient\"\n                    id=\"lubricantProvidedToClient\"\n                    value={postTest.lubricantProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.lubricantProvidedToClient !== null &&\n                postTest.lubricantProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many lubricant provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"lubricantProvidedToClientCount\"\n                        id=\"lubricantProvidedToClientCount\"\n                        value={postTest.lubricantProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client referred to other services </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredToServices\"\n                    id=\"referredToServices\"\n                    value={postTest.referredToServices}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <Message success>\n                <h4>\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\n                  re-testing after 3 months\n                </h4>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {/* <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\n                  /> */}\n                  {/*{postTest.hivTestResult === \"true\" && (*/}\n                  {/*  <Button*/}\n                  {/*    content=\"Save & Continue\"*/}\n                  {/*    icon=\"right arrow\"*/}\n                  {/*    labelPosition=\"right\"*/}\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\n                  {/*    onClick={handleSubmit}*/}\n                  {/*  />*/}\n                  {/*)}*/}\n                  {/*{postTest.hivTestResult === \"false\" && (*/}\n                  {/*  <Button*/}\n                  {/*    content=\"Save & Finish\"*/}\n                  {/*    icon=\"right arrow\"*/}\n                  {/*    labelPosition=\"right\"*/}\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\n                  {/*    onClick={handleSubmit}*/}\n                  {/*  />*/}\n                  {/*)}*/}\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default PostTest;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["985","986","987","988","989","990","991","992","993","994"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["995","996","997","998","999","1000"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["1050","1051","1052","1053"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      //window.location.reload(false);\n      props.setActivePage({...props.activePage, activePage:\"home\"})\n     \n    }\n\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["1054","1055","1056","1057","1058","1059","1060"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { checkPregnantPatient } from \"../../../../utility\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\nimport { getCheckModality } from \"../../../../utility\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n\n\n    let temp = { ...errors }\n    //console.log(\"data1\", props.patientObj)\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n\n        if(props.patientObj){\n          setKnowledgeAssessment(\n            props.patientObj.knowledgeAssessment &&\n              props.patientObj.knowledgeAssessment !== null\n              ? props.patientObj.knowledgeAssessment\n              : {}\n          );\n          setRiskAssessment(\n            props.patientObj.riskAssessment &&\n              props.patientObj.riskAssessment !== null\n              ? props.patientObj.riskAssessment\n              : {}\n          );\n          setRiskAssessmentPartner(\n            props.patientObj.sexPartnerRiskAssessment &&\n              props.patientObj.sexPartnerRiskAssessment !== null\n              ? props.patientObj.sexPartnerRiskAssessment\n              : {}\n          );\n          setStiScreening(\n            props.patientObj.stiScreening &&\n              props.patientObj.stiScreening !== null\n              ? props.patientObj.stiScreening\n              : {}\n          );\n          setTbScreening(\n            props.patientObj.tbScreening &&\n              props.patientObj.tbScreening !== null\n              ? props.patientObj.tbScreening\n              : {}\n          );\n          //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n          //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n          \n          if (props?.patientObj?.pregnant) {\n             checkPregnantPatient(props.patientObj.pregnant).then((res) => {\n               console.log(\"my result\", res);\n               setKnowledgeAssessment({\n                 ...knowledgeAssessment,\n                 clientPregnant: res ? \"true\" : \"false\",\n               });\n             });  \n          }\n\n          if (\n            props.patientObj.riskStratificationResponseDto &&\n            Object.keys(\n              props.patientObj.riskStratificationResponseDto.riskAssessment\n            ).length !== 0 &&\n            props.patientObj.riskAssessment === null\n          ) {\n            //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n            props.patientObj.riskStratificationResponseDto.riskAssessment\n              .whatWasTheResult !== \"\" &&\n            props.patientObj.riskStratificationResponseDto.riskAssessment\n              .whatWasTheResult === \"Positive\"\n              ? (knowledgeAssessment.previousTestedHIVNegative = \"false\")\n              : (knowledgeAssessment.previousTestedHIVNegative = \"true\");\n          } else {\n            setRiskAssessment({\n              ...riskAssessment,\n              ...props.patientObj.riskAssessment,\n            });\n          }\n          knowledgeAssessment.clientPregnant =\n            props.patientObj.pregnant === 73 ? \"true\" : \"\";\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n \n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            \n            \n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        let modality = getCheckModality(\n          props.patientObj?.riskStratificationResponseDto?.modality\n        );\n              let latestForm = getNextForm(\n                \"Pre_Test_Counseling\",\n                props.patientAge,\n                modality,\n                \"unknown\"\n              );\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick(latestForm[0], latestForm[1]);\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                \n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={true}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n                                         \n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {/* <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/> */}\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js",["1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js",["1089","1090","1091","1092","1093"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { Modal } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PNSList = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  const [recordSelected, setRecordSelected] = useState({});\n\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(\n        `${baseUrl}hts-personal-notification-service/${props.patientObj.id}/hts-client`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const addNewPns = (e) => {\n    e.preventDefault();\n    props.handleItemClick(\"pns\");\n  };\n  const LoadViewPage = (row, actionType) => {\n    props.handleItemClick(\"view-pns\");\n    props.setRow({ row: row, action: actionType });\n  };\n  const LoadModal = (row) => {\n    toggle();\n    setRecordSelected(row);\n  };\n  const LoadDeletePage = (row) => {\n    // setSaving(true);\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n    axios\n      .delete(\n        `${baseUrl}hts-personal-notification-service/${recordSelected.id}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        toast.success(\"Record Deleted Successfully\");\n        toggle();\n        patients();\n        // setSaving(false);\n      })\n      .catch((error) => {\n        // setSaving(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n  };\n  return (\n    <>\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\" float-end  mr-2 mt-2\"\n          onClick={(e) => addNewPns(e)}\n          //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n          <span style={{ textTransform: \"capitalize\" }}>Add New PNS </span>\n        </Button>\n        <br />\n        <br />\n        <br />\n        <br />\n        <MaterialTable\n          icons={tableIcons}\n          title=\"List of  client contact\"\n          columns={[\n            { title: \"Partner Name\", field: \"date\" },\n            { title: \"Partner ID\", field: \"age\" },\n            //   { title: \"Phone Number\", field: \"phone\" },\n            { title: \"Partner Address\", field: \"address\" },\n            { title: \"Actions\", field: \"actions\", filtering: false },\n          ]}\n          isLoading={props.loading}\n          data={indexClientList\n            .filter((b) => b.firstName !== \"\")\n            .map((row) => ({\n              date: row.htsClientInformation.partnerName,\n              age: row.partnerId,\n              // phone: row.phoneNumber,\n              address: row.htsClientInformation.partnerAddress,\n              actions: (\n                <div>\n                  <Menu.Menu position=\"right\">\n                    <Menu.Item>\n                      <Button\n                        style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                        primary\n                        onClick={(e) => {\n                          e.preventDefault();\n                        }}\n                      >\n                        <Dropdown\n                          item\n                          text=\"Action\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                          }}\n                        >\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                            <Dropdown.Item\n                              onClick={(e) => LoadViewPage(row, \"view\")}\n                            >\n                              {\" \"}\n                              <Icon name=\"eye\" />\n                              View\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onClick={() => LoadViewPage(row, \"update\")}\n                            >\n                              <Icon name=\"edit\" />\n                              Edit\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={() => LoadModal(row)}>\n                              <Icon name=\"delete\" />\n                              Delete\n                            </Dropdown.Item>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Button>\n                    </Menu.Item>\n                  </Menu.Menu>\n                </div>\n              ),\n            }))}\n          options={{\n            headerStyle: {\n              //backgroundColor: \"#9F9FA5\",\n              color: \"#000\",\n            },\n            searchFieldStyle: {\n              width: \"200%\",\n              margingLeft: \"250px\",\n            },\n            filtering: false,\n            exportButton: false,\n            //   searchFieldAlignment: \"left\",\n            pageSizeOptions: [10, 20, 100],\n            pageSize: 10,\n            debounceInterval: 400,\n          }}\n        />\n      </div>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>\n            Are you Sure you want to delete{\" \"}\n            {/* <b>{row && record.activityName}</b> */}\n          </h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => LoadDeletePage(recordSelected)}\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            Yes\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\n          </Button>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n            // disabled={saving}\n          >\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default PNSList;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["1094","1095","1096","1097","1098","1099","1100","1101"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          //{ title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130"],"import React, { useState } from 'react';\n\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\n   } from \"reactstrap\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from 'highcharts';\n import HighchartsReact from 'highcharts-react-official';\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\nimport { Progress } from 'reactstrap';\n\n\n// Load Highcharts modules\n//require(\"highcharts/modules/exporting\")(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n    },\n},\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst SummaryView = (props) => {\n  const classes = useStyles();\n  const [chartValue, setChartValue] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n  const [state, setState] = useState({ activeItem: 'gamepad' })\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n  const { activeItem } = state\n  const chartPage  = e => {\n\n    setChartValue(e)\n  }\n\n  //Menu Icon \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  return (\n    <div  spacing={5} style={{ padding: 20 }} >\n      <Row>\n        <Col md={12}>\n          {/* The second Column Card Layout  */}\n        <Row>\n                 \n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\n                  </CardBody></Card>\n                  </Col>\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\n                  </CardBody></Card>\n                  </Col>\n              </Row>\n\n           \n        </Col>\n      </Row>\n\n      \n\n      \n\n    </div>\n  );\n}\n\nexport default SummaryView;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js",["1131","1132","1133","1134","1135","1136"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["1152","1153","1154","1155","1156"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst PostTest = (props) => {\n  console.log(\"post\", props);\n  const classes = useStyles();\n  const history = useHistory();\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  const { postTestCounselingKnowledgeAssessment } = props.patientObj;\n\n  ///const [errors, setErrors] = useState({});\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    postTestCounselingKnowledgeAssessment: {},\n    personId: patientID,\n  });\n\n  const [postTest, setPostTest] = useState({\n    hivTestResult: \"\",\n    hivTestBefore:\n      props.activePage.activeObject?.riskStratificationResponseDto\n        ?.riskAssessment?.lastHivTestDone !== \"Never\" &&\n      props.activePage.activeObject?.riskStratificationResponseDto\n        ?.riskAssessment?.whatWasTheResult === \"Positive\"\n        ? \"Previously tested positive in HIV care\"\n        : postTestCounselingKnowledgeAssessment?.hivTestBefore,\n    hivRequestResult: postTestCounselingKnowledgeAssessment?.hivRequestResult,\n    hivRequestResultCt:\n      postTestCounselingKnowledgeAssessment?.hivRequestResultCt,\n    clientReceivedHivTestResult:\n      postTestCounselingKnowledgeAssessment?.clientReceivedHivTestResult,\n    postTestCounseling:\n      postTestCounselingKnowledgeAssessment?.postTestCounseling,\n    riskReduction: postTestCounselingKnowledgeAssessment?.riskReduction,\n    postTestDisclosure:\n      postTestCounselingKnowledgeAssessment?.postTestDisclosure,\n    bringPartnerHivtesting:\n      postTestCounselingKnowledgeAssessment?.bringPartnerHivtesting,\n    childrenHivtesting:\n      postTestCounselingKnowledgeAssessment?.childrenHivtesting,\n    informationFp: postTestCounselingKnowledgeAssessment?.informationFp,\n    partnerFpThanCondom:\n      postTestCounselingKnowledgeAssessment?.partnerFpThanCondom,\n    partnerFpUseCondom:\n      postTestCounselingKnowledgeAssessment?.partnerFpUseCondom,\n    correctCondomUse: postTestCounselingKnowledgeAssessment?.correctCondomUse,\n    condomProvidedToClient:\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClient,\n    unprotectedSexRegularPartnerLastThreeMonth:\n      postTestCounselingKnowledgeAssessment?.unprotectedSexRegularPartnerLastThreeMonth,\n    referredToServices:\n      postTestCounselingKnowledgeAssessment?.referredToServices,\n    lubricantProvidedToClient:\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClient,\n    condomProvidedToClientCount:\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClientCount,\n    lubricantProvidedToClientCount:\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClientCount,\n  });\n  const handleInputChangePostTest = (e) => {\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      }\n    }else if (e.target.name === \"condomProvidedToClientCount\") {\n      if (e.target.value >= 0) {\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\n      } else {\n        setPostTest({ ...postTest, [e.target.name]: 0 });\n      }\n    } else {\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\n    }\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  useEffect(() => {\n    //console.log(props.patientObj.postTestCounselingKnowledgeAssessment)\n    setPostTest({\n      ...postTest,\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\n    });\n\n    if (\n      props.patientObj?.hivTestResult2?.length > 0 &&\n      props.patientObj.hivTestResult2 === \"Positive\"\n    ) {\n      postTest.hivTestResult = \"true\";\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\n    } else if (\n      props.patientObj?.hivTestResult2?.length > 0 &&\n      props.patientObj.hivTestResult2 === \"Negative\"\n    ) {\n      postTest.hivTestResult = \"false\";\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\n    } else if (\n      props.patientObj?.hivTestResult?.length > 0 &&\n      props.patientObj.hivTestResult === \"Positive\"\n    ) {\n      postTest.hivTestResult = \"true\";\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\n    } else if (\n      props.patientObj?.hivTestResult?.length > 0 &&\n      props.patientObj.hivTestResult === \"Negative\"\n    ) {\n      postTest.hivTestResult = \"false\";\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\n    }\n  }, [props.patientObj]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n      let latestForm = getNextForm(\n        \"Post_Test_Counseling\",\n        props?.patientAge,\n        \"\",\n        props?.patientObj?.hivTestResult\n      );\n\n    if (props.activePage.actionType === \"view\") {\n      //e.preventDefault();\n         handleItemClick(latestForm[0], latestForm[1]);\n    }\n    if (props.activePage.actionType === \"update\") {\n      setSaving(true);\n      //e.preventDefault();\n\n      objValues.htsClientId = clientId;\n      objValues.postTestCounselingKnowledgeAssessment = postTest;\n      objValues.personId = patientID;\n      axios\n        .put(`${baseUrl}hts/${clientId}/post-test-counseling`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n\n          props.setPatientObj(response.data);\n          toast.success(\"Post Test Assesment successful\");\n          handleItemClick(latestForm[0], latestForm[1]);\n\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>POST TEST COUNSELING</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n              </LabelRibbon>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestResult\"\n                    id=\"hivTestResult\"\n                    value={postTest.hivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    // disabled={props.activePage.actionType === \"view\"}\n                    disabled={true}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Positive</option>\n                    <option value=\"false\">Negative</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you been tested for HIV before within this year?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestBefore\"\n                    id=\"hivTestBefore\"\n                    value={postTest.hivTestBefore}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Not previously tested\">\n                      Not previously tested\n                    </option>\n                    <option value=\"Previously tested negative\">\n                      Previously tested negative\n                    </option>\n                    <option value=\"Previously tested positive in HIV care\">\n                      Previously tested positive in HIV care\n                    </option>\n                    <option value=\"Previously tested positive not in HIV care\">\n                      Previously tested positive not in HIV care\n                    </option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV Request and Result form signed by tester </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResult\"\n                    id=\"hivRequestResult\"\n                    value={postTest.hivRequestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResultCt\"\n                    id=\"hivRequestResultCt\"\n                    value={postTest.hivRequestResultCt}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client received HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientReceivedHivTestResult\"\n                    id=\"clientReceivedHivTestResult\"\n                    value={postTest.clientReceivedHivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test counseling done </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestCounseling\"\n                    id=\"postTestCounseling\"\n                    value={postTest.postTestCounseling}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Risk reduction plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"riskReduction\"\n                    id=\"riskReduction\"\n                    value={postTest.riskReduction}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test disclosure plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestDisclosure\"\n                    id=\"postTestDisclosure\"\n                    value={postTest.postTestDisclosure}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Will bring partner(s) for HIV testing </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"bringPartnerHivtesting\"\n                    id=\"bringPartnerHivtesting\"\n                    value={postTest.bringPartnerHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"childrenHivtesting\"\n                    id=\"childrenHivtesting\"\n                    value={postTest.childrenHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Provided with information on FP and dual contraception{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informationFp\"\n                    id=\"informationFp\"\n                    value={postTest.informationFp}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client/Partner use FP methods (other than condom)\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpThanCondom\"\n                    id=\"partnerFpThanCondom\"\n                    value={postTest.partnerFpThanCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpUseCondom\"\n                    id=\"partnerFpUseCondom\"\n                    value={postTest.partnerFpUseCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Correct condom use demonstrated </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"correctCondomUse\"\n                    id=\"correctCondomUse\"\n                    value={postTest.correctCondomUse}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Condoms provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"condomProvidedToClient\"\n                    id=\"condomProvidedToClient\"\n                    value={postTest.condomProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.condomProvidedToClient !== null &&\n                postTest.condomProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many condoms were provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"condomProvidedToClientCount\"\n                        id=\"condomProvidedToClientCount\"\n                        value={postTest.condomProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lubricant were provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lubricantProvidedToClient\"\n                    id=\"lubricantProvidedToClient\"\n                    value={postTest.lubricantProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.lubricantProvidedToClient !== null &&\n                postTest.lubricantProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many lubricant provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"lubricantProvidedToClientCount\"\n                        id=\"lubricantProvidedToClientCount\"\n                        value={postTest.lubricantProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client referred to other services </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredToServices\"\n                    id=\"referredToServices\"\n                    value={postTest.referredToServices}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <Message success>\n                <h4>\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\n                  re-testing after 3 months\n                </h4>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {/* <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\n                  /> */}\n\n                  {props.activePage.actionType === \"update\" && (\n                    <Button\n                      content=\"Update & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      // disabled={saving}\n                    />\n                  )}\n                  {props.activePage.actionType === \"view\" && (\n                    <Button\n                      content=\"Next\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default PostTest;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["1157","1158","1159","1160","1161","1162","1163","1164","1165","1166"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["1167","1168","1169","1170","1171","1172","1173"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["1174","1175","1176","1177"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=(row, actionType)=>{\n\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\n    }\n    \n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["1178","1179","1180","1181","1182","1183","1184","1185"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { checkPregnantPatient } from \"../../../../utility\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getPregnantCodeSet } from \"../../../../utility\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { getNextForm } from \"../../../../utility\";\nimport { getCheckModality } from \"../../../../utility\";\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\",\n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment] = useState({\n      previousTestedHIVNegative: \"\",\n      timeLastHIVNegativeTestResult: \"\",\n      clientPregnant:'',\n      clientInformHivTransRoutes: \"\",\n      clientInformRiskkHivTrans: \"\",\n      clientInformPreventingsHivTrans: \"\",\n      clientInformPossibleTestResult: \"\",\n      informConsentHivTest: \"\",\n    });\n \n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n            unprotectedVaginalSex:\"\",\n            uprotectedAnalSex:\"\",\n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\",\n            complaintsGenitalSore  :\"\",\n\n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\",\n            fever :\"\",\n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => {\n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n             if (props?.patientObj?.pregnant) {\n               checkPregnantPatient(props.patientObj.pregnant).then((res) => {\n                 console.log(\"my result\", res);\n                 setKnowledgeAssessment({\n                   ...knowledgeAssessment,\n                   clientPregnant: res ? \"true\" : \"false\",\n                 });\n               });\n             }\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})\n            }\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value});\n\n    }\n\n    const handleInputChangeRiskAssessment = e => {\n        setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeRiskAssessmentPartner = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n\n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n\n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        }\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});\n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n\n       let modality = getCheckModality(\n         props.patientObj?.riskStratificationResponseDto?.modality\n       );    \n            let latestForm = getNextForm(\n              \"Pre_Test_Counseling\",\n              props.patientAge,\n              modality,\n              \"unknown\"\n            );\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n\n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick(latestForm[0], latestForm[1]);\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n\n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n      <>\n        <Card className={classes.root}>\n          <CardBody>\n            <h2>PRE TEST COUNSELING</h2>\n            <form>\n              <div className=\"row\">\n                <div\n                  className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                  style={{\n                    backgroundColor: \"rgb(0,181,173)\",\n                    width: \"125%\",\n                    height: \"35px\",\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Knowledge Assessment\n                </div>\n\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Previously tested HIV negative{\" \"}\n                      <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"previousTestedHIVNegative\"\n                      id=\"previousTestedHIVNegative\"\n                      value={knowledgeAssessment.previousTestedHIVNegative}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.previousTestedHIVNegative !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.previousTestedHIVNegative}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {knowledgeAssessment.previousTestedHIVNegative === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Time of last HIV Negative test Result</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"timeLastHIVNegativeTestResult\"\n                        id=\"timeLastHIVNegativeTestResult\"\n                        value={\n                          knowledgeAssessment.timeLastHIVNegativeTestResult\n                        }\n                        onChange={handleInputChangeKnowledgeAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"<1\"> {\"< 1\"} month</option>\n                        <option value=\"1-3 Months\">1-3 Months</option>\n                        <option value=\"4-6 Months\">4-6 Months</option>\n                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                        {knowledgeAssessment.previousTestedHIVNegative !==\n                          \"true\" && <option value=\"Never\"> Never</option>}\n                      </select>\n                      {errors.timeLastHIVNegativeTestResult !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.timeLastHIVNegativeTestResult}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n                {sex === \"Female\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Client pregnant </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"clientPregnant\"\n                        id=\"clientPregnant\"\n                        value={knowledgeAssessment.clientPregnant}\n                        onChange={handleInputChangeKnowledgeAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={true}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.clientPregnant !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.clientPregnant}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Client informed about HIV transmission routes{\" \"}\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"clientInformHivTransRoutes\"\n                      id=\"clientInformHivTransRoutes\"\n                      value={knowledgeAssessment.clientInformHivTransRoutes}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.clientInformHivTransRoutes !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.clientInformHivTransRoutes}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Client informed about risk factors for HIV transmission{\" \"}\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"clientInformRiskkHivTrans\"\n                      id=\"clientInformRiskkHivTrans\"\n                      value={knowledgeAssessment.clientInformRiskkHivTrans}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.clientInformRiskkHivTrans !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.clientInformRiskkHivTrans}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Client informed on preventing HIV transmission methods{\" \"}\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"clientInformPreventingsHivTrans\"\n                      id=\"clientInformPreventingsHivTrans\"\n                      value={\n                        knowledgeAssessment.clientInformPreventingsHivTrans\n                      }\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.clientInformPreventingsHivTrans !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.clientInformPreventingsHivTrans}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Client informed about possible test results </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"clientInformPossibleTestResult\"\n                      id=\"clientInformPossibleTestResult\"\n                      value={knowledgeAssessment.clientInformPossibleTestResult}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.clientInformPossibleTestResult !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.clientInformPossibleTestResult}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Informed consent for HIV testing given </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"informConsentHivTest\"\n                      id=\"informConsentHivTest\"\n                      value={knowledgeAssessment.informConsentHivTest}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.informConsentHivTest !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.informConsentHivTest}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <hr />\n                <br />\n                <div\n                  className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                  style={{\n                    backgroundColor: \"#000\",\n                    width: \"125%\",\n                    height: \"35px\",\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Clinical TB screening\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Current cough </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"currentCough\"\n                      id=\"currentCough\"\n                      value={tbScreening.currentCough}\n                      onChange={handleInputChangeTbScreening}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.currentCough !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.currentCough}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Weight loss </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"weightLoss\"\n                      id=\"weightLoss\"\n                      value={tbScreening.weightLoss}\n                      onChange={handleInputChangeTbScreening}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.weightLoss !== \"\" ? (\n                      <span className={classes.error}>{errors.weightLoss}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Lymphadenopathy (swelling of the lymph nodes){\" \"}\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"lymphadenopathy\"\n                      id=\"lymphadenopathy\"\n                      value={tbScreening.lymphadenopathy}\n                      onChange={handleInputChangeTbScreening}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.lymphadenopathy !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.lymphadenopathy}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Fever </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"fever\"\n                      id=\"fever\"\n                      value={tbScreening.fever}\n                      onChange={handleInputChangeTbScreening}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.fever !== \"\" ? (\n                      <span className={classes.error}>{errors.fever}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Night sweats</Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"nightSweats\"\n                      id=\"nightSweats\"\n                      value={tbScreening.nightSweats}\n                      onChange={handleInputChangeTbScreening}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.nightSweats !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.nightSweats}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <Message warning>\n                  <h4>\n                    TB Screening score (calculate the sum of the TB assessment)\n                    If score {\">= 1\"}, test for Xper MTB RIF or refer to TB\n                    service{\" \"}\n                  </h4>\n                  <b>Score : {tbCount}</b>\n                </Message>\n                <hr />\n                <br />\n                {props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" && (\n                  <>\n                    <div\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                      style={{\n                        backgroundColor: \"#992E62\",\n                        width: \"125%\",\n                        height: \"35px\",\n                        color: \"#fff\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      HIV Risk Assessment (Last 3 months)\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Ever had sexual intercourse{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"everHadSexualIntercourse\"\n                          id=\"everHadSexualIntercourse\"\n                          value={riskAssessment.everHadSexualIntercourse}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.everHadSexualIntercourse !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.everHadSexualIntercourse}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Blood transfusion in last 3 months{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"bloodtransInlastThreeMonths\"\n                          id=\"bloodtransInlastThreeMonths\"\n                          value={riskAssessment.bloodtransInlastThreeMonths}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.bloodtransInlastThreeMonths !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.bloodtransInlastThreeMonths}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Unprotected sex with casual partner in last 3\n                              months <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"uprotectedSexWithCasualLastThreeMonths\"\n                              id=\"uprotectedSexWithCasualLastThreeMonths\"\n                              value={\n                                riskAssessment.uprotectedSexWithCasualLastThreeMonths\n                              }\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.uprotectedSexWithCasualLastThreeMonths !==\n                            \"\" ? (\n                              <span className={classes.error}>\n                                {errors.uprotectedSexWithCasualLastThreeMonths}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Unprotected sex with regular partner in the last\n                              3months <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                              id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                              value={\n                                riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths\n                              }\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\n                            \"\" ? (\n                              <span className={classes.error}>\n                                {\n                                  errors.uprotectedSexWithRegularPartnerLastThreeMonths\n                                }\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Unprotected vaginal sex{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"unprotectedVaginalSex\"\n                              id=\"unprotectedVaginalSex\"\n                              value={riskAssessment.unprotectedVaginalSex}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.unprotectedVaginalSex !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.unprotectedVaginalSex}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Unprotected Anal sex{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"uprotectedAnalSex\"\n                              id=\"uprotectedAnalSex\"\n                              value={riskAssessment.uprotectedAnalSex}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.uprotectedAnalSex !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.uprotectedAnalSex}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              STI in last 3 months{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"stiLastThreeMonths\"\n                              id=\"stiLastThreeMonths\"\n                              value={riskAssessment.stiLastThreeMonths}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.stiLastThreeMonths !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.stiLastThreeMonths}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Sex under the influence of drugs or alcohol{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"sexUnderInfluence\"\n                              id=\"sexUnderInfluence\"\n                              value={riskAssessment.sexUnderInfluence}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.sexUnderInfluence !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.sexUnderInfluence}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                      riskAssessment.everHadSexualIntercourse === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              More than 1 sex partner during last 3 months{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"moreThanOneSexPartnerLastThreeMonths\"\n                              id=\"moreThanOneSexPartnerLastThreeMonths\"\n                              value={\n                                riskAssessment.moreThanOneSexPartnerLastThreeMonths\n                              }\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                            {errors.moreThanOneSexPartnerLastThreeMonths !==\n                            \"\" ? (\n                              <span className={classes.error}>\n                                {errors.moreThanOneSexPartnerLastThreeMonths}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    <Message warning>\n                      <h4> Risk assessment score (sum of all 7 answers)</h4>\n                      <b>Score : {riskCount.length}</b>\n                    </Message>\n                    <hr />\n                    <br />\n                  </>\n                )}\n                {props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" && (\n                  <>\n                    <div\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                      style={{\n                        backgroundColor: \"#992E62\",\n                        width: \"125%\",\n                        height: \"35px\",\n                        color: \"#fff\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      HIV Risk Assessment (Last 3 months)\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you/your partner experienced lower abdominal\n                          pain, smelly discharge, blisters and wounds around\n                          you/partner vagina, penis anus or mouth?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"experiencePain\"\n                          id=\"experiencePain\"\n                          value={riskAssessment.experiencePain}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.experiencePain !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.experiencePain}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you/partner had sex without a condom with someone\n                          of unknown HIV status, or you/partner raped by person\n                          with unknown HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"haveSexWithoutCondom\"\n                          id=\"haveSexWithoutCondom\"\n                          value={riskAssessment.haveSexWithoutCondom}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.haveSexWithoutCondom !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.haveSexWithoutCondom}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you had a condom burst with your partner during\n                          sexual intercourse?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"haveCondomBurst\"\n                          id=\"haveCondomBurst\"\n                          value={riskAssessment.haveCondomBurst}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.haveCondomBurst !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.haveCondomBurst}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Do you/partner share needles/syringes, other sharp\n                          objects or used abuse drug substances of any kind?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"abuseDrug\"\n                          id=\"abuseDrug\"\n                          value={riskAssessment.abuseDrug}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.abuseDrug !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.abuseDrug}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you/partner had any blood or blood product\n                          transfusion? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"bloodTransfusion\"\n                          id=\"bloodTransfusion\"\n                          value={riskAssessment.bloodTransfusion}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.bloodTransfusion !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.bloodTransfusion}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you/partner experienced coughing, weight loss,\n                          fever, night sweats consistently?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"consistentWeightFeverNightCough\"\n                          id=\"consistentWeightFeverNightCough\"\n                          value={riskAssessment.consistentWeightFeverNightCough}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.consistentWeightFeverNightCough !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.consistentWeightFeverNightCough}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you/partner paid or sold vaginal, anal or oral\n                          sex? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"soldPaidVaginalSex\"\n                          id=\"soldPaidVaginalSex\"\n                          value={riskAssessment.soldPaidVaginalSex}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.soldPaidVaginalSex !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.soldPaidVaginalSex}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <Message warning>\n                      <h4> Risk assessment score (sum of all 7 answers)</h4>\n                      <b>Score :{riskCount.length}</b>\n                    </Message>\n                    <hr />\n                    <br />\n                  </>\n                )}\n                <div\n                  className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                  style={{\n                    backgroundColor: \"#992E62\",\n                    width: \"125%\",\n                    height: \"35px\",\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Sex Partner Risk Assessment (Last 3 months)\n                </div>\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Have you had sex with a partner who is HIV positive?{\" \"}\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"sexPartnerHivPositive\"\n                      id=\"sexPartnerHivPositive\"\n                      value={riskAssessmentPartner.sexPartnerHivPositive}\n                      onChange={handleInputChangeRiskAssessmentPartner}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.sexPartnerHivPositive !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.sexPartnerHivPositive}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {riskAssessmentPartner.sexPartnerHivPositive === \"true\" && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Is sex partner newly diagnosed with HIV and started\n                          treatment less than 3-6 months ago?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"newDiagnosedHivlastThreeMonths\"\n                          id=\"newDiagnosedHivlastThreeMonths\"\n                          value={\n                            riskAssessmentPartner.newDiagnosedHivlastThreeMonths\n                          }\n                          onChange={handleInputChangeRiskAssessmentPartner}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.newDiagnosedHivlastThreeMonths !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.newDiagnosedHivlastThreeMonths}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Is sex partner pregnant and currently receiving ARV\n                          for PMTCT?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"currentlyArvForPmtct\"\n                          id=\"currentlyArvForPmtct\"\n                          value={riskAssessmentPartner.currentlyArvForPmtct}\n                          onChange={handleInputChangeRiskAssessmentPartner}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.currentlyArvForPmtct !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.currentlyArvForPmtct}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Known HIV positive partner on ARV with an unsurpressed\n                          VL\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"knowHivPositiveOnArv\"\n                          id=\"knowHivPositiveOnArv\"\n                          value={riskAssessmentPartner.knowHivPositiveOnArv}\n                          onChange={handleInputChangeRiskAssessmentPartner}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.knowHivPositiveOnArv !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.knowHivPositiveOnArv}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Known HIV positive recently returned to treatment\n                          after being lost to follow up\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"knowHivPositiveAfterLostToFollowUp\"\n                          id=\"knowHivPositiveAfterLostToFollowUp\"\n                          value={\n                            riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp\n                          }\n                          onChange={handleInputChangeRiskAssessmentPartner}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.knowHivPositiveAfterLostToFollowUp !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.knowHivPositiveAfterLostToFollowUp}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Unprotected Anal sex</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"uprotectedAnalSex\"\n                          id=\"uprotectedAnalSex\"\n                          value={riskAssessmentPartner.uprotectedAnalSex}\n                          onChange={handleInputChangeRiskAssessmentPartner}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.uprotectedAnalSex !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.uprotectedAnalSex}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n                <Message warning>\n                  <h4>\n                    Sex Partner Risk Assessment score (sum of all 6 answers)\n                  </h4>\n                  <b>Score :{sexPartRiskCount.length}</b>\n                </Message>\n\n                <hr />\n                <br />\n                <div\n                  className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                  style={{\n                    backgroundColor: \"#014D88\",\n                    width: \"125%\",\n                    height: \"35px\",\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Syndromic STI Screening\n                </div>\n                {props.patientObj &&\n                  props.patientObj.personResponseDto.sex === \"Female\" && (\n                    <>\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Complaints of vaginal discharge or burning when\n                            urinating?\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"vaginalDischarge\"\n                            id=\"vaginalDischarge\"\n                            value={stiScreening.vaginalDischarge}\n                            onChange={handleInputChangeStiScreening}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.vaginalDischarge !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.vaginalDischarge}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Complaints of lower abdominal pains with or without\n                            vaginal discharge?\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"lowerAbdominalPains\"\n                            id=\"lowerAbdominalPains\"\n                            value={stiScreening.lowerAbdominalPains}\n                            onChange={handleInputChangeStiScreening}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.lowerAbdominalPains !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.lowerAbdominalPains}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    </>\n                  )}\n                {props.patientObj.personResponseDto &&\n                  props.patientObj.personResponseDto.sex === \"Male\" && (\n                    <>\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Complaints of urethral discharge or burning when\n                            urinating?\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"urethralDischarge\"\n                            id=\"urethralDischarge\"\n                            value={stiScreening.urethralDischarge}\n                            onChange={handleInputChangeStiScreening}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.urethralDischarge !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.urethralDischarge}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>Complaints of scrotal swelling and pain</Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"complaintsOfScrotal\"\n                            id=\"complaintsOfScrotal\"\n                            value={stiScreening.complaintsOfScrotal}\n                            onChange={handleInputChangeStiScreening}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.complaintsOfScrotal !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.complaintsOfScrotal}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Complaints of genital sore(s) or swollen inguinal\n                            lymph nodes with or without pains?\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"complaintsGenitalSore\"\n                            id=\"complaintsGenitalSore\"\n                            value={stiScreening.complaintsGenitalSore}\n                            onChange={handleInputChangeStiScreening}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.complaintsGenitalSore !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.complaintsGenitalSore}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    </>\n                  )}\n                <Message warning>\n                  <h4>\n                    Calculate the sum of the STI screening. If {\">= \"}1, should\n                    be referred for STI test{\" \"}\n                  </h4>\n                  <b>Score :{stiCount.length}</b>\n                </Message>\n\n                {saving ? <Spinner /> : \"\"}\n                <br />\n                <div className=\"row\">\n                  <div className=\"form-group mb-3 col-md-12\">\n                    {/* <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/> */}\n                    <Button\n                      content=\"Save & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          </CardBody>\n        </Card>\n      </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["1201","1202"],"import Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nexport const NewlyEnrolledArtByAge = {\n    chart: {\n        \n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Number of Adults and Children newly enrolled on ART '\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n        point: {\n            valueSuffix: '%'\n        }\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'black'\n            },\n            showInLegend: true\n        }\n    },\n    series: [{\n        name: 'Newly Enrolled on ART by Age',\n        data: [\n            \n            { name: '25 + ', sliced: true, y: 61.41 },\n            { name: '20-24 ', y: 11.84 },\n            { name: '10-19 ', y: 10.85 },\n            { name: '≤ 9 ', y: 4.67 },\n        ]\n    }]\n};","C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["1203","1204","1205","1206","1207","1208","1209","1210"],"C:\\Users\\ganiyat.yakub\\Lamisplus\\modules\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227"],{"ruleId":"1228","severity":1,"message":"1229","line":4,"column":10,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":23},{"ruleId":"1232","replacedBy":"1233"},{"ruleId":"1234","replacedBy":"1235"},{"ruleId":"1228","severity":1,"message":"1236","line":2,"column":26,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":32},{"ruleId":"1237","severity":1,"message":"1238","line":4,"column":10,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":24,"fix":"1241"},{"ruleId":"1228","severity":1,"message":"1242","line":5,"column":10,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1243","line":9,"column":8,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1244","line":16,"column":10,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1246","line":5,"column":26,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1247","line":12,"column":22,"nodeType":"1230","messageId":"1231","endLine":12,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1248","line":22,"column":8,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1249","line":35,"column":7,"nodeType":"1230","messageId":"1231","endLine":35,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1250","line":51,"column":10,"nodeType":"1230","messageId":"1231","endLine":51,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1251","line":51,"column":18,"nodeType":"1230","messageId":"1231","endLine":51,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1252","line":56,"column":10,"nodeType":"1230","messageId":"1231","endLine":56,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1253","line":59,"column":10,"nodeType":"1230","messageId":"1231","endLine":59,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1254","line":59,"column":26,"nodeType":"1230","messageId":"1231","endLine":59,"endColumn":43},{"ruleId":"1228","severity":1,"message":"1255","line":67,"column":23,"nodeType":"1230","messageId":"1231","endLine":67,"endColumn":36},{"ruleId":"1256","severity":1,"message":"1257","line":280,"column":6,"nodeType":"1258","endLine":280,"endColumn":8,"suggestions":"1259"},{"ruleId":"1260","severity":1,"message":"1261","line":399,"column":34,"nodeType":"1262","messageId":"1263","endLine":399,"endColumn":36},{"ruleId":"1260","severity":1,"message":"1261","line":420,"column":39,"nodeType":"1262","messageId":"1263","endLine":420,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1242","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1264","line":34,"column":8,"nodeType":"1230","messageId":"1231","endLine":34,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1265","line":10,"column":10,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1266","line":10,"column":15,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1267","line":24,"column":10,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1268","line":24,"column":16,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1269","line":30,"column":10,"nodeType":"1230","messageId":"1231","endLine":30,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1270","line":31,"column":10,"nodeType":"1230","messageId":"1231","endLine":31,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1271","line":31,"column":16,"nodeType":"1230","messageId":"1231","endLine":31,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1272","line":31,"column":26,"nodeType":"1230","messageId":"1231","endLine":31,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1273","line":31,"column":38,"nodeType":"1230","messageId":"1231","endLine":31,"endColumn":46},{"ruleId":"1228","severity":1,"message":"1274","line":33,"column":10,"nodeType":"1230","messageId":"1231","endLine":33,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1275","line":34,"column":8,"nodeType":"1230","messageId":"1231","endLine":34,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1249","line":60,"column":7,"nodeType":"1230","messageId":"1231","endLine":60,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1276","line":104,"column":9,"nodeType":"1230","messageId":"1231","endLine":104,"endColumn":20},{"ruleId":"1256","severity":1,"message":"1277","line":126,"column":6,"nodeType":"1258","endLine":126,"endColumn":8,"suggestions":"1278"},{"ruleId":"1228","severity":1,"message":"1279","line":140,"column":9,"nodeType":"1230","messageId":"1231","endLine":140,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":143,"column":25,"nodeType":"1262","messageId":"1263","endLine":143,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1238","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":24,"fix":"1280"},{"ruleId":"1228","severity":1,"message":"1242","line":26,"column":10,"nodeType":"1230","messageId":"1231","endLine":26,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1238","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":24,"fix":"1281"},{"ruleId":"1228","severity":1,"message":"1242","line":26,"column":10,"nodeType":"1230","messageId":"1231","endLine":26,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1282","line":4,"column":15,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1283","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1284","line":10,"column":8,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1285","line":13,"column":9,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1286","line":16,"column":9,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1287","line":16,"column":27,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1288","line":24,"column":8,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1289","line":108,"column":11,"nodeType":"1230","messageId":"1231","endLine":108,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1290","line":115,"column":26,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1291","line":120,"column":12,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1292","line":120,"column":43,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":72},{"ruleId":"1228","severity":1,"message":"1293","line":121,"column":12,"nodeType":"1230","messageId":"1231","endLine":121,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1294","line":121,"column":32,"nodeType":"1230","messageId":"1231","endLine":121,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1295","line":122,"column":12,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1296","line":123,"column":12,"nodeType":"1230","messageId":"1231","endLine":123,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1297","line":123,"column":31,"nodeType":"1230","messageId":"1231","endLine":123,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1298","line":221,"column":11,"nodeType":"1230","messageId":"1231","endLine":221,"endColumn":16},{"ruleId":"1260","severity":1,"message":"1261","line":276,"column":51,"nodeType":"1262","messageId":"1263","endLine":276,"endColumn":53},{"ruleId":"1260","severity":1,"message":"1261","line":296,"column":51,"nodeType":"1262","messageId":"1263","endLine":296,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1299","line":547,"column":11,"nodeType":"1230","messageId":"1231","endLine":547,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1300","line":556,"column":11,"nodeType":"1230","messageId":"1231","endLine":556,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1301","line":603,"column":19,"nodeType":"1230","messageId":"1231","endLine":603,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1302","line":652,"column":11,"nodeType":"1230","messageId":"1231","endLine":652,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1303","line":664,"column":11,"nodeType":"1230","messageId":"1231","endLine":664,"endColumn":35},{"ruleId":"1260","severity":1,"message":"1261","line":730,"column":28,"nodeType":"1262","messageId":"1263","endLine":730,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":733,"column":35,"nodeType":"1262","messageId":"1263","endLine":733,"endColumn":37},{"ruleId":"1304","severity":1,"message":"1305","line":1916,"column":45,"nodeType":"1306","messageId":"1307","endLine":1916,"endColumn":47},{"ruleId":"1304","severity":1,"message":"1305","line":1917,"column":45,"nodeType":"1306","messageId":"1307","endLine":1917,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1246","line":5,"column":26,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1247","line":13,"column":22,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1308","line":34,"column":8,"nodeType":"1230","messageId":"1231","endLine":34,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1309","line":35,"column":10,"nodeType":"1230","messageId":"1231","endLine":35,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1310","line":35,"column":24,"nodeType":"1230","messageId":"1231","endLine":35,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1311","line":52,"column":9,"nodeType":"1230","messageId":"1231","endLine":52,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1312","line":57,"column":10,"nodeType":"1230","messageId":"1231","endLine":57,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1255","line":70,"column":23,"nodeType":"1230","messageId":"1231","endLine":70,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1313","line":79,"column":10,"nodeType":"1230","messageId":"1231","endLine":79,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1314","line":79,"column":27,"nodeType":"1230","messageId":"1231","endLine":79,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1315","line":85,"column":9,"nodeType":"1230","messageId":"1231","endLine":85,"endColumn":21},{"ruleId":"1260","severity":1,"message":"1261","line":206,"column":60,"nodeType":"1262","messageId":"1263","endLine":206,"endColumn":62},{"ruleId":"1228","severity":1,"message":"1316","line":69,"column":10,"nodeType":"1230","messageId":"1231","endLine":69,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":69,"column":21,"nodeType":"1230","messageId":"1231","endLine":69,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1318","line":72,"column":10,"nodeType":"1230","messageId":"1231","endLine":72,"endColumn":20},{"ruleId":"1256","severity":1,"message":"1319","line":76,"column":6,"nodeType":"1258","endLine":76,"endColumn":8,"suggestions":"1320"},{"ruleId":"1260","severity":1,"message":"1261","line":110,"column":25,"nodeType":"1262","messageId":"1263","endLine":110,"endColumn":27},{"ruleId":"1260","severity":1,"message":"1261","line":117,"column":25,"nodeType":"1262","messageId":"1263","endLine":117,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1321","line":3,"column":10,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1322","line":3,"column":20,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1265","line":3,"column":25,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1323","line":5,"column":8,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1286","line":6,"column":10,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1324","line":9,"column":8,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1325","line":10,"column":8,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1326","line":11,"column":9,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1327","line":13,"column":7,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1328","line":91,"column":7,"nodeType":"1230","messageId":"1231","endLine":91,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":16,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1285","line":10,"column":10,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1288","line":20,"column":8,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1331","line":24,"column":10,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1332","line":26,"column":10,"nodeType":"1230","messageId":"1231","endLine":26,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1333","line":101,"column":9,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1334","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1335","line":105,"column":24,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1336","line":109,"column":10,"nodeType":"1230","messageId":"1231","endLine":109,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1337","line":123,"column":27,"nodeType":"1230","messageId":"1231","endLine":123,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1290","line":126,"column":24,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1276","line":128,"column":10,"nodeType":"1230","messageId":"1231","endLine":128,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":128,"column":23,"nodeType":"1230","messageId":"1231","endLine":128,"endColumn":36},{"ruleId":"1260","severity":1,"message":"1261","line":136,"column":25,"nodeType":"1262","messageId":"1263","endLine":136,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1338","line":169,"column":9,"nodeType":"1230","messageId":"1231","endLine":169,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1339","line":313,"column":9,"nodeType":"1230","messageId":"1231","endLine":313,"endColumn":26},{"ruleId":"1256","severity":1,"message":"1340","line":418,"column":6,"nodeType":"1258","endLine":418,"endColumn":70,"suggestions":"1341"},{"ruleId":"1228","severity":1,"message":"1301","line":674,"column":13,"nodeType":"1230","messageId":"1231","endLine":674,"endColumn":21},{"ruleId":"1260","severity":1,"message":"1261","line":718,"column":24,"nodeType":"1262","messageId":"1263","endLine":718,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":721,"column":31,"nodeType":"1262","messageId":"1263","endLine":721,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1342","line":742,"column":9,"nodeType":"1230","messageId":"1231","endLine":742,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":798,"column":47,"nodeType":"1262","messageId":"1263","endLine":798,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1343","line":814,"column":11,"nodeType":"1230","messageId":"1231","endLine":814,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":16,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1344","line":99,"column":10,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1276","line":101,"column":10,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":101,"column":23,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1345","line":104,"column":10,"nodeType":"1230","messageId":"1231","endLine":104,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1346","line":104,"column":20,"nodeType":"1230","messageId":"1231","endLine":104,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1338","line":120,"column":9,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1347","line":517,"column":12,"nodeType":"1230","messageId":"1231","endLine":517,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1348","line":523,"column":12,"nodeType":"1230","messageId":"1231","endLine":523,"endColumn":28},{"ruleId":"1260","severity":1,"message":"1261","line":619,"column":47,"nodeType":"1262","messageId":"1263","endLine":619,"endColumn":49},{"ruleId":"1256","severity":1,"message":"1349","line":719,"column":6,"nodeType":"1258","endLine":719,"endColumn":27,"suggestions":"1350"},{"ruleId":"1256","severity":1,"message":"1349","line":741,"column":6,"nodeType":"1258","endLine":741,"endColumn":31,"suggestions":"1351"},{"ruleId":"1256","severity":1,"message":"1349","line":758,"column":6,"nodeType":"1258","endLine":758,"endColumn":29,"suggestions":"1352"},{"ruleId":"1256","severity":1,"message":"1349","line":770,"column":6,"nodeType":"1258","endLine":770,"endColumn":29,"suggestions":"1353"},{"ruleId":"1256","severity":1,"message":"1349","line":778,"column":6,"nodeType":"1258","endLine":778,"endColumn":33,"suggestions":"1354"},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1355","line":13,"column":10,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1356","line":25,"column":19,"nodeType":"1230","messageId":"1231","endLine":25,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1276","line":116,"column":10,"nodeType":"1230","messageId":"1231","endLine":116,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":116,"column":23,"nodeType":"1230","messageId":"1231","endLine":116,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1346","line":119,"column":20,"nodeType":"1230","messageId":"1231","endLine":119,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1357","line":120,"column":10,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":26},{"ruleId":"1256","severity":1,"message":"1358","line":186,"column":6,"nodeType":"1258","endLine":186,"endColumn":21,"suggestions":"1359"},{"ruleId":"1260","severity":1,"message":"1261","line":412,"column":24,"nodeType":"1262","messageId":"1263","endLine":412,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":415,"column":31,"nodeType":"1262","messageId":"1263","endLine":415,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":538,"column":47,"nodeType":"1262","messageId":"1263","endLine":538,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1360","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":38,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1308","line":2,"column":8,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1361","line":3,"column":47,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":52},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1275","line":4,"column":13,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1246","line":8,"column":10,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1309","line":11,"column":10,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1310","line":11,"column":24,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1356","line":19,"column":19,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":19,"column":32,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":20,"column":8,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1363","line":23,"column":8,"nodeType":"1230","messageId":"1231","endLine":23,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1364","line":103,"column":10,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":12},{"ruleId":"1228","severity":1,"message":"1365","line":103,"column":14,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1366","line":104,"column":18,"nodeType":"1230","messageId":"1231","endLine":104,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1367","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1368","line":105,"column":23,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1250","line":106,"column":10,"nodeType":"1230","messageId":"1231","endLine":106,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1251","line":106,"column":18,"nodeType":"1230","messageId":"1231","endLine":106,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1369","line":107,"column":7,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":11},{"ruleId":"1228","severity":1,"message":"1370","line":110,"column":10,"nodeType":"1230","messageId":"1231","endLine":110,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1371","line":110,"column":19,"nodeType":"1230","messageId":"1231","endLine":110,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1372","line":111,"column":10,"nodeType":"1230","messageId":"1231","endLine":111,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1373","line":111,"column":29,"nodeType":"1230","messageId":"1231","endLine":111,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1374","line":112,"column":10,"nodeType":"1230","messageId":"1231","endLine":112,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1375","line":112,"column":21,"nodeType":"1230","messageId":"1231","endLine":112,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1376","line":113,"column":10,"nodeType":"1230","messageId":"1231","endLine":113,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1377","line":113,"column":18,"nodeType":"1230","messageId":"1231","endLine":113,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1378","line":114,"column":10,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1379","line":114,"column":19,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1357","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1380","line":115,"column":28,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1381","line":118,"column":10,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1360","line":1,"column":29,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1308","line":2,"column":8,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1382","line":4,"column":8,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1330","line":5,"column":52,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":56},{"ruleId":"1228","severity":1,"message":"1275","line":6,"column":13,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1282","line":8,"column":15,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1251","line":95,"column":20,"nodeType":"1230","messageId":"1231","endLine":95,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1383","line":96,"column":12,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1366","line":96,"column":20,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1333","line":88,"column":9,"nodeType":"1230","messageId":"1231","endLine":88,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1276","line":96,"column":10,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":96,"column":23,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1345","line":99,"column":10,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1346","line":99,"column":20,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1384","line":101,"column":21,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":33},{"ruleId":"1256","severity":1,"message":"1385","line":175,"column":6,"nodeType":"1258","endLine":175,"endColumn":48,"suggestions":"1386"},{"ruleId":"1237","severity":1,"message":"1238","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":24,"fix":"1387"},{"ruleId":"1228","severity":1,"message":"1388","line":28,"column":10,"nodeType":"1230","messageId":"1231","endLine":28,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1249","line":57,"column":7,"nodeType":"1230","messageId":"1231","endLine":57,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1333","line":101,"column":7,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":14},{"ruleId":"1256","severity":1,"message":"1389","line":168,"column":6,"nodeType":"1258","endLine":168,"endColumn":24,"suggestions":"1390"},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1361","line":10,"column":3,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":8},{"ruleId":"1228","severity":1,"message":"1330","line":11,"column":3,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":7},{"ruleId":"1228","severity":1,"message":"1282","line":14,"column":16,"nodeType":"1230","messageId":"1231","endLine":14,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1356","line":24,"column":19,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1391","line":99,"column":27,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1392","line":130,"column":28,"nodeType":"1230","messageId":"1231","endLine":130,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1393","line":131,"column":24,"nodeType":"1230","messageId":"1231","endLine":131,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1276","line":151,"column":10,"nodeType":"1230","messageId":"1231","endLine":151,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":151,"column":23,"nodeType":"1230","messageId":"1231","endLine":151,"endColumn":36},{"ruleId":"1256","severity":1,"message":"1394","line":240,"column":6,"nodeType":"1258","endLine":240,"endColumn":24,"suggestions":"1395"},{"ruleId":"1228","severity":1,"message":"1384","line":249,"column":21,"nodeType":"1230","messageId":"1231","endLine":249,"endColumn":33},{"ruleId":"1396","severity":1,"message":"1397","line":283,"column":5,"nodeType":"1398","messageId":"1263","endLine":283,"endColumn":36},{"ruleId":"1396","severity":1,"message":"1399","line":284,"column":5,"nodeType":"1398","messageId":"1263","endLine":284,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1356","line":19,"column":19,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":19,"column":32,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":20,"column":8,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1283","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1400","line":28,"column":3,"nodeType":"1230","messageId":"1231","endLine":28,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1401","line":107,"column":9,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1370","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1371","line":115,"column":19,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1316","line":122,"column":10,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":122,"column":21,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1402","line":124,"column":10,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1403","line":124,"column":24,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1404","line":125,"column":10,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1405","line":125,"column":25,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1406","line":132,"column":10,"nodeType":"1230","messageId":"1231","endLine":132,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1407","line":132,"column":29,"nodeType":"1230","messageId":"1231","endLine":132,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1408","line":133,"column":10,"nodeType":"1230","messageId":"1231","endLine":133,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1409","line":134,"column":10,"nodeType":"1230","messageId":"1231","endLine":134,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1410","line":137,"column":10,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":30},{"ruleId":"1256","severity":1,"message":"1411","line":226,"column":6,"nodeType":"1258","endLine":226,"endColumn":8,"suggestions":"1412"},{"ruleId":"1228","severity":1,"message":"1342","line":247,"column":9,"nodeType":"1230","messageId":"1231","endLine":247,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1413","line":266,"column":9,"nodeType":"1230","messageId":"1231","endLine":266,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1343","line":305,"column":11,"nodeType":"1230","messageId":"1231","endLine":305,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1414","line":484,"column":9,"nodeType":"1230","messageId":"1231","endLine":484,"endColumn":32},{"ruleId":"1260","severity":1,"message":"1261","line":485,"column":24,"nodeType":"1262","messageId":"1263","endLine":485,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":488,"column":31,"nodeType":"1262","messageId":"1263","endLine":488,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":584,"column":47,"nodeType":"1262","messageId":"1263","endLine":584,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1329","line":4,"column":38,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":4,"column":54,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1284","line":8,"column":8,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1356","line":20,"column":19,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":20,"column":32,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1415","line":22,"column":10,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1416","line":23,"column":10,"nodeType":"1230","messageId":"1231","endLine":23,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1417","line":23,"column":16,"nodeType":"1230","messageId":"1231","endLine":23,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1418","line":23,"column":31,"nodeType":"1230","messageId":"1231","endLine":23,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1419","line":24,"column":8,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1420","line":25,"column":8,"nodeType":"1230","messageId":"1231","endLine":25,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1283","line":27,"column":8,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1421","line":39,"column":10,"nodeType":"1230","messageId":"1231","endLine":39,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1372","line":123,"column":10,"nodeType":"1230","messageId":"1231","endLine":123,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1374","line":124,"column":10,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1422","line":125,"column":10,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1423","line":126,"column":10,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1424","line":126,"column":34,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":57},{"ruleId":"1228","severity":1,"message":"1316","line":129,"column":10,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":129,"column":21,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1425","line":133,"column":10,"nodeType":"1230","messageId":"1231","endLine":133,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1426","line":133,"column":31,"nodeType":"1230","messageId":"1231","endLine":133,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1427","line":139,"column":10,"nodeType":"1230","messageId":"1231","endLine":139,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1428","line":139,"column":41,"nodeType":"1230","messageId":"1231","endLine":139,"endColumn":73},{"ruleId":"1228","severity":1,"message":"1368","line":141,"column":23,"nodeType":"1230","messageId":"1231","endLine":141,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1429","line":143,"column":21,"nodeType":"1230","messageId":"1231","endLine":143,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1255","line":148,"column":23,"nodeType":"1230","messageId":"1231","endLine":148,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1430","line":151,"column":19,"nodeType":"1230","messageId":"1231","endLine":151,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1402","line":156,"column":10,"nodeType":"1230","messageId":"1231","endLine":156,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1403","line":156,"column":24,"nodeType":"1230","messageId":"1231","endLine":156,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1431","line":178,"column":10,"nodeType":"1230","messageId":"1231","endLine":178,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1432","line":178,"column":38,"nodeType":"1230","messageId":"1231","endLine":178,"endColumn":67},{"ruleId":"1228","severity":1,"message":"1433","line":182,"column":5,"nodeType":"1230","messageId":"1231","endLine":182,"endColumn":40},{"ruleId":"1228","severity":1,"message":"1434","line":183,"column":5,"nodeType":"1230","messageId":"1231","endLine":183,"endColumn":43},{"ruleId":"1228","severity":1,"message":"1435","line":188,"column":10,"nodeType":"1230","messageId":"1231","endLine":188,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1436","line":189,"column":10,"nodeType":"1230","messageId":"1231","endLine":189,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1437","line":286,"column":10,"nodeType":"1230","messageId":"1231","endLine":286,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1438","line":287,"column":10,"nodeType":"1230","messageId":"1231","endLine":287,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1439","line":288,"column":10,"nodeType":"1230","messageId":"1231","endLine":288,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1440","line":309,"column":9,"nodeType":"1230","messageId":"1231","endLine":309,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1441","line":484,"column":9,"nodeType":"1230","messageId":"1231","endLine":484,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1442","line":485,"column":11,"nodeType":"1230","messageId":"1231","endLine":485,"endColumn":24},{"ruleId":"1256","severity":1,"message":"1443","line":528,"column":6,"nodeType":"1258","endLine":528,"endColumn":8,"suggestions":"1444"},{"ruleId":"1228","severity":1,"message":"1342","line":538,"column":9,"nodeType":"1230","messageId":"1231","endLine":538,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1413","line":559,"column":9,"nodeType":"1230","messageId":"1231","endLine":559,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1445","line":690,"column":9,"nodeType":"1230","messageId":"1231","endLine":690,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1446","line":714,"column":9,"nodeType":"1230","messageId":"1231","endLine":714,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1447","line":760,"column":9,"nodeType":"1230","messageId":"1231","endLine":760,"endColumn":29},{"ruleId":"1448","severity":1,"message":"1449","line":763,"column":47,"nodeType":"1450","messageId":"1451","endLine":763,"endColumn":49},{"ruleId":"1448","severity":1,"message":"1449","line":772,"column":44,"nodeType":"1450","messageId":"1451","endLine":772,"endColumn":46},{"ruleId":"1448","severity":1,"message":"1449","line":781,"column":44,"nodeType":"1450","messageId":"1451","endLine":781,"endColumn":46},{"ruleId":"1260","severity":1,"message":"1261","line":958,"column":24,"nodeType":"1262","messageId":"1263","endLine":958,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":961,"column":31,"nodeType":"1262","messageId":"1263","endLine":961,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":1049,"column":47,"nodeType":"1262","messageId":"1263","endLine":1049,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1343","line":1119,"column":11,"nodeType":"1230","messageId":"1231","endLine":1119,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1276","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":115,"column":23,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1384","line":118,"column":21,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":33},{"ruleId":"1452","severity":1,"message":"1453","line":248,"column":32,"nodeType":"1454","messageId":"1455","endLine":248,"endColumn":76,"fix":"1456"},{"ruleId":"1452","severity":1,"message":"1453","line":255,"column":32,"nodeType":"1454","messageId":"1455","endLine":255,"endColumn":73,"fix":"1457"},{"ruleId":"1452","severity":1,"message":"1453","line":263,"column":32,"nodeType":"1454","messageId":"1455","endLine":263,"endColumn":70,"fix":"1458"},{"ruleId":"1452","severity":1,"message":"1453","line":270,"column":32,"nodeType":"1454","messageId":"1455","endLine":270,"endColumn":69,"fix":"1459"},{"ruleId":"1452","severity":1,"message":"1453","line":277,"column":32,"nodeType":"1454","messageId":"1455","endLine":277,"endColumn":69,"fix":"1460"},{"ruleId":"1452","severity":1,"message":"1453","line":279,"column":32,"nodeType":"1454","messageId":"1455","endLine":279,"endColumn":62,"fix":"1461"},{"ruleId":"1256","severity":1,"message":"1462","line":307,"column":6,"nodeType":"1258","endLine":312,"endColumn":4,"suggestions":"1463"},{"ruleId":"1260","severity":1,"message":"1261","line":367,"column":28,"nodeType":"1262","messageId":"1263","endLine":367,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":374,"column":34,"nodeType":"1262","messageId":"1263","endLine":374,"endColumn":36},{"ruleId":"1260","severity":1,"message":"1261","line":383,"column":47,"nodeType":"1262","messageId":"1263","endLine":383,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":2,"column":54,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1288","line":19,"column":8,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1464","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1465","line":26,"column":8,"nodeType":"1230","messageId":"1231","endLine":26,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1344","line":101,"column":10,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1466","line":107,"column":10,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1467","line":107,"column":25,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1423","line":109,"column":10,"nodeType":"1230","messageId":"1231","endLine":109,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1468","line":109,"column":34,"nodeType":"1230","messageId":"1231","endLine":109,"endColumn":59},{"ruleId":"1228","severity":1,"message":"1276","line":118,"column":10,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":118,"column":23,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1429","line":123,"column":21,"nodeType":"1230","messageId":"1231","endLine":123,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1430","line":129,"column":19,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1469","line":137,"column":10,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1470","line":137,"column":26,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":43},{"ruleId":"1228","severity":1,"message":"1471","line":254,"column":9,"nodeType":"1230","messageId":"1231","endLine":254,"endColumn":19},{"ruleId":"1256","severity":1,"message":"1472","line":359,"column":6,"nodeType":"1258","endLine":359,"endColumn":24,"suggestions":"1473"},{"ruleId":"1228","severity":1,"message":"1474","line":507,"column":9,"nodeType":"1230","messageId":"1231","endLine":507,"endColumn":34},{"ruleId":"1228","severity":1,"message":"1475","line":520,"column":9,"nodeType":"1230","messageId":"1231","endLine":520,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1476","line":565,"column":9,"nodeType":"1230","messageId":"1231","endLine":565,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1414","line":639,"column":9,"nodeType":"1230","messageId":"1231","endLine":639,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1342","line":662,"column":9,"nodeType":"1230","messageId":"1231","endLine":662,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1343","line":673,"column":11,"nodeType":"1230","messageId":"1231","endLine":673,"endColumn":16},{"ruleId":"1260","severity":1,"message":"1261","line":717,"column":47,"nodeType":"1262","messageId":"1263","endLine":717,"endColumn":49},{"ruleId":"1260","severity":1,"message":"1261","line":746,"column":42,"nodeType":"1262","messageId":"1263","endLine":746,"endColumn":44},{"ruleId":"1228","severity":1,"message":"1329","line":4,"column":38,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":4,"column":54,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1284","line":8,"column":8,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1356","line":20,"column":19,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":20,"column":32,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1477","line":26,"column":8,"nodeType":"1230","messageId":"1231","endLine":26,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1478","line":28,"column":8,"nodeType":"1230","messageId":"1231","endLine":28,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1283","line":31,"column":8,"nodeType":"1230","messageId":"1231","endLine":31,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1421","line":43,"column":10,"nodeType":"1230","messageId":"1231","endLine":43,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1372","line":127,"column":10,"nodeType":"1230","messageId":"1231","endLine":127,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1374","line":128,"column":10,"nodeType":"1230","messageId":"1231","endLine":128,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1422","line":129,"column":10,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1423","line":130,"column":10,"nodeType":"1230","messageId":"1231","endLine":130,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1424","line":130,"column":34,"nodeType":"1230","messageId":"1231","endLine":130,"endColumn":57},{"ruleId":"1228","severity":1,"message":"1316","line":133,"column":10,"nodeType":"1230","messageId":"1231","endLine":133,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":133,"column":21,"nodeType":"1230","messageId":"1231","endLine":133,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1425","line":137,"column":10,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1427","line":144,"column":10,"nodeType":"1230","messageId":"1231","endLine":144,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1428","line":144,"column":41,"nodeType":"1230","messageId":"1231","endLine":144,"endColumn":73},{"ruleId":"1228","severity":1,"message":"1368","line":146,"column":23,"nodeType":"1230","messageId":"1231","endLine":146,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1429","line":154,"column":21,"nodeType":"1230","messageId":"1231","endLine":154,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1255","line":159,"column":23,"nodeType":"1230","messageId":"1231","endLine":159,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1430","line":162,"column":19,"nodeType":"1230","messageId":"1231","endLine":162,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1402","line":167,"column":10,"nodeType":"1230","messageId":"1231","endLine":167,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1403","line":167,"column":24,"nodeType":"1230","messageId":"1231","endLine":167,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1431","line":190,"column":10,"nodeType":"1230","messageId":"1231","endLine":190,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1435","line":200,"column":10,"nodeType":"1230","messageId":"1231","endLine":200,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1436","line":201,"column":10,"nodeType":"1230","messageId":"1231","endLine":201,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1437","line":300,"column":10,"nodeType":"1230","messageId":"1231","endLine":300,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1438","line":301,"column":10,"nodeType":"1230","messageId":"1231","endLine":301,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1439","line":302,"column":10,"nodeType":"1230","messageId":"1231","endLine":302,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1440","line":319,"column":9,"nodeType":"1230","messageId":"1231","endLine":319,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1479","line":349,"column":9,"nodeType":"1230","messageId":"1231","endLine":349,"endColumn":34},{"ruleId":"1260","severity":1,"message":"1261","line":362,"column":47,"nodeType":"1262","messageId":"1263","endLine":362,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1480","line":541,"column":7,"nodeType":"1230","messageId":"1231","endLine":541,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1441","line":770,"column":9,"nodeType":"1230","messageId":"1231","endLine":770,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1442","line":771,"column":11,"nodeType":"1230","messageId":"1231","endLine":771,"endColumn":24},{"ruleId":"1256","severity":1,"message":"1481","line":822,"column":6,"nodeType":"1258","endLine":822,"endColumn":8,"suggestions":"1482"},{"ruleId":"1228","severity":1,"message":"1342","line":879,"column":9,"nodeType":"1230","messageId":"1231","endLine":879,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1413","line":900,"column":9,"nodeType":"1230","messageId":"1231","endLine":900,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1445","line":1043,"column":9,"nodeType":"1230","messageId":"1231","endLine":1043,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1446","line":1067,"column":9,"nodeType":"1230","messageId":"1231","endLine":1067,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1447","line":1113,"column":9,"nodeType":"1230","messageId":"1231","endLine":1113,"endColumn":29},{"ruleId":"1448","severity":1,"message":"1449","line":1116,"column":47,"nodeType":"1450","messageId":"1451","endLine":1116,"endColumn":49},{"ruleId":"1448","severity":1,"message":"1449","line":1125,"column":44,"nodeType":"1450","messageId":"1451","endLine":1125,"endColumn":46},{"ruleId":"1448","severity":1,"message":"1449","line":1134,"column":44,"nodeType":"1450","messageId":"1451","endLine":1134,"endColumn":46},{"ruleId":"1228","severity":1,"message":"1483","line":1148,"column":9,"nodeType":"1230","messageId":"1231","endLine":1148,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1484","line":1152,"column":9,"nodeType":"1230","messageId":"1231","endLine":1152,"endColumn":22},{"ruleId":"1260","severity":1,"message":"1261","line":1315,"column":24,"nodeType":"1262","messageId":"1263","endLine":1315,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":1318,"column":31,"nodeType":"1262","messageId":"1263","endLine":1318,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":1396,"column":47,"nodeType":"1262","messageId":"1263","endLine":1396,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1343","line":1493,"column":11,"nodeType":"1230","messageId":"1231","endLine":1493,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1356","line":8,"column":18,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1238","line":4,"column":10,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":24,"fix":"1485"},{"ruleId":"1228","severity":1,"message":"1276","line":36,"column":10,"nodeType":"1230","messageId":"1231","endLine":36,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":36,"column":23,"nodeType":"1230","messageId":"1231","endLine":36,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1486","line":39,"column":10,"nodeType":"1230","messageId":"1231","endLine":39,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1487","line":40,"column":10,"nodeType":"1230","messageId":"1231","endLine":40,"endColumn":23},{"ruleId":"1256","severity":1,"message":"1488","line":61,"column":6,"nodeType":"1258","endLine":61,"endColumn":42,"suggestions":"1489"},{"ruleId":"1228","severity":1,"message":"1490","line":3,"column":8,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":38,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1361","line":3,"column":47,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":52},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1275","line":4,"column":13,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1246","line":8,"column":10,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1356","line":19,"column":19,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":19,"column":32,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":20,"column":8,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1491","line":22,"column":8,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1364","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":12},{"ruleId":"1228","severity":1,"message":"1365","line":105,"column":14,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1366","line":106,"column":18,"nodeType":"1230","messageId":"1231","endLine":106,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1367","line":107,"column":10,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1368","line":107,"column":23,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1250","line":108,"column":10,"nodeType":"1230","messageId":"1231","endLine":108,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1251","line":108,"column":18,"nodeType":"1230","messageId":"1231","endLine":108,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1369","line":109,"column":7,"nodeType":"1230","messageId":"1231","endLine":109,"endColumn":11},{"ruleId":"1228","severity":1,"message":"1370","line":112,"column":10,"nodeType":"1230","messageId":"1231","endLine":112,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1371","line":112,"column":19,"nodeType":"1230","messageId":"1231","endLine":112,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1372","line":113,"column":10,"nodeType":"1230","messageId":"1231","endLine":113,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1373","line":113,"column":29,"nodeType":"1230","messageId":"1231","endLine":113,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1374","line":114,"column":10,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1375","line":114,"column":21,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1376","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1377","line":115,"column":18,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1378","line":116,"column":10,"nodeType":"1230","messageId":"1231","endLine":116,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1379","line":116,"column":19,"nodeType":"1230","messageId":"1231","endLine":116,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1357","line":117,"column":10,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1380","line":117,"column":28,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1381","line":119,"column":10,"nodeType":"1230","messageId":"1231","endLine":119,"endColumn":25},{"ruleId":"1256","severity":1,"message":"1492","line":178,"column":6,"nodeType":"1258","endLine":178,"endColumn":8,"suggestions":"1493"},{"ruleId":"1260","severity":1,"message":"1494","line":3,"column":27,"nodeType":"1262","messageId":"1263","endLine":3,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1495","line":6,"column":11,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":20},{"ruleId":"1496","severity":1,"message":"1497","line":183,"column":3,"nodeType":"1498","messageId":"1499","endLine":247,"endColumn":4},{"ruleId":"1500","severity":1,"message":"1501","line":191,"column":7,"nodeType":"1502","messageId":"1503","endLine":191,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":199,"column":7,"nodeType":"1502","messageId":"1503","endLine":199,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":207,"column":7,"nodeType":"1502","messageId":"1503","endLine":207,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":215,"column":7,"nodeType":"1502","messageId":"1503","endLine":215,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":223,"column":7,"nodeType":"1502","messageId":"1503","endLine":223,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":231,"column":7,"nodeType":"1502","messageId":"1503","endLine":231,"endColumn":13},{"ruleId":"1500","severity":1,"message":"1501","line":239,"column":7,"nodeType":"1502","messageId":"1503","endLine":239,"endColumn":13},{"ruleId":"1448","severity":1,"message":"1504","line":316,"column":39,"nodeType":"1450","messageId":"1505","endLine":316,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1506","line":334,"column":7,"nodeType":"1230","messageId":"1231","endLine":334,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1507","line":335,"column":7,"nodeType":"1230","messageId":"1231","endLine":335,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1508","line":336,"column":7,"nodeType":"1230","messageId":"1231","endLine":336,"endColumn":25},{"ruleId":"1448","severity":1,"message":"1504","line":447,"column":41,"nodeType":"1450","messageId":"1505","endLine":447,"endColumn":43},{"ruleId":"1228","severity":1,"message":"1509","line":498,"column":5,"nodeType":"1230","messageId":"1231","endLine":498,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1506","line":557,"column":7,"nodeType":"1230","messageId":"1231","endLine":557,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1507","line":558,"column":7,"nodeType":"1230","messageId":"1231","endLine":558,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1508","line":559,"column":7,"nodeType":"1230","messageId":"1231","endLine":559,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1510","line":566,"column":7,"nodeType":"1230","messageId":"1231","endLine":566,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1388","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1321","line":29,"column":10,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1270","line":29,"column":28,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1416","line":29,"column":34,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1249","line":56,"column":7,"nodeType":"1230","messageId":"1231","endLine":56,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1511","line":102,"column":9,"nodeType":"1230","messageId":"1231","endLine":102,"endColumn":18},{"ruleId":"1256","severity":1,"message":"1512","line":108,"column":6,"nodeType":"1258","endLine":108,"endColumn":8,"suggestions":"1513"},{"ruleId":"1228","severity":1,"message":"1514","line":124,"column":9,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1360","line":1,"column":30,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1382","line":2,"column":10,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1242","line":4,"column":10,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1246","line":5,"column":26,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1286","line":8,"column":10,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1355","line":8,"column":16,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1247","line":11,"column":22,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1312","line":33,"column":12,"nodeType":"1230","messageId":"1231","endLine":33,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":2,"column":54,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1344","line":98,"column":10,"nodeType":"1230","messageId":"1231","endLine":98,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1469","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1470","line":105,"column":26,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":43},{"ruleId":"1256","severity":1,"message":"1515","line":152,"column":6,"nodeType":"1258","endLine":152,"endColumn":24,"suggestions":"1516"},{"ruleId":"1228","severity":1,"message":"1517","line":168,"column":12,"nodeType":"1230","messageId":"1231","endLine":168,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1518","line":260,"column":9,"nodeType":"1230","messageId":"1231","endLine":260,"endColumn":24},{"ruleId":"1260","severity":1,"message":"1261","line":347,"column":47,"nodeType":"1262","messageId":"1263","endLine":347,"endColumn":49},{"ruleId":"1260","severity":1,"message":"1261","line":354,"column":42,"nodeType":"1262","messageId":"1263","endLine":354,"endColumn":44},{"ruleId":"1228","severity":1,"message":"1388","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1249","line":55,"column":7,"nodeType":"1230","messageId":"1231","endLine":55,"endColumn":16},{"ruleId":"1256","severity":1,"message":"1519","line":105,"column":6,"nodeType":"1258","endLine":105,"endColumn":24,"suggestions":"1520"},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1246","line":5,"column":26,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":31},{"ruleId":"1228","severity":1,"message":"1247","line":11,"column":22,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1521","line":24,"column":8,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1522","line":28,"column":10,"nodeType":"1230","messageId":"1231","endLine":28,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1249","line":33,"column":7,"nodeType":"1230","messageId":"1231","endLine":33,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1255","line":58,"column":23,"nodeType":"1230","messageId":"1231","endLine":58,"endColumn":36},{"ruleId":"1260","severity":1,"message":"1261","line":368,"column":39,"nodeType":"1262","messageId":"1263","endLine":368,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1523","line":1,"column":28,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":36},{"ruleId":"1237","severity":1,"message":"1238","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":24,"fix":"1524"},{"ruleId":"1228","severity":1,"message":"1388","line":28,"column":10,"nodeType":"1230","messageId":"1231","endLine":28,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1249","line":56,"column":7,"nodeType":"1230","messageId":"1231","endLine":56,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1356","line":20,"column":19,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":20,"column":32,"nodeType":"1230","messageId":"1231","endLine":20,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1283","line":22,"column":8,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1401","line":110,"column":9,"nodeType":"1230","messageId":"1231","endLine":110,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1370","line":118,"column":10,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1371","line":118,"column":19,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1316","line":125,"column":10,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":125,"column":21,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1402","line":128,"column":10,"nodeType":"1230","messageId":"1231","endLine":128,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1403","line":128,"column":24,"nodeType":"1230","messageId":"1231","endLine":128,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1404","line":129,"column":10,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1405","line":129,"column":25,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1406","line":137,"column":10,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1407","line":137,"column":29,"nodeType":"1230","messageId":"1231","endLine":137,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1408","line":138,"column":10,"nodeType":"1230","messageId":"1231","endLine":138,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1409","line":139,"column":10,"nodeType":"1230","messageId":"1231","endLine":139,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1525","line":139,"column":37,"nodeType":"1230","messageId":"1231","endLine":139,"endColumn":65},{"ruleId":"1228","severity":1,"message":"1410","line":142,"column":10,"nodeType":"1230","messageId":"1231","endLine":142,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1333","line":143,"column":9,"nodeType":"1230","messageId":"1231","endLine":143,"endColumn":16},{"ruleId":"1256","severity":1,"message":"1526","line":225,"column":6,"nodeType":"1258","endLine":225,"endColumn":8,"suggestions":"1527"},{"ruleId":"1228","severity":1,"message":"1342","line":244,"column":9,"nodeType":"1230","messageId":"1231","endLine":244,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1413","line":263,"column":9,"nodeType":"1230","messageId":"1231","endLine":263,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1343","line":307,"column":11,"nodeType":"1230","messageId":"1231","endLine":307,"endColumn":16},{"ruleId":"1256","severity":1,"message":"1528","line":404,"column":6,"nodeType":"1258","endLine":404,"endColumn":8,"suggestions":"1529"},{"ruleId":"1228","severity":1,"message":"1414","line":503,"column":9,"nodeType":"1230","messageId":"1231","endLine":503,"endColumn":32},{"ruleId":"1260","severity":1,"message":"1261","line":504,"column":24,"nodeType":"1262","messageId":"1263","endLine":504,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":507,"column":31,"nodeType":"1262","messageId":"1263","endLine":507,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":593,"column":47,"nodeType":"1262","messageId":"1263","endLine":593,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1530","line":596,"column":9,"nodeType":"1230","messageId":"1231","endLine":596,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":38,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1268","line":3,"column":28,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1267","line":6,"column":10,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1284","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1288","line":19,"column":8,"nodeType":"1230","messageId":"1231","endLine":19,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1367","line":100,"column":10,"nodeType":"1230","messageId":"1231","endLine":100,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1368","line":100,"column":23,"nodeType":"1230","messageId":"1231","endLine":100,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1531","line":104,"column":9,"nodeType":"1230","messageId":"1231","endLine":104,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1378","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1333","line":126,"column":8,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1532","line":129,"column":10,"nodeType":"1230","messageId":"1231","endLine":129,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1437","line":130,"column":10,"nodeType":"1230","messageId":"1231","endLine":130,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1533","line":130,"column":25,"nodeType":"1230","messageId":"1231","endLine":130,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1438","line":131,"column":10,"nodeType":"1230","messageId":"1231","endLine":131,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1534","line":131,"column":28,"nodeType":"1230","messageId":"1231","endLine":131,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1439","line":132,"column":10,"nodeType":"1230","messageId":"1231","endLine":132,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1535","line":132,"column":23,"nodeType":"1230","messageId":"1231","endLine":132,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1518","line":134,"column":11,"nodeType":"1230","messageId":"1231","endLine":134,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1343","line":148,"column":15,"nodeType":"1230","messageId":"1231","endLine":148,"endColumn":20},{"ruleId":"1256","severity":1,"message":"1528","line":196,"column":8,"nodeType":"1258","endLine":196,"endColumn":10,"suggestions":"1536"},{"ruleId":"1228","severity":1,"message":"1537","line":253,"column":9,"nodeType":"1230","messageId":"1231","endLine":253,"endColumn":34},{"ruleId":"1228","severity":1,"message":"1342","line":292,"column":9,"nodeType":"1230","messageId":"1231","endLine":292,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":361,"column":47,"nodeType":"1262","messageId":"1263","endLine":361,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1249","line":49,"column":7,"nodeType":"1230","messageId":"1231","endLine":49,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1538","line":96,"column":10,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1295","line":97,"column":10,"nodeType":"1230","messageId":"1231","endLine":97,"endColumn":23},{"ruleId":"1256","severity":1,"message":"1512","line":107,"column":6,"nodeType":"1258","endLine":107,"endColumn":8,"suggestions":"1539"},{"ruleId":"1228","severity":1,"message":"1282","line":4,"column":15,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1283","line":7,"column":8,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1284","line":10,"column":8,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1285","line":13,"column":9,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1286","line":16,"column":9,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1287","line":16,"column":27,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1288","line":24,"column":8,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1540","line":30,"column":8,"nodeType":"1230","messageId":"1231","endLine":30,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1290","line":113,"column":26,"nodeType":"1230","messageId":"1231","endLine":113,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1291","line":118,"column":12,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1292","line":118,"column":43,"nodeType":"1230","messageId":"1231","endLine":118,"endColumn":72},{"ruleId":"1228","severity":1,"message":"1293","line":119,"column":12,"nodeType":"1230","messageId":"1231","endLine":119,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1294","line":119,"column":32,"nodeType":"1230","messageId":"1231","endLine":119,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1295","line":120,"column":12,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1296","line":121,"column":12,"nodeType":"1230","messageId":"1231","endLine":121,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1297","line":121,"column":31,"nodeType":"1230","messageId":"1231","endLine":121,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1298","line":213,"column":11,"nodeType":"1230","messageId":"1231","endLine":213,"endColumn":16},{"ruleId":"1260","severity":1,"message":"1261","line":268,"column":51,"nodeType":"1262","messageId":"1263","endLine":268,"endColumn":53},{"ruleId":"1260","severity":1,"message":"1261","line":288,"column":55,"nodeType":"1262","messageId":"1263","endLine":288,"endColumn":57},{"ruleId":"1228","severity":1,"message":"1299","line":537,"column":11,"nodeType":"1230","messageId":"1231","endLine":537,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1300","line":546,"column":11,"nodeType":"1230","messageId":"1231","endLine":546,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1301","line":599,"column":19,"nodeType":"1230","messageId":"1231","endLine":599,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1302","line":648,"column":11,"nodeType":"1230","messageId":"1231","endLine":648,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1303","line":660,"column":11,"nodeType":"1230","messageId":"1231","endLine":660,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1541","line":678,"column":19,"nodeType":"1230","messageId":"1231","endLine":678,"endColumn":31},{"ruleId":"1260","severity":1,"message":"1261","line":723,"column":28,"nodeType":"1262","messageId":"1263","endLine":723,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":732,"column":35,"nodeType":"1262","messageId":"1263","endLine":732,"endColumn":37},{"ruleId":"1304","severity":1,"message":"1305","line":1863,"column":45,"nodeType":"1306","messageId":"1307","endLine":1863,"endColumn":47},{"ruleId":"1304","severity":1,"message":"1305","line":1864,"column":45,"nodeType":"1306","messageId":"1307","endLine":1864,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1542","line":4,"column":8,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1388","line":6,"column":10,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1286","line":7,"column":10,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1356","line":9,"column":19,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":2,"column":54,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1464","line":21,"column":8,"nodeType":"1230","messageId":"1231","endLine":21,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1465","line":24,"column":8,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1344","line":99,"column":10,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1543","line":99,"column":23,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":37},{"ruleId":"1228","severity":1,"message":"1466","line":103,"column":10,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1467","line":103,"column":25,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1423","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1468","line":105,"column":34,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":59},{"ruleId":"1228","severity":1,"message":"1429","line":111,"column":21,"nodeType":"1230","messageId":"1231","endLine":111,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1430","line":117,"column":19,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1544","line":122,"column":10,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1469","line":125,"column":10,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1470","line":125,"column":26,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":43},{"ruleId":"1396","severity":1,"message":"1545","line":199,"column":7,"nodeType":"1398","messageId":"1263","endLine":199,"endColumn":47},{"ruleId":"1396","severity":1,"message":"1545","line":232,"column":5,"nodeType":"1398","messageId":"1263","endLine":232,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1343","line":253,"column":11,"nodeType":"1230","messageId":"1231","endLine":253,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1546","line":278,"column":9,"nodeType":"1230","messageId":"1231","endLine":278,"endColumn":21},{"ruleId":"1256","severity":1,"message":"1547","line":354,"column":6,"nodeType":"1258","endLine":354,"endColumn":24,"suggestions":"1548"},{"ruleId":"1228","severity":1,"message":"1474","line":499,"column":9,"nodeType":"1230","messageId":"1231","endLine":499,"endColumn":34},{"ruleId":"1228","severity":1,"message":"1476","line":559,"column":9,"nodeType":"1230","messageId":"1231","endLine":559,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1414","line":630,"column":9,"nodeType":"1230","messageId":"1231","endLine":630,"endColumn":32},{"ruleId":"1260","severity":1,"message":"1261","line":690,"column":47,"nodeType":"1262","messageId":"1263","endLine":690,"endColumn":49},{"ruleId":"1260","severity":1,"message":"1261","line":709,"column":42,"nodeType":"1262","messageId":"1263","endLine":709,"endColumn":44},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1333","line":89,"column":9,"nodeType":"1230","messageId":"1231","endLine":89,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1384","line":100,"column":21,"nodeType":"1230","messageId":"1231","endLine":100,"endColumn":33},{"ruleId":"1256","severity":1,"message":"1385","line":188,"column":6,"nodeType":"1258","endLine":188,"endColumn":48,"suggestions":"1549"},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1360","line":1,"column":29,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1308","line":2,"column":8,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1382","line":4,"column":8,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1330","line":5,"column":52,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":56},{"ruleId":"1228","severity":1,"message":"1275","line":6,"column":13,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1282","line":8,"column":15,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1251","line":95,"column":20,"nodeType":"1230","messageId":"1231","endLine":95,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1383","line":96,"column":12,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1366","line":96,"column":20,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1356","line":24,"column":19,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1333","line":101,"column":9,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1550","line":147,"column":10,"nodeType":"1230","messageId":"1231","endLine":147,"endColumn":28},{"ruleId":"1260","severity":1,"message":"1261","line":417,"column":47,"nodeType":"1262","messageId":"1263","endLine":417,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1276","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1255","line":105,"column":23,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":36},{"ruleId":"1228","severity":1,"message":"1384","line":108,"column":21,"nodeType":"1230","messageId":"1231","endLine":108,"endColumn":33},{"ruleId":"1452","severity":1,"message":"1453","line":244,"column":32,"nodeType":"1454","messageId":"1455","endLine":244,"endColumn":76,"fix":"1551"},{"ruleId":"1452","severity":1,"message":"1453","line":251,"column":32,"nodeType":"1454","messageId":"1455","endLine":251,"endColumn":73,"fix":"1552"},{"ruleId":"1452","severity":1,"message":"1453","line":259,"column":32,"nodeType":"1454","messageId":"1455","endLine":259,"endColumn":70,"fix":"1553"},{"ruleId":"1452","severity":1,"message":"1453","line":266,"column":32,"nodeType":"1454","messageId":"1455","endLine":266,"endColumn":69,"fix":"1554"},{"ruleId":"1452","severity":1,"message":"1453","line":273,"column":32,"nodeType":"1454","messageId":"1455","endLine":273,"endColumn":69,"fix":"1555"},{"ruleId":"1452","severity":1,"message":"1453","line":275,"column":32,"nodeType":"1454","messageId":"1455","endLine":275,"endColumn":62,"fix":"1556"},{"ruleId":"1256","severity":1,"message":"1462","line":277,"column":6,"nodeType":"1258","endLine":282,"endColumn":4,"suggestions":"1557"},{"ruleId":"1558","severity":1,"message":"1559","line":338,"column":5,"nodeType":"1560","messageId":"1561","endLine":343,"endColumn":6},{"ruleId":"1260","severity":1,"message":"1261","line":339,"column":28,"nodeType":"1262","messageId":"1263","endLine":339,"endColumn":30},{"ruleId":"1558","severity":1,"message":"1559","line":345,"column":5,"nodeType":"1560","messageId":"1561","endLine":348,"endColumn":6},{"ruleId":"1260","severity":1,"message":"1261","line":346,"column":28,"nodeType":"1262","messageId":"1263","endLine":346,"endColumn":30},{"ruleId":"1558","severity":1,"message":"1559","line":351,"column":5,"nodeType":"1560","messageId":"1561","endLine":354,"endColumn":40},{"ruleId":"1260","severity":1,"message":"1261","line":357,"column":47,"nodeType":"1262","messageId":"1263","endLine":357,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1562","line":3,"column":8,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1329","line":4,"column":38,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":4,"column":54,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":7,"column":16,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1284","line":8,"column":8,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1285","line":11,"column":10,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1286","line":14,"column":10,"nodeType":"1230","messageId":"1231","endLine":14,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1287","line":14,"column":28,"nodeType":"1230","messageId":"1231","endLine":14,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":22,"column":8,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1563","line":24,"column":10,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1564","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1333","line":103,"column":9,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1336","line":110,"column":10,"nodeType":"1230","messageId":"1231","endLine":110,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1565","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1566","line":116,"column":10,"nodeType":"1230","messageId":"1231","endLine":116,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1567","line":117,"column":10,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1290","line":120,"column":24,"nodeType":"1230","messageId":"1231","endLine":120,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1568","line":121,"column":29,"nodeType":"1230","messageId":"1231","endLine":121,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1339","line":191,"column":9,"nodeType":"1230","messageId":"1231","endLine":191,"endColumn":26},{"ruleId":"1256","severity":1,"message":"1569","line":260,"column":6,"nodeType":"1258","endLine":260,"endColumn":38,"suggestions":"1570"},{"ruleId":"1260","severity":1,"message":"1261","line":472,"column":47,"nodeType":"1262","messageId":"1263","endLine":472,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":16,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1344","line":99,"column":10,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1338","line":117,"column":9,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":19},{"ruleId":"1260","severity":1,"message":"1261","line":564,"column":47,"nodeType":"1262","messageId":"1263","endLine":564,"endColumn":49},{"ruleId":"1256","severity":1,"message":"1349","line":661,"column":6,"nodeType":"1258","endLine":661,"endColumn":27,"suggestions":"1571"},{"ruleId":"1256","severity":1,"message":"1349","line":683,"column":6,"nodeType":"1258","endLine":683,"endColumn":31,"suggestions":"1572"},{"ruleId":"1256","severity":1,"message":"1349","line":700,"column":6,"nodeType":"1258","endLine":700,"endColumn":29,"suggestions":"1573"},{"ruleId":"1256","severity":1,"message":"1349","line":712,"column":6,"nodeType":"1258","endLine":712,"endColumn":29,"suggestions":"1574"},{"ruleId":"1256","severity":1,"message":"1349","line":720,"column":6,"nodeType":"1258","endLine":720,"endColumn":33,"suggestions":"1575"},{"ruleId":"1228","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1388","line":6,"column":10,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1286","line":7,"column":10,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1356","line":9,"column":18,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1361","line":4,"column":46,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1330","line":4,"column":52,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":56},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":15,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1356","line":16,"column":18,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1384","line":110,"column":23,"nodeType":"1230","messageId":"1231","endLine":110,"endColumn":35},{"ruleId":"1256","severity":1,"message":"1394","line":240,"column":8,"nodeType":"1258","endLine":240,"endColumn":26,"suggestions":"1576"},{"ruleId":"1228","severity":1,"message":"1284","line":4,"column":8,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1356","line":16,"column":19,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1362","line":16,"column":32,"nodeType":"1230","messageId":"1231","endLine":16,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":17,"column":8,"nodeType":"1230","messageId":"1231","endLine":17,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1283","line":18,"column":8,"nodeType":"1230","messageId":"1231","endLine":18,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1401","line":107,"column":9,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1370","line":115,"column":10,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1371","line":115,"column":19,"nodeType":"1230","messageId":"1231","endLine":115,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1316","line":122,"column":10,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1317","line":122,"column":21,"nodeType":"1230","messageId":"1231","endLine":122,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1402","line":125,"column":10,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":22},{"ruleId":"1228","severity":1,"message":"1403","line":125,"column":24,"nodeType":"1230","messageId":"1231","endLine":125,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1404","line":126,"column":10,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1405","line":126,"column":25,"nodeType":"1230","messageId":"1231","endLine":126,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1406","line":134,"column":10,"nodeType":"1230","messageId":"1231","endLine":134,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1407","line":134,"column":29,"nodeType":"1230","messageId":"1231","endLine":134,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1408","line":135,"column":10,"nodeType":"1230","messageId":"1231","endLine":135,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1409","line":136,"column":10,"nodeType":"1230","messageId":"1231","endLine":136,"endColumn":35},{"ruleId":"1228","severity":1,"message":"1410","line":139,"column":10,"nodeType":"1230","messageId":"1231","endLine":139,"endColumn":30},{"ruleId":"1256","severity":1,"message":"1577","line":213,"column":6,"nodeType":"1258","endLine":213,"endColumn":8,"suggestions":"1578"},{"ruleId":"1228","severity":1,"message":"1342","line":226,"column":9,"nodeType":"1230","messageId":"1231","endLine":226,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1413","line":245,"column":9,"nodeType":"1230","messageId":"1231","endLine":245,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1343","line":289,"column":11,"nodeType":"1230","messageId":"1231","endLine":289,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1414","line":458,"column":9,"nodeType":"1230","messageId":"1231","endLine":458,"endColumn":32},{"ruleId":"1260","severity":1,"message":"1261","line":459,"column":24,"nodeType":"1262","messageId":"1263","endLine":459,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":462,"column":31,"nodeType":"1262","messageId":"1263","endLine":462,"endColumn":33},{"ruleId":"1228","severity":1,"message":"1518","line":493,"column":9,"nodeType":"1230","messageId":"1231","endLine":493,"endColumn":24},{"ruleId":"1260","severity":1,"message":"1261","line":554,"column":47,"nodeType":"1262","messageId":"1263","endLine":554,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1388","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1275","line":30,"column":8,"nodeType":"1230","messageId":"1231","endLine":30,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1249","line":58,"column":7,"nodeType":"1230","messageId":"1231","endLine":58,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1511","line":109,"column":9,"nodeType":"1230","messageId":"1231","endLine":109,"endColumn":18},{"ruleId":"1256","severity":1,"message":"1512","line":115,"column":6,"nodeType":"1258","endLine":115,"endColumn":8,"suggestions":"1579"},{"ruleId":"1228","severity":1,"message":"1388","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1321","line":29,"column":10,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1270","line":29,"column":28,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1416","line":29,"column":34,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1249","line":56,"column":7,"nodeType":"1230","messageId":"1231","endLine":56,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1511","line":102,"column":9,"nodeType":"1230","messageId":"1231","endLine":102,"endColumn":18},{"ruleId":"1256","severity":1,"message":"1512","line":108,"column":6,"nodeType":"1258","endLine":108,"endColumn":8,"suggestions":"1580"},{"ruleId":"1228","severity":1,"message":"1514","line":124,"column":9,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":2,"column":54,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1344","line":98,"column":10,"nodeType":"1230","messageId":"1231","endLine":98,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1469","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1470","line":105,"column":26,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":43},{"ruleId":"1256","severity":1,"message":"1515","line":152,"column":6,"nodeType":"1258","endLine":152,"endColumn":24,"suggestions":"1581"},{"ruleId":"1228","severity":1,"message":"1517","line":168,"column":12,"nodeType":"1230","messageId":"1231","endLine":168,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1518","line":260,"column":9,"nodeType":"1230","messageId":"1231","endLine":260,"endColumn":24},{"ruleId":"1260","severity":1,"message":"1261","line":312,"column":24,"nodeType":"1262","messageId":"1263","endLine":312,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":315,"column":31,"nodeType":"1262","messageId":"1263","endLine":315,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":347,"column":47,"nodeType":"1262","messageId":"1263","endLine":347,"endColumn":49},{"ruleId":"1260","severity":1,"message":"1261","line":354,"column":42,"nodeType":"1262","messageId":"1263","endLine":354,"endColumn":44},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":15,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1582","line":3,"column":35,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":44},{"ruleId":"1228","severity":1,"message":"1583","line":3,"column":46,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":54},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1326","line":9,"column":9,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1584","line":10,"column":9,"nodeType":"1230","messageId":"1231","endLine":10,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1585","line":13,"column":10,"nodeType":"1230","messageId":"1231","endLine":13,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1311","line":35,"column":9,"nodeType":"1230","messageId":"1231","endLine":35,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1586","line":36,"column":10,"nodeType":"1230","messageId":"1231","endLine":36,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1531","line":39,"column":9,"nodeType":"1230","messageId":"1231","endLine":39,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1518","line":42,"column":9,"nodeType":"1230","messageId":"1231","endLine":42,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1587","line":43,"column":11,"nodeType":"1230","messageId":"1231","endLine":43,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1588","line":44,"column":9,"nodeType":"1230","messageId":"1231","endLine":44,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1589","line":51,"column":9,"nodeType":"1230","messageId":"1231","endLine":51,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1590","line":53,"column":9,"nodeType":"1230","messageId":"1231","endLine":53,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1591","line":57,"column":9,"nodeType":"1230","messageId":"1231","endLine":57,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1329","line":3,"column":38,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1356","line":24,"column":19,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":30},{"ruleId":"1228","severity":1,"message":"1333","line":99,"column":9,"nodeType":"1230","messageId":"1231","endLine":99,"endColumn":16},{"ruleId":"1256","severity":1,"message":"1592","line":184,"column":6,"nodeType":"1258","endLine":184,"endColumn":24,"suggestions":"1593"},{"ruleId":"1260","severity":1,"message":"1261","line":471,"column":47,"nodeType":"1262","messageId":"1263","endLine":471,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":16,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1384","line":106,"column":21,"nodeType":"1230","messageId":"1231","endLine":106,"endColumn":33},{"ruleId":"1452","severity":1,"message":"1453","line":220,"column":32,"nodeType":"1454","messageId":"1455","endLine":220,"endColumn":76,"fix":"1594"},{"ruleId":"1452","severity":1,"message":"1453","line":227,"column":32,"nodeType":"1454","messageId":"1455","endLine":227,"endColumn":73,"fix":"1595"},{"ruleId":"1452","severity":1,"message":"1453","line":235,"column":32,"nodeType":"1454","messageId":"1455","endLine":235,"endColumn":70,"fix":"1596"},{"ruleId":"1452","severity":1,"message":"1453","line":242,"column":32,"nodeType":"1454","messageId":"1455","endLine":242,"endColumn":69,"fix":"1597"},{"ruleId":"1452","severity":1,"message":"1453","line":249,"column":32,"nodeType":"1454","messageId":"1455","endLine":249,"endColumn":69,"fix":"1598"},{"ruleId":"1452","severity":1,"message":"1453","line":251,"column":32,"nodeType":"1454","messageId":"1455","endLine":251,"endColumn":62,"fix":"1599"},{"ruleId":"1256","severity":1,"message":"1462","line":281,"column":6,"nodeType":"1258","endLine":286,"endColumn":4,"suggestions":"1600"},{"ruleId":"1260","severity":1,"message":"1261","line":342,"column":28,"nodeType":"1262","messageId":"1263","endLine":342,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":349,"column":28,"nodeType":"1262","messageId":"1263","endLine":349,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":359,"column":47,"nodeType":"1262","messageId":"1263","endLine":359,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1601","line":363,"column":11,"nodeType":"1230","messageId":"1231","endLine":363,"endColumn":21},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":54,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1333","line":92,"column":9,"nodeType":"1230","messageId":"1231","endLine":92,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1384","line":103,"column":21,"nodeType":"1230","messageId":"1231","endLine":103,"endColumn":33},{"ruleId":"1256","severity":1,"message":"1385","line":205,"column":6,"nodeType":"1258","endLine":205,"endColumn":24,"suggestions":"1602"},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1360","line":1,"column":29,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1308","line":2,"column":8,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":13},{"ruleId":"1228","severity":1,"message":"1382","line":4,"column":8,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1330","line":5,"column":52,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":56},{"ruleId":"1228","severity":1,"message":"1275","line":6,"column":13,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":19},{"ruleId":"1228","severity":1,"message":"1282","line":8,"column":15,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1251","line":95,"column":20,"nodeType":"1230","messageId":"1231","endLine":95,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1383","line":96,"column":12,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1366","line":96,"column":20,"nodeType":"1230","messageId":"1231","endLine":96,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":53,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":57},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":15,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1603","line":89,"column":12,"nodeType":"1230","messageId":"1231","endLine":89,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1604","line":89,"column":26,"nodeType":"1230","messageId":"1231","endLine":89,"endColumn":41},{"ruleId":"1228","severity":1,"message":"1338","line":117,"column":11,"nodeType":"1230","messageId":"1231","endLine":117,"endColumn":21},{"ruleId":"1260","severity":1,"message":"1261","line":573,"column":51,"nodeType":"1262","messageId":"1263","endLine":573,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1267","line":3,"column":20,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1388","line":6,"column":10,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1286","line":7,"column":10,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1356","line":9,"column":18,"nodeType":"1230","messageId":"1231","endLine":9,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":16,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1361","line":3,"column":46,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":51},{"ruleId":"1228","severity":1,"message":"1330","line":3,"column":52,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":56},{"ruleId":"1228","severity":1,"message":"1282","line":6,"column":15,"nodeType":"1230","messageId":"1231","endLine":6,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1605","line":12,"column":10,"nodeType":"1230","messageId":"1231","endLine":12,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1356","line":17,"column":18,"nodeType":"1230","messageId":"1231","endLine":17,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1384","line":107,"column":23,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":35},{"ruleId":"1256","severity":1,"message":"1394","line":195,"column":8,"nodeType":"1258","endLine":195,"endColumn":26,"suggestions":"1606"},{"ruleId":"1228","severity":1,"message":"1562","line":3,"column":8,"nodeType":"1230","messageId":"1231","endLine":3,"endColumn":17},{"ruleId":"1228","severity":1,"message":"1329","line":4,"column":38,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":45},{"ruleId":"1228","severity":1,"message":"1330","line":4,"column":54,"nodeType":"1230","messageId":"1231","endLine":4,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":7,"column":16,"nodeType":"1230","messageId":"1231","endLine":7,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1284","line":8,"column":8,"nodeType":"1230","messageId":"1231","endLine":8,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1285","line":11,"column":10,"nodeType":"1230","messageId":"1231","endLine":11,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1286","line":14,"column":10,"nodeType":"1230","messageId":"1231","endLine":14,"endColumn":14},{"ruleId":"1228","severity":1,"message":"1287","line":14,"column":28,"nodeType":"1230","messageId":"1231","endLine":14,"endColumn":39},{"ruleId":"1228","severity":1,"message":"1288","line":22,"column":8,"nodeType":"1230","messageId":"1231","endLine":22,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1563","line":24,"column":10,"nodeType":"1230","messageId":"1231","endLine":24,"endColumn":15},{"ruleId":"1228","severity":1,"message":"1333","line":97,"column":9,"nodeType":"1230","messageId":"1231","endLine":97,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1336","line":105,"column":10,"nodeType":"1230","messageId":"1231","endLine":105,"endColumn":16},{"ruleId":"1256","severity":1,"message":"1607","line":174,"column":6,"nodeType":"1258","endLine":174,"endColumn":24,"suggestions":"1608"},{"ruleId":"1228","severity":1,"message":"1609","line":303,"column":9,"nodeType":"1230","messageId":"1231","endLine":303,"endColumn":30},{"ruleId":"1260","severity":1,"message":"1261","line":356,"column":47,"nodeType":"1262","messageId":"1263","endLine":356,"endColumn":49},{"ruleId":"1228","severity":1,"message":"1324","line":1,"column":8,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1325","line":2,"column":8,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":23},{"ruleId":"1228","severity":1,"message":"1388","line":27,"column":10,"nodeType":"1230","messageId":"1231","endLine":27,"endColumn":20},{"ruleId":"1228","severity":1,"message":"1321","line":29,"column":10,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":18},{"ruleId":"1228","severity":1,"message":"1270","line":29,"column":28,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":32},{"ruleId":"1228","severity":1,"message":"1416","line":29,"column":34,"nodeType":"1230","messageId":"1231","endLine":29,"endColumn":38},{"ruleId":"1228","severity":1,"message":"1249","line":56,"column":7,"nodeType":"1230","messageId":"1231","endLine":56,"endColumn":16},{"ruleId":"1228","severity":1,"message":"1511","line":102,"column":9,"nodeType":"1230","messageId":"1231","endLine":102,"endColumn":18},{"ruleId":"1256","severity":1,"message":"1512","line":108,"column":6,"nodeType":"1258","endLine":108,"endColumn":8,"suggestions":"1610"},{"ruleId":"1228","severity":1,"message":"1514","line":124,"column":9,"nodeType":"1230","messageId":"1231","endLine":124,"endColumn":25},{"ruleId":"1228","severity":1,"message":"1245","line":1,"column":17,"nodeType":"1230","messageId":"1231","endLine":1,"endColumn":28},{"ruleId":"1228","severity":1,"message":"1330","line":2,"column":54,"nodeType":"1230","messageId":"1231","endLine":2,"endColumn":58},{"ruleId":"1228","severity":1,"message":"1282","line":5,"column":16,"nodeType":"1230","messageId":"1231","endLine":5,"endColumn":27},{"ruleId":"1228","severity":1,"message":"1611","line":100,"column":10,"nodeType":"1230","messageId":"1231","endLine":100,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1612","line":100,"column":28,"nodeType":"1230","messageId":"1231","endLine":100,"endColumn":47},{"ruleId":"1228","severity":1,"message":"1613","line":101,"column":10,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":29},{"ruleId":"1228","severity":1,"message":"1614","line":101,"column":31,"nodeType":"1230","messageId":"1231","endLine":101,"endColumn":53},{"ruleId":"1228","severity":1,"message":"1518","line":107,"column":9,"nodeType":"1230","messageId":"1231","endLine":107,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1469","line":114,"column":10,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":24},{"ruleId":"1228","severity":1,"message":"1470","line":114,"column":26,"nodeType":"1230","messageId":"1231","endLine":114,"endColumn":43},{"ruleId":"1256","severity":1,"message":"1515","line":155,"column":6,"nodeType":"1258","endLine":155,"endColumn":8,"suggestions":"1615"},{"ruleId":"1228","severity":1,"message":"1517","line":171,"column":12,"nodeType":"1230","messageId":"1231","endLine":171,"endColumn":26},{"ruleId":"1228","severity":1,"message":"1616","line":290,"column":13,"nodeType":"1230","messageId":"1231","endLine":290,"endColumn":14},{"ruleId":"1260","severity":1,"message":"1261","line":305,"column":24,"nodeType":"1262","messageId":"1263","endLine":305,"endColumn":26},{"ruleId":"1260","severity":1,"message":"1261","line":308,"column":31,"nodeType":"1262","messageId":"1263","endLine":308,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":340,"column":47,"nodeType":"1262","messageId":"1263","endLine":340,"endColumn":49},{"ruleId":"1260","severity":1,"message":"1261","line":347,"column":42,"nodeType":"1262","messageId":"1263","endLine":347,"endColumn":44},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1617"],"no-negated-in-lhs",["1618"],"'Router' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1619","text":"1620"},"'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'getAcount' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'Sticky' is defined but never used.","'ClientRefferalForm' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'patientObjAge' is assigned a value but never used.","'showBackButton' is assigned a value but never used.","'setShowBackButton' is assigned a value but never used.","'setPermission' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["1621"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'momentLocalizer' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'MdDashboard' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'Label' is defined but never used.","'moment' is defined but never used.","'permissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getServiceCode'. Either include it or remove the dependency array.",["1622"],"'getHospitalNumber' is assigned a value but never used.",{"range":"1623","text":"1620"},{"range":"1624","text":"1620"},"'CardContent' is defined but never used.","'Select' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'patient' is assigned a value but never used.","'setSerialNumber' is assigned a value but never used.","'otherTestKitUserInfoAvailable' is assigned a value but never used.","'setIsUserInformationAvailable' is assigned a value but never used.","'kitUserInformation' is assigned a value but never used.","'setKitUserInformation' is assigned a value but never used.","'serviceNeeded' is assigned a value but never used.","'hasConductedHIVST' is assigned a value but never used.","'setHasConductedHIVST' is assigned a value but never used.","'style' is assigned a value but never used.","'updateUserInformation' is assigned a value but never used.","'clearUserInformationList' is assigned a value but never used.","'response' is assigned a value but never used.","'setAge' is assigned a value but never used.","'handleDateOfBirthChange1' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'axios' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'classes' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'familyIndexList' is assigned a value but never used.","'setFamilyIndexList' is assigned a value but never used.","'handleAction' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'htsResult2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentObject'. Either include it or remove the dependency array.",["1625"],"'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.","'Spinner' is defined but never used.","'Form' is defined but never used.","'fontWeight' is defined but never used.","'getDoubleSkipForm' is defined but never used.","'history' is assigned a value but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'setClientCodeCheck' is assigned a value but never used.","'patientAge' is assigned a value but never used.","'facilityShortCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateClientCode', 'country', 'getStates', 'objValues', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1626"],"'checkPhoneNumberBasic' is assigned a value but never used.","'limit' is assigned a value but never used.","'hivTestDate' is assigned a value but never used.","'nextForm' is assigned a value but never used.","'setNextForm' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","React Hook useEffect has a missing dependency: 'objValues'. Either include it or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1627"],["1628"],["1629"],["1630"],["1631"],"'useHistory' is defined but never used.","'LabelRibbon' is defined but never used.","'targetGroupValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TargetGroupSetup' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1632"],"'useEffect' is defined but never used.","'Input' is defined but never used.","'Message' is defined but never used.","'Cookies' is defined but never used.","'kP' is assigned a value but never used.","'setKP' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'ageDisabled' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'temp' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","'hospitalNumStatus' is assigned a value but never used.","'setHospitalNumStatus' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'setTargetGroupValue' is assigned a value but never used.","'contentDropDown' is assigned a value but never used.","'Button' is defined but never used.","'errors' is assigned a value but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["1633"],{"range":"1634","text":"1620"},"'FaUserPlus' is defined but never used.","React Hook useEffect has a missing dependency: 'getListoFFamilyIndexInfo'. Either include it or remove the dependency array.",["1635"],"'setPredictionValue' is assigned a value but never used.","'setSavingPrediction' is assigned a value but never used.","'setSavingRsult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setKnowledgeAssessment(k => ...)' if you only need 'knowledgeAssessment' in the 'setKnowledgeAssessment' call.",["1636"],"no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","'getAllGenders' is defined but never used.","'patientObj' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'setFacilityName' is assigned a value but never used.","'allFacilities' is assigned a value but never used.","'setAllFacilities' is assigned a value but never used.","'receivingFacility' is assigned a value but never used.","'setReceivingFacility' is assigned a value but never used.","'selectedReceivingState' is assigned a value but never used.","'selectedReceivingFacility' is assigned a value but never used.","'selectedReceivingLga' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProvincesWithId', 'loadGenders', and 'props?.patientObj'. Either include them or remove the dependency array.",["1637"],"'handleInputChangeObject' is assigned a value but never used.","'handleDateOfBirthChange' is assigned a value but never used.","'Table' is defined but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'LabelSui' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'LiveHelp' is defined but never used.","'provinces' is assigned a value but never used.","'isClientCurrentlyOnHiv' is assigned a value but never used.","'setClientCurrentlyOnHiv' is assigned a value but never used.","'selectedFamilyIndex' is assigned a value but never used.","'setSelectedFamilyIndex' is assigned a value but never used.","'isWillingToHaveChildrenTested' is assigned a value but never used.","'setIsWillingToHaveChildrenTested' is assigned a value but never used.","'setStateInfo' is assigned a value but never used.","'setLgaInfo' is assigned a value but never used.","'arrayFamilyIndexRequestDto' is assigned a value but never used.","'setArrayFamilyIndexRequestDto' is assigned a value but never used.","'arrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'setArrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'addIndexTracker' is assigned a value but never used.","'addIndexTracker2' is assigned a value but never used.","'selectedState' is assigned a value but never used.","'selectedFacility' is assigned a value but never used.","'selectedLga' is assigned a value but never used.","'loadOtherForm' is assigned a value but never used.","'generateIndexClientId' is assigned a value but never used.","'indexClientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props.patientObj'. Either include them or remove the dependency array.",["1638"],"'getProvinces' is assigned a value but never used.","'handleFamilyRelationshipChange' is assigned a value but never used.","'convertCodeToDisplay' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-computed-key","Unnecessarily computed property [\"rencencyInterpretation\"] found.","Property","unnecessarilyComputedProperty",{"range":"1639","text":"1640"},{"range":"1641","text":"1640"},{"range":"1642","text":"1640"},{"range":"1643","text":"1640"},{"range":"1644","text":"1640"},{"range":"1645","text":"1640"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["1646"],"'Badge' is defined but never used.","'PersonIcon' is defined but never used.","'elicitedCount' is assigned a value but never used.","'setElicitedCount' is assigned a value but never used.","'setIsClientCurrentlyOnHiv' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'getPNSInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPartnerId', 'getStates', 'htsClientInformation', 'objValues', 'props?.basicInfo?.personResponseDto?.address?.address', and 'props.organizationInfo'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1647"],"'getAllRecordByHTSClientId' is assigned a value but never used.","'viewPnsInfo' is assigned a value but never used.","'handleItemClickPage' is assigned a value but never used.","'ModeEditIcon' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'validateAddFamilyINdexDTO' is assigned a value but never used.","'updateFamilyIndexDTO' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFamilyIndexRequestList', 'getListOfFamilyTracker', 'getListoFFamilyIndexInfo', 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', 'props.patientObj', and 'props.selectedRow'. Either include them or remove the dependency array. If 'setFamilyIndexRequestDto' needs the current value of 'props.selectedRow', you can also switch to useReducer instead of useState and read 'props.selectedRow' in the reducer.",["1648"],"'hideFamilyIndex' is assigned a value but never used.","'selectAMember' is assigned a value but never used.",{"range":"1649","text":"1620"},"'lastVisitCount' is assigned a value but never used.","'checkModality' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["1650"],"'PNSList' is defined but never used.","'RefferalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'viewReferralInfo'. Either include it or remove the dependency array.",["1651"],"Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ageCondition' is assigned a value but never used.","'pmctctModalityCondition' is assigned a value but never used.","'HivStatuscondition' is assigned a value but never used.","'latestNextForm' is assigned a value but never used.","'lengthOfAuthForm' is assigned a value but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["1652"],"'handleIEditIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1653"],"'getProvincesId' is defined but never used.","'handleItemClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchHivstHistory'. Either include it or remove the dependency array.",["1654"],"'ReferralUnit' is defined but never used.","'set' is defined but never used.","'useState' is defined but never used.",{"range":"1655","text":"1620"},"'setSelectedReceivingFacility' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStateByCountryId', 'loadGenders', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1656"],"React Hook useEffect has a missing dependency: 'props.row.row.id'. Either include it or remove the dependency array.",["1657"],"'postPayload' is assigned a value but never used.","'toggle' is assigned a value but never used.","'facilities1' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'setSelectedLga' is assigned a value but never used.",["1658"],"'handleInputChangeLocation' is assigned a value but never used.","'serviceMapping' is assigned a value but never used.",["1659"],"'EditIcon' is defined but never used.","'userInfoList' is assigned a value but never used.","'AddIndexContact' is defined but never used.","'setHivTestDate' is assigned a value but never used.","'partnerId' is assigned a value but never used.","Duplicate key 'numberOfPartnerIdentifiedFromClientIndex'.","'getPartnerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStates', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'viewPnIsnfo'. Either include them or remove the dependency array.",["1660"],["1661"],"'showRiskAssessment' is assigned a value but never used.",{"range":"1662","text":"1640"},{"range":"1663","text":"1640"},{"range":"1664","text":"1640"},{"range":"1665","text":"1640"},{"range":"1666","text":"1640"},{"range":"1667","text":"1640"},["1668"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'MatButton' is defined but never used.","'Modal' is defined but never used.","'error' is defined but never used.","'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","'clientCodeCheck' is assigned a value but never used.","'setDisableModality' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateClientCode'. Either include it or remove the dependency array.",["1669"],["1670"],["1671"],["1672"],["1673"],["1674"],["1675"],"React Hook useEffect has missing dependencies: 'loadGenders' and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1676"],["1677"],["1678"],["1679"],"'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["1680"],{"range":"1681","text":"1640"},{"range":"1682","text":"1640"},{"range":"1683","text":"1640"},{"range":"1684","text":"1640"},{"range":"1685","text":"1640"},{"range":"1686","text":"1640"},["1687"],"'latestForm' is assigned a value but never used.",["1688"],"'resultStatus' is assigned a value but never used.","'setResultStatus' is assigned a value but never used.","'getPregnantCodeSet' is defined but never used.",["1689"],"React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["1690"],"'handleClientCodeCheck' is assigned a value but never used.",["1691"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["1692"],"'m' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[144,158],"token",{"desc":"1693","fix":"1694"},{"desc":"1695","fix":"1696"},[152,166],[152,166],{"desc":"1697","fix":"1698"},{"desc":"1699","fix":"1700"},{"desc":"1701","fix":"1702"},{"desc":"1703","fix":"1704"},{"desc":"1705","fix":"1706"},{"desc":"1707","fix":"1708"},{"desc":"1709","fix":"1710"},{"desc":"1711","fix":"1712"},{"desc":"1713","fix":"1714"},[187,201],{"desc":"1715","fix":"1716"},{"desc":"1717","fix":"1718"},{"desc":"1719","fix":"1720"},{"desc":"1721","fix":"1722"},[7700,7726],"\"rencencyInterpretation\"",[7983,8009],[8323,8349],[8596,8622],[8868,8894],[8954,8980],{"desc":"1723","fix":"1724"},{"desc":"1725","fix":"1726"},{"desc":"1727","fix":"1728"},[147,161],{"desc":"1729","fix":"1730"},{"desc":"1731","fix":"1732"},{"desc":"1733","fix":"1734"},{"desc":"1735","fix":"1736"},{"desc":"1737","fix":"1738"},[181,195],{"desc":"1739","fix":"1740"},{"desc":"1741","fix":"1742"},{"desc":"1741","fix":"1743"},{"desc":"1733","fix":"1744"},{"desc":"1745","fix":"1746"},{"desc":"1713","fix":"1747"},[7715,7741],[7998,8024],[8338,8364],[8611,8637],[8883,8909],[8969,8995],{"desc":"1723","fix":"1748"},{"desc":"1749","fix":"1750"},{"desc":"1701","fix":"1751"},{"desc":"1703","fix":"1752"},{"desc":"1705","fix":"1753"},{"desc":"1707","fix":"1754"},{"desc":"1709","fix":"1755"},{"desc":"1717","fix":"1756"},{"desc":"1757","fix":"1758"},{"desc":"1733","fix":"1759"},{"desc":"1733","fix":"1760"},{"desc":"1735","fix":"1761"},{"desc":"1762","fix":"1763"},[6950,6976],[7233,7259],[7573,7599],[7846,7872],[8118,8144],[8204,8230],{"desc":"1723","fix":"1764"},{"desc":"1765","fix":"1766"},{"desc":"1717","fix":"1767"},{"desc":"1768","fix":"1769"},{"desc":"1733","fix":"1770"},{"desc":"1771","fix":"1772"},"Update the dependencies array to be: [locationState]",{"range":"1773","text":"1774"},"Update the dependencies array to be: [getServiceCode]",{"range":"1775","text":"1776"},"Update the dependencies array to be: [PatientCurrentObject]",{"range":"1777","text":"1778"},"Update the dependencies array to be: [objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",{"range":"1779","text":"1780"},"Update the dependencies array to be: [initialTest1.result, objValues]",{"range":"1781","text":"1782"},"Update the dependencies array to be: [confirmatoryTest.result, objValues]",{"range":"1783","text":"1784"},"Update the dependencies array to be: [objValues, tieBreakerTest.result]",{"range":"1785","text":"1786"},"Update the dependencies array to be: [initialTest12.result2, objValues]",{"range":"1787","text":"1788"},"Update the dependencies array to be: [confirmatoryTest2.result2, objValues]",{"range":"1789","text":"1790"},"Update the dependencies array to be: [TargetGroupSetup, objValues.age, props]",{"range":"1791","text":"1792"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"1793","text":"1794"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, props.patientObj]",{"range":"1795","text":"1796"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"1797","text":"1798"},"Update the dependencies array to be: [getProvincesWithId, loadGenders, props?.patientObj]",{"range":"1799","text":"1800"},"Update the dependencies array to be: [loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1801","text":"1802"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"1803","text":"1804"},"Update the dependencies array to be: [getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1805","text":"1806"},"Update the dependencies array to be: [getFamilyIndexRequestList, getListOfFamilyTracker, getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj, props.selectedRow]",{"range":"1807","text":"1808"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"1809","text":"1810"},"Update the dependencies array to be: [viewReferralInfo]",{"range":"1811","text":"1812"},"Update the dependencies array to be: [patients]",{"range":"1813","text":"1814"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"1815","text":"1816"},"Update the dependencies array to be: [FetchHivstHistory, props.patientObj]",{"range":"1817","text":"1818"},"Update the dependencies array to be: [getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1819","text":"1820"},"Update the dependencies array to be: [props.row.row.id]",{"range":"1821","text":"1822"},{"range":"1823","text":"1822"},{"range":"1824","text":"1814"},"Update the dependencies array to be: [getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",{"range":"1825","text":"1826"},{"range":"1827","text":"1794"},{"range":"1828","text":"1804"},"Update the dependencies array to be: [props.patientObj, facilityCode, CreateClientCode]",{"range":"1829","text":"1830"},{"range":"1831","text":"1782"},{"range":"1832","text":"1784"},{"range":"1833","text":"1786"},{"range":"1834","text":"1788"},{"range":"1835","text":"1790"},{"range":"1836","text":"1798"},"Update the dependencies array to be: [loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1837","text":"1838"},{"range":"1839","text":"1814"},{"range":"1840","text":"1814"},{"range":"1841","text":"1816"},"Update the dependencies array to be: [props, props.patientObj]",{"range":"1842","text":"1843"},{"range":"1844","text":"1804"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"1845","text":"1846"},{"range":"1847","text":"1798"},"Update the dependencies array to be: [props.activePage.activeObject, props?.patientObj]",{"range":"1848","text":"1849"},{"range":"1850","text":"1814"},"Update the dependencies array to be: [getStates]",{"range":"1851","text":"1852"},[8290,8292],"[locationState]",[4362,4364],"[getServiceCode]",[2523,2525],"[PatientCurrentObject]",[14149,14213],"[objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",[20431,20452],"[initialTest1.result, objValues]",[20950,20975],"[confirmatoryTest.result, objValues]",[21404,21427],"[objValues, tieBreakerTest.result]",[21667,21690],"[initialTest12.result2, objValues]",[21859,21886],"[confirmatoryTest2.result2, objValues]",[5502,5517],"[TargetGroupSetup, objValues.age, props]",[5519,5561],"[props.patientObj, postTest.hivTestResult, postTest]",[5435,5453],"[getListoFFamilyIndexInfo, props.patientObj]",[7776,7794],"[knowledgeAssessment, props.patientObj, riskAssessment]",[7092,7094],"[getProvincesWithId, loadGenders, props?.patientObj]",[15935,15937],"[loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[9788,9897],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[11057,11075],"[getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[24748,24750],"[getFamilyIndexRequestList, getListOfFamilyTracker, getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj, props.selectedRow]",[2205,2241],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[5627,5629],"[viewReferralInfo]",[3841,3843],"[patients]",[4161,4179],"[getStates, props.patientObj]",[3635,3653],"[FetchHivstHistory, props.patientObj]",[7618,7620],"[getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[12594,12596],"[props.row.row.id]",[6538,6540],[3808,3810],[10996,11014],"[getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",[6216,6258],[9015,9124],[8487,8519],"[props.patientObj, facilityCode, CreateClientCode]",[18990,19011],[19509,19534],[19963,19986],[20226,20249],[20418,20445],[8198,8216],[6747,6749],"[loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[4064,4066],[3841,3843],[4161,4179],[5585,5603],"[props, props.patientObj]",[9071,9180],[7023,7041],"[postTest, props.patientObj]",[7612,7630],[5135,5153],"[props.activePage.activeObject, props?.patientObj]",[3841,3843],[4331,4333],"[getStates]"]