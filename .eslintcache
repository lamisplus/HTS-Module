[{"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\index.js":"1","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\App.js":"2","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"9","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"10","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"11","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"12","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"13","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"14","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"15","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"16","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"17","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"18","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"19","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\api.js":"20","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"21","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"22","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\History\\History.js":"23","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"24","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"25","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"26","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"27","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"28","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"29","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"30","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"31","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"32","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"33","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"34","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"35","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"36","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"37","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"38","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"39","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"40","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"41","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"42","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"43","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"44"},{"size":739,"mtime":1663331272659,"results":"45","hashOfConfig":"46"},{"size":1311,"mtime":1663331272658,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1663331279004,"results":"48","hashOfConfig":"46"},{"size":9235,"mtime":1663331273552,"results":"49","hashOfConfig":"46"},{"size":3056,"mtime":1663331273553,"results":"50","hashOfConfig":"46"},{"size":2228,"mtime":1663331278877,"results":"51","hashOfConfig":"46"},{"size":3540,"mtime":1664479792424,"results":"52","hashOfConfig":"46"},{"size":17892,"mtime":1667318733502,"results":"53","hashOfConfig":"46"},{"size":9930,"mtime":1666728764197,"results":"54","hashOfConfig":"46"},{"size":1950,"mtime":1663331278909,"results":"55","hashOfConfig":"46"},{"size":12827,"mtime":1666347372602,"results":"56","hashOfConfig":"46"},{"size":2656,"mtime":1664479792392,"results":"57","hashOfConfig":"46"},{"size":7977,"mtime":1666728764195,"results":"58","hashOfConfig":"46"},{"size":10759,"mtime":1664479792427,"results":"59","hashOfConfig":"46"},{"size":66125,"mtime":1667318733447,"results":"60","hashOfConfig":"46"},{"size":29274,"mtime":1667318733462,"results":"61","hashOfConfig":"46"},{"size":78749,"mtime":1667318733466,"results":"62","hashOfConfig":"46"},{"size":31812,"mtime":1667318733458,"results":"63","hashOfConfig":"46"},{"size":29970,"mtime":1667318733486,"results":"64","hashOfConfig":"46"},{"size":422,"mtime":1667318733358,"results":"65","hashOfConfig":"46"},{"size":33531,"mtime":1666347372600,"results":"66","hashOfConfig":"46"},{"size":8637,"mtime":1667318733451,"results":"67","hashOfConfig":"46"},{"size":7616,"mtime":1664479792391,"results":"68","hashOfConfig":"46"},{"size":17019,"mtime":1667318733361,"results":"69","hashOfConfig":"46"},{"size":12827,"mtime":1666347372613,"results":"70","hashOfConfig":"46"},{"size":30334,"mtime":1666347372617,"results":"71","hashOfConfig":"46"},{"size":29157,"mtime":1666347372615,"results":"72","hashOfConfig":"46"},{"size":1903,"mtime":1663331278938,"results":"73","hashOfConfig":"46"},{"size":63817,"mtime":1667318733497,"results":"74","hashOfConfig":"46"},{"size":33125,"mtime":1666728764191,"results":"75","hashOfConfig":"46"},{"size":30203,"mtime":1666347372612,"results":"76","hashOfConfig":"46"},{"size":29101,"mtime":1667318733405,"results":"77","hashOfConfig":"46"},{"size":12827,"mtime":1666347372590,"results":"78","hashOfConfig":"46"},{"size":30239,"mtime":1667318733372,"results":"79","hashOfConfig":"46"},{"size":30049,"mtime":1667318733425,"results":"80","hashOfConfig":"46"},{"size":1845,"mtime":1667318733368,"results":"81","hashOfConfig":"46"},{"size":33482,"mtime":1667318733366,"results":"82","hashOfConfig":"46"},{"size":8637,"mtime":1667318733371,"results":"83","hashOfConfig":"46"},{"size":8637,"mtime":1666347372611,"results":"84","hashOfConfig":"46"},{"size":33445,"mtime":1666347372610,"results":"85","hashOfConfig":"46"},{"size":77824,"mtime":1667318733419,"results":"86","hashOfConfig":"46"},{"size":34552,"mtime":1667318733363,"results":"87","hashOfConfig":"46"},{"size":51405,"mtime":1667318733492,"results":"88","hashOfConfig":"46"},{"size":44717,"mtime":1667318733431,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"pbkafo",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":7,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\index.js",["197"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\App.js",["198"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport RegisterPatient from './main/webapp/jsx/components/Patient/RegisterPatient';\r\n//import RegisterPatientEnrollment from './main/webapp/jsx/components/Patient/RegisterPatientEnrollment';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n        <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>          \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatient />\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Home.js",["199","200","201","202","203"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\n//import CheckedInPatients from './Patient/CheckedInPatients'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>HTS</h4></li>\r\n\t\t\t</ol>\r\n      \r\n\t\t  </div>\r\n      \r\n      <Row>       \r\n        <Col xl={12}>\r\n        \r\n        <Card style={divStyle}>\r\n        <Link to={\"register-patient\"}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"mt-2 mr-3 mb-0 float-end\"\r\n                  startIcon={<FaUserPlus size=\"10\"/>}\r\n                  style={{backgroundColor:'#014d88',}}\r\n              >\r\n                  <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n              </Button>\r\n        </Link>            \r\n          <Card.Body>          \r\n          <Dashboard />\r\n          </Card.Body>\r\n        </Card>\r\n          {/* \r\n\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  {/* <Tab eventKey=\"checked-in\" title=\"Checked In Patients\">                   \r\n                    <CheckedInPatients />\r\n                  </Tab> \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    \r\n                  </Tab>                    \r\n                </Tabs>\r\n                \r\n              </div>\r\n             */}\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["204","205"],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport PatientHtsEnrollment from './PatientHtsEnrollment'\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [activePage, setActivePage] = useState({activePage:\"home\", activeObject:{}, actionType:\"\"});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const clientCode =history.location && history.location.state ? history.location.state.clientCode : \"\"\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m;\r\n              }\r\n              return age_now;\r\n  };\r\n  const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HTS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} clientCode={clientCode}/>\r\n            {activePage.activePage===\"home\" && (\r\n              <PatientHistory patientObj={patientObj} activePage={activePage} setActivePage={setActivePage} clientCode={clientCode} patientAge={patientAge}/>\r\n            )}\r\n            {activePage.activePage===\"view\" && (\r\n              <PatientHtsEnrollment patientObj={patientObj} activePage={activePage} setActivePage={setActivePage} clientCode={clientCode} patientAge={patientAge}/>\r\n            )}\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["206","207","208","209","210","211","212","213"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["214","215","216","217","218"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}hts/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"HTS Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            isLoading={loading}\r\n            data={ patientList.map((row) => ({\r\n                //Id: manager.id,\r\n                name:row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                hospital_number: getHospitalNumber(row.personResponseDto.identifier),\r\n                clientCode: row.clientCode,\r\n                //phone_number:  row.phone,\r\n                gender:row && row.personResponseDto.sex ? row.personResponseDto.sex : \"\",\r\n                age: (row.personResponseDto.dateOfBirth === 0 ||\r\n                    row.personResponseDto.dateOfBirth === undefined ||\r\n                    row.personResponseDto.dateOfBirth === null ||\r\n                    row.personResponseDto.dateOfBirth === \"\" )\r\n                        ? 0\r\n                        : calculate_age(moment(row.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                \r\n                count: (<Label color=\"blue\" size=\"mini\">{row.htsCount}</Label>),\r\n                \r\n                actions:\r\n        \r\n                <div>\r\n                    {row.htsCount >=0 && (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: \"/patient-history\",\r\n                                state: {patientObject: row, patientObj: row.personResponseDto, clientCode:row.clientCode}\r\n                            }}\r\n                            \r\n                        >\r\n                            <ButtonGroup variant=\"contained\" \r\n                                aria-label=\"split button\"\r\n                                style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                size=\"large\"\r\n                            >\r\n                            <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <MdDashboard />\r\n                            </Button>\r\n                            <Button \r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                            </Button>\r\n                            \r\n                            </ButtonGroup>\r\n                        </Link> \r\n                    </>\r\n                    )} \r\n                                    \r\n                </div>\r\n                \r\n                }))}\r\n        \r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["219","220","221","222","223","224"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                {/* <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                 */}\r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["225","226","227","228","229","230","231","232","233","234"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["235","236","237","238"],"import React, {useState, Fragment, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport History from './History';\r\nimport ContineousRegistrationTesting from './../Patient/ContineousRegistrationTesting'\r\n//import CheckedInPatients from './Patient/CheckedInPatients'\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = (props) => {\r\n    const [patientList, setPatientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    const [key, setKey] = useState('home');\r\n    useEffect(() => {\r\n        patients()\r\n      }, [props.patientObj]);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/persons/${patientId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data)\r\n                setPatientList(response.data.htsClientDtoList);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n\r\n  return (\r\n    <Fragment>  \r\n    <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                <Tab eventKey=\"home\" title=\"HTS HISTORY\">                   \r\n                    <History patientObj={props.patientObj} activePage={props.activePage} setActivePage={props.setActivePage} clientCode={props.clientCode} patientAge={props.patientAge}/>\r\n                </Tab> \r\n                <Tab eventKey=\"new\" title=\"NEW HTS\">                   \r\n                    <ContineousRegistrationTesting patientObj={props.patientObj} activePage={props.activePage} setActivePage={props.setActivePage} clientCode={props.clientCode} patientAge={props.patientAge}/>\r\n                </Tab>\r\n                                     \r\n                </Tabs>\r\n                \r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["239","240","241","242","243","244","245"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n\r\n  const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n  }, [props.patientObj]);\r\n\r\n\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              //setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                  \r\n                    <Col md={12}>\r\n                      \r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"}  >\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\"float-end ms-2 mr-2 mt-2\"\r\n                          //startIcon={<FaUserPlus size=\"10\"/>}\r\n                          style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                        >\r\n                          <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                    </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID :<b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Client Code : <b style={{color:'#0B72AA'}}>{props && props.clientCode ? props.clientCode : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                     \r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n               \r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n     \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["246","247","248","249"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { Button} from 'semantic-ui-react'\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link} from \"react-router-dom\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport BasicInfo from './NewRegistrationEnrollement/BasicInfo'\r\nimport PreTest from './NewRegistrationEnrollement/PreTest'\r\nimport HivTestResult from './NewRegistrationEnrollement/HivTestResult'\r\nimport IndexingContactTracing from './NewRegistrationEnrollement/Elicitation/Index'\r\nimport Others from './NewRegistrationEnrollement/Others'\r\nimport PostTest from './NewRegistrationEnrollement/PostTest'\r\nimport RecencyTesting from './NewRegistrationEnrollement/RecencyTesting'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const classes = useStyles();\r\n    const [activeItem, setactiveItem] = useState('basic');\r\n    const [completed, setCompleted] = useState([]);\r\n    const [patientObj, setPatientObj] = useState(\"\");\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n    useEffect(() => { \r\n        const patientNewObj= props.activePage && props.activePage.activeObject ? props.activePage.activeObject : {}\r\n        if(patientNewObj){\r\n            setPatientObj(patientNewObj)           \r\n        }\r\n    }, [props.activePage]);\r\n    const LoadViewPage =(row, actionType)=>{\r\n        props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                    <h3>HIV COUNSELLING AND TESTING   -  {patientObj && patientObj.dateVisit ? patientObj.dateVisit :\"\"}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end\"\r\n                                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                                style={{backgroundColor:'#014d88', }}\r\n                                onClick={LoadViewPage}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </Button>\r\n\r\n                    </h3>\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'basic'}\r\n                                onClick={()=>handleItemClick('basic')}\r\n                                style={{backgroundColor:activeItem === 'basic' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Basic Information</span>\r\n                                {completed.includes('basic') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                            </Menu.Item>\r\n                            {props.patientAge>14 && (\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'pre-test-counsel'}\r\n                                onClick={()=>handleItemClick('pre-test-counsel')}\r\n                                style={{backgroundColor:activeItem === 'pre-test-counsel' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                            >\r\n                            {/* <Label>2</Label> */}\r\n                            <span style={{color:'#fff'}}>Pre Test Counseling</span>\r\n                            {completed.includes('pre-test-counsel') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </Menu.Item>\r\n                            )}\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'hiv-test'}\r\n                                onClick={()=>handleItemClick('hiv-test')}\r\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form</span>\r\n                                {completed.includes('hiv-test') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'post-test'}\r\n                                onClick={()=>handleItemClick('post-test')}\r\n                                style={{backgroundColor:activeItem === 'post-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'post-test' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Post Test Counseling</span>\r\n                            {completed.includes('post-test') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'recency-testing'}\r\n                                onClick={()=>handleItemClick('recency-testing')}\r\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'recency-testing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>HIV Recency Testing</span>\r\n                            {completed.includes('recency-testing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'indexing'}\r\n                                onClick={()=>handleItemClick('indexing')}\r\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'indexing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation</span>\r\n                            {completed.includes('indexing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </Menu.Item>\r\n                           \r\n                        </Menu>\r\n                        </div>\r\n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\r\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            \r\n                        </div>                                   \r\n                    </div>\r\n\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["267","268","269","270"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["307","308","309","310","311"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\api.js",[],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["328","329","330","331","332","333","334","335","336","337"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n    }, []);\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();     \r\n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\");\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={objValues.middleName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={objValues.lastName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number</Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Alternative Phone Number</Label>\r\n                                <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"altPhoneNumber\"\r\n                                        id=\"altPhoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.altPhoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={objValues.address}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Hang-out spots</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hangOutSpots\"\r\n                                    id=\"hangOutSpots\"\r\n                                    value={objValues.hangOutSpots}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship to Index Client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relativeToIndexClient\"\r\n                                        id=\"relativeToIndexClient\"\r\n                                        value={objValues.relativeToIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you currently live with this partner? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyLiveWithPartner\"\r\n                                        id=\"currentlyLiveWithPartner\"\r\n                                        value={objValues.currentlyLiveWithPartner}\r\n                                        onChange={handleInputChange}        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value={\"true\"}>Yes</option>\r\n                                        <option value={\"false\"}>No</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerTestedPositive\"\r\n                                        id=\"partnerTestedPositive\"\r\n                                        value={objValues.partnerTestedPositive}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"physicalHurt\"\r\n                                        id=\"physicalHurt\"\r\n                                        value={objValues.physicalHurt}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"threatenToHurt\"\r\n                                        id=\"threatenToHurt\"\r\n                                        value={objValues.threatenToHurt}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexuallyUncomfortable\"\r\n                                        id=\"sexuallyUncomfortable\"\r\n                                        value={objValues.sexuallyUncomfortable}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Notification Method selected*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"notificationMethod\"\r\n                                        id=\"notificationMethod\"\r\n                                        value={objValues.notificationMethod}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {notificationContact.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"datePartnerCameForTesting\"\r\n                                    id=\"datePartnerCameForTesting\"\r\n                                    value={objValues.datePartnerCameForTesting}\r\n                                    onChange={handleInputChange}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["338","339","340","341","342","343","344","345"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\History\\History.js",["346","347","348","349"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [patientList, setPatientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    \r\n    useEffect(() => {\r\n        patients()\r\n      }, [props.patientObj]);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/persons/${patientId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data)\r\n                setPatientList(response.data.htsClientDtoList);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const LoadViewPage =(row, actionType)=>{\r\n        props.setActivePage({...props.activePage, activePage:\"view\", activeObject:row, actionType:actionType})\r\n    }\r\n    \r\n\r\n  return (\r\n    <div> \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"HTS History \"\r\n              columns={[\r\n              { title: \"Date\", field: \"date\" },\r\n              {title: \"Pre Test Counseling\",field: \"pre\",},\r\n                { title: \"Recency Test\", field: \"rencency\" },\r\n                { title: \"Post Test\", field: \"post\" },\r\n                { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },  \r\n                { title: \"Request & Result\", field: \"requestResult\", filtering: false },       \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                date: row.dateVisit,\r\n                pre: row.knowledgeAssessment? \"Filled\":\"Not Filled \",\r\n                requestResult:row.confirmatoryTest ? \"Filled\":\"Not Filled \",\r\n                rencency: row.knowledgeAssessment ? \"Filled\":\"Not Filled \",\r\n                post:row.postTestCounselingKnowledgeAssessment ? \"Filled\":\"Not Filled \",\r\n                indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n                actions:\r\n            \r\n                    <div>\r\n                    <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                              <Dropdown.Item \r\n                                onClick={()=>LoadViewPage(row, 'view')}\r\n                                > <Icon name='eye' />\r\n                                View  \r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                               onClick={()=>LoadViewPage(row, 'update')}\r\n                                ><Icon name='edit' />Edit</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["350","351","352","353","354","355","356","357","358"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["359","360","361","362","363","364","365","366","367","368"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            recency: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [recency, setRecency]= useState(\r\n        {\r\n            optOutRTRI:\"\", \r\n            optOutRTRITestName:\"\", \r\n            optOutRTRITestDate:\"\", \r\n            rencencyId:\"\",  \r\n            controlLine:\"\",  \r\n            verififcationLine:\"\", \r\n            longTermLine:\"\",  \r\n            rencencyInterpretation:\"\", \r\n            hasViralLoad:\"\",\r\n            sampleCollectedDate:\"\",\r\n            sampleReferanceNumber:\"\",\r\n            dateSampleSentToPCRLab:\"\",\r\n            sampleTestDate:\"\", \r\n            receivingPcrLab:\"\",\r\n            sampleType:\"\", \r\n            viralLoadResultClassification:\"\",\r\n            recencyResult:\"\", \r\n            finalRecencyResult:\"\", \r\n        }\r\n    )\r\n    const handleInputChangeRecency = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})         \r\n        if(e.target.name ==='viralLoadResultClassification'){\r\n            if(e.target.value ==='>=1000'){\r\n                recency.finalRecencyResult='RITA Recent'\r\n            \r\n            }else if(e.target.value ==='<1000') {\r\n                recency.finalRecencyResult='RITA Long term'\r\n            }else if(e.target.value ==='Failed run') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n            }else if(e.target.value ==='Invalid viral load result') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n            }else{\r\n\r\n            }\r\n        } \r\n        setRecency ({...recency,  [e.target.name]: e.target.value});\r\n          \r\n    }\r\n\r\n    useEffect(() => { \r\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Long Term\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \r\n            //console.log(\"Long Term\")\r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Recent\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\r\n            setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n            \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Negative\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\r\n            //console.log(\"Negative\")\r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            //console.log(\"Invalid\")\r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            //console.log(\"Invalid\")\r\n        }else{\r\n            //console.log(\"empty\")\r\n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\r\n        }\r\n\r\n\r\n    }, [recency.longTermLine,recency.verififcationLine, recency.controlLine]);\r\n    useEffect(() => { \r\n        setRecency ({recency, ...props.patientObj.recency}) \r\n        \r\n\r\n    }, [ props.patientObj]);\r\n   \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            {objValues.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = objValues.sampleReferanceNumber ? \"\" : \"This field is required.\")}\r\n            {objValues.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = objValues.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n            {objValues.sampleCollectedDate!=='' && (temp.sampleType = objValues.sampleType ? \"\" : \"This field is required.\")}\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            handleItemClick('indexing', 'recency-testing' )\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n        \r\n        if(validate()){\r\n            objValues.htsClientId= clientId\r\n            objValues.recency= recency\r\n            objValues.personId= patientID\r\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('indexing', 'recency-testing' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        } \r\n        }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>               \r\n                <h2>RECENCY FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\r\n                        </LabelRibbon>\r\n                        <br/><br/><br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Opt Out of RTRI?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRI\"\r\n                                        id=\"optOutRTRI\"\r\n                                        value={recency.optOutRTRI}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-8\"></div>\r\n                            {recency.optOutRTRI==='false' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Name *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRITestName\"\r\n                                        id=\"optOutRTRITestName\"\r\n                                        value={recency.optOutRTRITestName}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Asante\">Asante</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Date *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"optOutRTRITestDate\"\r\n                                        id=\"optOutRTRITestDate\"\r\n                                        value={recency.optOutRTRITestDate}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency ID *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyId\"\r\n                                        id=\"rencencyId\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyId}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                        \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Control Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"controlLine\"\r\n                                        id=\"controlLine\"\r\n                                        value={recency.controlLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Verification Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"verififcationLine\"\r\n                                        id=\"verififcationLine\"\r\n                                        value={recency.verififcationLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Long Term Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"longTermLine\"\r\n                                        id=\"longTermLine\"\r\n                                        value={recency.longTermLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency Interpretation *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyInterpretation\"\r\n                                        id=\"rencencyInterpretation\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyInterpretation}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                       \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {recency.rencencyInterpretation==='Recent' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has viral load request been made? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasViralLoad\"\r\n                                        id=\"hasViralLoad\"\r\n                                        value={recency.hasViralLoad}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {recency.hasViralLoad==='true' && (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <h4>Viral Load Classification :</h4>\r\n                                    <br/>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Collected Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleCollectedDate\"\r\n                                            id=\"sampleCollectedDate\"\r\n                                            type=\"date\"\r\n                                            value={recency.sampleCollectedDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                    \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Refernce Number</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleReferanceNumber\"\r\n                                            id=\"sampleReferanceNumber\"\r\n                                            type=\"text\"\r\n                                            value={recency.sampleReferanceNumber}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                         {errors.sampleReferanceNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Type</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleType\"\r\n                                            id=\"sampleType\"\r\n                                            value={recency.sampleType}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                            \r\n                                        </select>\r\n                                        {errors.sampleType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleType}</span>\r\n                                        ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Date Sample Sent to PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"dateSampleSentToPCRLab\"\r\n                                            id=\"dateSampleSentToPCRLab\"\r\n                                            type=\"date\"\r\n                                            value={recency.dateSampleSentToPCRLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        {errors.dateSampleSentToPCRLab !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Test Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleTestDate\"\r\n                                            id=\"sampleTestDate\"\r\n                                            type=\"date\"\r\n                                            value={recency.hasViralLoad}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Receiving PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"receivingPcrLab\"\r\n                                            id=\"receivingPcrLab\"\r\n                                            type=\"text\"\r\n                                            value={recency.receivingPcrLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"viralLoadResultClassification\"\r\n                                            id=\"viralLoadResultClassification\"\r\n                                            value={recency.viralLoadResultClassification}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\r\n                                            <option value=\"<1000\">{\"<=\"} 1000</option>\r\n                                            <option value=\"Failed run\">Failed run</option>\r\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\r\n                                        </select>\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Final Recency Result</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"finalRecencyResult\"\r\n                                            id=\"finalRecencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.finalRecencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                            </>)}\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\r\n                            <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["386","387","388","389","390"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PostTest = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    ///const [errors, setErrors] = useState({});\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            postTestCounselingKnowledgeAssessment: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [postTest, setPostTest]= useState(\r\n        {\r\n            hivTestResult:\"\", \r\n            hivTestBefore:\"\", \r\n            hivRequestResult:\"\", \r\n            hivRequestResultCt:\"\",                             \r\n            clientReceivedHivTestResult:\"\", \r\n            postTestCounseling:\"\", \r\n            riskReduction:\"\", \r\n            postTestDisclosure:\"\",\r\n            bringPartnerHivtesting:\"\", \r\n            childrenHivtesting:\"\", \r\n            informationFp:\"\", \r\n            partnerFpThanCondom:\"\", \r\n            partnerFpUseCondom:\"\",\r\n            correctCondomUse:\"\", \r\n            condomProvidedToClient:\"\", \r\n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \r\n            referredToServices:\"\",\r\n        }\r\n    )\r\n    const handleInputChangePostTest = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})        \r\n        setPostTest ({...postTest,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    useEffect(() => { \r\n        setPostTest({...postTest, ...props.patientObj.postTestCounselingKnowledgeAssessment}) \r\n\r\n    }, [ props.patientObj]);\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            handleItemClick('recency-testing', 'post-test')\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n        //e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.postTestCounselingKnowledgeAssessment= postTest\r\n            objValues.personId= patientID\r\n            axios.put(`${baseUrl}hts/${clientId}/post-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('recency-testing', 'post-test')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 >POST TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResult\"\r\n                                        id=\"hivTestResult\"\r\n                                        value={postTest.hivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"True\">Positive</option>\r\n                                        <option value=\"false\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been tested for HIV before within this year? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestBefore\"\r\n                                        id=\"hivTestBefore\"\r\n                                        value={postTest.hivTestBefore}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Not previously tested\">Not previously tested</option>\r\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\r\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\r\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form signed by tester *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResult\"\r\n                                        id=\"hivRequestResult\"\r\n                                        value={postTest.hivRequestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCt\"\r\n                                        id=\"hivRequestResultCt\"\r\n                                        value={postTest.hivRequestResultCt}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client received HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientReceivedHivTestResult\"\r\n                                        id=\"clientReceivedHivTestResult\"\r\n                                        value={postTest.clientReceivedHivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test counseling done *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestCounseling\"\r\n                                        id=\"postTestCounseling\"\r\n                                        value={postTest.postTestCounseling}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Risk reduction plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"riskReduction\"\r\n                                        id=\"riskReduction\"\r\n                                        value={postTest.riskReduction}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test disclosure plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestDisclosure\"\r\n                                        id=\"postTestDisclosure\"\r\n                                        value={postTest.postTestDisclosure}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring partner(s) for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bringPartnerHivtesting\"\r\n                                        id=\"bringPartnerHivtesting\"\r\n                                        value={postTest.bringPartnerHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring own children {'<5'} years for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"childrenHivtesting\"\r\n                                        id=\"childrenHivtesting\"\r\n                                        value={postTest.childrenHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Provided with information on FP and dual contraception *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informationFp\"\r\n                                        id=\"informationFp\"\r\n                                        value={postTest.informationFp}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use FP methods (other than condom)*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpThanCondom\"\r\n                                        id=\"partnerFpThanCondom\"\r\n                                        value={postTest.partnerFpThanCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpUseCondom\"\r\n                                        id=\"partnerFpUseCondom\"\r\n                                        value={postTest.partnerFpUseCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Correct condom use demonstrated *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"correctCondomUse\"\r\n                                        id=\"correctCondomUse\"\r\n                                        value={postTest.correctCondomUse}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Condoms provided to client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"condomProvidedToClient\"\r\n                                        id=\"condomProvidedToClient\"\r\n                                        value={postTest.condomProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client referred to other services *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredToServices\"\r\n                                        id=\"referredToServices\"\r\n                                        value={postTest.referredToServices}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message success>\r\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\r\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\r\n                                \r\n                            </Message>\r\n                                                \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                                <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostTest","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["391","392","393","394"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["395","396","397","398","399","400","401","402","403"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420"],"\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    //console.log(props.activePage)\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [hideNumChild, setHideNumChild] = useState(false);\r\n    const [kP, setKP] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [gender, setGender] = useState([])\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    let temp = { ...errors }\r\n    //console.log(props.patientObj)\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            active: true,\r\n            clientCode: \"\",\r\n            age:\"\",\r\n            dob:\"\",\r\n            breastFeeding:\"\",\r\n            dateVisit: \"\",\r\n            firstTimeVisit: null,\r\n            indexClient: null,\r\n            numChildren: \"\",\r\n            numWives: \"\",\r\n            pregnant:\"\",            \r\n            dateOfBirth: null,\r\n            dateOfRegistration:null,\r\n            deceased: true,\r\n            deceasedDateTime: null,\r\n            educationId: \"\",\r\n            employmentStatusId: \"\",\r\n            facilityId: \"\",\r\n            firstName: \"\",\r\n            genderId: \"\",\r\n            address: \"\",\r\n            phoneNumber:\"\",           \r\n            isDateOfBirthEstimated: \"\",\r\n            maritalStatusId: \"\",\r\n            organizationId:\"\",\r\n            otherName: \"\",\r\n            sexId: \"\",\r\n            state:null,\r\n            lga:\"\",\r\n            surname: \"\",\r\n            previouslyTested: \"\",\r\n            referredFrom: \"\",\r\n            targetGroup: \"\",\r\n            testingSetting:\"\",\r\n            typeCounseling: \"\",\r\n            relationshipWithIndexClient:\"\",\r\n            indexClientCode:\"\"\r\n        }\r\n    )\r\n\r\n    useEffect(() => { \r\n        KP(); \r\n        EnrollmentSetting(); \r\n        SourceReferral();\r\n        Genders();\r\n        CounselingType();\r\n        PregnancyStatus()\r\n        IndexTesting();\r\n        setObjValues(props.patientObj)\r\n        // if(props.patientObj){\r\n        //     objValues.referredFrom=props.patientObj.referredFrom\r\n        // }\r\n        //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\r\n        //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\r\n    }, [props.patientObj]);\r\n\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n     //Get list of IndexTesting\r\n     const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    \r\n    //Get list of KP\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of Genders from \r\n    const Genders =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setGender(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.targetGroup = objValues.targetGroup!==\"\"  ? \"\" : \"This field is required.\"\r\n            temp.referredFrom = objValues.referredFrom!==\"\"  ? \"\" : \"This field is required.\"\r\n            temp.previouslyTested = objValues.previouslyTested!==\"\"  ? \"\" : \"This field is required.\" \r\n            temp.indexClient = objValues.indexClient!==\"\"  ? \"\" : \"This field is required.\"  \r\n            temp.firstTimeVisit = objValues.firstTimeVisit!==\"\" ? \"\" : \"This field is required.\" \r\n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(props.activePage.actionType==='update'){\r\n        //e.preventDefault();\r\n            const patientForm ={\r\n            clientCode: objValues.clientCode,\r\n            dateVisit: objValues.dateVisit,\r\n            extra: {},\r\n            firstTimeVisit: objValues.firstTimeVisit,\r\n            indexClient: objValues.indexClient,\r\n            numChildren: objValues.numChildren,\r\n            numWives: objValues.numWives,\r\n            personId: props.patientObj.id,\r\n            hospitalNumber:objValues.clientCode,\r\n            previouslyTested: objValues.previouslyTested,\r\n            referredFrom: objValues.referredFrom,\r\n            targetGroup: objValues.targetGroup,\r\n            testingSetting: objValues.testingSetting,\r\n            typeCounseling:objValues.typeCounseling,\r\n            breastFeeding:objValues.breastFeeding,\r\n            pregnant:objValues.pregnant,\r\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient\r\n            }\r\n\r\n            if(validate()){\r\n            axios.post(`${baseUrl}hts`,patientForm,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                toast.success(\"HTS Test successful\");\r\n                if(props.patientAge>14){\r\n                    handleItemClick('pre-test-counsel', 'basic' )\r\n                }else{\r\n                    handleItemClick('hiv-test', 'pre-test-counsel')\r\n                }\r\n               \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            }\r\n        }\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            if(props.patientAge>14){\r\n                handleItemClick('pre-test-counsel', 'basic' )\r\n            }else{\r\n                handleItemClick('hiv-test', 'pre-test-counsel')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM -- - for existing 5</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Client Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"clientCode\"\r\n                                    id=\"clientCode\"\r\n                                    value={objValues.clientCode}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                {errors.clientCode !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientCode}</span>\r\n                                ) : \"\" }                                \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Referred From *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredFrom\"\r\n                                        id=\"referredFrom\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sourceReferral.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.referredFrom !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.referredFrom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Setting*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateVisit\"\r\n                                    id=\"dateVisit\"\r\n                                    value={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                    onChange={handleInputChange}\r\n                                    min={objValues.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n                             {(objValues.age > 9 && objValues.sexId=='376') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of wives/co-wives</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numWives\"\r\n                                        id=\"numWives\"\r\n                                        min={0}\r\n                                        value={objValues.numWives}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {(objValues.age>9 ) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of Children {'<5'} years</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numChildren\"\r\n                                        id=\"numChildren\"\r\n                                        min={0}\r\n                                        value={objValues.numChildren}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    /> \r\n                                     \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Index Testing</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"indexClient\"\r\n                                        id=\"indexClient\"\r\n                                        value={objValues.indexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.indexClient !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.indexClient}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.indexClient==='true' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship of the index client</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relationshipWithIndexClient\"\r\n                                        id=\"relationshipWithIndexClient\"\r\n                                        value={objValues.relationshipWithIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                             <div className=\"form-group  col-md-4\">\r\n                             <FormGroup>\r\n                                 <Label>Index Client Code/ID</Label>\r\n                                 <Input\r\n                                     type=\"text\"\r\n                                     name=\"indexClientCode\"\r\n                                     id=\"indexClientCode\"\r\n                                     value={objValues.indexClientCode}\r\n                                     onChange={handleInputChange}\r\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                \r\n                                 />\r\n                                   \r\n                             </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                            {objValues.sex==='377' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Pregnant</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"pregnant\"\r\n                                        id=\"pregnant\"\r\n                                        value={objValues.pregnant}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>First time visit</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"firstTimeVisit\"\r\n                                        id=\"firstTimeVisit\"\r\n                                        value={objValues.firstTimeVisit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.firstTimeVisit !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTested\"\r\n                                        id=\"previouslyTested\"\r\n                                        value={objValues.previouslyTested}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTested !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Type of Counseling</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeCounseling\"\r\n                                        id=\"typeCounseling\"\r\n                                        value={objValues.typeCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.typeCounseling !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                            <Button content='Next' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n                                  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["421","422","423","424","425","426","427"],"import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst HivTestResult = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    //console.log(props.patientObj)\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            confirmatoryTest: {},\r\n            hivTestResult: \"\",\r\n            htsClientId:\"\",\r\n            personId: \"\",\r\n            test1: {},\r\n            tieBreakerTest: {},\r\n            syphilisTesting:{},\r\n            hepatitisTesting:{},\r\n            others:{},\r\n            cd4:{},\r\n        }\r\n    )\r\n\r\n    const [initialTest, setInitailTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeInitial = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setInitailTest ({...initialTest,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeCd4Count = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [cd4Count, setCd4Count]= useState(\r\n        {\r\n            cd4Count:\"\",\r\n            cd4SemiQuantitative:\"\",\r\n            cd4FlowCyteometry:\"\"            \r\n        }\r\n    )\r\n    const handleInputChangeConfirmatory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [tieBreakerTest, setTieBreakerTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeTie = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [syphills, setSyphills]= useState(\r\n        {\r\n            syphilisTestResult :\"\",\r\n           // result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeSyphills = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [hepatitis, setHepatitis]= useState(\r\n        {\r\n            hepatitisCTestResult :\"\",\r\n            hepatitisBTestResult  :\"\", \r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    const handleInputChangeHepatitis = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [others, setOthers]= useState(\r\n        {\r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    const handleInputChangeOthers = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setOthers ({...others,  [e.target.name]: e.target.value});            \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest.result &&  (temp.date = initialTest.date ? \"\" : \"This field is required.\")\r\n        initialTest.result && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        initialTest.result && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n              \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    useEffect(() => { \r\n        setConfirmatoryTest ({...confirmatoryTest, ...props.patientObj.confirmatoryTest}) \r\n        setInitailTest ({...initialTest, ...props.patientObj.test1}) \r\n        setTieBreakerTest ({...tieBreakerTest, ...props.patientObj.tieBreakerTest}) \r\n        setSyphills ({...syphills, ...props.patientObj.syphilisTesting}) \r\n        setHepatitis({...hepatitis, ...props.patientObj.hepatitisTesting}) \r\n        setOthers({...others, ...props.patientObj.others}) \r\n        setCd4Count({...cd4Count, ...props.patientObj.cd4}) \r\n\r\n    }, [ props.patientObj]);\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n        handleItemClick('post-test', 'hiv-test')\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n        //e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.confirmatoryTest= confirmatoryTest\r\n            objValues.personId= patientID\r\n            objValues.test1= initialTest\r\n            objValues.tieBreakerTest=tieBreakerTest\r\n            objValues.syphilisTesting=syphills\r\n            objValues.hepatitisTesting=hepatitis\r\n            objValues.cd4=cd4Count\r\n            objValues.others=others\r\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                toast.success(\"HIV test successful\");\r\n                handleItemClick('post-test', 'hiv-test')\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\r\n\r\n                        </LabelRibbon>\r\n                           <br/>\r\n                           <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial HIV Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={initialTest.date}\r\n                                    onChange={handleInputChangeInitial}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.dateOfEac1 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={initialTest.result}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest.result ==='Yes' && (\r\n                            <>\r\n                            <h4>Confirmatory Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={confirmatoryTest.date}\r\n                                    onChange={handleInputChangeConfirmatory}\r\n                                    min={initialTest.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.dateOfEac1 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={confirmatoryTest.result}\r\n                                        onChange={handleInputChangeConfirmatory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                            )}\r\n                            {confirmatoryTest.result ==='No' && (\r\n                            <>\r\n                            <h4>Tie Breaker Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={tieBreakerTest.date}\r\n                                    onChange={handleInputChangeTie}\r\n                                    min={confirmatoryTest.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={tieBreakerTest.result}\r\n                                        onChange={handleInputChangeTie}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            </>)}\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4Count\"\r\n                                        id=\"cd4Count\"\r\n                                        value={cd4Count.cd4Count}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\r\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count Value</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4SemiQuantitative\"\r\n                                        id=\"cd4SemiQuantitative\"\r\n                                        value={cd4Count.cd4SemiQuantitative}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\r\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">CD4 Count Value</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"cd4FlowCyteometry\"\r\n                                    id=\"cd4FlowCyteometry\"\r\n                                    value={cd4Count.cd4FlowCyteometry}\r\n                                    onChange={handleInputChangeCd4Count}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                 \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-7\"></div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                {initialTest.result==='No'  && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(initialTest.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                            </div>\r\n                            \r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                        <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n \r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    value={others.longitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    value={others.latitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    value={others.adhocCode}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            {props.patientAge>14 ? \r\n                                ( \r\n                                    <>\r\n                                    <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\r\n                                    </>\r\n                                )\r\n                                :\r\n                                ( \r\n                                    <>\r\n                                    <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["428","429","430","431"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["432","433","434","435","436","437","438","439","440","441"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["442","443","444","445","446"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["463","464","465","466"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["467","468","469","470","471","472","473","474","475","476"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["477","478","479","480","481","482","483","484"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["485","486","487","488","489","490","491","492"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client --test</span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of index client \"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n              { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["493","494","495","496","497","498","499","500","501","502"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n    }, []);\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();     \r\n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\");\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={objValues.middleName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={objValues.lastName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number</Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Alternative Phone Number</Label>\r\n                                <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"altPhoneNumber\"\r\n                                        id=\"altPhoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.altPhoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={objValues.address}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Hang-out spots</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hangOutSpots\"\r\n                                    id=\"hangOutSpots\"\r\n                                    value={objValues.hangOutSpots}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship to Index Client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relativeToIndexClient\"\r\n                                        id=\"relativeToIndexClient\"\r\n                                        value={objValues.relativeToIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you currently live with this partner? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyLiveWithPartner\"\r\n                                        id=\"currentlyLiveWithPartner\"\r\n                                        value={objValues.currentlyLiveWithPartner}\r\n                                        onChange={handleInputChange}        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value={\"true\"}>Yes</option>\r\n                                        <option value={\"false\"}>No</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerTestedPositive\"\r\n                                        id=\"partnerTestedPositive\"\r\n                                        value={objValues.partnerTestedPositive}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                       {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"physicalHurt\"\r\n                                        id=\"physicalHurt\"\r\n                                        value={objValues.physicalHurt}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"threatenToHurt\"\r\n                                        id=\"threatenToHurt\"\r\n                                        value={objValues.threatenToHurt}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                       {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexuallyUncomfortable\"\r\n                                        id=\"sexuallyUncomfortable\"\r\n                                        value={objValues.sexuallyUncomfortable}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Notification Method selected*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"notificationMethod\"\r\n                                        id=\"notificationMethod\"\r\n                                        value={objValues.notificationMethod}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {notificationContact.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"datePartnerCameForTesting\"\r\n                                    id=\"datePartnerCameForTesting\"\r\n                                    value={objValues.datePartnerCameForTesting}\r\n                                    onChange={handleInputChange}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"C:\\Users\\A\\Documents\\LAMISPLUS\\hts\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588"],{"ruleId":"589","severity":1,"message":"590","line":4,"column":10,"nodeType":"591","messageId":"592","endLine":4,"endColumn":23},{"ruleId":"589","severity":1,"message":"593","line":3,"column":19,"nodeType":"591","messageId":"592","endLine":3,"endColumn":25},{"ruleId":"589","severity":1,"message":"594","line":2,"column":10,"nodeType":"591","messageId":"592","endLine":2,"endColumn":20},{"ruleId":"589","severity":1,"message":"595","line":3,"column":27,"nodeType":"591","messageId":"592","endLine":3,"endColumn":30},{"ruleId":"589","severity":1,"message":"596","line":3,"column":32,"nodeType":"591","messageId":"592","endLine":3,"endColumn":36},{"ruleId":"589","severity":1,"message":"597","line":16,"column":12,"nodeType":"591","messageId":"592","endLine":16,"endColumn":15},{"ruleId":"589","severity":1,"message":"598","line":16,"column":17,"nodeType":"591","messageId":"592","endLine":16,"endColumn":23},{"ruleId":"589","severity":1,"message":"595","line":10,"column":12,"nodeType":"591","messageId":"592","endLine":10,"endColumn":15},{"ruleId":"589","severity":1,"message":"596","line":10,"column":17,"nodeType":"591","messageId":"592","endLine":10,"endColumn":21},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"600","line":5,"column":25,"nodeType":"591","messageId":"592","endLine":5,"endColumn":30},{"ruleId":"589","severity":1,"message":"601","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":25},{"ruleId":"589","severity":1,"message":"602","line":25,"column":7,"nodeType":"591","messageId":"592","endLine":25,"endColumn":16},{"ruleId":"589","severity":1,"message":"603","line":42,"column":12,"nodeType":"591","messageId":"592","endLine":42,"endColumn":18},{"ruleId":"589","severity":1,"message":"604","line":42,"column":20,"nodeType":"591","messageId":"592","endLine":42,"endColumn":29},{"ruleId":"605","severity":1,"message":"606","line":251,"column":8,"nodeType":"607","endLine":251,"endColumn":10,"suggestions":"608"},{"ruleId":"609","severity":1,"message":"610","line":296,"column":43,"nodeType":"611","messageId":"612","endLine":296,"endColumn":45},{"ruleId":"613","severity":1,"message":"614","line":5,"column":10,"nodeType":"615","messageId":"616","endLine":5,"endColumn":24,"fix":"617"},{"ruleId":"589","severity":1,"message":"618","line":35,"column":10,"nodeType":"591","messageId":"592","endLine":35,"endColumn":20},{"ruleId":"589","severity":1,"message":"619","line":36,"column":9,"nodeType":"591","messageId":"592","endLine":36,"endColumn":23},{"ruleId":"589","severity":1,"message":"602","line":64,"column":7,"nodeType":"591","messageId":"592","endLine":64,"endColumn":16},{"ruleId":"609","severity":1,"message":"610","line":148,"column":76,"nodeType":"611","messageId":"612","endLine":148,"endColumn":78},{"ruleId":"589","severity":1,"message":"620","line":3,"column":20,"nodeType":"591","messageId":"592","endLine":3,"endColumn":24},{"ruleId":"589","severity":1,"message":"618","line":6,"column":10,"nodeType":"591","messageId":"592","endLine":6,"endColumn":20},{"ruleId":"589","severity":1,"message":"621","line":7,"column":10,"nodeType":"591","messageId":"592","endLine":7,"endColumn":14},{"ruleId":"589","severity":1,"message":"622","line":9,"column":18,"nodeType":"591","messageId":"592","endLine":9,"endColumn":29},{"ruleId":"589","severity":1,"message":"623","line":9,"column":31,"nodeType":"591","messageId":"592","endLine":9,"endColumn":37},{"ruleId":"589","severity":1,"message":"624","line":19,"column":11,"nodeType":"591","messageId":"592","endLine":19,"endColumn":26},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"625","line":1,"column":29,"nodeType":"591","messageId":"592","endLine":1,"endColumn":38},{"ruleId":"589","severity":1,"message":"626","line":2,"column":8,"nodeType":"591","messageId":"592","endLine":2,"endColumn":13},{"ruleId":"589","severity":1,"message":"623","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":14},{"ruleId":"589","severity":1,"message":"627","line":5,"column":52,"nodeType":"591","messageId":"592","endLine":5,"endColumn":56},{"ruleId":"589","severity":1,"message":"628","line":6,"column":13,"nodeType":"591","messageId":"592","endLine":6,"endColumn":19},{"ruleId":"589","severity":1,"message":"629","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":26},{"ruleId":"589","severity":1,"message":"604","line":95,"column":20,"nodeType":"591","messageId":"592","endLine":95,"endColumn":29},{"ruleId":"589","severity":1,"message":"630","line":96,"column":12,"nodeType":"591","messageId":"592","endLine":96,"endColumn":18},{"ruleId":"589","severity":1,"message":"631","line":96,"column":20,"nodeType":"591","messageId":"592","endLine":96,"endColumn":29},{"ruleId":"613","severity":1,"message":"614","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":24,"fix":"632"},{"ruleId":"589","severity":1,"message":"594","line":5,"column":10,"nodeType":"591","messageId":"592","endLine":5,"endColumn":20},{"ruleId":"589","severity":1,"message":"633","line":18,"column":12,"nodeType":"591","messageId":"592","endLine":18,"endColumn":23},{"ruleId":"605","severity":1,"message":"634","line":24,"column":10,"nodeType":"607","endLine":24,"endColumn":28,"suggestions":"635"},{"ruleId":"589","severity":1,"message":"636","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":18},{"ruleId":"589","severity":1,"message":"637","line":64,"column":9,"nodeType":"591","messageId":"592","endLine":64,"endColumn":29},{"ruleId":"589","severity":1,"message":"638","line":66,"column":9,"nodeType":"591","messageId":"592","endLine":66,"endColumn":20},{"ruleId":"589","severity":1,"message":"639","line":67,"column":22,"nodeType":"591","messageId":"592","endLine":67,"endColumn":35},{"ruleId":"605","severity":1,"message":"640","line":70,"column":6,"nodeType":"607","endLine":70,"endColumn":24,"suggestions":"641"},{"ruleId":"609","severity":1,"message":"610","line":104,"column":74,"nodeType":"611","messageId":"612","endLine":104,"endColumn":76},{"ruleId":"609","severity":1,"message":"610","line":109,"column":73,"nodeType":"611","messageId":"612","endLine":109,"endColumn":75},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"600","line":5,"column":25,"nodeType":"591","messageId":"592","endLine":5,"endColumn":30},{"ruleId":"589","severity":1,"message":"621","line":8,"column":9,"nodeType":"591","messageId":"592","endLine":8,"endColumn":13},{"ruleId":"589","severity":1,"message":"642","line":38,"column":11,"nodeType":"591","messageId":"592","endLine":38,"endColumn":18},{"ruleId":"589","severity":1,"message":"643","line":4,"column":38,"nodeType":"591","messageId":"592","endLine":4,"endColumn":45},{"ruleId":"589","severity":1,"message":"627","line":4,"column":52,"nodeType":"591","messageId":"592","endLine":4,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":7,"column":15,"nodeType":"591","messageId":"592","endLine":7,"endColumn":26},{"ruleId":"589","severity":1,"message":"644","line":8,"column":8,"nodeType":"591","messageId":"592","endLine":8,"endColumn":16},{"ruleId":"589","severity":1,"message":"645","line":11,"column":9,"nodeType":"591","messageId":"592","endLine":11,"endColumn":23},{"ruleId":"589","severity":1,"message":"646","line":25,"column":10,"nodeType":"591","messageId":"592","endLine":25,"endColumn":20},{"ruleId":"589","severity":1,"message":"647","line":102,"column":11,"nodeType":"591","messageId":"592","endLine":102,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":104,"column":12,"nodeType":"591","messageId":"592","endLine":104,"endColumn":18},{"ruleId":"589","severity":1,"message":"648","line":105,"column":12,"nodeType":"591","messageId":"592","endLine":105,"endColumn":24},{"ruleId":"589","severity":1,"message":"649","line":105,"column":26,"nodeType":"591","messageId":"592","endLine":105,"endColumn":41},{"ruleId":"589","severity":1,"message":"650","line":109,"column":12,"nodeType":"591","messageId":"592","endLine":109,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":126,"column":79,"nodeType":"611","messageId":"612","endLine":126,"endColumn":81},{"ruleId":"605","severity":1,"message":"651","line":221,"column":8,"nodeType":"607","endLine":221,"endColumn":58,"suggestions":"652"},{"ruleId":"609","severity":1,"message":"610","line":475,"column":28,"nodeType":"611","messageId":"612","endLine":475,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":478,"column":35,"nodeType":"611","messageId":"612","endLine":478,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":531,"column":49,"nodeType":"611","messageId":"612","endLine":531,"endColumn":51},{"ruleId":"609","severity":1,"message":"610","line":1053,"column":67,"nodeType":"611","messageId":"612","endLine":1053,"endColumn":69},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"654","line":95,"column":23,"nodeType":"591","messageId":"592","endLine":95,"endColumn":35},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"622","line":15,"column":18,"nodeType":"591","messageId":"592","endLine":15,"endColumn":29},{"ruleId":"589","severity":1,"message":"628","line":19,"column":13,"nodeType":"591","messageId":"592","endLine":19,"endColumn":19},{"ruleId":"589","severity":1,"message":"655","line":98,"column":11,"nodeType":"591","messageId":"592","endLine":98,"endColumn":24},{"ruleId":"589","severity":1,"message":"654","line":133,"column":23,"nodeType":"591","messageId":"592","endLine":133,"endColumn":35},{"ruleId":"589","severity":1,"message":"656","line":252,"column":12,"nodeType":"591","messageId":"592","endLine":252,"endColumn":20},{"ruleId":"657","severity":1,"message":"658","line":255,"column":12,"nodeType":"659","messageId":"660","endLine":255,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":269,"column":13,"nodeType":"659","messageId":"660","endLine":269,"endColumn":177},{"ruleId":"657","severity":1,"message":"658","line":270,"column":13,"nodeType":"659","messageId":"660","endLine":270,"endColumn":182},{"ruleId":"657","severity":1,"message":"658","line":271,"column":13,"nodeType":"659","messageId":"660","endLine":271,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":272,"column":13,"nodeType":"659","messageId":"660","endLine":272,"endColumn":198},{"ruleId":"657","severity":1,"message":"658","line":273,"column":13,"nodeType":"659","messageId":"660","endLine":273,"endColumn":202},{"ruleId":"657","severity":1,"message":"658","line":275,"column":13,"nodeType":"659","messageId":"660","endLine":275,"endColumn":161},{"ruleId":"657","severity":1,"message":"658","line":276,"column":13,"nodeType":"659","messageId":"660","endLine":276,"endColumn":167},{"ruleId":"657","severity":1,"message":"658","line":277,"column":13,"nodeType":"659","messageId":"660","endLine":277,"endColumn":189},{"ruleId":"657","severity":1,"message":"658","line":278,"column":13,"nodeType":"659","messageId":"660","endLine":278,"endColumn":205},{"ruleId":"657","severity":1,"message":"658","line":279,"column":13,"nodeType":"659","messageId":"660","endLine":279,"endColumn":155},{"ruleId":"657","severity":1,"message":"658","line":281,"column":13,"nodeType":"659","messageId":"660","endLine":281,"endColumn":147},{"ruleId":"657","severity":1,"message":"658","line":282,"column":13,"nodeType":"659","messageId":"660","endLine":282,"endColumn":147},{"ruleId":"657","severity":1,"message":"658","line":283,"column":13,"nodeType":"659","messageId":"660","endLine":283,"endColumn":189},{"ruleId":"657","severity":1,"message":"658","line":284,"column":13,"nodeType":"659","messageId":"660","endLine":284,"endColumn":185},{"ruleId":"657","severity":1,"message":"658","line":287,"column":13,"nodeType":"659","messageId":"660","endLine":287,"endColumn":141},{"ruleId":"657","severity":1,"message":"658","line":289,"column":13,"nodeType":"659","messageId":"660","endLine":289,"endColumn":153},{"ruleId":"657","severity":1,"message":"658","line":290,"column":13,"nodeType":"659","messageId":"660","endLine":290,"endColumn":131},{"ruleId":"657","severity":1,"message":"658","line":291,"column":13,"nodeType":"659","messageId":"660","endLine":291,"endColumn":145},{"ruleId":"657","severity":1,"message":"658","line":292,"column":13,"nodeType":"659","messageId":"660","endLine":292,"endColumn":175},{"ruleId":"657","severity":1,"message":"658","line":293,"column":13,"nodeType":"659","messageId":"660","endLine":293,"endColumn":149},{"ruleId":"657","severity":1,"message":"658","line":296,"column":13,"nodeType":"659","messageId":"660","endLine":296,"endColumn":186},{"ruleId":"657","severity":1,"message":"658","line":297,"column":13,"nodeType":"659","messageId":"660","endLine":297,"endColumn":166},{"ruleId":"657","severity":1,"message":"658","line":298,"column":13,"nodeType":"659","messageId":"660","endLine":298,"endColumn":167},{"ruleId":"657","severity":1,"message":"658","line":299,"column":13,"nodeType":"659","messageId":"660","endLine":299,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":300,"column":13,"nodeType":"659","messageId":"660","endLine":300,"endColumn":160},{"ruleId":"609","severity":1,"message":"610","line":303,"column":49,"nodeType":"611","messageId":"612","endLine":303,"endColumn":51},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"661","line":128,"column":11,"nodeType":"591","messageId":"592","endLine":128,"endColumn":28},{"ruleId":"609","severity":1,"message":"610","line":234,"column":49,"nodeType":"611","messageId":"612","endLine":234,"endColumn":51},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"654","line":100,"column":23,"nodeType":"591","messageId":"592","endLine":100,"endColumn":35},{"ruleId":"662","severity":1,"message":"663","line":136,"column":39,"nodeType":"664","messageId":"665","endLine":136,"endColumn":78,"fix":"666"},{"ruleId":"662","severity":1,"message":"663","line":140,"column":39,"nodeType":"664","messageId":"665","endLine":140,"endColumn":75,"fix":"667"},{"ruleId":"662","severity":1,"message":"663","line":145,"column":39,"nodeType":"664","messageId":"665","endLine":145,"endColumn":77,"fix":"668"},{"ruleId":"662","severity":1,"message":"663","line":149,"column":39,"nodeType":"664","messageId":"665","endLine":149,"endColumn":76,"fix":"669"},{"ruleId":"662","severity":1,"message":"663","line":153,"column":39,"nodeType":"664","messageId":"665","endLine":153,"endColumn":76,"fix":"670"},{"ruleId":"662","severity":1,"message":"663","line":157,"column":39,"nodeType":"664","messageId":"665","endLine":157,"endColumn":69,"fix":"671"},{"ruleId":"605","severity":1,"message":"672","line":159,"column":7,"nodeType":"607","endLine":159,"endColumn":94,"suggestions":"673"},{"ruleId":"589","severity":1,"message":"656","line":179,"column":11,"nodeType":"591","messageId":"592","endLine":179,"endColumn":19},{"ruleId":"657","severity":1,"message":"658","line":181,"column":13,"nodeType":"659","messageId":"660","endLine":181,"endColumn":144},{"ruleId":"657","severity":1,"message":"658","line":182,"column":13,"nodeType":"659","messageId":"660","endLine":182,"endColumn":148},{"ruleId":"657","severity":1,"message":"658","line":183,"column":13,"nodeType":"659","messageId":"660","endLine":183,"endColumn":123},{"ruleId":"609","severity":1,"message":"610","line":185,"column":49,"nodeType":"611","messageId":"612","endLine":185,"endColumn":51},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":2,"column":52,"nodeType":"591","messageId":"592","endLine":2,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"631","line":94,"column":20,"nodeType":"591","messageId":"592","endLine":94,"endColumn":29},{"ruleId":"589","severity":1,"message":"624","line":100,"column":11,"nodeType":"591","messageId":"592","endLine":100,"endColumn":26},{"ruleId":"589","severity":1,"message":"674","line":109,"column":12,"nodeType":"591","messageId":"592","endLine":109,"endColumn":26},{"ruleId":"589","severity":1,"message":"675","line":109,"column":28,"nodeType":"591","messageId":"592","endLine":109,"endColumn":45},{"ruleId":"609","severity":1,"message":"610","line":243,"column":28,"nodeType":"611","messageId":"612","endLine":243,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":246,"column":35,"nodeType":"611","messageId":"612","endLine":246,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":275,"column":74,"nodeType":"611","messageId":"612","endLine":275,"endColumn":76},{"ruleId":"589","severity":1,"message":"618","line":27,"column":10,"nodeType":"591","messageId":"592","endLine":27,"endColumn":20},{"ruleId":"589","severity":1,"message":"676","line":29,"column":10,"nodeType":"591","messageId":"592","endLine":29,"endColumn":18},{"ruleId":"589","severity":1,"message":"677","line":29,"column":27,"nodeType":"591","messageId":"592","endLine":29,"endColumn":31},{"ruleId":"589","severity":1,"message":"678","line":29,"column":33,"nodeType":"591","messageId":"592","endLine":29,"endColumn":37},{"ruleId":"589","severity":1,"message":"602","line":52,"column":7,"nodeType":"591","messageId":"592","endLine":52,"endColumn":16},{"ruleId":"589","severity":1,"message":"679","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":20},{"ruleId":"605","severity":1,"message":"634","line":106,"column":10,"nodeType":"607","endLine":106,"endColumn":12,"suggestions":"680"},{"ruleId":"589","severity":1,"message":"681","line":123,"column":11,"nodeType":"591","messageId":"592","endLine":123,"endColumn":27},{"ruleId":"613","severity":1,"message":"614","line":5,"column":10,"nodeType":"615","messageId":"616","endLine":5,"endColumn":24,"fix":"682"},{"ruleId":"589","severity":1,"message":"618","line":27,"column":10,"nodeType":"591","messageId":"592","endLine":27,"endColumn":20},{"ruleId":"589","severity":1,"message":"602","line":52,"column":7,"nodeType":"591","messageId":"592","endLine":52,"endColumn":16},{"ruleId":"605","severity":1,"message":"634","line":104,"column":10,"nodeType":"607","endLine":104,"endColumn":28,"suggestions":"683"},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"623","line":2,"column":10,"nodeType":"591","messageId":"592","endLine":2,"endColumn":16},{"ruleId":"589","severity":1,"message":"600","line":5,"column":25,"nodeType":"591","messageId":"592","endLine":5,"endColumn":30},{"ruleId":"589","severity":1,"message":"621","line":8,"column":9,"nodeType":"591","messageId":"592","endLine":8,"endColumn":13},{"ruleId":"589","severity":1,"message":"642","line":37,"column":11,"nodeType":"591","messageId":"592","endLine":37,"endColumn":18},{"ruleId":"589","severity":1,"message":"647","line":38,"column":11,"nodeType":"591","messageId":"592","endLine":38,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":41,"column":12,"nodeType":"591","messageId":"592","endLine":41,"endColumn":18},{"ruleId":"589","severity":1,"message":"604","line":41,"column":20,"nodeType":"591","messageId":"592","endLine":41,"endColumn":29},{"ruleId":"605","severity":1,"message":"606","line":239,"column":8,"nodeType":"607","endLine":239,"endColumn":10,"suggestions":"684"},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"625","line":1,"column":29,"nodeType":"591","messageId":"592","endLine":1,"endColumn":38},{"ruleId":"589","severity":1,"message":"626","line":2,"column":8,"nodeType":"591","messageId":"592","endLine":2,"endColumn":13},{"ruleId":"589","severity":1,"message":"623","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":14},{"ruleId":"589","severity":1,"message":"627","line":5,"column":52,"nodeType":"591","messageId":"592","endLine":5,"endColumn":56},{"ruleId":"589","severity":1,"message":"628","line":6,"column":13,"nodeType":"591","messageId":"592","endLine":6,"endColumn":19},{"ruleId":"589","severity":1,"message":"629","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":26},{"ruleId":"589","severity":1,"message":"604","line":95,"column":20,"nodeType":"591","messageId":"592","endLine":95,"endColumn":29},{"ruleId":"589","severity":1,"message":"630","line":96,"column":12,"nodeType":"591","messageId":"592","endLine":96,"endColumn":18},{"ruleId":"589","severity":1,"message":"631","line":96,"column":20,"nodeType":"591","messageId":"592","endLine":96,"endColumn":29},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"654","line":100,"column":23,"nodeType":"591","messageId":"592","endLine":100,"endColumn":35},{"ruleId":"662","severity":1,"message":"663","line":152,"column":39,"nodeType":"664","messageId":"665","endLine":152,"endColumn":78,"fix":"685"},{"ruleId":"662","severity":1,"message":"663","line":156,"column":39,"nodeType":"664","messageId":"665","endLine":156,"endColumn":75,"fix":"686"},{"ruleId":"662","severity":1,"message":"687","line":157,"column":39,"nodeType":"664","messageId":"665","endLine":157,"endColumn":63,"fix":"688"},{"ruleId":"662","severity":1,"message":"663","line":161,"column":39,"nodeType":"664","messageId":"665","endLine":161,"endColumn":77,"fix":"689"},{"ruleId":"662","severity":1,"message":"663","line":165,"column":39,"nodeType":"664","messageId":"665","endLine":165,"endColumn":76,"fix":"690"},{"ruleId":"662","severity":1,"message":"663","line":169,"column":39,"nodeType":"664","messageId":"665","endLine":169,"endColumn":76,"fix":"691"},{"ruleId":"662","severity":1,"message":"663","line":173,"column":39,"nodeType":"664","messageId":"665","endLine":173,"endColumn":69,"fix":"692"},{"ruleId":"605","severity":1,"message":"672","line":177,"column":8,"nodeType":"607","endLine":177,"endColumn":77,"suggestions":"693"},{"ruleId":"605","severity":1,"message":"672","line":182,"column":8,"nodeType":"607","endLine":182,"endColumn":27,"suggestions":"694"},{"ruleId":"657","severity":1,"message":"658","line":187,"column":13,"nodeType":"659","messageId":"660","endLine":187,"endColumn":148},{"ruleId":"657","severity":1,"message":"658","line":188,"column":13,"nodeType":"659","messageId":"660","endLine":188,"endColumn":150},{"ruleId":"657","severity":1,"message":"658","line":189,"column":13,"nodeType":"659","messageId":"660","endLine":189,"endColumn":126},{"ruleId":"609","severity":1,"message":"610","line":191,"column":49,"nodeType":"611","messageId":"612","endLine":191,"endColumn":51},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"654","line":94,"column":23,"nodeType":"591","messageId":"592","endLine":94,"endColumn":35},{"ruleId":"605","severity":1,"message":"695","line":138,"column":8,"nodeType":"607","endLine":138,"endColumn":27,"suggestions":"696"},{"ruleId":"589","severity":1,"message":"620","line":3,"column":20,"nodeType":"591","messageId":"592","endLine":3,"endColumn":24},{"ruleId":"589","severity":1,"message":"618","line":6,"column":10,"nodeType":"591","messageId":"592","endLine":6,"endColumn":20},{"ruleId":"589","severity":1,"message":"621","line":7,"column":10,"nodeType":"591","messageId":"592","endLine":7,"endColumn":14},{"ruleId":"589","severity":1,"message":"622","line":9,"column":18,"nodeType":"591","messageId":"592","endLine":9,"endColumn":29},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"622","line":15,"column":18,"nodeType":"591","messageId":"592","endLine":15,"endColumn":29},{"ruleId":"589","severity":1,"message":"630","line":94,"column":12,"nodeType":"591","messageId":"592","endLine":94,"endColumn":18},{"ruleId":"589","severity":1,"message":"631","line":94,"column":20,"nodeType":"591","messageId":"592","endLine":94,"endColumn":29},{"ruleId":"589","severity":1,"message":"654","line":104,"column":23,"nodeType":"591","messageId":"592","endLine":104,"endColumn":35},{"ruleId":"605","severity":1,"message":"697","line":223,"column":8,"nodeType":"607","endLine":223,"endColumn":27,"suggestions":"698"},{"ruleId":"589","severity":1,"message":"699","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":17},{"ruleId":"589","severity":1,"message":"643","line":5,"column":38,"nodeType":"591","messageId":"592","endLine":5,"endColumn":45},{"ruleId":"589","severity":1,"message":"627","line":5,"column":52,"nodeType":"591","messageId":"592","endLine":5,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":26},{"ruleId":"589","severity":1,"message":"644","line":9,"column":8,"nodeType":"591","messageId":"592","endLine":9,"endColumn":16},{"ruleId":"589","severity":1,"message":"645","line":12,"column":9,"nodeType":"591","messageId":"592","endLine":12,"endColumn":23},{"ruleId":"589","severity":1,"message":"621","line":15,"column":9,"nodeType":"591","messageId":"592","endLine":15,"endColumn":13},{"ruleId":"589","severity":1,"message":"700","line":15,"column":27,"nodeType":"591","messageId":"592","endLine":15,"endColumn":38},{"ruleId":"589","severity":1,"message":"701","line":23,"column":8,"nodeType":"591","messageId":"592","endLine":23,"endColumn":18},{"ruleId":"589","severity":1,"message":"702","line":25,"column":11,"nodeType":"591","messageId":"592","endLine":25,"endColumn":16},{"ruleId":"589","severity":1,"message":"647","line":98,"column":11,"nodeType":"591","messageId":"592","endLine":98,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":101,"column":12,"nodeType":"591","messageId":"592","endLine":101,"endColumn":18},{"ruleId":"589","severity":1,"message":"648","line":102,"column":12,"nodeType":"591","messageId":"592","endLine":102,"endColumn":24},{"ruleId":"589","severity":1,"message":"649","line":102,"column":26,"nodeType":"591","messageId":"592","endLine":102,"endColumn":41},{"ruleId":"589","severity":1,"message":"650","line":106,"column":12,"nodeType":"591","messageId":"592","endLine":106,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":284,"column":49,"nodeType":"611","messageId":"612","endLine":284,"endColumn":51},{"ruleId":"609","severity":1,"message":"610","line":496,"column":68,"nodeType":"611","messageId":"612","endLine":496,"endColumn":70},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"654","line":96,"column":23,"nodeType":"591","messageId":"592","endLine":96,"endColumn":35},{"ruleId":"589","severity":1,"message":"656","line":194,"column":11,"nodeType":"591","messageId":"592","endLine":194,"endColumn":19},{"ruleId":"609","severity":1,"message":"610","line":201,"column":49,"nodeType":"611","messageId":"612","endLine":201,"endColumn":51},{"ruleId":"605","severity":1,"message":"703","line":212,"column":8,"nodeType":"607","endLine":212,"endColumn":27,"suggestions":"704"},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"654","line":94,"column":23,"nodeType":"591","messageId":"592","endLine":94,"endColumn":35},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"625","line":1,"column":29,"nodeType":"591","messageId":"592","endLine":1,"endColumn":38},{"ruleId":"589","severity":1,"message":"626","line":2,"column":8,"nodeType":"591","messageId":"592","endLine":2,"endColumn":13},{"ruleId":"589","severity":1,"message":"623","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":14},{"ruleId":"589","severity":1,"message":"627","line":5,"column":52,"nodeType":"591","messageId":"592","endLine":5,"endColumn":56},{"ruleId":"589","severity":1,"message":"628","line":6,"column":13,"nodeType":"591","messageId":"592","endLine":6,"endColumn":19},{"ruleId":"589","severity":1,"message":"629","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":26},{"ruleId":"589","severity":1,"message":"604","line":95,"column":20,"nodeType":"591","messageId":"592","endLine":95,"endColumn":29},{"ruleId":"589","severity":1,"message":"630","line":96,"column":12,"nodeType":"591","messageId":"592","endLine":96,"endColumn":18},{"ruleId":"589","severity":1,"message":"631","line":96,"column":20,"nodeType":"591","messageId":"592","endLine":96,"endColumn":29},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"661","line":123,"column":11,"nodeType":"591","messageId":"592","endLine":123,"endColumn":28},{"ruleId":"609","severity":1,"message":"610","line":217,"column":49,"nodeType":"611","messageId":"612","endLine":217,"endColumn":51},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":6,"column":15,"nodeType":"591","messageId":"592","endLine":6,"endColumn":26},{"ruleId":"589","severity":1,"message":"654","line":100,"column":23,"nodeType":"591","messageId":"592","endLine":100,"endColumn":35},{"ruleId":"662","severity":1,"message":"663","line":136,"column":39,"nodeType":"664","messageId":"665","endLine":136,"endColumn":78,"fix":"705"},{"ruleId":"662","severity":1,"message":"663","line":140,"column":39,"nodeType":"664","messageId":"665","endLine":140,"endColumn":75,"fix":"706"},{"ruleId":"662","severity":1,"message":"663","line":145,"column":39,"nodeType":"664","messageId":"665","endLine":145,"endColumn":77,"fix":"707"},{"ruleId":"662","severity":1,"message":"663","line":149,"column":39,"nodeType":"664","messageId":"665","endLine":149,"endColumn":76,"fix":"708"},{"ruleId":"662","severity":1,"message":"663","line":153,"column":39,"nodeType":"664","messageId":"665","endLine":153,"endColumn":76,"fix":"709"},{"ruleId":"662","severity":1,"message":"663","line":157,"column":39,"nodeType":"664","messageId":"665","endLine":157,"endColumn":69,"fix":"710"},{"ruleId":"605","severity":1,"message":"711","line":159,"column":7,"nodeType":"607","endLine":159,"endColumn":76,"suggestions":"712"},{"ruleId":"589","severity":1,"message":"656","line":180,"column":11,"nodeType":"591","messageId":"592","endLine":180,"endColumn":19},{"ruleId":"657","severity":1,"message":"658","line":182,"column":13,"nodeType":"659","messageId":"660","endLine":182,"endColumn":144},{"ruleId":"657","severity":1,"message":"658","line":183,"column":13,"nodeType":"659","messageId":"660","endLine":183,"endColumn":148},{"ruleId":"657","severity":1,"message":"658","line":184,"column":13,"nodeType":"659","messageId":"660","endLine":184,"endColumn":123},{"ruleId":"609","severity":1,"message":"610","line":186,"column":49,"nodeType":"611","messageId":"612","endLine":186,"endColumn":51},{"ruleId":"589","severity":1,"message":"620","line":3,"column":20,"nodeType":"591","messageId":"592","endLine":3,"endColumn":24},{"ruleId":"589","severity":1,"message":"618","line":6,"column":10,"nodeType":"591","messageId":"592","endLine":6,"endColumn":20},{"ruleId":"589","severity":1,"message":"621","line":7,"column":10,"nodeType":"591","messageId":"592","endLine":7,"endColumn":14},{"ruleId":"589","severity":1,"message":"622","line":9,"column":18,"nodeType":"591","messageId":"592","endLine":9,"endColumn":29},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":2,"column":52,"nodeType":"591","messageId":"592","endLine":2,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"631","line":95,"column":20,"nodeType":"591","messageId":"592","endLine":95,"endColumn":29},{"ruleId":"589","severity":1,"message":"624","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":26},{"ruleId":"589","severity":1,"message":"674","line":110,"column":12,"nodeType":"591","messageId":"592","endLine":110,"endColumn":26},{"ruleId":"589","severity":1,"message":"675","line":110,"column":28,"nodeType":"591","messageId":"592","endLine":110,"endColumn":45},{"ruleId":"609","severity":1,"message":"610","line":244,"column":28,"nodeType":"611","messageId":"612","endLine":244,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":247,"column":35,"nodeType":"611","messageId":"612","endLine":247,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":276,"column":74,"nodeType":"611","messageId":"612","endLine":276,"endColumn":76},{"ruleId":"589","severity":1,"message":"618","line":27,"column":10,"nodeType":"591","messageId":"592","endLine":27,"endColumn":20},{"ruleId":"589","severity":1,"message":"676","line":29,"column":10,"nodeType":"591","messageId":"592","endLine":29,"endColumn":18},{"ruleId":"589","severity":1,"message":"677","line":29,"column":27,"nodeType":"591","messageId":"592","endLine":29,"endColumn":31},{"ruleId":"589","severity":1,"message":"678","line":29,"column":33,"nodeType":"591","messageId":"592","endLine":29,"endColumn":37},{"ruleId":"589","severity":1,"message":"602","line":52,"column":7,"nodeType":"591","messageId":"592","endLine":52,"endColumn":16},{"ruleId":"589","severity":1,"message":"679","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":20},{"ruleId":"605","severity":1,"message":"634","line":106,"column":10,"nodeType":"607","endLine":106,"endColumn":12,"suggestions":"713"},{"ruleId":"589","severity":1,"message":"681","line":123,"column":11,"nodeType":"591","messageId":"592","endLine":123,"endColumn":27},{"ruleId":"589","severity":1,"message":"618","line":27,"column":10,"nodeType":"591","messageId":"592","endLine":27,"endColumn":20},{"ruleId":"589","severity":1,"message":"676","line":29,"column":10,"nodeType":"591","messageId":"592","endLine":29,"endColumn":18},{"ruleId":"589","severity":1,"message":"677","line":29,"column":27,"nodeType":"591","messageId":"592","endLine":29,"endColumn":31},{"ruleId":"589","severity":1,"message":"678","line":29,"column":33,"nodeType":"591","messageId":"592","endLine":29,"endColumn":37},{"ruleId":"589","severity":1,"message":"602","line":52,"column":7,"nodeType":"591","messageId":"592","endLine":52,"endColumn":16},{"ruleId":"589","severity":1,"message":"679","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":20},{"ruleId":"605","severity":1,"message":"634","line":106,"column":10,"nodeType":"607","endLine":106,"endColumn":12,"suggestions":"714"},{"ruleId":"589","severity":1,"message":"681","line":123,"column":11,"nodeType":"591","messageId":"592","endLine":123,"endColumn":27},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"627","line":2,"column":52,"nodeType":"591","messageId":"592","endLine":2,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"631","line":95,"column":20,"nodeType":"591","messageId":"592","endLine":95,"endColumn":29},{"ruleId":"589","severity":1,"message":"624","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":26},{"ruleId":"589","severity":1,"message":"674","line":110,"column":12,"nodeType":"591","messageId":"592","endLine":110,"endColumn":26},{"ruleId":"589","severity":1,"message":"675","line":110,"column":28,"nodeType":"591","messageId":"592","endLine":110,"endColumn":45},{"ruleId":"609","severity":1,"message":"610","line":244,"column":28,"nodeType":"611","messageId":"612","endLine":244,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":247,"column":35,"nodeType":"611","messageId":"612","endLine":247,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":276,"column":74,"nodeType":"611","messageId":"612","endLine":276,"endColumn":76},{"ruleId":"589","severity":1,"message":"599","line":1,"column":16,"nodeType":"591","messageId":"592","endLine":1,"endColumn":27},{"ruleId":"589","severity":1,"message":"653","line":3,"column":46,"nodeType":"591","messageId":"592","endLine":3,"endColumn":51},{"ruleId":"589","severity":1,"message":"627","line":3,"column":52,"nodeType":"591","messageId":"592","endLine":3,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":5,"column":15,"nodeType":"591","messageId":"592","endLine":5,"endColumn":26},{"ruleId":"589","severity":1,"message":"622","line":15,"column":18,"nodeType":"591","messageId":"592","endLine":15,"endColumn":29},{"ruleId":"589","severity":1,"message":"654","line":114,"column":23,"nodeType":"591","messageId":"592","endLine":114,"endColumn":35},{"ruleId":"589","severity":1,"message":"656","line":236,"column":12,"nodeType":"591","messageId":"592","endLine":236,"endColumn":20},{"ruleId":"657","severity":1,"message":"658","line":239,"column":12,"nodeType":"659","messageId":"660","endLine":239,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":253,"column":13,"nodeType":"659","messageId":"660","endLine":253,"endColumn":177},{"ruleId":"657","severity":1,"message":"658","line":254,"column":13,"nodeType":"659","messageId":"660","endLine":254,"endColumn":182},{"ruleId":"657","severity":1,"message":"658","line":255,"column":13,"nodeType":"659","messageId":"660","endLine":255,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":256,"column":13,"nodeType":"659","messageId":"660","endLine":256,"endColumn":198},{"ruleId":"657","severity":1,"message":"658","line":257,"column":13,"nodeType":"659","messageId":"660","endLine":257,"endColumn":202},{"ruleId":"657","severity":1,"message":"658","line":259,"column":13,"nodeType":"659","messageId":"660","endLine":259,"endColumn":161},{"ruleId":"657","severity":1,"message":"658","line":260,"column":13,"nodeType":"659","messageId":"660","endLine":260,"endColumn":167},{"ruleId":"657","severity":1,"message":"658","line":261,"column":13,"nodeType":"659","messageId":"660","endLine":261,"endColumn":189},{"ruleId":"657","severity":1,"message":"658","line":262,"column":13,"nodeType":"659","messageId":"660","endLine":262,"endColumn":205},{"ruleId":"657","severity":1,"message":"658","line":263,"column":13,"nodeType":"659","messageId":"660","endLine":263,"endColumn":155},{"ruleId":"657","severity":1,"message":"658","line":265,"column":13,"nodeType":"659","messageId":"660","endLine":265,"endColumn":147},{"ruleId":"657","severity":1,"message":"658","line":266,"column":13,"nodeType":"659","messageId":"660","endLine":266,"endColumn":147},{"ruleId":"657","severity":1,"message":"658","line":267,"column":13,"nodeType":"659","messageId":"660","endLine":267,"endColumn":189},{"ruleId":"657","severity":1,"message":"658","line":268,"column":13,"nodeType":"659","messageId":"660","endLine":268,"endColumn":185},{"ruleId":"657","severity":1,"message":"658","line":271,"column":13,"nodeType":"659","messageId":"660","endLine":271,"endColumn":141},{"ruleId":"657","severity":1,"message":"658","line":273,"column":13,"nodeType":"659","messageId":"660","endLine":273,"endColumn":153},{"ruleId":"657","severity":1,"message":"658","line":274,"column":13,"nodeType":"659","messageId":"660","endLine":274,"endColumn":131},{"ruleId":"657","severity":1,"message":"658","line":275,"column":13,"nodeType":"659","messageId":"660","endLine":275,"endColumn":145},{"ruleId":"657","severity":1,"message":"658","line":276,"column":13,"nodeType":"659","messageId":"660","endLine":276,"endColumn":175},{"ruleId":"657","severity":1,"message":"658","line":277,"column":13,"nodeType":"659","messageId":"660","endLine":277,"endColumn":149},{"ruleId":"657","severity":1,"message":"658","line":280,"column":13,"nodeType":"659","messageId":"660","endLine":280,"endColumn":186},{"ruleId":"657","severity":1,"message":"658","line":281,"column":13,"nodeType":"659","messageId":"660","endLine":281,"endColumn":166},{"ruleId":"657","severity":1,"message":"658","line":282,"column":13,"nodeType":"659","messageId":"660","endLine":282,"endColumn":167},{"ruleId":"657","severity":1,"message":"658","line":283,"column":13,"nodeType":"659","messageId":"660","endLine":283,"endColumn":194},{"ruleId":"657","severity":1,"message":"658","line":284,"column":13,"nodeType":"659","messageId":"660","endLine":284,"endColumn":160},{"ruleId":"609","severity":1,"message":"610","line":287,"column":49,"nodeType":"611","messageId":"612","endLine":287,"endColumn":51},{"ruleId":"589","severity":1,"message":"699","line":4,"column":8,"nodeType":"591","messageId":"592","endLine":4,"endColumn":17},{"ruleId":"589","severity":1,"message":"643","line":5,"column":38,"nodeType":"591","messageId":"592","endLine":5,"endColumn":45},{"ruleId":"589","severity":1,"message":"627","line":5,"column":52,"nodeType":"591","messageId":"592","endLine":5,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":8,"column":15,"nodeType":"591","messageId":"592","endLine":8,"endColumn":26},{"ruleId":"589","severity":1,"message":"644","line":9,"column":8,"nodeType":"591","messageId":"592","endLine":9,"endColumn":16},{"ruleId":"589","severity":1,"message":"645","line":12,"column":9,"nodeType":"591","messageId":"592","endLine":12,"endColumn":23},{"ruleId":"589","severity":1,"message":"621","line":15,"column":9,"nodeType":"591","messageId":"592","endLine":15,"endColumn":13},{"ruleId":"589","severity":1,"message":"700","line":15,"column":27,"nodeType":"591","messageId":"592","endLine":15,"endColumn":38},{"ruleId":"589","severity":1,"message":"701","line":23,"column":8,"nodeType":"591","messageId":"592","endLine":23,"endColumn":18},{"ruleId":"589","severity":1,"message":"702","line":25,"column":11,"nodeType":"591","messageId":"592","endLine":25,"endColumn":16},{"ruleId":"589","severity":1,"message":"647","line":103,"column":11,"nodeType":"591","messageId":"592","endLine":103,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":105,"column":12,"nodeType":"591","messageId":"592","endLine":105,"endColumn":18},{"ruleId":"589","severity":1,"message":"648","line":106,"column":12,"nodeType":"591","messageId":"592","endLine":106,"endColumn":24},{"ruleId":"589","severity":1,"message":"649","line":106,"column":26,"nodeType":"591","messageId":"592","endLine":106,"endColumn":41},{"ruleId":"589","severity":1,"message":"650","line":110,"column":12,"nodeType":"591","messageId":"592","endLine":110,"endColumn":18},{"ruleId":"589","severity":1,"message":"715","line":115,"column":12,"nodeType":"591","messageId":"592","endLine":115,"endColumn":27},{"ruleId":"589","severity":1,"message":"716","line":116,"column":12,"nodeType":"591","messageId":"592","endLine":116,"endColumn":28},{"ruleId":"609","severity":1,"message":"610","line":279,"column":49,"nodeType":"611","messageId":"612","endLine":279,"endColumn":51},{"ruleId":"609","severity":1,"message":"610","line":515,"column":67,"nodeType":"611","messageId":"612","endLine":515,"endColumn":69},{"ruleId":"589","severity":1,"message":"643","line":4,"column":38,"nodeType":"591","messageId":"592","endLine":4,"endColumn":45},{"ruleId":"589","severity":1,"message":"627","line":4,"column":52,"nodeType":"591","messageId":"592","endLine":4,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":7,"column":15,"nodeType":"591","messageId":"592","endLine":7,"endColumn":26},{"ruleId":"589","severity":1,"message":"644","line":8,"column":8,"nodeType":"591","messageId":"592","endLine":8,"endColumn":16},{"ruleId":"589","severity":1,"message":"645","line":11,"column":9,"nodeType":"591","messageId":"592","endLine":11,"endColumn":23},{"ruleId":"589","severity":1,"message":"600","line":11,"column":25,"nodeType":"591","messageId":"592","endLine":11,"endColumn":30},{"ruleId":"589","severity":1,"message":"701","line":21,"column":8,"nodeType":"591","messageId":"592","endLine":21,"endColumn":18},{"ruleId":"589","severity":1,"message":"622","line":25,"column":18,"nodeType":"591","messageId":"592","endLine":25,"endColumn":29},{"ruleId":"589","severity":1,"message":"647","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":107,"column":12,"nodeType":"591","messageId":"592","endLine":107,"endColumn":18},{"ruleId":"589","severity":1,"message":"604","line":107,"column":20,"nodeType":"591","messageId":"592","endLine":107,"endColumn":29},{"ruleId":"605","severity":1,"message":"717","line":154,"column":8,"nodeType":"607","endLine":154,"endColumn":23,"suggestions":"718"},{"ruleId":"609","severity":1,"message":"610","line":272,"column":28,"nodeType":"611","messageId":"612","endLine":272,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":275,"column":35,"nodeType":"611","messageId":"612","endLine":275,"endColumn":37},{"ruleId":"589","severity":1,"message":"656","line":321,"column":11,"nodeType":"591","messageId":"592","endLine":321,"endColumn":19},{"ruleId":"609","severity":1,"message":"610","line":328,"column":49,"nodeType":"611","messageId":"612","endLine":328,"endColumn":51},{"ruleId":"589","severity":1,"message":"719","line":341,"column":12,"nodeType":"591","messageId":"592","endLine":341,"endColumn":33},{"ruleId":"589","severity":1,"message":"720","line":341,"column":35,"nodeType":"591","messageId":"592","endLine":341,"endColumn":59},{"ruleId":"589","severity":1,"message":"643","line":4,"column":38,"nodeType":"591","messageId":"592","endLine":4,"endColumn":45},{"ruleId":"589","severity":1,"message":"627","line":4,"column":52,"nodeType":"591","messageId":"592","endLine":4,"endColumn":56},{"ruleId":"589","severity":1,"message":"629","line":7,"column":15,"nodeType":"591","messageId":"592","endLine":7,"endColumn":26},{"ruleId":"589","severity":1,"message":"644","line":8,"column":8,"nodeType":"591","messageId":"592","endLine":8,"endColumn":16},{"ruleId":"589","severity":1,"message":"645","line":11,"column":9,"nodeType":"591","messageId":"592","endLine":11,"endColumn":23},{"ruleId":"589","severity":1,"message":"600","line":11,"column":25,"nodeType":"591","messageId":"592","endLine":11,"endColumn":30},{"ruleId":"589","severity":1,"message":"701","line":21,"column":8,"nodeType":"591","messageId":"592","endLine":21,"endColumn":18},{"ruleId":"589","severity":1,"message":"622","line":25,"column":18,"nodeType":"591","messageId":"592","endLine":25,"endColumn":29},{"ruleId":"589","severity":1,"message":"647","line":101,"column":11,"nodeType":"591","messageId":"592","endLine":101,"endColumn":18},{"ruleId":"589","severity":1,"message":"603","line":107,"column":12,"nodeType":"591","messageId":"592","endLine":107,"endColumn":18},{"ruleId":"589","severity":1,"message":"604","line":107,"column":20,"nodeType":"591","messageId":"592","endLine":107,"endColumn":29},{"ruleId":"589","severity":1,"message":"656","line":254,"column":11,"nodeType":"591","messageId":"592","endLine":254,"endColumn":19},{"ruleId":"609","severity":1,"message":"610","line":261,"column":49,"nodeType":"611","messageId":"612","endLine":261,"endColumn":51},{"ruleId":"589","severity":1,"message":"719","line":274,"column":12,"nodeType":"591","messageId":"592","endLine":274,"endColumn":33},{"ruleId":"589","severity":1,"message":"720","line":274,"column":35,"nodeType":"591","messageId":"592","endLine":274,"endColumn":59},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'makeStyles' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["721"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"722","text":"723"},"'FaUserPlus' is defined but never used.","'TiArrowForward' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'LabelRibbon' is defined but never used.","'Button' is defined but never used.","'handleItemClick' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'CardContent' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.",{"range":"724","text":"723"},"'patientList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["725"],"'classNames' is defined but never used.","'patientCurrentStatus' is assigned a value but never used.","'permissions' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentStatus'. Either include it or remove the dependency array.",["726"],"'classes' is assigned a value but never used.","'Spinner' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'fontWeight' is defined but never used.","'history' is assigned a value but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'country', 'getStates', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["727"],"'Input' is defined but never used.","'setObjValues' is assigned a value but never used.","'calculate_age' is assigned a value but never used.","'validate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleInputChange' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['rencencyInterpretation'] found.","Property","unnecessarilyComputedProperty",{"range":"728","text":"729"},{"range":"730","text":"729"},{"range":"731","text":"729"},{"range":"732","text":"729"},{"range":"733","text":"729"},{"range":"734","text":"729"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["735"],"'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'Icon' is defined but never used.","'patientId' is assigned a value but never used.",["736"],"'handleIEditIndex' is assigned a value but never used.",{"range":"737","text":"723"},["738"],["739"],{"range":"740","text":"729"},{"range":"741","text":"729"},"Unnecessarily computed property ['hasViralLoad'] found.",{"range":"742","text":"743"},{"range":"744","text":"729"},{"range":"745","text":"729"},{"range":"746","text":"729"},{"range":"747","text":"729"},["748"],["749"],"React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["750"],"React Hook useEffect has missing dependencies: 'knowledgeAssessment', 'riskAssessment', 'riskAssessmentPartner', 'stiScreening', and 'tbScreening'. Either include them or remove the dependency array. You can also do a functional update 'setKnowledgeAssessment(k => ...)' if you only need 'knowledgeAssessment' in the 'setKnowledgeAssessment' call.",["751"],"'MatButton' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has missing dependencies: 'cd4Count', 'confirmatoryTest', 'hepatitis', 'initialTest', 'others', 'syphills', and 'tieBreakerTest'. Either include them or remove the dependency array. You can also do a functional update 'setConfirmatoryTest(c => ...)' if you only need 'confirmatoryTest' in the 'setConfirmatoryTest' call.",["752"],{"range":"753","text":"729"},{"range":"754","text":"729"},{"range":"755","text":"729"},{"range":"756","text":"729"},{"range":"757","text":"729"},{"range":"758","text":"729"},"React Hook useEffect has missing dependencies: 'props.patientObj' and 'recency'. Either include them or remove the dependency array. If 'setRecency' needs the current value of 'props.patientObj', you can also switch to useReducer instead of useState and read 'props.patientObj' in the reducer.",["759"],["760"],["761"],"'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["762"],"'riskAssessmentPartner' is assigned a value but never used.","'setRiskAssessmentPartner' is assigned a value but never used.",{"desc":"763","fix":"764"},[136,150],"token",[149,163],{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},[4332,4358],"'rencencyInterpretation'",[4599,4625],[4938,4964],[5208,5234],[5476,5502],[5600,5626],{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},[184,198],{"desc":"765","fix":"775"},{"desc":"763","fix":"776"},[4966,4992],[5263,5289],[5342,5358],"'hasViralLoad'",[5600,5626],[5895,5921],[6188,6214],[6358,6384],{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},[4332,4358],[4599,4625],[4938,4964],[5208,5234],[5476,5502],[5600,5626],{"desc":"771","fix":"787"},{"desc":"773","fix":"788"},{"desc":"773","fix":"789"},{"desc":"790","fix":"791"},"Update the dependencies array to be: [locationState]",{"range":"792","text":"793"},"Update the dependencies array to be: [patients, props.patientObj]",{"range":"794","text":"795"},"Update the dependencies array to be: [PatientCurrentStatus, props.patientObj]",{"range":"796","text":"797"},"Update the dependencies array to be: [objValues.age, props.patientObj, props.extra.age, getStates, props, country]",{"range":"798","text":"799"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"800","text":"801"},"Update the dependencies array to be: [patients]",{"range":"802","text":"803"},{"range":"804","text":"795"},{"range":"805","text":"793"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, recency]",{"range":"806","text":"807"},"Update the dependencies array to be: [props.patientObj, recency]",{"range":"808","text":"809"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"810","text":"811"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment, riskAssessmentPartner, stiScreening, tbScreening]",{"range":"812","text":"813"},"Update the dependencies array to be: [cd4Count, confirmatoryTest, hepatitis, initialTest, others, props.patientObj, syphills, tieBreakerTest]",{"range":"814","text":"815"},{"range":"816","text":"801"},{"range":"817","text":"803"},{"range":"818","text":"803"},"Update the dependencies array to be: [objValues.age, props]",{"range":"819","text":"820"},[7736,7738],"[locationState]",[893,911],"[patients, props.patientObj]",[2225,2243],"[PatientCurrentStatus, props.patientObj]",[10725,10775],"[objValues.age, props.patientObj, props.extra.age, getStates, props, country]",[5652,5739],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[4009,4011],"[patients]",[3889,3907],[7490,7492],[6415,6484],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, recency]",[6593,6612],"[props.patientObj, recency]",[4387,4406],"[postTest, props.patientObj]",[8363,8382],"[knowledgeAssessment, props.patientObj, riskAssessment, riskAssessmentPartner, stiScreening, tbScreening]",[7092,7111],"[cd4Count, confirmatoryTest, hepatitis, initialTest, others, props.patientObj, syphills, tieBreakerTest]",[5652,5721],[4009,4011],[4009,4011],[4778,4793],"[objValues.age, props]"]