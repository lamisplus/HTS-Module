[{"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\index.js":"1","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\App.js":"2","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"9","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"10","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"11","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"12","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"13","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"14","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"15","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"16","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"17","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"18","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"19","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"20","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"21","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\api.js":"22","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"23","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"24","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"25","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"26","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"27","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"28","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"29","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"30","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\History.js":"31","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"32","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"33","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"34","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"35","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"36","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"37","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"38","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"39","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"40","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"41","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"42","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"43","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"44","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"45","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"46","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"47","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"48","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"49","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"50"},{"size":739,"mtime":1675240291290,"results":"51","hashOfConfig":"52"},{"size":1311,"mtime":1675373861020,"results":"53","hashOfConfig":"52"},{"size":9235,"mtime":1675240292031,"results":"54","hashOfConfig":"52"},{"size":375,"mtime":1675240295007,"results":"55","hashOfConfig":"52"},{"size":3056,"mtime":1675240292032,"results":"56","hashOfConfig":"52"},{"size":2195,"mtime":1675374888262,"results":"57","hashOfConfig":"52"},{"size":3803,"mtime":1675373862322,"results":"58","hashOfConfig":"52"},{"size":18157,"mtime":1676286314366,"results":"59","hashOfConfig":"52"},{"size":12827,"mtime":1675240294947,"results":"60","hashOfConfig":"52"},{"size":10511,"mtime":1675374827854,"results":"61","hashOfConfig":"52"},{"size":11068,"mtime":1675513403212,"results":"62","hashOfConfig":"52"},{"size":8951,"mtime":1675699447421,"results":"63","hashOfConfig":"52"},{"size":4042,"mtime":1675373862160,"results":"64","hashOfConfig":"52"},{"size":67030,"mtime":1676902568646,"results":"65","hashOfConfig":"52"},{"size":6796,"mtime":1675373862380,"results":"66","hashOfConfig":"52"},{"size":67813,"mtime":1676283533758,"results":"67","hashOfConfig":"52"},{"size":82240,"mtime":1676982662930,"results":"68","hashOfConfig":"52"},{"size":2160,"mtime":1675373862204,"results":"69","hashOfConfig":"52"},{"size":34599,"mtime":1675697369604,"results":"70","hashOfConfig":"52"},{"size":32477,"mtime":1676281878094,"results":"71","hashOfConfig":"52"},{"size":57936,"mtime":1675513562398,"results":"72","hashOfConfig":"52"},{"size":422,"mtime":1677188201595,"results":"73","hashOfConfig":"52"},{"size":34075,"mtime":1677187950730,"results":"74","hashOfConfig":"52"},{"size":12827,"mtime":1675240294971,"results":"75","hashOfConfig":"52"},{"size":8634,"mtime":1676975163321,"results":"76","hashOfConfig":"52"},{"size":48688,"mtime":1676979725773,"results":"77","hashOfConfig":"52"},{"size":17595,"mtime":1677183512597,"results":"78","hashOfConfig":"52"},{"size":67981,"mtime":1676286280834,"results":"79","hashOfConfig":"52"},{"size":34071,"mtime":1675697375801,"results":"80","hashOfConfig":"52"},{"size":34594,"mtime":1677186045911,"results":"81","hashOfConfig":"52"},{"size":6998,"mtime":1675759090184,"results":"82","hashOfConfig":"52"},{"size":79475,"mtime":1677186806296,"results":"83","hashOfConfig":"52"},{"size":2237,"mtime":1675513403187,"results":"84","hashOfConfig":"52"},{"size":1185,"mtime":1675373862364,"results":"85","hashOfConfig":"52"},{"size":2624,"mtime":1675373862378,"results":"86","hashOfConfig":"52"},{"size":12827,"mtime":1675240294924,"results":"87","hashOfConfig":"52"},{"size":35023,"mtime":1677181024091,"results":"88","hashOfConfig":"52"},{"size":35286,"mtime":1677188149377,"results":"89","hashOfConfig":"52"},{"size":50434,"mtime":1677157880937,"results":"90","hashOfConfig":"52"},{"size":1221,"mtime":1675373862373,"results":"91","hashOfConfig":"52"},{"size":1600,"mtime":1675373862371,"results":"92","hashOfConfig":"52"},{"size":1209,"mtime":1675373862361,"results":"93","hashOfConfig":"52"},{"size":8630,"mtime":1676975253841,"results":"94","hashOfConfig":"52"},{"size":48572,"mtime":1676979704526,"results":"95","hashOfConfig":"52"},{"size":71935,"mtime":1677181023895,"results":"96","hashOfConfig":"52"},{"size":81485,"mtime":1676282446861,"results":"97","hashOfConfig":"52"},{"size":2261,"mtime":1675513403121,"results":"98","hashOfConfig":"52"},{"size":36294,"mtime":1677157880857,"results":"99","hashOfConfig":"52"},{"size":8630,"mtime":1676977739484,"results":"100","hashOfConfig":"52"},{"size":48504,"mtime":1676979755772,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"n8o6rq",{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"138","usedDeprecatedRules":"105"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":6,"source":"159","usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"105"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"105"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"105"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"105"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"105"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"105"},"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\index.js",["234"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["235","236"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\App.js",["237"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport RegisterPatient from './main/webapp/jsx/components/Patient/RegisterPatient';\r\n//import RegisterPatientEnrollment from './main/webapp/jsx/components/Patient/RegisterPatientEnrollment';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n        <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>          \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatient />\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Home.js",["238","239"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>HTS</h4></li>\r\n\t\t\t</ol>  \r\n\t\t  </div>\r\n        <Link to={\"register-patient\"}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"mt-2 mr-3 mb-0 float-end\"\r\n                  startIcon={<FaUserPlus size=\"10\"/>}\r\n                  style={{backgroundColor:'#014d88',}}\r\n              >\r\n                  <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n              </Button>\r\n        </Link>            \r\n        <br/><br/> <br/>      \r\n        <Row>       \r\n        <Col xl={12}>\r\n        <Card style={divStyle}>\r\n        <Card.Body>   \r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Patients\">                   \r\n                  <Dashboard />\r\n                  </Tab> \r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation \">                   \r\n                  <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n                \r\n              </div>\r\n              </Card.Body>\r\n        </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["240","241"],"import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport PatientHtsEnrollment from './PatientHtsEnrollment'\r\nimport moment from \"moment\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [activePage, setActivePage] = useState({activePage:\"home\", activeObject:{}, actionType:\"\"});\r\n    const { classes } = props;\r\n    useEffect(() => { \r\n\r\n    }, [activePage]);\r\n    const patientObject= history.location && history.location.state ? history.location.state.patientObject : {}\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const clientCode =history.location && history.location.state ? history.location.state.clientCode : \"\"\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m;\r\n              }\r\n              return age_now;\r\n  };\r\n  const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HTS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} clientCode={clientCode} patientObject={patientObject}/>\r\n            {activePage.activePage===\"home\" && (\r\n              <PatientHistory patientObj={patientObj} activePage={activePage} setActivePage={setActivePage} clientCode={clientCode} patientAge={patientAge} patientObject={patientObject}/>\r\n            )}\r\n            {activePage.activePage===\"view\" && (\r\n              <PatientHtsEnrollment patientObj={patientObj} activePage={activePage} setActivePage={setActivePage} clientCode={clientCode} patientAge={patientAge} patientObject={patientObject}/>\r\n            )}\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["242","243","244","245","246","247","248","249","250"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { Button} from 'semantic-ui-react'\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport BasicInfo from './NewRegistration/BasicInfo'\r\nimport PreTest from './NewRegistration/PreTest'\r\nimport HivTestResult from './NewRegistration/HivTestResult'\r\nimport IndexingContactTracing from './NewRegistration/Elicitation/Index'\r\nimport Others from './NewRegistration/Others'\r\nimport PostTest from './NewRegistration/PostTest'\r\nimport RecencyTesting from './NewRegistration/RecencyTesting'\r\nimport RiskStratification from './NewRegistration/RiskStratification'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    //const classes = useStyles();\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    const [saving, setSaving] = useState(false);\r\n    const [activeItem, setactiveItem] = useState('risk');\r\n    const [completed, setCompleted] = useState([]);\r\n    \r\n    const [patientObjAge, setPatientObjAge] = useState(0);\r\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n    const [extra, setExtra] = useState({\r\n        risk:\"\",\r\n        index:\"\",\r\n        pre:\"\",\r\n        post:\"\",\r\n        recency:\"\",\r\n        elicitation:\"\"\r\n    });\r\n    const [patientObj, setPatientObj] = useState({\r\n        breastFeeding: \"\",\r\n        capturedBy: \"\",\r\n        riskStratificationCode:\"\",\r\n        cd4: {},\r\n        clientCode: \"\",\r\n        confirmatoryTest: {},\r\n        dateVisit: \"\",\r\n        extra: {},\r\n        firstTimeVisit: \"\",\r\n        hepatitisTesting: {},\r\n        hivTestResult: \"\",\r\n        id: \"\",\r\n        indexClient: \"\",\r\n        indexClientCode: \"\",\r\n        indexElicitation: [\r\n          {\r\n            address: \"\",\r\n            altPhoneNumber: \"\",\r\n            archived: 0,\r\n            currentlyLiveWithPartner: true,\r\n            datePartnerCameForTesting: \"\",\r\n            dob: \"\",\r\n            extra: {},\r\n            facilityId: 0,\r\n            firstName: \"\",\r\n            hangOutSpots: \"\",\r\n            htsClient: {\r\n              archived: 0,\r\n              breastFeeding: 0,\r\n              capturedBy: \"\",\r\n              cd4: {},\r\n              clientCode: \"\",\r\n              confirmatoryTest: {},\r\n              dateVisit: \"\",\r\n              extra: {},\r\n              facilityId: 0,\r\n              firstTimeVisit: true,\r\n              hepatitisTesting: {},\r\n              hivTestResult: \"\",\r\n              id: 0,\r\n              indexClient: true,\r\n              indexClientCode: \"\",\r\n              indexNotificationServicesElicitation: {},\r\n              knowledgeAssessment: {},\r\n              numChildren: 0,\r\n              numWives: 0,\r\n              others: {},\r\n              person: {\r\n                active: \"\",\r\n                address: {},\r\n                archived: 0,\r\n                contact: {},\r\n                contactPoint: {},\r\n                createdDate: \"\",\r\n                dateOfBirth: \"\",\r\n                dateOfRegistration: \"\",\r\n                deceased: true,\r\n                deceasedDateTime: \"\",\r\n                education: {},\r\n                employmentStatus: {},\r\n                emrId: \"\",\r\n                facilityId: 0,\r\n                firstName: \"string\",\r\n                gender: {},\r\n                hospitalNumber: \"\",\r\n                id: \"\",\r\n                identifier: {},\r\n                isDateOfBirthEstimated: true,\r\n                lastModifiedDate: \"\",\r\n                maritalStatus: {},\r\n                new: true,\r\n                ninNumber: \"\",\r\n                organization: {},\r\n                otherName: \"\",\r\n                sex: \"\",\r\n                surname: \"\",\r\n                uuid: \"\"\r\n              },\r\n              personUuid: \"\",\r\n              postTestCounselingKnowledgeAssessment: {},\r\n              pregnant: \"\",\r\n              previouslyTested: true,\r\n              recency: {},\r\n              referredFrom: \"\",\r\n              relationWithIndexClient: \"\",\r\n              riskAssessment: {},\r\n              sexPartnerRiskAssessment: {},\r\n              stiScreening: {},\r\n              syphilisTesting: {},\r\n              targetGroup: 0,\r\n              tbScreening: {},\r\n              test1: {},\r\n              testingSetting: \"\",\r\n              tieBreakerTest: {},\r\n              typeCounseling: \"\",\r\n              uuid: \"\"\r\n            },\r\n            htsClientUuid: \"\",\r\n            id: \"\",\r\n            isDateOfBirthEstimated: true,\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            notificationMethod: \"\",\r\n            partnerTestedPositive: \"\",\r\n            phoneNumber: \"\",\r\n            physicalHurt: \"\",\r\n            relationshipToIndexClient: \"\",\r\n            sex: \"\",\r\n            sexuallyUncomfortable: \"\",\r\n            threatenToHurt: \"\",\r\n            uuid: \"\"\r\n          }\r\n        ],\r\n        indexNotificationServicesElicitation: {},\r\n        knowledgeAssessment: {},\r\n        numChildren: \"\",\r\n        numWives: \"\",\r\n        others: {},\r\n        personId: \"\",\r\n        personResponseDto: {\r\n          active: true,\r\n          \r\n        address: {\r\n            address: [\r\n              {\r\n                city: \"\",\r\n                line: [\r\n                  \"\"\r\n                ],\r\n                stateId: \"\",\r\n                district: \"\",\r\n                countryId: 1,\r\n                postalCode: \"\",\r\n                organisationUnitId: 0\r\n              }\r\n            ]\r\n          },\r\n          biometricStatus: true,\r\n          checkInDate: \"\",\r\n          contact: {},\r\n          contactPoint:{contactPoint:[\r\n            {\r\n                type: \"phone\",\r\n                value: \"\"\r\n            }\r\n            ]},\r\n          dateOfBirth: \"\",\r\n          dateOfRegistration: \"\",\r\n          deceased: true,\r\n          deceasedDateTime: \"\",\r\n          education: {},\r\n          employmentStatus: {},\r\n          emrId: \"\",\r\n          encounterDate: \"\",\r\n          facilityId: \"\",\r\n          firstName: \"\",\r\n          gender: {},\r\n          id: \"\",\r\n          identifier: {},\r\n          isDateOfBirthEstimated: true,\r\n          maritalStatus: {},\r\n          ninNumber: \"\",\r\n          organization: {},\r\n          otherName: \"\",\r\n          sex: \"\",\r\n          surname: \"\",\r\n          visitId: \"\"\r\n        },\r\n        postTestCounselingKnowledgeAssessment: {},\r\n        pregnant: \"\",\r\n        previouslyTested: \"\",\r\n        recency: {},\r\n        referredFrom: \"\",\r\n        relationWithIndexClient: \"\",\r\n        riskAssessment: {},\r\n        sexPartnerRiskAssessment: {},\r\n        stiScreening: {},\r\n        syphilisTesting: {},\r\n        targetGroup: \"\",\r\n        tbScreening: {},\r\n        test1: {},\r\n        testingSetting: \"\",\r\n        tieBreakerTest: {},\r\n        typeCounseling: \"\",\r\n        riskStratificationResponseDto:null\r\n        \r\n      });\r\n    useEffect(() => { \r\n        if(locationState && locationState.patientObj){\r\n            setPatientObj(locationState.patientObj)           \r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n            <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item active\"><h4>HTS / <span style={{color:\"#014D88\", fontSize: \"1.1rem\", fontWeight:\"bolder\"}}>NEW HTS CLIENT</span></h4></li>\r\n            </ol>\r\n                \r\n            </div>\r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                    <h3>HIV COUNSELLING AND TESTING\r\n                    <Link to={\"/\"} >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end\"\r\n                                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                                style={{backgroundColor:'#014d88', }}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </Button>\r\n                    </Link>\r\n                    </h3>\r\n                        <br/>\r\n                        <br/>\r\n                        \r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                       \r\n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'risk'}\r\n                                onClick={()=>handleItemClick('risk')}\r\n                                style={{backgroundColor:activeItem === 'risk' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Risk Stratification\r\n                                {completed.includes('risk') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                            </Menu.Item>\r\n                            {hideOtherMenu==false && (<>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'basic'}\r\n                                onClick={()=>handleItemClick('basic')}\r\n                                style={{backgroundColor:activeItem === 'basic' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'basic' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Basic Information\r\n                                {completed.includes('basic') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                            </Menu.Item>\r\n                            {patientObjAge>14 && (\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'pre-test-counsel'}\r\n                                onClick={()=>handleItemClick('pre-test-counsel')}\r\n                                style={{backgroundColor:activeItem === 'pre-test-counsel' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                            >\r\n                            {/* <Label>2</Label> */}\r\n                            <span style={{color:'#fff'}}>Pre Test Counseling\r\n                            {completed.includes('pre-test-counsel') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span> \r\n                            </Menu.Item>\r\n                            )}\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'hiv-test'}\r\n                                onClick={()=>handleItemClick('hiv-test')}\r\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'hiv-test' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\r\n                                {completed.includes('hiv-test') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'post-test'}\r\n                                onClick={()=>handleItemClick('post-test')}\r\n                                style={{backgroundColor:activeItem === 'post-test' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'post-test' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Post Test Counseling \r\n                            {completed.includes('post-test') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}</span>\r\n                            \r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'recency-testing'}\r\n                                onClick={()=>handleItemClick('recency-testing')}\r\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'recency-testing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>HIV Recency Testing\r\n                            {completed.includes('recency-testing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                           \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'indexing'}\r\n                                onClick={()=>handleItemClick('indexing')}\r\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'indexing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\r\n                            {completed.includes('indexing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                        </>)}   \r\n                        </Menu>\r\n                     \r\n                        </div>\r\n                       \r\n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\r\n                            {activeItem==='risk' && (<RiskStratification handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setPatientObjAge={setPatientObjAge} setHideOtherMenu={setHideOtherMenu} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setPatientObjAge={setPatientObjAge} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} setExtra={setExtra} extra={extra}/>)}\r\n                            \r\n                        </div>                                   \r\n                    </div>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["251","252","253","254","255","256","257","258","259","260"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["261","262"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label, } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n//import moment from \"moment\";\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\nconst Patients = (props) => {    \r\n    //const [patientList, setPatientList] = useState([])\r\n    //const [loading, setLoading] = useState(false)\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    //const baseUrl2 = \"http://localhost:8282/api/v2/\"\r\n    useEffect(() => {\r\n        //patients()\r\n      }, []);\r\n\r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden:showPPI\r\n            },\r\n            // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"HTS Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            \r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}hts/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            //setLoading(false)\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                                    name: row.firstName + \" \" + row.surname,\r\n                                    // hospital_number: row.hospitalNumber,\r\n                                    clientCode: row.clientCode,\r\n                                    gender: row.gender,\r\n                                    age: row.age,\r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.htsCount}</Label>),\r\n                                    actions:\r\n                                            <div>\r\n                                                {row.htsCount >=0 && (\r\n                                                <>\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: \"/patient-history\",\r\n                                                            state: {patientObject: row, patientObj: row, clientCode:row.clientCode}\r\n                                                        }}\r\n                                                        \r\n                                                    >\r\n                                                        <ButtonGroup variant=\"contained\" \r\n                                                            aria-label=\"split button\"\r\n                                                            style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                            size=\"large\"\r\n                                                        >\r\n                                                        <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        aria-label=\"select merge strategy\"\r\n                                                        aria-haspopup=\"menu\"\r\n                                                        style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                        >\r\n                                                            <MdDashboard />\r\n                                                        </Button>\r\n                                                        <Button \r\n                                                        style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                        >\r\n                                                            <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                        </Button>\r\n                                                        \r\n                                                        </ButtonGroup>\r\n                                                    </Link> \r\n                                                </>\r\n                                                )}           \r\n                                            </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                            })\r\n                            //setLoading(false)\r\n                        })\r\n                )}\r\n                \r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div >\r\n                        <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"                       \r\n                            name=\"showPP!\"\r\n                            id=\"showPP\"\r\n                            value=\"showPP\"\r\n                            checked={showPPI===true? false : true}\r\n                            onChange={handleCheckBox}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            />\r\n                            <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                            >\r\n                            <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                            </label>\r\n                        </div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["263","264","265","266","267","268"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { Button} from 'semantic-ui-react'\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link} from \"react-router-dom\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport BasicInfo from './NewRegistrationEnrollement/BasicInfo'\r\nimport PreTest from './NewRegistrationEnrollement/PreTest'\r\nimport HivTestResult from './NewRegistrationEnrollement/HivTestResult'\r\nimport IndexingContactTracing from './NewRegistrationEnrollement/Elicitation/Index'\r\nimport Others from './NewRegistrationEnrollement/Others'\r\nimport PostTest from './NewRegistrationEnrollement/PostTest'\r\nimport RecencyTesting from './NewRegistrationEnrollement/RecencyTesting'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const classes = useStyles();\r\n    const [activeItem, setactiveItem] = useState('basic');\r\n    const [completed, setCompleted] = useState([]);\r\n    const [patientObj, setPatientObj] = useState(props.activePage.activeObject);\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n\r\n    const LoadViewPage =(row, actionType)=>{\r\n        props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                    <h3>HIV COUNSELLING AND TESTING   -  {patientObj && patientObj.dateVisit ? patientObj.dateVisit :\"\"}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end\"\r\n                                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                                style={{backgroundColor:'#014d88', }}\r\n                                onClick={LoadViewPage}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </Button>\r\n\r\n                    </h3>\r\n                        <br/>\r\n                        <br/>\r\n                       \r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                       \r\n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'basic'}\r\n                                onClick={()=>handleItemClick('basic')}\r\n                                style={{backgroundColor:activeItem === 'basic' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Basic Information\r\n                                    {completed.includes('basic') && (\r\n                                        <Icon name='check' color='green' />\r\n                                    )}\r\n                                </span>\r\n                                \r\n                            </Menu.Item>\r\n                            {props.patientAge>14 && (\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'pre-test-counsel'}\r\n                                onClick={()=>handleItemClick('pre-test-counsel')}\r\n                                style={{backgroundColor:activeItem === 'pre-test-counsel' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                            >\r\n                            {/* <Label>2</Label> */}\r\n                                <span style={{color:'#fff'}}>Pre Test Counseling\r\n                                {completed.includes('pre-test-counsel') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                            </Menu.Item>\r\n                            )}\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'hiv-test'}\r\n                                onClick={()=>handleItemClick('hiv-test')}\r\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\r\n                                {completed.includes('hiv-test') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'post-test'}\r\n                                onClick={()=>handleItemClick('post-test')}\r\n                                style={{backgroundColor:activeItem === 'post-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'post-test' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Post Test Counseling\r\n                            {completed.includes('post-test') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'recency-testing'}\r\n                                onClick={()=>handleItemClick('recency-testing')}\r\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'recency-testing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>HIV Recency Testing\r\n                            {completed.includes('recency-testing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'indexing'}\r\n                                onClick={()=>handleItemClick('indexing')}\r\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'indexing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\r\n                            {completed.includes('indexing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            </Menu.Item>\r\n                           \r\n                        </Menu>\r\n                       \r\n                        </div>\r\n                       \r\n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\r\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage} patientAge={props.patientAge}/>)}\r\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            \r\n                        </div>                                   \r\n                    </div>\r\n\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["269","270","271","272","273"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\n//import Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Label, Sticky} from \"semantic-ui-react\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  //const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setPatientObj] = useState(null)\r\n  console.log(props.patientObj)\r\n  useEffect(() => {\r\n    PatientCurrentObject();\r\n  }, [props.patientObj]);\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentObject() {\r\n        axios\r\n            .get(`${baseUrl}hts/persons/${patientObjs.personId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setPatientObj(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      const houseAddress=address && address.line[0]!==null ? address.line[0] :\"\"      \r\n      const landMark=address && address.city && address.city!==null ? address.city :\"\"    \r\n      return address ? houseAddress + \" \" + landMark : '';\r\n    };\r\n    \r\n  \r\n  return (\r\n    <Sticky >\r\n    <div className={classes.root}>\r\n       \r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >\r\n                \r\n                <Row>\r\n                  \r\n                    <Col md={12}>\r\n                      \r\n                    <Row className={\"mt-1\"}>\r\n                    {patientObj && patientObj!==null ? (\r\n                    <>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.personResponseDto.firstName + \" \" + patientObj.personResponseDto.surname }\r\n                        </b>\r\n                        <Link to={\"/\"}  >\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\"float-end ms-2 mr-2 mt-2\"\r\n                          //startIcon={<FaUserPlus size=\"10\"/>}\r\n                          style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                        >\r\n                          <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                    </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID :<b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.personResponseDto.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto && patientObj.personResponseDto.sex!==null ?  patientObj.personResponseDto.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.personResponseDto.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.personResponseDto.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Client Code : <b style={{color:'#0B72AA'}}>{patientObj && patientObj.clientCode ? patientObj.clientCode : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n                    {/* <Col md={12}>\r\n                       <div >\r\n                            <Typography variant=\"caption\">\r\n                                <Label color={patientObj && patientObj.hivPositive===true ? \"red\" : \"teal\"} size={\"mini\"}>\r\n                                   STATUS : {patientObj && patientObj.hivPositive===true ? \"Positive\" : \"Negative\"}    \r\n                                </Label>\r\n                              \r\n                            </Typography>\r\n                       </div>                 \r\n                    </Col>      */}\r\n                     </>\r\n                    )\r\n                    :\r\n                    (\r\n                    <p>Loading Please wait...</p>\r\n                    )\r\n                    }\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n            </ExpansionPanel>\r\n    </div>\r\n    </Sticky>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["274","275"],"import React, {useState, Fragment, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport History from './History';\r\nimport ContineousRegistrationTesting from './../Patient/ContineousRegistrationTesting'\r\n//import CheckedInPatients from './Patient/CheckedInPatients'\r\nimport * as moment from 'moment';\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = (props) => {\r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const patientId = props.patientObj && props.patientObj.personId ? props.patientObj.personId: null\r\n    const [key, setKey] = useState('home');\r\n    const [lastVisitCount, setLastVisitCount] = useState(null);\r\n    //Calculate last date of visit \r\n    const calculateLastVisitDate = visitDate => {\r\n      const monthDifference =  moment(new Date(moment(new Date()).format(\"YYYY-MM-DD\"))).diff(new Date(visitDate), 'months', true);\r\n      //console.log(monthDifference)\r\n      return  monthDifference\r\n    }\r\n    useEffect(() => {\r\n        patients();\r\n        patientsCurrentHts();\r\n        if(props.activePage.activePage==='home'){\r\n          setKey('home')\r\n        }\r\n      }, [props.patientObj,props.activePage]);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n      setLoading(true)\r\n        axios\r\n            .get(`${baseUrl}hts/persons/${patientId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data)\r\n                setLoading(false)\r\n                setPatientList(response.data.htsClientDtoList);\r\n            })\r\n            .catch((error) => {  \r\n              setLoading(false)  \r\n            });        \r\n    }\r\n    async function patientsCurrentHts() {\r\n      setLoading(true)\r\n        axios\r\n            .get(`${baseUrl}hts/persons/${patientId}/current-hts`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n              //set the last date of visit after the response\r\n                setLastVisitCount(Math.round(calculateLastVisitDate(response.data.dateVisit)))\r\n            })\r\n            .catch((error) => {  \r\n              //setLoading(false)  \r\n            });        \r\n    }\r\n    \r\n  return (\r\n    <Fragment>  \r\n    <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                <Tab eventKey=\"home\" title=\"HTS HISTORY\">                   \r\n                    <History patientObj={props.patientObj} activePage={props.activePage} setActivePage={props.setActivePage} clientCode={props.clientCode} patientAge={props.patientAge} patients={patients} patientList={patientList} loading={loading}/>\r\n                </Tab>\r\n                {lastVisitCount!==null && lastVisitCount >=3  && ( //check if the last test is more than 3months \r\n                  <Tab eventKey=\"new\" title=\"NEW HTS\">                   \r\n                      <ContineousRegistrationTesting patientObj={props.patientObj} activePage={props.activePage} setActivePage={props.setActivePage} clientCode={props.clientCode} patientAge={props.patientAge} patients={patients}/>\r\n                  </Tab>\r\n                 )}                     \r\n                </Tabs>\r\n                \r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { fontWeight } from \"@mui/system\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //console.log(props)\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [hideNumChild, setHideNumChild] = useState(false);\r\n    const [kP, setKP] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [gender, setGender] = useState([])\r\n    const [sexs, setSexs] = useState([])\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [maritalStatus, setMaritalStatus]= useState([]);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    let temp = { ...errors }\r\n    const [open, setOpen] = React.useState(false)\r\n    const toggle = () => setOpen(!open);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [clientCodeetail, setclientCodeetail]= useState(\"\");\r\n    const [clientCodeetail2, setclientCodeetail2]= useState(\"\");\r\n    const [clientCodeCheck, setClientCodeCheck]= useState(\"\");\r\n    const getPhoneNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n            const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n            return phoneNumber ? phoneNumber.value : '';\r\n       \r\n      };\r\n    const getAddress = (identifier) => {           \r\n        const identifiers = identifier;\r\n            const address = identifiers.address.find(obj => obj.city);      \r\n            return address ? address.city : '';\r\n    };\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const address = props.patientObj.personResponseDto.address ;\r\n    const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            active: true,\r\n            clientCode: props.patientObj && props.patientObj.clientCode ? props.patientObj.clientCode :\"\",\r\n            age: props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? patientAge :\"\",\r\n            dob:props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth :\"\",\r\n            breastFeeding:props.patientObj && props.patientObj.breastFeeding ? props.patientObj.breastFeeding :\"\",\r\n            dateVisit: props.patientObj && props.patientObj.dateVisit ? props.patientObj.dateVisit :\"\",\r\n            firstTimeVisit: props.patientObj && props.patientObj.firstTimeVisit ? props.patientObj.firstTimeVisit :\"\",\r\n            indexClient: props.patientObj && props.patientObj.indexClient ? props.patientObj.indexClient :\"\",\r\n            numChildren: props.patientObj && props.patientObj.numChildren ? props.patientObj.numChildren :\"\",\r\n            numWives: props.patientObj && props.patientObj.numWives ? props.patientObj.numWives :\"\",\r\n            pregnant:props.patientObj && props.patientObj.pregnant ? props.patientObj.pregnant :\"\",           \r\n            dateOfBirth: props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth :\"\",\r\n            dateOfRegistration: props.patientObj && props.patientObj.dateOfRegistration ? props.patientObj.dateOfRegistration :\"\",\r\n            deceased:\"\",\r\n            deceasedDateTime: \"\",\r\n            educationId: props.patientObj.personResponseDto && props.patientObj.personResponseDto.educationId ? props.patientObj.personResponseDto.educationId :\"\",\r\n            employmentStatusId: props.patientObj.personResponseDto && props.patientObj.personResponseDto.employmentStatusId ? props.patientObj.personResponseDto.employmentStatusId :\"\",\r\n            facilityId: \"\",\r\n            firstName: props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.firstName :\"\",\r\n            genderId: props.patientObj.personResponseDto && props.patientObj.personResponseDto.genderId ? props.patientObj.personResponseDto.genderId :\"\",\r\n            address: props.patientObj.personResponseDto && props.patientObj.personResponseDto.address ? getAddress(props.patientObj.personResponseDto.address):\"\",\r\n            phoneNumber:props.patientObj.personResponseDto && props.patientObj.personResponseDto.contactPoint ? getPhoneNumber(props.patientObj.personResponseDto.contactPoint):\"\",           \r\n            isDateOfBirthEstimated: props.patientObj.personResponseDto && props.patientObj.personResponseDto.isDateOfBirthEstimated ? props.patientObj.personResponseDto.isDateOfBirthEstimated :\"\",\r\n            maritalStatusId: props.patientObj.personResponseDto && props.patientObj.personResponseDto.maritalStatus ? props.patientObj.personResponseDto.maritalStatus.id :\"\",\r\n            organizationId:props.patientObj.personResponseDto && props.patientObj.personResponseDto.genderId ? props.patientObj.personResponseDto.genderId :\"\",\r\n            otherName: props.patientObj.personResponseDto && props.patientObj.personResponseDto.otherName ? props.patientObj.personResponseDto.otherName :\"\",\r\n            sex: props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex ? props.patientObj.personResponseDto.sex :\"\",\r\n            stateId:country && country.stateId ? country.stateId :\"\",\r\n            riskAssessment:  props.extra && props.extra.riskAssessment ? props.extra.riskAssessment : {},                                 \r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            lga:country && country.district ? country.district :\"\",\r\n            surname: props.patientObj.personResponseDto && props.patientObj.personResponseDto.surname ? props.patientObj.personResponseDto.surname :\"\",\r\n            previouslyTested: props.patientObj ? props.patientObj.previouslyTested :\"\",\r\n            referredFrom: props.patientObj ? props.patientObj.referredFrom :\"\",\r\n            targetGroup: props.patientObj && props.patientObj.targetGroup? props.patientObj.targetGroup :\"\",\r\n            testingSetting:props.patientObj ? props.patientObj.testingSetting :\"\",\r\n            typeCounseling: props.patientObj ? props.patientObj.typeCounseling :\"\",\r\n            relationshipWithIndexClient:props.patientObj ? props.patientObj.relationshipWithIndexClient :\"\",\r\n            indexClientCode:\"\",\r\n        }\r\n    )\r\n\r\n    useEffect(() => { \r\n        KP(); \r\n        EnrollmentSetting(); \r\n        SourceReferral();\r\n        Genders();\r\n        getStates();\r\n        MaterialStatus();\r\n        Sex();\r\n        CounselingType();\r\n        PregnancyStatus();\r\n        IndexTesting();\r\n        //objValues.dateVisit=moment(new Date()).format(\"YYYY-MM-DD\")\r\n        //setObjValues(props.patientObj)\r\n\r\n        if(objValues.age!==''){\r\n            props.setPatientObjAge(objValues.age)\r\n        }\r\n        if(props.extra && props.extra.age!==''){\r\n            props.setPatientObjAge(props.extra.age)\r\n        }\r\n        if(country && country.stateId!==\"\"){\r\n            getProvincesId(country.stateId)\r\n        }\r\n    }, [objValues.age, props.patientObj, props.extra.age]);\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const MaterialStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setMaritalStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of Genders from \r\n    const Genders =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setGender(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n           \r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n\r\n    //Get States from selected country\r\n    const getStates = () => {\r\n        setStateByCountryId('1'); \r\n        setObjValues({ ...objValues, countryId: 1 });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }  \r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //fetch province\r\n    const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setObjValues({ ...objValues, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // } \r\n        \r\n        if(e.target.name==='indexClientCode' && e.target.value!==''){\r\n            async function getIndexClientCode() {\r\n                const indexClientCode=e.target.value\r\n                const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!=='Record Not Found'){\r\n                    setclientCodeetail2(\"\")\r\n                    setclientCodeetail(response.data)\r\n                    //setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                    \r\n                }else{\r\n                    setclientCodeetail(\"\")\r\n                    setclientCodeetail2(response.data)\r\n                }\r\n            }\r\n            getIndexClientCode();\r\n        }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //checkClientCode\r\n    const checkClientCode = e => { \r\n\r\n        async function getIndexClientCode() {\r\n            const indexClientCode=objValues.clientCode\r\n            const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!=='Record Not Found'){\r\n                setClientCodeCheck(\"Client code already exist\")\r\n            }else{\r\n                setClientCodeCheck(\"\")\r\n            }\r\n        }\r\n        getIndexClientCode();\r\n                              \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        if(objValues.age!=='' && objValues.age>=85){\r\n            toggle()\r\n        }\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=85){\r\n                toggle()\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    \r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\"\r\n            temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\"\r\n            temp.previouslyTested = objValues.previouslyTested ? \"\" : \"This field is required.\"\r\n            temp.surname = objValues.surname ? \"\" : \"This field is required.\"\r\n            temp.sex = objValues.sex ? \"\" : \"This field is required.\"\r\n            temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\r\n            temp.phoneNumber = objValues.phoneNumber ? \"\" : \"This field is required.\"\r\n           // temp.isDateOfBirthEstimated = objValues.isDateOfBirthEstimated ? \"\" : \"This field is required.\"    \r\n            temp.firstName = objValues.firstName ? \"\" : \"This field is required.\"  \r\n            //temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"This field is required.\"   \r\n            //temp.numChildren = objValues.numChildren ? \"\" : \"This field is required.\"\r\n            temp.address = objValues.address ? \"\" : \"This field is required.\"\r\n            temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\"  \r\n            temp.firstTimeVisit = objValues.firstTimeVisit ? \"\" : \"This field is required.\" \r\n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"  \r\n            temp.dob = objValues.dob ? \"\" : \"This field is required.\"\r\n            temp.age = objValues.age ? \"\" : \"This field is required.\"              \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n        setSaving(true)\r\n        const getSexId=  sexs.find((x)=> x.display===objValues.sex)//get patient sex ID by filtering the request\r\n        //basicInfo.sexId=getSexId.id\r\n        const patientForm ={\r\n            clientCode: objValues.clientCode,\r\n            dateVisit: objValues.dateVisit,\r\n            extra: {},\r\n            firstTimeVisit: objValues.firstTimeVisit,\r\n            indexClient: objValues.indexClient,\r\n            numChildren: objValues.numChildren,\r\n            numWives: objValues.numWives,\r\n            personDto: {\r\n                active: true,\r\n                address: [\r\n                {\r\n                    city: objValues.address,\r\n                    countryId: 1,\r\n                    district: objValues.lga,\r\n                    line: [\r\n                    \"\"\r\n                    ],\r\n                    organisationUnitId: \"\",\r\n                    postalCode: \"\",\r\n                    stateId: objValues.stateId\r\n                }\r\n                ],\r\n                contact: [],\r\n                contactPoint: [\r\n                {\r\n                    type: \"phone\",\r\n                    value: objValues.phoneNumber\r\n                }\r\n                ],\r\n                dateOfBirth: objValues.dob,\r\n                dateOfRegistration:objValues.dateVisit,\r\n                deceased: true,\r\n                deceasedDateTime: null,\r\n                educationId: \"\",\r\n                employmentStatusId: \"\",\r\n                facilityId: \"\",\r\n                firstName:objValues.firstName,\r\n                genderId:getSexId.id, //objValues.genderId,\r\n                id: \"\",\r\n                identifier: [\r\n                    {\r\n                        \"assignerId\": 1,\r\n                        \"type\": \"HospitalNumber\",\r\n                        \"value\": objValues.clientCode\r\n                    }\r\n                ],\r\n                isDateOfBirthEstimated: objValues.isDateOfBirthEstimated,\r\n                maritalStatusId: objValues.maritalStatusId,\r\n                organizationId:\"\",\r\n                otherName: objValues.otherName,\r\n                sexId: getSexId.id,\r\n                surname: objValues.surname\r\n            },\r\n            personId: \"\",\r\n            hospitalNumber:objValues.clientCode,\r\n            previouslyTested: objValues.previouslyTested,\r\n            referredFrom: objValues.referredFrom,\r\n            targetGroup: objValues.targetGroup,\r\n            testingSetting: objValues.testingSetting,\r\n            typeCounseling:objValues.typeCounseling,\r\n            breastFeeding:objValues.breastFeeding,\r\n            indexClientCode:objValues.indexClientCode,\r\n            pregnant:objValues.pregnant,\r\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient,\r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            }\r\n            props.setPatientObj({...props.patientObj, ...objValues})\r\n            \r\n            //console.log(patientForm)\r\n            axios.post(`${baseUrl}hts`,patientForm,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //props.patientObj.personResponseDto=patientForm.personDto\r\n                //props.setPatientObj({...patientObj, })\r\n                //toast.success(\"HTS Test successful\");\r\n                if(objValues.age>14){\r\n                    handleItemClick('pre-test-counsel', 'basic' )\r\n                }else{\r\n                    handleItemClick('hiv-test', 'basic' )\r\n                }\r\n                \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            }else{\r\n                toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                             <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Client Code <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"clientCode\"\r\n                                    id=\"clientCode\"\r\n                                    //value={Math.floor(Math.random() * 1093328)}\r\n                                    value={objValues.clientCode}\r\n                                    onBlur ={checkClientCode}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                {errors.clientCode !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientCode}</span>\r\n                                ) : \"\" }\r\n                                                                \r\n                                </FormGroup>\r\n                                {clientCodeCheck!==\"\" ? (\r\n                                <span className={classes.error}>{clientCodeCheck}</span>\r\n                            ) : \"\" }\r\n                            </div>\r\n                            {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date Of Registration </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateOfRegistration\"\r\n                                    id=\"dateOfRegistration\"\r\n                                    value={objValues.dateOfRegistration}\r\n                                    onChange={handleInputChange}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Referred From <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredFrom\"\r\n                                        id=\"referredFrom\"\r\n                                        value={objValues.referredFrom}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sourceReferral.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.referredFrom !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.referredFrom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Setting <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateVisit\"\r\n                                    id=\"dateVisit\"\r\n                                    value={objValues.dateVisit}\r\n                                    onChange={handleInputChange}\r\n                                    min=\"1983-12-31\"\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                 {errors.firstName !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"otherName\"\r\n                                    id=\"otherName\"\r\n                                    value={objValues.otherName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                 {errors.otherName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.otherName}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"surname\"\r\n                                    id=\"surname\"\r\n                                    value={objValues.surname}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                 {errors.surname !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.surname}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        min={objValues.dateVisit}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age + 1}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"state\"\r\n                                        id=\"state\"\r\n                                        onChange={getProvinces}\r\n                                        value={objValues.stateId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {states.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.stateId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.stateId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lga\"\r\n                                        id=\"lga\"\r\n                                        value={objValues.lga}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {provinces.map((value, index) => (\r\n                                            <option key={index} value={value.id}>\r\n                                                {value.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.lga !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.lga}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        type=\"textarea\"\r\n                                        name=\"address\"\r\n                                        id=\"address\"\r\n                                        value={objValues.address}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                  {errors.address !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.address}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.sex !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sex}</span>\r\n                                    ) : \"\" }  \r\n                                </FormGroup>\r\n                            </div>\r\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                        </div>\r\n                             )} */}\r\n                         {objValues.age>9 && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Marital Status</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"maritalStatusId\"\r\n                                        id=\"maritalStatusId\"\r\n                                        value={objValues.maritalStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                            {maritalStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                       \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                             {( objValues.age > 9 && objValues.sex==='Male' && objValues.maritalStatusId!==5) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of wives/co-wives</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numWives\"\r\n                                        min={0}\r\n                                        id=\"numWives\"\r\n                                        value={objValues.numWives}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                             {/* && objValues.maritalStatusId==='6' */}\r\n                            {(objValues.age>9) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of Children {'<5'} years</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numChildren\"\r\n                                        id=\"numChildren\"\r\n                                        min={0}\r\n                                        value={objValues.numChildren}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    /> \r\n                                     \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {/* objValues.maritalStatusId==='6' && */}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Index Testing <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"indexClient\"\r\n                                        id=\"indexClient\"\r\n                                        value={objValues.indexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.indexClient !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.indexClient}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.indexClient==='true' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship of the index client <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relationshipWithIndexClient\"\r\n                                        id=\"relationshipWithIndexClient\"\r\n                                        value={objValues.relationshipWithIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Index Client Code/ID</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"indexClientCode\"\r\n                                    id=\"indexClientCode\"\r\n                                    value={objValues.indexClientCode}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                               \r\n                                />\r\n                                  \r\n                            </FormGroup>\r\n                            {clientCodeetail2!==\"\" ? (\r\n                                <span className={classes.error}>{clientCodeetail2}</span>\r\n                            ) : \"\" }\r\n                            {clientCodeetail!==\"\" ? (\r\n                                <span className={classes.success}>{clientCodeetail}</span>\r\n                            ) :\"\"}\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                            {objValues.sex==='Female' || objValues.sex==='female' || objValues.sex==='FEMALE' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Pregnant</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"pregnant\"\r\n                                        id=\"pregnant\"\r\n                                        value={objValues.pregnant}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.pregnant!== 73 || objValues.pregnant!== \"73\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            </>\r\n                            )}\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>First time visit <span style={{ color:\"red\"}}>*</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"firstTimeVisit\"\r\n                                        id=\"firstTimeVisit\"\r\n                                        value={objValues.firstTimeVisit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.firstTimeVisit !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested within the last 3 months <span style={{ color:\"red\"}}>*</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTested\"\r\n                                        id=\"previouslyTested\"\r\n                                        value={objValues.previouslyTested}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTested !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Type of Counseling <span style={{ color:\"red\"}}>*</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeCounseling\"\r\n                                        id=\"typeCounseling\"\r\n                                        value={objValues.typeCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.typeCounseling !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('risk','risk')}/>\r\n                            <Button content='Save & Continue' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </CardBody>\r\n            </Card> \r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>                             \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["295","296","297","298","299","300","301","302","303","304"],"import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY TESTED</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div> */}\r\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div> */}\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["305","306","307","308","309","310","311"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  console.log(\"data2\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    console.log(e.target.value);\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  function CheckTestResult() {\r\n    //Logic to show CD4 Count\r\n    // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n    //     objValues.hivTestResult=\"Negative\"\r\n    // }\r\n  }\r\n  function CheckTestResult2() {\r\n    //Logic to show CD4 Count\r\n    if (initialTest12.result2 === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else if (\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    }\r\n    // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n    //     objValues.hivTestResult2=\"Negative\"\r\n    // }\r\n    else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    } else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  }\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    //  initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //logic to get Hiv result test\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      objValues.htsClientId = clientId;\r\n      objValues.confirmatoryTest = confirmatoryTest;\r\n      objValues.confirmatoryTest2 = confirmatoryTest2;\r\n      objValues.personId = patientID;\r\n      objValues.test1 = initialTest1;\r\n      objValues.test2 = initialTest12;\r\n      objValues.tieBreakerTest = tieBreakerTest;\r\n      objValues.tieBreakerTest2 = tieBreakerTest2;\r\n      objValues.syphilisTesting = syphills;\r\n      objValues.hepatitisTesting = hepatitis;\r\n\r\n      objValues.cd4 = cd4Count;\r\n      objValues.others = others;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //console.log(response.data)\r\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n          //toast.success(\"HIV test successful\");\r\n          handleItemClick(\"post-test\", \"hiv-test\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    onChange={handleInputChangeInitial}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                    <>\r\n                      <b> Result : </b>\r\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                    </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                    confirmatoryTest.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                            <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                }}\r\n                            >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                            </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br/>\r\n                      <br/>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                            <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                }}\r\n                            >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                            </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() =>\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </>\r\n                  )}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["312","313","314","315","316","317","318","319","320"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import * as moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //let patientAge=\"\"\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    console.log(\"data2\", props.patientObj)\r\n    // const calculate_age = dob => {\r\n    //     var today = new Date();\r\n    //     var dateParts = dob.split(\"-\");\r\n    //     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    //     var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    //     var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //     var m = today.getMonth() - birthDate.getMonth();\r\n    //         if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //                 age_now--;\r\n    //             }\r\n    //         if (age_now === 0) {\r\n    //                 return m + \" month(s)\";\r\n    //             }\r\n    //             return age_now ;\r\n    // };\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\", \r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        console.log(\"pre test new\", props.patientObj)\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            \r\n            setRiskAssessmentPartner(props.patientObj.riskAssessmentPartner && props.patientObj.riskAssessmentPartner!==null ? props.patientObj.riskAssessmentPartner : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            if(props.extra.riskAssessment){\r\n                setRiskAssessment(props.extra.riskAssessment  && props.extra.riskAssessment!==null ? props.extra.riskAssessment : {})\r\n                props.extra.riskAssessment.whatWasTheResult!==\"\" && props.extra.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\r\n                knowledgeAssessment.previousTestedHIVNegative='true'\r\n            }else{\r\n                setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            }\r\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\r\n            \r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                htsClientId: clientId,\r\n                knowledgeAssessment: {},\r\n                personId: patientID,\r\n                riskAssessment: {},\r\n                stiScreening: {},\r\n                tbScreening: {},\r\n                sexPartnerRiskAssessment:{}\r\n            }\r\n    )\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n            consistentWeightFeverNightCough: \"\",\r\n            soldPaidVaginalSex: \"\",\r\n            haveCondomBurst: \"\"\r\n        }\r\n    )\r\n\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \r\n                          \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\", \r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n        // if(riskAssessmentPartner.sexPartnerHivPositive==='false' || (e.target.name==='sexPartnerHivPositive' &&  e.target.value==='false')){\r\n        //     setRiskAssessmentPartner ({\r\n        //         sexPartnerHivPositive:'false',\r\n        //         newDiagnosedHivlastThreeMonths:\"\",\r\n        //         currentlyArvForPmtct :\"\",\r\n        //         knowHivPositiveOnArv :\"\",\r\n        //         knowHivPositiveAfterLostToFollowUp:\"\", \r\n        //         uprotectedAnalSex  :\"\",\r\n        //     })\r\n        // }                     \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough:\"\",\r\n            weightLoss:\"\",\r\n            lymphadenopathy:\"\", \r\n            fever:\"\",  \r\n            nightSweats:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeTbScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});         \r\n    }\r\n    // Getting the number count of TB True\r\n    const actualTBTrue=Object.values(tbScreening)\r\n    const newTbTrue=actualTBTrue.filter((x)=> x==='true')\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n \r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n            //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n           // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            \r\n            \r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\r\n\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n            setSaving(true);\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n        }\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n                     \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        <option value=\"Never\"> Never</option> \r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {props.patientObj && (props.patientObj.personResponseDto.sex ==='Female' || props.patientObj.personResponseDto.sex ==='female' || props.patientObj.personResponseDto.sex ==='FEMALE') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {newTbTrue.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                 <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                     <select\r\n                                         className=\"form-control\"\r\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                         onChange={handleInputChangeRiskAssessment}\r\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                     >\r\n                                         <option value={\"\"}></option>\r\n                                         <option value=\"true\">Yes</option>\r\n                                         <option value=\"false\">No</option>\r\n                                         \r\n                                     </select>\r\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                     ) : \"\" }\r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                            \r\n                            <Message warning>\r\n                                <h4> Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4> HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["321","322"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { useHistory, } from \"react-router-dom\";\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const history = useHistory();\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleDone =()=>{\r\n      history.push('/');\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n      if(props.completed.includes(completedMenu)) {\r\n      }else{\r\n          props.setCompleted([...props.completed, completedMenu])\r\n      }\r\n      props.handleItemClick(page)\r\n  }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["323","324","325","326"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PostTest = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    ///const [errors, setErrors] = useState({});\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            postTestCounselingKnowledgeAssessment: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n\r\n    const [postTest, setPostTest]= useState(\r\n        {\r\n            hivTestResult:\"\", \r\n            hivTestBefore:\"\", \r\n            hivRequestResult:\"\", \r\n            hivRequestResultCt:\"\",                             \r\n            clientReceivedHivTestResult:\"\", \r\n            postTestCounseling:\"\", \r\n            riskReduction:\"\", \r\n            postTestDisclosure:\"\",\r\n            bringPartnerHivtesting:\"\", \r\n            childrenHivtesting:\"\", \r\n            informationFp:\"\", \r\n            partnerFpThanCondom:\"\", \r\n            partnerFpUseCondom:\"\",\r\n            correctCondomUse:\"\", \r\n            condomProvidedToClient:\"\", \r\n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \r\n            referredToServices:\"\",\r\n            condomProvidedToClientCount: \"\",\r\n            lubricantProvidedToClientCount: \"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\r\n            setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment) \r\n        }else{\r\n            ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {}) \r\n            if(postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2==='Positive')){\r\n                postTest.hivTestResult='true'\r\n                setPostTest({...postTest, hivTestResult:'true' })\r\n            }else if(postTest.hivTestResult===\"\"  && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Negative' || props.patientObj.hivTestResult2==='Negative')){\r\n                postTest.hivTestResult='true'\r\n                setPostTest({...postTest, hivTestResult:'false' })\r\n            }\r\n        }\r\n    }, [props.patientObj, postTest.hivTestResult]);\r\n    const handleInputChangePostTest = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})        \r\n        setPostTest ({...postTest,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        setSaving(true)\r\n        //handleItemClick('recency-testing', 'post-test')\r\n        //if(!(Object.values(postTest).every(x => x === \"\"))){\r\n            objValues.htsClientId=  props.patientObj.id\r\n            objValues.postTestCounselingKnowledgeAssessment= postTest\r\n            objValues.personId= props.patientObj.personResponseDto.id\r\n            axios.put(`${baseUrl}hts/${ props.patientObj.id}/post-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                if(postTest.hivTestResult==='true'){\r\n                    handleItemClick('recency-testing', 'post-test')\r\n                }else if(postTest.hivTestResult==='false'){\r\n                    history.push('/');\r\n                }\r\n                \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        // }else{\r\n        //     toast.error(\"All post test fields are required\")  \r\n        \r\n        // }\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 >POST TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResult\"\r\n                                        id=\"hivTestResult\"\r\n                                        value={postTest.hivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Positive</option>\r\n                                        <option value=\"false\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been tested for HIV before within this year? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestBefore\"\r\n                                        id=\"hivTestBefore\"\r\n                                        value={postTest.hivTestBefore}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Not previously tested\">Not previously tested</option>\r\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\r\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\r\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form signed by tester </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResult\"\r\n                                        id=\"hivRequestResult\"\r\n                                        value={postTest.hivRequestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCt\"\r\n                                        id=\"hivRequestResultCt\"\r\n                                        value={postTest.hivRequestResultCt}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client received HIV test result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientReceivedHivTestResult\"\r\n                                        id=\"clientReceivedHivTestResult\"\r\n                                        value={postTest.clientReceivedHivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test counseling done </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestCounseling\"\r\n                                        id=\"postTestCounseling\"\r\n                                        value={postTest.postTestCounseling}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Risk reduction plan developed </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"riskReduction\"\r\n                                        id=\"riskReduction\"\r\n                                        value={postTest.riskReduction}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test disclosure plan developed </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestDisclosure\"\r\n                                        id=\"postTestDisclosure\"\r\n                                        value={postTest.postTestDisclosure}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring partner(s) for HIV testing </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bringPartnerHivtesting\"\r\n                                        id=\"bringPartnerHivtesting\"\r\n                                        value={postTest.bringPartnerHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring own children {'<5'} years for HIV testing </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"childrenHivtesting\"\r\n                                        id=\"childrenHivtesting\"\r\n                                        value={postTest.childrenHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Provided with information on FP and dual contraception </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informationFp\"\r\n                                        id=\"informationFp\"\r\n                                        value={postTest.informationFp}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use FP methods (other than condom)</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpThanCondom\"\r\n                                        id=\"partnerFpThanCondom\"\r\n                                        value={postTest.partnerFpThanCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpUseCondom\"\r\n                                        id=\"partnerFpUseCondom\"\r\n                                        value={postTest.partnerFpUseCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Correct condom use demonstrated </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"correctCondomUse\"\r\n                                        id=\"correctCondomUse\"\r\n                                        value={postTest.correctCondomUse}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Condoms provided to client </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"condomProvidedToClient\"\r\n                                        id=\"condomProvidedToClient\"\r\n                                        value={postTest.condomProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {postTest.condomProvidedToClient !== null && postTest.condomProvidedToClient === 'true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                   <FormGroup>\r\n                                       <Label>How many condoms were provided to client </Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"condomProvidedToClientCount\"\r\n                                           id=\"condomProvidedToClientCount\"\r\n                                           value={postTest.condomProvidedToClientCount}\r\n                                           onChange={handleInputChangePostTest}\r\n                                           style={{\r\n                                               border: \"1px solid #014D88\",\r\n                                               borderRadius: \"0.25rem\",\r\n                                           }}\r\n                                       />\r\n                                       \r\n                                   </FormGroup>\r\n                               </div>\r\n                            )}\r\n                         \r\n                      \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lubricant were provided to client </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lubricantProvidedToClient\"\r\n                                        id=\"lubricantProvidedToClient\"\r\n                                        value={postTest.lubricantProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {postTest.lubricantProvidedToClient !== null && postTest.lubricantProvidedToClient === 'true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>How many lubricant provided to client </Label>\r\n                                     <Input\r\n                                         type=\"number\"\r\n                                         name=\"lubricantProvidedToClientCount\"\r\n                                         id=\"lubricantProvidedToClientCount\"\r\n                                         value={postTest.lubricantProvidedToClientCount}\r\n                                         onChange={handleInputChangePostTest}\r\n                                         style={{\r\n                                             border: \"1px solid #014D88\",\r\n                                             borderRadius: \"0.25rem\",\r\n                                         }}\r\n                                     />\r\n                                     \r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client referred to other services </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredToServices\"\r\n                                        id=\"referredToServices\"\r\n                                        value={postTest.referredToServices}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message success>\r\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\r\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\r\n                                \r\n                            </Message>\r\n                                                \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                                {postTest.hivTestResult==='true' && (\r\n                                    <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                )}\r\n                                {postTest.hivTestResult==='false' && (\r\n                                    <Button content='Save & Finish' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostTest","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card,} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst Recency = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    let temp = { ...errors }\r\n\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            recency: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [recency, setRecency]= useState(\r\n        {\r\n            optOutRTRI:\"\", \r\n            optOutRTRITestName:\"\", \r\n            optOutRTRITestDate:\"\", \r\n            rencencyId:\"\",  \r\n            controlLine:\"\",  \r\n            verififcationLine:\"\", \r\n            longTermLine:\"\",  \r\n            rencencyInterpretation:\"\", \r\n            hasViralLoad:\"\", \r\n            sampleCollectedDate:\"\",\r\n            sampleReferanceNumber:\"\",\r\n            dateSampleSentToPCRLab:\"\",\r\n            sampleTestDate:\"\",\r\n            sampleType:\"\", \r\n            receivingPcrLab:\"\", \r\n            viralLoadResultClassification:\"\",\r\n            recencyResult:\"\", \r\n            finalRecencyResult:\"\",\r\n        }\r\n    )\r\n    \r\n    useEffect(() => { \r\n        if(props.patientObj){\r\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\r\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\r\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"RTRI Long Term\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'RTRI Long Term'}); \r\n        \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"RTRI Recent\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'RTRI Recent'});\r\n            //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n            \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Negative\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\r\n            \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n           \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            \r\n        }else{\r\n            \r\n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\r\n        }\r\n    },[recency.longTermLine,recency.verififcationLine, recency.controlLine, props.patientObj]);\r\n\r\n    //console.log(props.patientObj)\r\n    const handleInputChangeRecency = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        if(e.target.name ==='viralLoadResultClassification'){\r\n            \r\n            if(e.target.value ==='>=1000'){\r\n                recency.finalRecencyResult='RITA Recent'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            \r\n            }else if(e.target.value ==='<1000') {\r\n                recency.finalRecencyResult='RITA Long term'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Failed run') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Invalid viral load result') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else{\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }\r\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\r\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\r\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\r\n        }else {\r\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n        }\r\n         \r\n    }\r\n    const checkRecencyLimit=(e)=>{\r\n        const limit = 10;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            {recency.hasViralLoad=='true' && (temp.sampleReferanceNumber = recency.sampleReferanceNumber ? \"\" : \"This field is required.\")}\r\n            //{  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n            {recency.hasViralLoad=='true' && (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\")}\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.recency= recency\r\n            objValues.personId= patientID\r\n            //console.log(recency)\r\n            if(validate()){\r\n                setSaving(true)\r\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('indexing', 'recency-testing' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            }\r\n            \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>               \r\n                <h2>RECENCY FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>RECENCY</h5>\r\n                        </LabelRibbon>\r\n                        <br/><br/><br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Opt Out of RTRI? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRI\"\r\n                                        id=\"optOutRTRI\"\r\n                                        value={recency.optOutRTRI}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-8\"></div>\r\n                            {recency.optOutRTRI==='false' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRITestName\"\r\n                                        id=\"optOutRTRITestName\"\r\n                                        value={recency.optOutRTRITestName}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Asante\">Asante</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"optOutRTRITestDate\"\r\n                                        id=\"optOutRTRITestDate\"\r\n                                        value={recency.optOutRTRITestDate}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency ID <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyId\"\r\n                                        id=\"rencencyId\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyId}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                 \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Control Line <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"controlLine\"\r\n                                        id=\"controlLine\"\r\n                                        value={recency.controlLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Verification Line <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"verififcationLine\"\r\n                                        id=\"verififcationLine\"\r\n                                        value={recency.verififcationLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Long Term Line <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"longTermLine\"\r\n                                        id=\"longTermLine\"\r\n                                        value={recency.longTermLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency Interpretation <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyInterpretation\"\r\n                                        id=\"rencencyInterpretation\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyInterpretation}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                       \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                              {recency.rencencyInterpretation==='RTRI Recent' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has Viral Load been ordered? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasViralLoad\"\r\n                                        id=\"hasViralLoad\"\r\n                                        value={recency.hasViralLoad}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {recency.hasViralLoad==='true' && (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <h4>Viral Load Classification :</h4>\r\n                                    <br/>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Collected Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleCollectedDate\"\r\n                                            id=\"sampleCollectedDate\"\r\n                                            type=\"date\"\r\n                                            value={recency.sampleCollectedDate}\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                    \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Reference Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleReferanceNumber\"\r\n                                            id=\"sampleReferanceNumber\"\r\n                                            type=\"text\"\r\n                                            value={recency.sampleReferanceNumber}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        {errors.sampleReferanceNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleType\"\r\n                                            id=\"sampleType\"\r\n                                            value={recency.sampleType}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"DBS\">DBS</option>\r\n                                            <option value=\"Plasma\">Plasma</option>\r\n                                            \r\n                                        </select>\r\n                                        {errors.sampleType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleType}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Date Sample Sent to PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"dateSampleSentToPCRLab\"\r\n                                            id=\"dateSampleSentToPCRLab\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            value={recency.dateSampleSentToPCRLab}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                         {errors.dateSampleSentToPCRLab !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Test Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleTestDate\"\r\n                                            id=\"sampleTestDate\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.sampleTestDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Receiving PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"receivingPcrLab\"\r\n                                            id=\"receivingPcrLab\"\r\n                                            type=\"text\"\r\n                                            value={recency.receivingPcrLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"viralLoadResultClassification\"\r\n                                            id=\"viralLoadResultClassification\"\r\n                                            value={recency.viralLoadResultClassification}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\r\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\r\n                                            <option value=\"Failed run\">Failed run</option>\r\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\r\n                                            \r\n                                        </select>\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Final Recency Result</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"finalRecencyResult\"\r\n                                            id=\"finalRecencyResult\"\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            value={recency.finalRecencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </div>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                            </>)}\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Recency","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["340","341","342","343","344","345","346","347","348","349"],"\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card,} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport {Label as LabelRibbon, Message} from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //const history = useHistory();\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [entryPoint, setEntryPoint] = useState([]);\r\n    const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n    let riskCountQuestion=[]\r\n    const [kP, setKP] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [saving, setSaving] = useState(false);\r\n    let temp = { ...errors }\r\n    const [open, setOpen] = React.useState(false)\r\n    const toggle = () => setOpen(!open);\r\n    const [setting, setSetting] = useState([]);\r\n    const [riskCount, setRiskCount] = useState(0);\r\n    const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            age:\"\",\r\n            dob:\"\",\r\n            code:\"\",\r\n            visitDate: \"\", //        \r\n            dateOfBirth: null,\r\n            dateOfRegistration:null,\r\n            isDateOfBirthEstimated: \"\",\r\n            targetGroup:\"\",\r\n            testingSetting:\"\",//\r\n            modality  :\"\", //\r\n            careProvider:\"\",\r\n            personId:\"\",\r\n            id:\"\",\r\n            riskAssessment: {},\r\n            entryPoint:\"\",\r\n            communityEntryPoint:\"\"\r\n\r\n        }\r\n\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            // everHadSexualIntercourse:\"\",\r\n            // bloodtransInlastThreeMonths:\"\",\r\n            // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            // uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            // unprotectedVaginalSex:\"\",  \r\n            // uprotectedAnalSex:\"\",   \r\n            // stiLastThreeMonths:\"\",\r\n            // sexUnderInfluence :\"\",\r\n            // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            // experiencePain:\"\",\r\n            // haveSexWithoutCondom:\"\",\r\n            // abuseDrug:\"\",\r\n            // bloodTransfusion:\"\",\r\n            // consistentWeightFeverNightCough:\"\",\r\n            // soldPaidVaginalSex:\"\",\r\n            //New Question\r\n            lastHivTestForceToHaveSex:\"\", \r\n            lastHivTestHadAnal:\"\",\r\n            lastHivTestInjectedDrugs:\"\",\r\n            whatWasTheResult:\"\",\r\n            lastHivTestDone:\"\",\r\n            diagnosedWithTb:\"\",\r\n            lastHivTestPainfulUrination:\"\",\r\n            lastHivTestBloodTransfusion:\"\",\r\n            lastHivTestVaginalOral:\"\",\r\n            lastHivTestBasedOnRequest:\"\"\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        KP();\r\n        TargetGroupSetup();\r\n        EnrollmentSetting();\r\n        EntryPoint();\r\n        HTS_ENTRY_POINT_COMMUNITY();\r\n        //objValues.dateVisit=moment(new Date()).format(\"YYYY-MM-DD\")        \r\n        if(objValues.age!==''){\r\n            props.setPatientObjAge(objValues.age)\r\n        }\r\n        if(props.patientObj.riskStratificationResponseDto!==null){\r\n            setObjValues(props.patientObj.riskStratificationResponseDto)\r\n            SettingModality(props.patientObj.riskStratificationResponseDto.testingSetting)\r\n            setRiskAssessment(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n        }\r\n    }, [objValues.age]);\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const EntryPoint =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEntryPoint(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const HTS_ENTRY_POINT_COMMUNITY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEntryPointCommunity(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const TargetGroupSetup =()=>{\r\n        axios\r\n        .get(`${baseUrl}account`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setTargetGroupValue(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='testingSetting' && e.target.value!==\"\"){\r\n            SettingModality(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n        }\r\n        if(e.target.name==='modality' && e.target.value!==\"\"){\r\n            //SettingModality(e.target.value)\r\n            if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_EMERGENCY\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_PMTCT\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_TB_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STI_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OPD_STI\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OUTREACH_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else{\r\n                setRiskCount(0)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }\r\n            \r\n        }\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        if(objValues.age!=='' && objValues.age<=15){\r\n            props.setHideOtherMenu(true)\r\n        }else if(objValues.age!=='' && objValues.age>15){\r\n            props.setHideOtherMenu(true)\r\n        }else{\r\n            props.setHideOtherMenu(true)\r\n        }\r\n\r\n        if(objValues.age!=='' && objValues.age>=85){\r\n            toggle()\r\n        }\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=85){\r\n                toggle()\r\n            }\r\n            if(e.target.value!=='' && e.target.value<=15){\r\n                props.setHideOtherMenu(false)\r\n                \r\n            }else if(e.target.value!=='' && e.target.value>15){\r\n                props.setHideOtherMenu(true)\r\n            }else{\r\n                props.setHideOtherMenu(true)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //Get list of DSD Model Type\r\n    function SettingModality (settingId) {\r\n        const setting = settingId\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/${setting}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n    }\r\n    //End of Date of Birth and Age handling \r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n\r\n            temp.visitDate = objValues.visitDate ? \"\" : \"This field is required.\"  \r\n            temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\" \r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\" \r\n            temp.modality = objValues.modality ? \"\" : \"This field is required.\" \r\n            temp.dob = objValues.dob ? \"\" : \"This field is required.\"\r\n            temp.age = objValues.age ? \"\" : \"This field is required.\" \r\n            temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest ? \"\" : \"This field is required.\" \r\n                       \r\n            objValues.age>15 && (temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\" )\r\n            objValues.entryPoint!=='' && objValues.entryPoint==='HTS_ENTRY_POINT_COMMUNITY' && (temp.communityEntryPoint = objValues.communityEntryPoint  ? \"\" : \"This field is required.\" )\r\n            \r\n            //Risk Assement section\r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestDone = riskAssessment.lastHivTestDone ? \"\" : \"This field is required.\" )             \r\n            riskAssessment.lastHivTestDone!=='' && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )             \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral ? \"\" : \"This field is required.\" )             \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestBloodTransfusion = riskAssessment.lastHivTestBloodTransfusion ? \"\" : \"This field is required.\" )             \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestPainfulUrination = riskAssessment.lastHivTestPainfulUrination ? \"\" : \"This field is required.\" )             \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb ? \"\" : \"This field is required.\" )  \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs ? \"\" : \"This field is required.\" )           \r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal ? \"\" : \"This field is required.\" )\r\n            objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex ? \"\" : \"This field is required.\" )\r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    \r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n         // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n     riskCountQuestion=actualRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeRiskAssessment = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                         \r\n    }\r\n    \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            props.patientObj.riskStratificationResponseDto = objValues\r\n            props.patientObj.personResponseDto.dob = objValues.dob\r\n            props.patientObj.personResponseDto.dateOfBirth = objValues.dob\r\n            props.patientObj.personResponseDto.isDateOfBirthEstimated = objValues.isDateOfBirthEstimated\r\n            props.patientObj.targetGroup = objValues.targetGroup\r\n            props.patientObj.testingSetting = objValues.testingSetting\r\n            props.patientObj.modality = objValues.modality\r\n            props.patientObj.dateVisit= objValues.visitDate\r\n            \r\n            //props.patientObj.riskAssessment =riskAssessment \r\n            objValues.riskAssessment=riskAssessment\r\n            //Check if riskStratificationResponseDto is null or empty then call the update method \r\n            if(props.patientObj.riskStratificationResponseDto && props.patientObj.riskStratificationResponseDto!==null && props.patientObj.riskStratificationResponseDto.code!==\"\"){\r\n                if(validate()){\r\n                    setSaving(true);\r\n                    handleItemClick('basic', 'risk' )\r\n                    \r\n                    props.setHideOtherMenu(false)\r\n                    axios.put(`${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.riskStratificationResponseDto=response.data\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }\r\n            }else{//if riskStratificationResponseDto is null then make a new call to save the record \r\n                if((riskCount>0 || riskCountQuestion.length>0) && objValues.age>15){\r\n                    if(validate()){\r\n                        setSaving(true);\r\n                        handleItemClick('basic', 'risk' )\r\n                        \r\n                        props.setHideOtherMenu(false)\r\n                        axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                        \r\n                        )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.patientObj.riskStratificationResponseDto=response.data\r\n                            objValues.code=response.data.code\r\n                            props.setExtra(objValues)\r\n                            //toast.success(\"Risk stratification save succesfully!\");\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            if(error.response && error.response.data){\r\n                                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                                toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                            else{\r\n                                toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        });\r\n                    }else{\r\n                        toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                    \r\n                }else if(objValues.age<15){\r\n                    if(validate()){\r\n                        setSaving(true);\r\n                        axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                        \r\n                        )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.patientObj.riskStratificationResponseDto=response.data\r\n                            objValues.code=response.data.code\r\n                            props.setExtra(objValues)\r\n                            handleItemClick('basic', 'risk' )\r\n                            //toast.success(\"Risk stratification save succesfully!\");\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            if(error.response && error.response.data){\r\n                                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                                toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                            else{\r\n                                toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        });\r\n                    }else{\r\n                        toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                    \r\n                }else{\r\n                    props.setHideOtherMenu(false)\r\n                    props.setExtra(objValues)\r\n                    if(validate()){\r\n                        setSaving(true);\r\n                        axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                        \r\n                        )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.patientObj.riskStratificationResponseDto=response.data\r\n                            objValues.code=response.data.code\r\n                            props.setExtra(objValues)\r\n                            //toast.success(\"Risk stratification save succesfully!\");\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            if(error.response && error.response.data){\r\n                                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                                toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                            else{\r\n                                toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        });\r\n                    }else{\r\n                        toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>RISK STRATIFICATION</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Modality</div>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Entry Point <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"entryPoint\"\r\n                                        id=\"entryPoint\"\r\n                                        value={objValues.entryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {entryPoint.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.entryPoint !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.entryPoint==='HTS_ENTRY_POINT_COMMUNITY' &&(\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Community Entry Point <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"communityEntryPoint\"\r\n                                        id=\"communityEntryPoint\"\r\n                                        value={objValues.communityEntryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {entryPointCommunity.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.communityEntryPoint !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.communityEntryPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min=\"1983-12-31\"\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.visitDate !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Setting <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Modality <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"modality\"\r\n                                        id=\"modality\"\r\n                                        value={objValues.modality}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {setting.map((value) => (\r\n                                            <option key={value.code} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.modality !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modality}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            <br/>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        min=\"1983-12-31\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    {errors.dob !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dob}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    {errors.age !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.age}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Is this HIV test based on a Clinician/Doctor/Health Care Provider's  request ? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBasedOnRequest\"\r\n                                        id=\"lastHivTestBasedOnRequest\"\r\n                                        value={riskAssessment.lastHivTestBasedOnRequest}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>                                      \r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.lastHivTestBasedOnRequest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBasedOnRequest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <br />\r\n                             \r\n                            {objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && ( <>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last HIV test done? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestDone\"\r\n                                        id=\"lastHivTestDone\"\r\n                                        value={riskAssessment.lastHivTestDone}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>  \r\n                                        <option value=\"Never\">Never</option> \r\n                                    </select>\r\n                                    {errors.lastHivTestDone !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestDone}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>What was the result? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"whatWasTheResult\"\r\n                                        id=\"whatWasTheResult\"\r\n                                        value={riskAssessment.whatWasTheResult}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Positive\">Positive</option>\r\n                                        <option value=\"Negative\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.whatWasTheResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.whatWasTheResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal or vaginal or oral sex without a condom with someone who was HIV positive or unaware of their HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestVaginalOral\"\r\n                                        id=\"lastHivTestVaginalOral\"\r\n                                        value={riskAssessment.lastHivTestVaginalOral}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestVaginalOral !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestVaginalOral}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had a blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBloodTransfusion\"\r\n                                        id=\"lastHivTestBloodTransfusion\"\r\n                                        value={riskAssessment.lastHivTestBloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestBloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup> \r\n                            </div>    \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you experienced painful urination, lower abdominal pain, vaginal or penile discharge, pain during sexual intercourse, thick, cloudy, or foul smelling discharge and/or small bumps or blisters near the mouth, penis, vagina, or anal areas? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestPainfulUrination\"\r\n                                        id=\"lastHivTestPainfulUrination\"\r\n                                        value={riskAssessment.lastHivTestPainfulUrination}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestPainfulUrination !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestPainfulUrination}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>   \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been diagnosed with TB or currently have any of the following symptoms : cough, fever, weight loss, night sweats? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"diagnosedWithTb\"\r\n                                        id=\"diagnosedWithTb\"\r\n                                        value={riskAssessment.diagnosedWithTb}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.diagnosedWithTb !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.diagnosedWithTb}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you ever injected drugs, shared needles or other sharp objects with someone known to be HIV positive or who you didn’t know their HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestInjectedDrugs\"\r\n                                        //id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.lastHivTestInjectedDrugs}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestInjectedDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestInjectedDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal, oral or vaginal sex in exchange for money or other benefits? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestHadAnal\"\r\n                                        id=\"lastHivTestHadAnal\"\r\n                                        value={riskAssessment.lastHivTestHadAnal}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestHadAnal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestHadAnal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you been forced to have sex? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestForceToHaveSex\"\r\n                                        value={riskAssessment.lastHivTestForceToHaveSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestForceToHaveSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestForceToHaveSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <br/>\r\n                            \r\n                            </>)}\r\n                            <br/>\r\n                            <Message warning>\r\n                                <h4> Risk assessment score </h4>\r\n                                <b>Score :{riskCount + (objValues.age>15 ?riskCountQuestion.length : 0)}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </CardBody>\r\n            </Card> \r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>                             \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["366","367","368","369","370","371","372","373","374","375"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["376","377","378","379","380","381","382","383"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of  client contact\"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n             // { title: \"Actions\", field: \"actions\", filtering: false },\r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["384","385","386","387","388","389","390","391","392","393","394"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n\r\n    let temp = { ...errors }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n            offeredIns:\"\",\r\n            acceptedIns:\"\",\r\n            elicited: \"\",\r\n            stateId: \"\",\r\n            lga:\"\",\r\n            dateTested: \"\",\r\n            currentHivStatus: \"\"\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        getStates();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n        if(props.patientObj){\r\n\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    function getStateByCountryId(getCountryId) {\r\n                axios\r\n                .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setStates(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });\r\n            }\r\n\r\n    function getProvincesId(getStateId) {\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        }\r\n\r\n    const getProvinces = e => {\r\n        const stateId = e.target.value;\r\n        setObjValues({ ...objValues, stateId: e.target.value });\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    };\r\n\r\n    const getStates = () => {\r\n        getStateByCountryId('1');\r\n        setObjValues({ ...objValues, countryId: 1 });\r\n    };\r\n\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n         //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n        temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\"\r\n             \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()) { \r\n            setSaving(true)   \r\n            objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Offered INS ? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"offeredIns\"\r\n                                    id=\"offeredIns\"\r\n                                    value={objValues.offeredIns}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {consent.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.offeredIns !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.offeredIns}</span>\r\n                                    ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                            {objValues.offeredIns !== \"\" && objValues.offeredIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Accepted INS ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"acceptedIns\"\r\n                                        id=\"acceptedIns\"\r\n                                        value={objValues.acceptedIns}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                             {objValues.acceptedIns !== \"\" && objValues.acceptedIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Elicited ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"elicited\"\r\n                                        id=\"elicited\"\r\n                                        value={objValues.elicited}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                     \r\n                        <div className=\"row\">\r\n                            {objValues.elicited !== \"\" && objValues.elicited !== \"616\" && (\r\n                            <>    \r\n                                <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">First Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"firstName\"\r\n                                           id=\"firstName\"\r\n                                           value={objValues.firstName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Middle Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"middleName\"\r\n                                           id=\"middleName\"\r\n                                           value={objValues.middleName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Last Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"lastName\"\r\n                                           id=\"lastName\"\r\n                                           value={objValues.lastName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-2 col-md-2\">\r\n                                       <FormGroup>\r\n                                           <Label>Date Of Birth</Label>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Actual\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       defaultChecked\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Actual\r\n                                               </label>\r\n                                           </div>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Estimated\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Estimated\r\n                                               </label>\r\n                                           </div>\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Date</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"date\"\r\n                                               name=\"dob\"\r\n                                               id=\"dob\"\r\n                                               max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                               value={objValues.dob}\r\n                                               onChange={handleDobChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Age</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"number\"\r\n                                               name=\"age\"\r\n                                               id=\"age\"\r\n                                               value={objValues.age}\r\n                                               disabled={ageDisabled}\r\n                                               onChange={handleAgeChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Phone Number</Label>\r\n                                       \r\n                                           <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"phoneNumber\"\r\n                                               id=\"phoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.phoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                           {errors.phoneNumber !==\"\" ? (\r\n                                               <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                               ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Alternative Phone Number</Label>\r\n                                       <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"altPhoneNumber\"\r\n                                               id=\"altPhoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.altPhoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Sex *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sex\"\r\n                                               id=\"sex\"\r\n                                               value={objValues.sex}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {sexs.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                          <FormGroup>\r\n                                              <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                              <select\r\n                                                  className=\"form-control\"\r\n                                                  name=\"state\"\r\n                                                  id=\"state\"\r\n                                                  onChange={getProvinces}\r\n                                                  value={objValues.stateId}\r\n                                                  style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                              >\r\n                                                  <option value={\"\"}></option>\r\n                                                  {states.map((value) => (\r\n                                                      <option key={value.id} value={value.id}>\r\n                                                          {value.name}\r\n                                                      </option>\r\n                                                  ))}\r\n                                              </select>\r\n                                              {errors.stateId !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.stateId}</span>\r\n                                              ) : \"\" }\r\n                                          </FormGroup>\r\n                                      </div>\r\n                                      <div className=\"form-group  col-md-4\">\r\n                                          <FormGroup>\r\n                                              <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                              <select\r\n                                                  className=\"form-control\"\r\n                                                  name=\"lga\"\r\n                                                  id=\"lga\"\r\n                                                  value={objValues.lga}\r\n                                                  onChange={handleInputChange}\r\n                                                  style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                              >\r\n                                                  <option value={\"\"}></option>\r\n                                                  {provinces.map((value, index) => (\r\n                                                      <option key={index} value={value.id}>\r\n                                                          {value.name}\r\n                                                      </option>\r\n                                                  ))}\r\n                                              </select>\r\n                                              {errors.lga !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.lga}</span>\r\n                                              ) : \"\" }\r\n                                          </FormGroup>\r\n                                      </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Address</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"address\"\r\n                                           id=\"address\"\r\n                                           value={objValues.address}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Hang-out spots</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"hangOutSpots\"\r\n                                           id=\"hangOutSpots\"\r\n                                           value={objValues.hangOutSpots}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Relationship to Index Client *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"relativeToIndexClient\"\r\n                                               id=\"relativeToIndexClient\"\r\n                                               value={objValues.relativeToIndexClient}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {indexTesting.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                                   ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Do you currently live with this partner? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"currentlyLiveWithPartner\"\r\n                                               id=\"currentlyLiveWithPartner\"\r\n                                               value={objValues.currentlyLiveWithPartner}\r\n                                               onChange={handleInputChange}        \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               <option value={\"true\"}>Yes</option>\r\n                                               <option value={\"false\"}>No</option>\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>As far as you know, has this partner ever tested positive for HIV *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"partnerTestedPositive\"\r\n                                               id=\"partnerTestedPositive\"\r\n                                               value={objValues.partnerTestedPositive}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"physicalHurt\"\r\n                                               id=\"physicalHurt\"\r\n                                               value={objValues.physicalHurt}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to hurt you? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"threatenToHurt\"\r\n                                               id=\"threatenToHurt\"\r\n                                               value={objValues.threatenToHurt}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                  \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sexuallyUncomfortable\"\r\n                                               id=\"sexuallyUncomfortable\"\r\n                                               value={objValues.sexuallyUncomfortable}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Notification Method selected*</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"notificationMethod\"\r\n                                               id=\"notificationMethod\"\r\n                                               value={objValues.notificationMethod}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {notificationContact.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                               \r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                       <Input\r\n                                           type=\"date\"\r\n                                           name=\"datePartnerCameForTesting\"\r\n                                           id=\"datePartnerCameForTesting\"\r\n                                           value={objValues.datePartnerCameForTesting}\r\n                                           onChange={handleInputChange}\r\n                                           max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                           <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                       ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n\r\n\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label for=\"\">Date Tested? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <Input\r\n                                          type=\"date\"\r\n                                          name=\"dateTested\"\r\n                                          id=\"dateTested\"\r\n                                          value={objValues.dateTested}\r\n                                          onChange={handleInputChange}\r\n                                          max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n\r\n                                      />\r\n\r\n                                      </FormGroup>\r\n                                  </div>\r\n\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                     <FormGroup>\r\n                                         <Label>HIV Status of Index Client <span style={{ color:\"red\"}}> *</span></Label>\r\n                                         <select\r\n                                             className=\"form-control\"\r\n                                             name=\"currentHivStatus\"\r\n                                             id=\"currentHivStatus\"\r\n                                             value={objValues.currentHivStatus}\r\n                                             onChange={handleInputChange}\r\n                                             style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         >\r\n                                             <option value={\"\"}></option>\r\n                                             <option value=\"Negative\">Negative</option>\r\n                                             <option value=\"Positive\">Positive</option>\r\n                                         </select>\r\n\r\n                                     </FormGroup>\r\n                                 </div>\r\n                               </>\r\n                            )}\r\n                     \r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                            \r\n                                <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["395","396","397","398","399","400","401"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["402","403","404","405"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  //console.log(\"data3\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n    if (props.patientObj) {\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n      //Logic for cd4 count section to show\r\n      if (\r\n        props.patientObj.hivTestResult !== null &&\r\n        props.patientObj.hivTestResult !== \"\" &&\r\n        props.patientObj.hivTestResult === \"Positive\"\r\n      ) {\r\n        setShowCD4Count(true);\r\n      } else {\r\n        setShowCD4Count(false);\r\n      }\r\n      if (\r\n        props.patientObj.hivTestResult2 !== null &&\r\n        props.patientObj.hivTestResult2 !== \"\" &&\r\n        props.patientObj.hivTestResult2 === \"Positive\"\r\n      ) {\r\n        setShowCD4Count(true);\r\n      } else {\r\n        setShowCD4Count(false);\r\n      }\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n    // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      //logic to get Hiv result test\r\n      setSaving(true);\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      if (props.activePage.actionType === \"view\") {\r\n        //e.preventDefault();\r\n        handleItemClick(\"post-test\", \"hiv-test\");\r\n      }\r\n      if (props.activePage.actionType === \"update\") {\r\n        objValues.htsClientId = clientId;\r\n        objValues.confirmatoryTest = confirmatoryTest;\r\n        objValues.confirmatoryTest2 = confirmatoryTest2;\r\n        objValues.personId = patientID;\r\n        objValues.test1 = initialTest1;\r\n        objValues.test2 = initialTest12;\r\n        objValues.tieBreakerTest = tieBreakerTest;\r\n        objValues.tieBreakerTest2 = tieBreakerTest2;\r\n        objValues.syphilisTesting = syphills;\r\n        objValues.hepatitisTesting = hepatitis;\r\n\r\n        objValues.cd4 = cd4Count;\r\n        objValues.others = others;\r\n\r\n        //console.log(clientId, objValues)\r\n        axios\r\n          .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.setPatientObj(response.data);\r\n            console.log(\"saved\", response.data);\r\n            //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n            //toast.success(\"HIV test successful\");\r\n            handleItemClick(\"post-test\", \"hiv-test\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    onChange={handleInputChangeInitial}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                    <>\r\n                      <b> Result : </b>\r\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                    </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                    confirmatoryTest.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                            <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                }}\r\n                            >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                            </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br/>\r\n                      <br/>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                            <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                }}\r\n                            >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                            </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                </select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              \r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() =>\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </>\r\n                  )}\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["406","407","408","409"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    \r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PostTest = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    ///const [errors, setErrors] = useState({});\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            postTestCounselingKnowledgeAssessment: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [postTest, setPostTest]= useState(\r\n        {\r\n            hivTestResult:\"\", \r\n            hivTestBefore:\"\", \r\n            hivRequestResult:\"\", \r\n            hivRequestResultCt:\"\",                             \r\n            clientReceivedHivTestResult:\"\", \r\n            postTestCounseling:\"\", \r\n            riskReduction:\"\", \r\n            postTestDisclosure:\"\",\r\n            bringPartnerHivtesting:\"\", \r\n            childrenHivtesting:\"\", \r\n            informationFp:\"\", \r\n            partnerFpThanCondom:\"\", \r\n            partnerFpUseCondom:\"\",\r\n            correctCondomUse:\"\", \r\n            condomProvidedToClient:\"\", \r\n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \r\n            referredToServices:\"\",\r\n            lubricantProvidedToClient: \"\",\r\n            condomProvidedToClientCount: \"\",\r\n            lubricantProvidedToClientCount: \"\",\r\n        }\r\n    )\r\n    const handleInputChangePostTest = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})        \r\n        setPostTest ({...postTest,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        //console.log(props.patientObj.postTestCounselingKnowledgeAssessment) \r\n        setPostTest({...postTest, ...props.patientObj.postTestCounselingKnowledgeAssessment}) \r\n        if(props.patientObj && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2!=='Positive')){\r\n            postTest.hivTestResult='Positive'\r\n        }\r\n    }, [ props.patientObj]);\r\n    \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(props.activePage.actionType==='view'){\r\n            //e.preventDefault();\r\n            handleItemClick('recency-testing', 'post-test')\r\n        }\r\n        if(props.activePage.actionType==='update'){\r\n            setSaving(true)\r\n        //e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.postTestCounselingKnowledgeAssessment= postTest\r\n            objValues.personId= patientID\r\n            axios.put(`${baseUrl}hts/${clientId}/post-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                if(postTest.hivTestResult==='true'){\r\n                    handleItemClick('recency-testing', 'post-test')\r\n                }else if(postTest.hivTestResult==='false'){\r\n                    history.push('/');\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 >POST TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResult\"\r\n                                        id=\"hivTestResult\"\r\n                                        value={postTest.hivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\" >Positive</option>\r\n                                        <option value=\"false\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been tested for HIV before within this year? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestBefore\"\r\n                                        id=\"hivTestBefore\"\r\n                                        value={postTest.hivTestBefore}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Not previously tested\">Not previously tested</option>\r\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\r\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\r\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form signed by tester </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResult\"\r\n                                        id=\"hivRequestResult\"\r\n                                        value={postTest.hivRequestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCt\"\r\n                                        id=\"hivRequestResultCt\"\r\n                                        value={postTest.hivRequestResultCt}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client received HIV test result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientReceivedHivTestResult\"\r\n                                        id=\"clientReceivedHivTestResult\"\r\n                                        value={postTest.clientReceivedHivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test counseling done </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestCounseling\"\r\n                                        id=\"postTestCounseling\"\r\n                                        value={postTest.postTestCounseling}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Risk reduction plan developed </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"riskReduction\"\r\n                                        id=\"riskReduction\"\r\n                                        value={postTest.riskReduction}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test disclosure plan developed </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestDisclosure\"\r\n                                        id=\"postTestDisclosure\"\r\n                                        value={postTest.postTestDisclosure}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring partner(s) for HIV testing </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bringPartnerHivtesting\"\r\n                                        id=\"bringPartnerHivtesting\"\r\n                                        value={postTest.bringPartnerHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring own children {'<5'} years for HIV testing </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"childrenHivtesting\"\r\n                                        id=\"childrenHivtesting\"\r\n                                        value={postTest.childrenHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Provided with information on FP and dual contraception </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informationFp\"\r\n                                        id=\"informationFp\"\r\n                                        value={postTest.informationFp}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use FP methods (other than condom)</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpThanCondom\"\r\n                                        id=\"partnerFpThanCondom\"\r\n                                        value={postTest.partnerFpThanCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpUseCondom\"\r\n                                        id=\"partnerFpUseCondom\"\r\n                                        value={postTest.partnerFpUseCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Correct condom use demonstrated </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"correctCondomUse\"\r\n                                        id=\"correctCondomUse\"\r\n                                        value={postTest.correctCondomUse}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Condoms provided to client </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"condomProvidedToClient\"\r\n                                        id=\"condomProvidedToClient\"\r\n                                        value={postTest.condomProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {postTest.condomProvidedToClient !== null && postTest.condomProvidedToClient === 'true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                   <FormGroup>\r\n                                       <Label>How many condoms were provided to client </Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"condomProvidedToClientCount\"\r\n                                           id=\"condomProvidedToClientCount\"\r\n                                           value={postTest.condomProvidedToClientCount}\r\n                                           onChange={handleInputChangePostTest}\r\n                                           style={{\r\n                                               border: \"1px solid #014D88\",\r\n                                               borderRadius: \"0.25rem\",\r\n                                           }}\r\n                                       />\r\n                                       \r\n                                   </FormGroup>\r\n                               </div>\r\n                            )}\r\n                         \r\n                      \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lubricant were provided to client </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lubricantProvidedToClient\"\r\n                                        id=\"lubricantProvidedToClient\"\r\n                                        value={postTest.lubricantProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {postTest.lubricantProvidedToClient !== null && postTest.lubricantProvidedToClient === 'true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>How many lubricant provided to client </Label>\r\n                                     <Input\r\n                                         type=\"number\"\r\n                                         name=\"lubricantProvidedToClientCount\"\r\n                                         id=\"lubricantProvidedToClientCount\"\r\n                                         value={postTest.lubricantProvidedToClientCount}\r\n                                         onChange={handleInputChangePostTest}\r\n                                         style={{\r\n                                             border: \"1px solid #014D88\",\r\n                                             borderRadius: \"0.25rem\",\r\n                                         }}\r\n                                     />\r\n                                     \r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                           \r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client referred to other services </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredToServices\"\r\n                                        id=\"referredToServices\"\r\n                                        value={postTest.referredToServices}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message success>\r\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\r\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\r\n                                \r\n                            </Message>\r\n                                                \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                                \r\n                                {props.activePage.actionType==='update' && (\r\n                                <Button content='Update & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                )}\r\n                                {props.activePage.actionType==='view' && (\r\n                                    <Button content='Next' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                )}\r\n                                \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostTest","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\History\\History.js",["428","429","430","431","432","433","434"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    useEffect(() => {\r\n        //patients()\r\n      }, [props.patientObj]);\r\n\r\n    const LoadViewPage =(row, actionType)=>{\r\n        props.setActivePage({...props.activePage, activePage:\"view\", activeObject:row, actionType:actionType})\r\n    }\r\n    \r\n\r\n  return (\r\n    <div> \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"HTS HISTORY \"\r\n              columns={[\r\n                // { title: \"HTS ID\", field: \"id\" },\r\n                { title: \"Date\", field: \"date\" },\r\n                {title: \"Pre Test Counseling\",field: \"pre\"},\r\n                { title: \"Recency Test\", field: \"rencency\" },\r\n                { title: \"Post Test\", field: \"post\" },\r\n                // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },  \r\n                { title: \"Request & Result\", field: \"requestResult\", filtering: false },       \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={props.loading}\r\n              data={ props.patientList.map((row) => ({\r\n               // id: row.id,\r\n                date: row.dateVisit,\r\n                pre: row.knowledgeAssessment? \"Filled\":\"Not Filled \",\r\n                requestResult:row.confirmatoryTest ? \"Filled\":\"Not Filled \",\r\n                rencency: row.recency ? \"Filled\":\"Not Filled \",\r\n                post:row.postTestCounselingKnowledgeAssessment ? \"Filled\":\"Not Filled \",\r\n                //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n                actions:\r\n            \r\n                    <div>\r\n                    <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                              <Dropdown.Item \r\n                                onClick={()=>LoadViewPage(row, 'view')}\r\n                                > <Icon name='eye' />\r\n                                View  \r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                               onClick={()=>LoadViewPage(row, 'update')}\r\n                                ><Icon name='edit' />Edit</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                    headerStyle: {\r\n                        //backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["435","436","437","438","439","440","441"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["442","443","444","445"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=(row, actionType)=>{\r\n\r\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\r\n    }\r\n    \r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461"],"import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["462","463","464","465","466","467","468","469","470","471"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["472","473","474","475"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["490","491","492","493","494"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["495","496"],"import Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\n\r\n\r\nexport const NewlyEnrolledArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART '\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Newly Enrolled on ART by Age',\r\n        data: [\r\n            \r\n            { name: '25 + ', sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n        ]\r\n    }]\r\n};","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["497","498","499","500","501","502","503","504"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of  client contact\"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n              //{ title: \"Actions\", field: \"actions\", filtering: false },\r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [stateUnitOptions, setStateUnitOptions]= useState([]);\r\n    const [districtUnitOptions, setDistrictUnitOptions]= useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n\r\n    let temp = { ...errors }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n            offeredIns:\"\",\r\n            acceptedIns:\"\",\r\n            elicited: \"\",\r\n            stateId: \"\",\r\n            lga:\"\",\r\n            dateTested: \"\",\r\n            currentHivStatus: \"\"\r\n        }\r\n    )           \r\n    useEffect(() => {\r\n        getStates();\r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n    }, []);\r\n\r\n    function getStateByCountryId(getCountryId) {\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setStates(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        }\r\n\r\n    function getProvincesId(getStateId) {\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        }\r\n\r\n    const getProvinces = e => {\r\n        const stateId = e.target.value;\r\n        setObjValues({ ...objValues, stateId: e.target.value });\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    };\r\n\r\n    const getStates = () => {\r\n        getStateByCountryId('1');\r\n        setObjValues({ ...objValues, countryId: 1 });\r\n    };\r\n\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n         //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n        temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\"\r\n             \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()) { \r\n            setSaving(true)      \r\n            objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n\r\n            //console.log(\"obj\", objValues)\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\");\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Offered INS ? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"offeredIns\"\r\n                                    id=\"offeredIns\"\r\n                                    value={objValues.offeredIns}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {consent.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.offeredIns !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.offeredIns}</span>\r\n                                    ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                            {objValues.offeredIns !== \"\" && objValues.offeredIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Accepted INS ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"acceptedIns\"\r\n                                        id=\"acceptedIns\"\r\n                                        value={objValues.acceptedIns}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                            {objValues.acceptedIns !== \"\" && objValues.acceptedIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Elicited ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"elicited\"\r\n                                        id=\"elicited\"\r\n                                        value={objValues.elicited}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                     \r\n                        <div className=\"row\">\r\n                            {objValues.elicited !== \"\" && objValues.elicited !== \"616\" && (\r\n                            <>    \r\n                                <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">First Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"firstName\"\r\n                                           id=\"firstName\"\r\n                                           value={objValues.firstName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Middle Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"middleName\"\r\n                                           id=\"middleName\"\r\n                                           value={objValues.middleName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Last Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"lastName\"\r\n                                           id=\"lastName\"\r\n                                           value={objValues.lastName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-2 col-md-2\">\r\n                                       <FormGroup>\r\n                                           <Label>Date Of Birth</Label>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Actual\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       defaultChecked\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Actual\r\n                                               </label>\r\n                                           </div>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Estimated\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Estimated\r\n                                               </label>\r\n                                           </div>\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Date</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"date\"\r\n                                               name=\"dob\"\r\n                                               id=\"dob\"\r\n                                               max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                               value={objValues.dob}\r\n                                               onChange={handleDobChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Age</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"number\"\r\n                                               name=\"age\"\r\n                                               id=\"age\"\r\n                                               value={objValues.age}\r\n                                               disabled={ageDisabled}\r\n                                               onChange={handleAgeChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Phone Number</Label>\r\n                                       \r\n                                           <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"phoneNumber\"\r\n                                               id=\"phoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.phoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                           {errors.phoneNumber !==\"\" ? (\r\n                                               <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                               ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Alternative Phone Number</Label>\r\n                                       <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"altPhoneNumber\"\r\n                                               id=\"altPhoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.altPhoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sex\"\r\n                                               id=\"sex\"\r\n                                               value={objValues.sex}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {sexs.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"state\"\r\n                                               id=\"state\"\r\n                                               onChange={getProvinces}\r\n                                               value={objValues.stateId}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {states.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.name}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           {errors.stateId !==\"\" ? (\r\n                                               <span className={classes.error}>{errors.stateId}</span>\r\n                                           ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"lga\"\r\n                                               id=\"lga\"\r\n                                               value={objValues.lga}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {provinces.map((value, index) => (\r\n                                                   <option key={index} value={value.id}>\r\n                                                       {value.name}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           {errors.lga !==\"\" ? (\r\n                                               <span className={classes.error}>{errors.lga}</span>\r\n                                           ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"address\"\r\n                                           id=\"address\"\r\n                                           value={objValues.address}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Hang-out spots</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"hangOutSpots\"\r\n                                           id=\"hangOutSpots\"\r\n                                           value={objValues.hangOutSpots}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Relationship to Index Client <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"relativeToIndexClient\"\r\n                                               id=\"relativeToIndexClient\"\r\n                                               value={objValues.relativeToIndexClient}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {indexTesting.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                                   ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Do you currently live with this partner? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"currentlyLiveWithPartner\"\r\n                                               id=\"currentlyLiveWithPartner\"\r\n                                               value={objValues.currentlyLiveWithPartner}\r\n                                               onChange={handleInputChange}        \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               <option value={\"true\"}>Yes</option>\r\n                                               <option value={\"false\"}>No</option>\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>As far as you know, has this partner ever tested positive for HIV <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"partnerTestedPositive\"\r\n                                               id=\"partnerTestedPositive\"\r\n                                               value={objValues.partnerTestedPositive}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"physicalHurt\"\r\n                                               id=\"physicalHurt\"\r\n                                               value={objValues.physicalHurt}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to hurt you? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"threatenToHurt\"\r\n                                               id=\"threatenToHurt\"\r\n                                               value={objValues.threatenToHurt}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                  \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to force you to do something sexually that made you uncomfortable ? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sexuallyUncomfortable\"\r\n                                               id=\"sexuallyUncomfortable\"\r\n                                               value={objValues.sexuallyUncomfortable}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Notification Method selected <span style={{ color:\"red\"}}> *</span></Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"notificationMethod\"\r\n                                               id=\"notificationMethod\"\r\n                                               value={objValues.notificationMethod}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {notificationContact.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                               \r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                       <Input\r\n                                           type=\"date\"\r\n                                           name=\"datePartnerCameForTesting\"\r\n                                           id=\"datePartnerCameForTesting\"\r\n                                           value={objValues.datePartnerCameForTesting}\r\n                                           onChange={handleInputChange}\r\n                                           max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                           <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                       ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label for=\"\">Date Tested? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <Input\r\n                                          type=\"date\"\r\n                                          name=\"dateTested\"\r\n                                          id=\"dateTested\"\r\n                                          value={objValues.dateTested}\r\n                                          onChange={handleInputChange}\r\n                                          max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n\r\n                                      />\r\n\r\n                                      </FormGroup>\r\n                                  </div>\r\n\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                     <FormGroup>\r\n                                         <Label>HIV Status of Index Client <span style={{ color:\"red\"}}> *</span></Label>\r\n                                         <select\r\n                                             className=\"form-control\"\r\n                                             name=\"currentHivStatus\"\r\n                                             id=\"currentHivStatus\"\r\n                                             value={objValues.currentHivStatus}\r\n                                             onChange={handleInputChange}\r\n                                             style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         >\r\n                                             <option value={\"\"}></option>\r\n                                             <option value=\"Negative\">Negative</option>\r\n                                             <option value=\"Positive\">Positive</option>\r\n                                         </select>\r\n\r\n                                     </FormGroup>\r\n                                 </div>\r\n                               </>\r\n                            )}\r\n                     \r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                            \r\n                                <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["521","522","523","524","525"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["526","527","528","529","530","531","532"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    console.log(\"data1\", props.patientObj)\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\", \r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            knowledgeAssessment: {},\r\n            personId: patientID,\r\n            riskAssessment: {},\r\n            stiScreening: {},\r\n            tbScreening: {},\r\n            sexPartnerRiskAssessment:{}\r\n        }\r\n    )\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\", \r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n        }\r\n    )\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n                \r\n        }\r\n    )\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough :\"\",\r\n            weightLoss  :\"\",\r\n            lymphadenopathy :\"\", \r\n            fever :\"\",  \r\n            nightSweats :\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\r\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\r\n                knowledgeAssessment.previousTestedHIVNegative='true'\r\n            }else{\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \r\n            } \r\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\r\n        }\r\n    }, [props.patientObj]);\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    \r\n    const handleInputChangeRiskAssessment = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n   \r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    \r\n    const [tbCount, settbCount] = useState(0);\r\n    const handleInputChangeTbScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        \r\n        if(e.target.value==='true') {\r\n            const newcount = tbCount +1\r\n            if(newcount>=0 && newcount <=5){\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        if(e.target.value==='false') {\r\n            const newcount = tbCount -1\r\n            //settbCount(newcount)\r\n            //console.log(newcount)\r\n            if(newcount <=0 ){\r\n                \r\n                settbCount(0)\r\n            }else{\r\n                settbCount(newcount)\r\n            }\r\n        } \r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \r\n    }\r\n     /*****  Validation  */\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n \r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            \r\n            \r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\r\n\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n            setSaving(true);\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n        }\r\n    }\r\n    //console.log(riskAssessmentPartner)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n                     \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        <option value=\"Never\">Never</option> \r\n                                        \r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {sex ==='Female' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                             )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {tbCount}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                 <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                     <select\r\n                                         className=\"form-control\"\r\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                         onChange={handleInputChangeRiskAssessment}\r\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                     >\r\n                                         <option value={\"\"}></option>\r\n                                         <option value=\"true\">Yes</option>\r\n                                         <option value=\"false\">No</option>\r\n                                         \r\n                                     </select>\r\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                     ) : \"\" }\r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["533","534","535","536"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=()=>{\r\n      //window.location.reload(false);\r\n      props.setActivePage({...props.activePage, activePage:\"home\"})\r\n     \r\n    }\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["537","538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["552","553","554","555","556","557","558","559"],"C:\\Users\\victor.ajor\\projects\\hts-module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["560","561","562","563","564","565","566","567","568","569","570","571","572"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    let temp = { ...errors }\r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n            offeredIns:\"\",\r\n            acceptedIns:\"\",\r\n            elicited: \"\",\r\n            stateId: \"\",\r\n            lga:\"\",\r\n            dateTested: \"\",\r\n            currentHivStatus: \"\"\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        getStates();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n        if(props.patientObj){\r\n\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    function getStateByCountryId(getCountryId) {\r\n                    axios\r\n                    .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                    )\r\n                    .then((response) => {\r\n                        setStates(response.data);\r\n                    })\r\n                    .catch((error) => {\r\n                    //console.log(error);\r\n                    });\r\n                }\r\n\r\n    function getProvincesId(getStateId) {\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        }\r\n\r\n    const getProvinces = e => {\r\n        const stateId = e.target.value;\r\n        setObjValues({ ...objValues, stateId: e.target.value });\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    };\r\n\r\n    const getStates = () => {\r\n        getStateByCountryId('1');\r\n        setObjValues({ ...objValues, countryId: 1 });\r\n    };\r\n\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n         //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n        temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\"\r\n             \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault(); \r\n        if(validate()){\r\n            setSaving(true)\r\n            objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Offered INS ? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"offeredIns\"\r\n                                    id=\"offeredIns\"\r\n                                    value={objValues.offeredIns}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {consent.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.offeredIns !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.offeredIns}</span>\r\n                                    ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                            {objValues.offeredIns !== \"\" && objValues.offeredIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Accepted INS ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"acceptedIns\"\r\n                                        id=\"acceptedIns\"\r\n                                        value={objValues.acceptedIns}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                            {objValues.acceptedIns !== \"\" && objValues.acceptedIns !== '616' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Elicited ? <span style={{ color:\"red\"}}> </span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"elicited\"\r\n                                        id=\"elicited\"\r\n                                        value={objValues.elicited}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                     \r\n                        <div className=\"row\">\r\n                            {objValues.elicited !== \"\" && objValues.elicited !== \"616\" && (\r\n                            <>    \r\n                                <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">First Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"firstName\"\r\n                                           id=\"firstName\"\r\n                                           value={objValues.firstName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Middle Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"middleName\"\r\n                                           id=\"middleName\"\r\n                                           value={objValues.middleName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Last Name</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"lastName\"\r\n                                           id=\"lastName\"\r\n                                           value={objValues.lastName}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                          \r\n                                       />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-2 col-md-2\">\r\n                                       <FormGroup>\r\n                                           <Label>Date Of Birth</Label>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Actual\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       defaultChecked\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Actual\r\n                                               </label>\r\n                                           </div>\r\n                                           <div className=\"radio\">\r\n                                               <label>\r\n                                                   <input\r\n                                                       type=\"radio\"\r\n                                                       value=\"Estimated\"\r\n                                                       name=\"dateOfBirth\"\r\n                                                       \r\n                                                       onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                       style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   /> Estimated\r\n                                               </label>\r\n                                           </div>\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Date</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"date\"\r\n                                               name=\"dob\"\r\n                                               id=\"dob\"\r\n                                               max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                               value={objValues.dob}\r\n                                               onChange={handleDobChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-3\">\r\n                                       <FormGroup>\r\n                                           <Label>Age</Label>\r\n                                           <input\r\n                                               className=\"form-control\"\r\n                                               type=\"number\"\r\n                                               name=\"age\"\r\n                                               id=\"age\"\r\n                                               value={objValues.age}\r\n                                               disabled={ageDisabled}\r\n                                               onChange={handleAgeChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           />\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Phone Number</Label>\r\n                                       \r\n                                           <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"phoneNumber\"\r\n                                               id=\"phoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.phoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                           {errors.phoneNumber !==\"\" ? (\r\n                                               <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                               ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Alternative Phone Number</Label>\r\n                                       <PhoneInput\r\n                                               containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                               inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                               country={'ng'}\r\n                                               placeholder=\"(234)7099999999\"\r\n                                               minLength={10}\r\n                                               name=\"altPhoneNumber\"\r\n                                               id=\"altPhoneNumber\"\r\n                                               masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                               value={objValues.altPhoneNumber}\r\n                                               onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                               //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                           />\r\n                                       \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Sex *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sex\"\r\n                                               id=\"sex\"\r\n                                               value={objValues.sex}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {sexs.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                     <FormGroup>\r\n                                         <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                         <select\r\n                                             className=\"form-control\"\r\n                                             name=\"state\"\r\n                                             id=\"state\"\r\n                                             onChange={getProvinces}\r\n                                             value={objValues.stateId}\r\n                                             style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         >\r\n                                             <option value={\"\"}></option>\r\n                                             {states.map((value) => (\r\n                                                 <option key={value.id} value={value.id}>\r\n                                                     {value.name}\r\n                                                 </option>\r\n                                             ))}\r\n                                         </select>\r\n                                         {errors.stateId !==\"\" ? (\r\n                                             <span className={classes.error}>{errors.stateId}</span>\r\n                                         ) : \"\" }\r\n                                     </FormGroup>\r\n                                 </div>\r\n                                 <div className=\"form-group  col-md-4\">\r\n                                     <FormGroup>\r\n                                         <Label>LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                         <select\r\n                                             className=\"form-control\"\r\n                                             name=\"lga\"\r\n                                             id=\"lga\"\r\n                                             value={objValues.lga}\r\n                                             onChange={handleInputChange}\r\n                                             style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         >\r\n                                             <option value={\"\"}></option>\r\n                                             {provinces.map((value, index) => (\r\n                                                 <option key={index} value={value.id}>\r\n                                                     {value.name}\r\n                                                 </option>\r\n                                             ))}\r\n                                         </select>\r\n                                         {errors.lga !==\"\" ? (\r\n                                             <span className={classes.error}>{errors.lga}</span>\r\n                                         ) : \"\" }\r\n                                     </FormGroup>\r\n                                 </div>\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Address</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"address\"\r\n                                           id=\"address\"\r\n                                           value={objValues.address}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">Hang-out spots</Label>\r\n                                       <Input\r\n                                           type=\"text\"\r\n                                           name=\"hangOutSpots\"\r\n                                           id=\"hangOutSpots\"\r\n                                           value={objValues.hangOutSpots}\r\n                                           onChange={handleInputChange}\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                       />                                \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Relationship to Index Client *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"relativeToIndexClient\"\r\n                                               id=\"relativeToIndexClient\"\r\n                                               value={objValues.relativeToIndexClient}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {indexTesting.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                                   ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Do you currently live with this partner? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"currentlyLiveWithPartner\"\r\n                                               id=\"currentlyLiveWithPartner\"\r\n                                               value={objValues.currentlyLiveWithPartner}\r\n                                               onChange={handleInputChange}        \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               <option value={\"true\"}>Yes</option>\r\n                                               <option value={\"false\"}>No</option>\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>As far as you know, has this partner ever tested positive for HIV *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"partnerTestedPositive\"\r\n                                               id=\"partnerTestedPositive\"\r\n                                               value={objValues.partnerTestedPositive}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"physicalHurt\"\r\n                                               id=\"physicalHurt\"\r\n                                               value={objValues.physicalHurt}\r\n                                               onChange={handleInputChange} \r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to hurt you? *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"threatenToHurt\"\r\n                                               id=\"threatenToHurt\"\r\n                                               value={objValues.threatenToHurt}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                              {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n                                  \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Has this partner ever threatened to force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"sexuallyUncomfortable\"\r\n                                               id=\"sexuallyUncomfortable\"\r\n                                               value={objValues.sexuallyUncomfortable}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {consent.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div> \r\n                                   <div className=\"form-group  col-md-4\">\r\n                                       <FormGroup>\r\n                                           <Label>Notification Method selected*</Label>\r\n                                           <select\r\n                                               className=\"form-control\"\r\n                                               name=\"notificationMethod\"\r\n                                               id=\"notificationMethod\"\r\n                                               value={objValues.notificationMethod}\r\n                                               onChange={handleInputChange}\r\n                                               style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                           >\r\n                                               <option value={\"\"}></option>\r\n                                               {notificationContact.map((value) => (\r\n                                                   <option key={value.id} value={value.id}>\r\n                                                       {value.display}\r\n                                                   </option>\r\n                                               ))}\r\n                                               \r\n                                           </select>\r\n                                           \r\n                                       </FormGroup>\r\n                                   </div>\r\n       \r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                       <FormGroup>\r\n                                       <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                       <Input\r\n                                           type=\"date\"\r\n                                           name=\"datePartnerCameForTesting\"\r\n                                           id=\"datePartnerCameForTesting\"\r\n                                           value={objValues.datePartnerCameForTesting}\r\n                                           onChange={handleInputChange}\r\n                                           max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                           style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                           \r\n                                       />\r\n                                       {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                           <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                       ) : \"\" }\r\n                                       </FormGroup>\r\n                                   </div>\r\n\r\n\r\n                                   <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label for=\"\">Date Tested? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <Input\r\n                                          type=\"date\"\r\n                                          name=\"dateTested\"\r\n                                          id=\"dateTested\"\r\n                                          value={objValues.dateTested}\r\n                                          onChange={handleInputChange}\r\n                                          max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n\r\n                                      />\r\n\r\n                                      </FormGroup>\r\n                                  </div>\r\n\r\n                                   <div className=\"form-group  col-md-4\">\r\n                                     <FormGroup>\r\n                                         <Label>HIV Status of Index Client <span style={{ color:\"red\"}}> *</span></Label>\r\n                                         <select\r\n                                             className=\"form-control\"\r\n                                             name=\"currentHivStatus\"\r\n                                             id=\"currentHivStatus\"\r\n                                             value={objValues.currentHivStatus}\r\n                                             onChange={handleInputChange}\r\n                                             style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         >\r\n                                             <option value={\"\"}></option>\r\n                                             <option value=\"Negative\">Negative</option>\r\n                                             <option value=\"Positive\">Positive</option>\r\n                                         </select>\r\n\r\n                                     </FormGroup>\r\n                                   </div>\r\n                               </>\r\n                            )}\r\n                     \r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                            \r\n                                <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact",{"ruleId":"573","severity":1,"message":"574","line":4,"column":10,"nodeType":"575","messageId":"576","endLine":4,"endColumn":23},{"ruleId":"577","replacedBy":"578"},{"ruleId":"579","replacedBy":"580"},{"ruleId":"573","severity":1,"message":"581","line":3,"column":19,"nodeType":"575","messageId":"576","endLine":3,"endColumn":25},{"ruleId":"573","severity":1,"message":"582","line":2,"column":10,"nodeType":"575","messageId":"576","endLine":2,"endColumn":20},{"ruleId":"573","severity":1,"message":"583","line":5,"column":8,"nodeType":"575","messageId":"576","endLine":5,"endColumn":25},{"ruleId":"573","severity":1,"message":"584","line":10,"column":12,"nodeType":"575","messageId":"576","endLine":10,"endColumn":15},{"ruleId":"573","severity":1,"message":"585","line":10,"column":17,"nodeType":"575","messageId":"576","endLine":10,"endColumn":21},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"587","line":5,"column":25,"nodeType":"575","messageId":"576","endLine":5,"endColumn":30},{"ruleId":"573","severity":1,"message":"588","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":25},{"ruleId":"573","severity":1,"message":"589","line":12,"column":22,"nodeType":"575","messageId":"576","endLine":12,"endColumn":28},{"ruleId":"573","severity":1,"message":"590","line":25,"column":7,"nodeType":"575","messageId":"576","endLine":25,"endColumn":16},{"ruleId":"573","severity":1,"message":"591","line":42,"column":12,"nodeType":"575","messageId":"576","endLine":42,"endColumn":18},{"ruleId":"573","severity":1,"message":"592","line":42,"column":20,"nodeType":"575","messageId":"576","endLine":42,"endColumn":29},{"ruleId":"593","severity":1,"message":"594","line":253,"column":8,"nodeType":"595","endLine":253,"endColumn":10,"suggestions":"596"},{"ruleId":"597","severity":1,"message":"598","line":300,"column":43,"nodeType":"599","messageId":"600","endLine":300,"endColumn":45},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"601","line":1,"column":29,"nodeType":"575","messageId":"576","endLine":1,"endColumn":38},{"ruleId":"573","severity":1,"message":"602","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":13},{"ruleId":"573","severity":1,"message":"603","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":14},{"ruleId":"573","severity":1,"message":"604","line":5,"column":52,"nodeType":"575","messageId":"576","endLine":5,"endColumn":56},{"ruleId":"573","severity":1,"message":"605","line":6,"column":13,"nodeType":"575","messageId":"576","endLine":6,"endColumn":19},{"ruleId":"573","severity":1,"message":"606","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"592","line":95,"column":20,"nodeType":"575","messageId":"576","endLine":95,"endColumn":29},{"ruleId":"573","severity":1,"message":"607","line":96,"column":12,"nodeType":"575","messageId":"576","endLine":96,"endColumn":18},{"ruleId":"573","severity":1,"message":"608","line":96,"column":20,"nodeType":"575","messageId":"576","endLine":96,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":24,"fix":"613"},{"ruleId":"573","severity":1,"message":"582","line":26,"column":10,"nodeType":"575","messageId":"576","endLine":26,"endColumn":20},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"601","line":1,"column":29,"nodeType":"575","messageId":"576","endLine":1,"endColumn":38},{"ruleId":"573","severity":1,"message":"587","line":5,"column":25,"nodeType":"575","messageId":"576","endLine":5,"endColumn":30},{"ruleId":"573","severity":1,"message":"614","line":8,"column":9,"nodeType":"575","messageId":"576","endLine":8,"endColumn":13},{"ruleId":"573","severity":1,"message":"589","line":12,"column":22,"nodeType":"575","messageId":"576","endLine":12,"endColumn":28},{"ruleId":"573","severity":1,"message":"615","line":38,"column":11,"nodeType":"575","messageId":"576","endLine":38,"endColumn":18},{"ruleId":"573","severity":1,"message":"616","line":21,"column":8,"nodeType":"575","messageId":"576","endLine":21,"endColumn":18},{"ruleId":"573","severity":1,"message":"617","line":22,"column":9,"nodeType":"575","messageId":"576","endLine":22,"endColumn":14},{"ruleId":"593","severity":1,"message":"618","line":72,"column":6,"nodeType":"595","endLine":72,"endColumn":24,"suggestions":"619"},{"ruleId":"597","severity":1,"message":"598","line":104,"column":74,"nodeType":"599","messageId":"600","endLine":104,"endColumn":76},{"ruleId":"597","severity":1,"message":"598","line":109,"column":73,"nodeType":"599","messageId":"600","endLine":109,"endColumn":75},{"ruleId":"609","severity":1,"message":"610","line":4,"column":10,"nodeType":"611","messageId":"612","endLine":4,"endColumn":24,"fix":"620"},{"ruleId":"593","severity":1,"message":"621","line":35,"column":10,"nodeType":"595","endLine":35,"endColumn":45,"suggestions":"622"},{"ruleId":"573","severity":1,"message":"623","line":3,"column":38,"nodeType":"575","messageId":"576","endLine":3,"endColumn":45},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":6,"column":15,"nodeType":"575","messageId":"576","endLine":6,"endColumn":26},{"ruleId":"573","severity":1,"message":"624","line":7,"column":8,"nodeType":"575","messageId":"576","endLine":7,"endColumn":16},{"ruleId":"573","severity":1,"message":"625","line":10,"column":9,"nodeType":"575","messageId":"576","endLine":10,"endColumn":23},{"ruleId":"573","severity":1,"message":"626","line":24,"column":10,"nodeType":"575","messageId":"576","endLine":24,"endColumn":20},{"ruleId":"573","severity":1,"message":"627","line":102,"column":11,"nodeType":"575","messageId":"576","endLine":102,"endColumn":18},{"ruleId":"573","severity":1,"message":"628","line":105,"column":12,"nodeType":"575","messageId":"576","endLine":105,"endColumn":24},{"ruleId":"573","severity":1,"message":"629","line":105,"column":26,"nodeType":"575","messageId":"576","endLine":105,"endColumn":41},{"ruleId":"573","severity":1,"message":"630","line":109,"column":12,"nodeType":"575","messageId":"576","endLine":109,"endColumn":18},{"ruleId":"597","severity":1,"message":"598","line":126,"column":79,"nodeType":"599","messageId":"600","endLine":126,"endColumn":81},{"ruleId":"593","severity":1,"message":"631","line":222,"column":8,"nodeType":"595","endLine":222,"endColumn":58,"suggestions":"632"},{"ruleId":"597","severity":1,"message":"598","line":476,"column":28,"nodeType":"599","messageId":"600","endLine":476,"endColumn":30},{"ruleId":"597","severity":1,"message":"598","line":479,"column":35,"nodeType":"599","messageId":"600","endLine":479,"endColumn":37},{"ruleId":"597","severity":1,"message":"598","line":533,"column":49,"nodeType":"599","messageId":"600","endLine":533,"endColumn":51},{"ruleId":"633","severity":1,"message":"634","line":1167,"column":83,"nodeType":"635","messageId":"636","endLine":1167,"endColumn":85},{"ruleId":"633","severity":1,"message":"634","line":1167,"column":111,"nodeType":"635","messageId":"636","endLine":1167,"endColumn":113},{"ruleId":"633","severity":1,"message":"634","line":1191,"column":55,"nodeType":"635","messageId":"636","endLine":1191,"endColumn":57},{"ruleId":"633","severity":1,"message":"634","line":1191,"column":85,"nodeType":"635","messageId":"636","endLine":1191,"endColumn":87},{"ruleId":"573","severity":1,"message":"637","line":3,"column":10,"nodeType":"575","messageId":"576","endLine":3,"endColumn":18},{"ruleId":"573","severity":1,"message":"638","line":3,"column":20,"nodeType":"575","messageId":"576","endLine":3,"endColumn":23},{"ruleId":"573","severity":1,"message":"584","line":3,"column":25,"nodeType":"575","messageId":"576","endLine":3,"endColumn":28},{"ruleId":"573","severity":1,"message":"639","line":5,"column":8,"nodeType":"575","messageId":"576","endLine":5,"endColumn":24},{"ruleId":"573","severity":1,"message":"614","line":6,"column":10,"nodeType":"575","messageId":"576","endLine":6,"endColumn":14},{"ruleId":"573","severity":1,"message":"640","line":9,"column":8,"nodeType":"575","messageId":"576","endLine":9,"endColumn":18},{"ruleId":"573","severity":1,"message":"641","line":10,"column":8,"nodeType":"575","messageId":"576","endLine":10,"endColumn":23},{"ruleId":"573","severity":1,"message":"642","line":11,"column":9,"nodeType":"575","messageId":"576","endLine":11,"endColumn":30},{"ruleId":"573","severity":1,"message":"643","line":13,"column":7,"nodeType":"575","messageId":"576","endLine":13,"endColumn":14},{"ruleId":"573","severity":1,"message":"644","line":91,"column":7,"nodeType":"575","messageId":"576","endLine":91,"endColumn":15},{"ruleId":"573","severity":1,"message":"586","line":1,"column":17,"nodeType":"575","messageId":"576","endLine":1,"endColumn":28},{"ruleId":"573","severity":1,"message":"604","line":3,"column":54,"nodeType":"575","messageId":"576","endLine":3,"endColumn":58},{"ruleId":"573","severity":1,"message":"606","line":6,"column":16,"nodeType":"575","messageId":"576","endLine":6,"endColumn":27},{"ruleId":"573","severity":1,"message":"645","line":98,"column":10,"nodeType":"575","messageId":"576","endLine":98,"endColumn":21},{"ruleId":"573","severity":1,"message":"646","line":367,"column":12,"nodeType":"575","messageId":"576","endLine":367,"endColumn":27},{"ruleId":"573","severity":1,"message":"647","line":373,"column":12,"nodeType":"575","messageId":"576","endLine":373,"endColumn":28},{"ruleId":"597","severity":1,"message":"598","line":417,"column":47,"nodeType":"599","messageId":"600","endLine":417,"endColumn":49},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"648","line":3,"column":46,"nodeType":"575","messageId":"576","endLine":3,"endColumn":51},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"649","line":15,"column":18,"nodeType":"575","messageId":"576","endLine":15,"endColumn":29},{"ruleId":"593","severity":1,"message":"650","line":143,"column":8,"nodeType":"595","endLine":143,"endColumn":26,"suggestions":"651"},{"ruleId":"573","severity":1,"message":"652","line":152,"column":23,"nodeType":"575","messageId":"576","endLine":152,"endColumn":35},{"ruleId":"653","severity":1,"message":"654","line":187,"column":13,"nodeType":"655","messageId":"600","endLine":187,"endColumn":44},{"ruleId":"653","severity":1,"message":"656","line":188,"column":13,"nodeType":"655","messageId":"600","endLine":188,"endColumn":31},{"ruleId":"573","severity":1,"message":"657","line":3,"column":20,"nodeType":"575","messageId":"576","endLine":3,"endColumn":24},{"ruleId":"573","severity":1,"message":"649","line":8,"column":18,"nodeType":"575","messageId":"576","endLine":8,"endColumn":29},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"652","line":94,"column":23,"nodeType":"575","messageId":"576","endLine":94,"endColumn":35},{"ruleId":"593","severity":1,"message":"658","line":139,"column":8,"nodeType":"595","endLine":139,"endColumn":50,"suggestions":"659"},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"652","line":102,"column":23,"nodeType":"575","messageId":"576","endLine":102,"endColumn":35},{"ruleId":"660","severity":1,"message":"661","line":145,"column":39,"nodeType":"662","messageId":"663","endLine":145,"endColumn":83,"fix":"664"},{"ruleId":"660","severity":1,"message":"661","line":149,"column":39,"nodeType":"662","messageId":"663","endLine":149,"endColumn":80,"fix":"665"},{"ruleId":"660","severity":1,"message":"661","line":154,"column":39,"nodeType":"662","messageId":"663","endLine":154,"endColumn":77,"fix":"666"},{"ruleId":"660","severity":1,"message":"661","line":158,"column":39,"nodeType":"662","messageId":"663","endLine":158,"endColumn":76,"fix":"667"},{"ruleId":"660","severity":1,"message":"661","line":162,"column":39,"nodeType":"662","messageId":"663","endLine":162,"endColumn":76,"fix":"668"},{"ruleId":"660","severity":1,"message":"661","line":166,"column":39,"nodeType":"662","messageId":"663","endLine":166,"endColumn":69,"fix":"669"},{"ruleId":"593","severity":1,"message":"670","line":168,"column":7,"nodeType":"595","endLine":168,"endColumn":94,"suggestions":"671"},{"ruleId":"672","severity":1,"message":"673","line":208,"column":13,"nodeType":"674","messageId":"675","endLine":208,"endColumn":140},{"ruleId":"597","severity":1,"message":"598","line":208,"column":34,"nodeType":"599","messageId":"600","endLine":208,"endColumn":36},{"ruleId":"672","severity":1,"message":"673","line":210,"column":13,"nodeType":"674","messageId":"675","endLine":210,"endColumn":118},{"ruleId":"597","severity":1,"message":"598","line":210,"column":34,"nodeType":"599","messageId":"600","endLine":210,"endColumn":36},{"ruleId":"573","severity":1,"message":"623","line":4,"column":38,"nodeType":"575","messageId":"576","endLine":4,"endColumn":45},{"ruleId":"573","severity":1,"message":"604","line":4,"column":52,"nodeType":"575","messageId":"576","endLine":4,"endColumn":56},{"ruleId":"573","severity":1,"message":"624","line":8,"column":8,"nodeType":"575","messageId":"576","endLine":8,"endColumn":16},{"ruleId":"573","severity":1,"message":"588","line":14,"column":10,"nodeType":"575","messageId":"576","endLine":14,"endColumn":20},{"ruleId":"573","severity":1,"message":"649","line":25,"column":18,"nodeType":"575","messageId":"576","endLine":25,"endColumn":29},{"ruleId":"573","severity":1,"message":"676","line":115,"column":12,"nodeType":"575","messageId":"576","endLine":115,"endColumn":28},{"ruleId":"593","severity":1,"message":"677","line":183,"column":8,"nodeType":"595","endLine":183,"endColumn":23,"suggestions":"678"},{"ruleId":"597","severity":1,"message":"598","line":340,"column":28,"nodeType":"599","messageId":"600","endLine":340,"endColumn":30},{"ruleId":"597","severity":1,"message":"598","line":343,"column":35,"nodeType":"599","messageId":"600","endLine":343,"endColumn":37},{"ruleId":"597","severity":1,"message":"598","line":415,"column":49,"nodeType":"599","messageId":"600","endLine":415,"endColumn":51},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":6,"column":15,"nodeType":"575","messageId":"576","endLine":6,"endColumn":26},{"ruleId":"573","severity":1,"message":"652","line":102,"column":23,"nodeType":"575","messageId":"576","endLine":102,"endColumn":35},{"ruleId":"660","severity":1,"message":"661","line":146,"column":39,"nodeType":"662","messageId":"663","endLine":146,"endColumn":83,"fix":"679"},{"ruleId":"660","severity":1,"message":"661","line":150,"column":39,"nodeType":"662","messageId":"663","endLine":150,"endColumn":80,"fix":"680"},{"ruleId":"660","severity":1,"message":"661","line":154,"column":39,"nodeType":"662","messageId":"663","endLine":154,"endColumn":77,"fix":"681"},{"ruleId":"660","severity":1,"message":"661","line":157,"column":39,"nodeType":"662","messageId":"663","endLine":157,"endColumn":76,"fix":"682"},{"ruleId":"660","severity":1,"message":"661","line":160,"column":39,"nodeType":"662","messageId":"663","endLine":160,"endColumn":76,"fix":"683"},{"ruleId":"660","severity":1,"message":"661","line":163,"column":39,"nodeType":"662","messageId":"663","endLine":163,"endColumn":69,"fix":"684"},{"ruleId":"593","severity":1,"message":"670","line":187,"column":7,"nodeType":"595","endLine":187,"endColumn":94,"suggestions":"685"},{"ruleId":"672","severity":1,"message":"673","line":227,"column":13,"nodeType":"674","messageId":"675","endLine":227,"endColumn":140},{"ruleId":"597","severity":1,"message":"598","line":227,"column":34,"nodeType":"599","messageId":"600","endLine":227,"endColumn":36},{"ruleId":"672","severity":1,"message":"673","line":229,"column":13,"nodeType":"674","messageId":"675","endLine":229,"endColumn":118},{"ruleId":"597","severity":1,"message":"598","line":229,"column":34,"nodeType":"599","messageId":"600","endLine":229,"endColumn":36},{"ruleId":"597","severity":1,"message":"598","line":231,"column":49,"nodeType":"599","messageId":"600","endLine":231,"endColumn":51},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"601","line":1,"column":29,"nodeType":"575","messageId":"576","endLine":1,"endColumn":38},{"ruleId":"573","severity":1,"message":"602","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":13},{"ruleId":"573","severity":1,"message":"603","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":14},{"ruleId":"573","severity":1,"message":"604","line":5,"column":52,"nodeType":"575","messageId":"576","endLine":5,"endColumn":56},{"ruleId":"573","severity":1,"message":"605","line":6,"column":13,"nodeType":"575","messageId":"576","endLine":6,"endColumn":19},{"ruleId":"573","severity":1,"message":"606","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"592","line":95,"column":20,"nodeType":"575","messageId":"576","endLine":95,"endColumn":29},{"ruleId":"573","severity":1,"message":"607","line":96,"column":12,"nodeType":"575","messageId":"576","endLine":96,"endColumn":18},{"ruleId":"573","severity":1,"message":"608","line":96,"column":20,"nodeType":"575","messageId":"576","endLine":96,"endColumn":29},{"ruleId":"573","severity":1,"message":"686","line":27,"column":10,"nodeType":"575","messageId":"576","endLine":27,"endColumn":20},{"ruleId":"573","severity":1,"message":"637","line":29,"column":10,"nodeType":"575","messageId":"576","endLine":29,"endColumn":18},{"ruleId":"573","severity":1,"message":"687","line":29,"column":27,"nodeType":"575","messageId":"576","endLine":29,"endColumn":31},{"ruleId":"573","severity":1,"message":"688","line":29,"column":33,"nodeType":"575","messageId":"576","endLine":29,"endColumn":37},{"ruleId":"573","severity":1,"message":"590","line":52,"column":7,"nodeType":"575","messageId":"576","endLine":52,"endColumn":16},{"ruleId":"573","severity":1,"message":"689","line":101,"column":11,"nodeType":"575","messageId":"576","endLine":101,"endColumn":20},{"ruleId":"593","severity":1,"message":"690","line":106,"column":10,"nodeType":"595","endLine":106,"endColumn":12,"suggestions":"691"},{"ruleId":"573","severity":1,"message":"692","line":123,"column":11,"nodeType":"575","messageId":"576","endLine":123,"endColumn":27},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":2,"column":52,"nodeType":"575","messageId":"576","endLine":2,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"645","line":96,"column":12,"nodeType":"575","messageId":"576","endLine":96,"endColumn":23},{"ruleId":"573","severity":1,"message":"693","line":102,"column":12,"nodeType":"575","messageId":"576","endLine":102,"endColumn":26},{"ruleId":"573","severity":1,"message":"694","line":102,"column":28,"nodeType":"575","messageId":"576","endLine":102,"endColumn":45},{"ruleId":"593","severity":1,"message":"695","line":152,"column":8,"nodeType":"595","endLine":152,"endColumn":26,"suggestions":"696"},{"ruleId":"573","severity":1,"message":"697","line":167,"column":14,"nodeType":"575","messageId":"576","endLine":167,"endColumn":28},{"ruleId":"573","severity":1,"message":"698","line":254,"column":11,"nodeType":"575","messageId":"576","endLine":254,"endColumn":26},{"ruleId":"597","severity":1,"message":"598","line":345,"column":49,"nodeType":"599","messageId":"600","endLine":345,"endColumn":51},{"ruleId":"597","severity":1,"message":"598","line":351,"column":78,"nodeType":"599","messageId":"600","endLine":351,"endColumn":80},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"603","line":2,"column":10,"nodeType":"575","messageId":"576","endLine":2,"endColumn":16},{"ruleId":"573","severity":1,"message":"587","line":5,"column":25,"nodeType":"575","messageId":"576","endLine":5,"endColumn":30},{"ruleId":"573","severity":1,"message":"614","line":8,"column":9,"nodeType":"575","messageId":"576","endLine":8,"endColumn":13},{"ruleId":"573","severity":1,"message":"588","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":25},{"ruleId":"573","severity":1,"message":"589","line":11,"column":22,"nodeType":"575","messageId":"576","endLine":11,"endColumn":28},{"ruleId":"573","severity":1,"message":"590","line":23,"column":7,"nodeType":"575","messageId":"576","endLine":23,"endColumn":16},{"ruleId":"573","severity":1,"message":"586","line":1,"column":17,"nodeType":"575","messageId":"576","endLine":1,"endColumn":28},{"ruleId":"573","severity":1,"message":"604","line":3,"column":54,"nodeType":"575","messageId":"576","endLine":3,"endColumn":58},{"ruleId":"573","severity":1,"message":"606","line":6,"column":16,"nodeType":"575","messageId":"576","endLine":6,"endColumn":27},{"ruleId":"597","severity":1,"message":"598","line":396,"column":47,"nodeType":"599","messageId":"600","endLine":396,"endColumn":49},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"652","line":97,"column":23,"nodeType":"575","messageId":"576","endLine":97,"endColumn":35},{"ruleId":"593","severity":1,"message":"658","line":147,"column":8,"nodeType":"595","endLine":147,"endColumn":27,"suggestions":"699"},{"ruleId":"573","severity":1,"message":"700","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":17},{"ruleId":"573","severity":1,"message":"623","line":5,"column":38,"nodeType":"575","messageId":"576","endLine":5,"endColumn":45},{"ruleId":"573","severity":1,"message":"604","line":5,"column":52,"nodeType":"575","messageId":"576","endLine":5,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"624","line":9,"column":8,"nodeType":"575","messageId":"576","endLine":9,"endColumn":16},{"ruleId":"573","severity":1,"message":"625","line":12,"column":9,"nodeType":"575","messageId":"576","endLine":12,"endColumn":23},{"ruleId":"573","severity":1,"message":"614","line":15,"column":9,"nodeType":"575","messageId":"576","endLine":15,"endColumn":13},{"ruleId":"573","severity":1,"message":"701","line":15,"column":27,"nodeType":"575","messageId":"576","endLine":15,"endColumn":38},{"ruleId":"573","severity":1,"message":"702","line":23,"column":8,"nodeType":"575","messageId":"576","endLine":23,"endColumn":18},{"ruleId":"573","severity":1,"message":"703","line":25,"column":11,"nodeType":"575","messageId":"576","endLine":25,"endColumn":16},{"ruleId":"573","severity":1,"message":"627","line":98,"column":11,"nodeType":"575","messageId":"576","endLine":98,"endColumn":18},{"ruleId":"573","severity":1,"message":"630","line":106,"column":12,"nodeType":"575","messageId":"576","endLine":106,"endColumn":18},{"ruleId":"593","severity":1,"message":"704","line":170,"column":8,"nodeType":"595","endLine":170,"endColumn":26,"suggestions":"705"},{"ruleId":"597","severity":1,"message":"598","line":283,"column":49,"nodeType":"599","messageId":"600","endLine":283,"endColumn":51},{"ruleId":"633","severity":1,"message":"634","line":558,"column":61,"nodeType":"635","messageId":"636","endLine":558,"endColumn":63},{"ruleId":"633","severity":1,"message":"634","line":558,"column":93,"nodeType":"635","messageId":"636","endLine":558,"endColumn":95},{"ruleId":"633","severity":1,"message":"634","line":623,"column":55,"nodeType":"635","messageId":"636","endLine":623,"endColumn":57},{"ruleId":"633","severity":1,"message":"634","line":623,"column":85,"nodeType":"635","messageId":"636","endLine":623,"endColumn":87},{"ruleId":"573","severity":1,"message":"706","line":1,"column":28,"nodeType":"575","messageId":"576","endLine":1,"endColumn":36},{"ruleId":"573","severity":1,"message":"602","line":3,"column":8,"nodeType":"575","messageId":"576","endLine":3,"endColumn":13},{"ruleId":"573","severity":1,"message":"707","line":4,"column":17,"nodeType":"575","messageId":"576","endLine":4,"endColumn":24},{"ruleId":"609","severity":1,"message":"610","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":24,"fix":"708"},{"ruleId":"573","severity":1,"message":"709","line":5,"column":19,"nodeType":"575","messageId":"576","endLine":5,"endColumn":24},{"ruleId":"573","severity":1,"message":"686","line":27,"column":10,"nodeType":"575","messageId":"576","endLine":27,"endColumn":20},{"ruleId":"573","severity":1,"message":"590","line":52,"column":7,"nodeType":"575","messageId":"576","endLine":52,"endColumn":16},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"648","line":3,"column":46,"nodeType":"575","messageId":"576","endLine":3,"endColumn":51},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"649","line":15,"column":18,"nodeType":"575","messageId":"576","endLine":15,"endColumn":29},{"ruleId":"573","severity":1,"message":"652","line":105,"column":23,"nodeType":"575","messageId":"576","endLine":105,"endColumn":35},{"ruleId":"593","severity":1,"message":"710","line":185,"column":8,"nodeType":"595","endLine":185,"endColumn":26,"suggestions":"711"},{"ruleId":"573","severity":1,"message":"657","line":3,"column":20,"nodeType":"575","messageId":"576","endLine":3,"endColumn":24},{"ruleId":"573","severity":1,"message":"686","line":6,"column":10,"nodeType":"575","messageId":"576","endLine":6,"endColumn":20},{"ruleId":"573","severity":1,"message":"614","line":7,"column":10,"nodeType":"575","messageId":"576","endLine":7,"endColumn":14},{"ruleId":"573","severity":1,"message":"649","line":9,"column":18,"nodeType":"575","messageId":"576","endLine":9,"endColumn":29},{"ruleId":"573","severity":1,"message":"604","line":3,"column":15,"nodeType":"575","messageId":"576","endLine":3,"endColumn":19},{"ruleId":"573","severity":1,"message":"712","line":3,"column":35,"nodeType":"575","messageId":"576","endLine":3,"endColumn":44},{"ruleId":"573","severity":1,"message":"713","line":3,"column":46,"nodeType":"575","messageId":"576","endLine":3,"endColumn":54},{"ruleId":"573","severity":1,"message":"606","line":5,"column":16,"nodeType":"575","messageId":"576","endLine":5,"endColumn":27},{"ruleId":"573","severity":1,"message":"642","line":9,"column":9,"nodeType":"575","messageId":"576","endLine":9,"endColumn":30},{"ruleId":"573","severity":1,"message":"714","line":10,"column":9,"nodeType":"575","messageId":"576","endLine":10,"endColumn":30},{"ruleId":"573","severity":1,"message":"715","line":13,"column":10,"nodeType":"575","messageId":"576","endLine":13,"endColumn":18},{"ruleId":"573","severity":1,"message":"615","line":35,"column":9,"nodeType":"575","messageId":"576","endLine":35,"endColumn":16},{"ruleId":"573","severity":1,"message":"716","line":36,"column":10,"nodeType":"575","messageId":"576","endLine":36,"endColumn":20},{"ruleId":"573","severity":1,"message":"717","line":39,"column":9,"nodeType":"575","messageId":"576","endLine":39,"endColumn":15},{"ruleId":"573","severity":1,"message":"698","line":42,"column":9,"nodeType":"575","messageId":"576","endLine":42,"endColumn":24},{"ruleId":"573","severity":1,"message":"718","line":43,"column":11,"nodeType":"575","messageId":"576","endLine":43,"endColumn":21},{"ruleId":"573","severity":1,"message":"719","line":44,"column":9,"nodeType":"575","messageId":"576","endLine":44,"endColumn":18},{"ruleId":"573","severity":1,"message":"720","line":51,"column":9,"nodeType":"575","messageId":"576","endLine":51,"endColumn":13},{"ruleId":"573","severity":1,"message":"721","line":53,"column":9,"nodeType":"575","messageId":"576","endLine":53,"endColumn":20},{"ruleId":"573","severity":1,"message":"722","line":57,"column":9,"nodeType":"575","messageId":"576","endLine":57,"endColumn":20},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"601","line":1,"column":29,"nodeType":"575","messageId":"576","endLine":1,"endColumn":38},{"ruleId":"573","severity":1,"message":"602","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":13},{"ruleId":"573","severity":1,"message":"603","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":14},{"ruleId":"573","severity":1,"message":"604","line":5,"column":52,"nodeType":"575","messageId":"576","endLine":5,"endColumn":56},{"ruleId":"573","severity":1,"message":"605","line":6,"column":13,"nodeType":"575","messageId":"576","endLine":6,"endColumn":19},{"ruleId":"573","severity":1,"message":"606","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"592","line":95,"column":20,"nodeType":"575","messageId":"576","endLine":95,"endColumn":29},{"ruleId":"573","severity":1,"message":"607","line":96,"column":12,"nodeType":"575","messageId":"576","endLine":96,"endColumn":18},{"ruleId":"573","severity":1,"message":"608","line":96,"column":20,"nodeType":"575","messageId":"576","endLine":96,"endColumn":29},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"652","line":96,"column":23,"nodeType":"575","messageId":"576","endLine":96,"endColumn":35},{"ruleId":"593","severity":1,"message":"658","line":142,"column":8,"nodeType":"595","endLine":142,"endColumn":49,"suggestions":"723"},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"652","line":102,"column":23,"nodeType":"575","messageId":"576","endLine":102,"endColumn":35},{"ruleId":"660","severity":1,"message":"661","line":168,"column":39,"nodeType":"662","messageId":"663","endLine":168,"endColumn":83,"fix":"724"},{"ruleId":"660","severity":1,"message":"661","line":172,"column":39,"nodeType":"662","messageId":"663","endLine":172,"endColumn":80,"fix":"725"},{"ruleId":"660","severity":1,"message":"661","line":176,"column":39,"nodeType":"662","messageId":"663","endLine":176,"endColumn":77,"fix":"726"},{"ruleId":"660","severity":1,"message":"661","line":179,"column":39,"nodeType":"662","messageId":"663","endLine":179,"endColumn":76,"fix":"727"},{"ruleId":"660","severity":1,"message":"661","line":182,"column":39,"nodeType":"662","messageId":"663","endLine":182,"endColumn":76,"fix":"728"},{"ruleId":"660","severity":1,"message":"661","line":185,"column":39,"nodeType":"662","messageId":"663","endLine":185,"endColumn":69,"fix":"729"},{"ruleId":"593","severity":1,"message":"670","line":187,"column":7,"nodeType":"595","endLine":187,"endColumn":94,"suggestions":"730"},{"ruleId":"672","severity":1,"message":"673","line":227,"column":13,"nodeType":"674","messageId":"675","endLine":227,"endColumn":140},{"ruleId":"597","severity":1,"message":"598","line":227,"column":34,"nodeType":"599","messageId":"600","endLine":227,"endColumn":36},{"ruleId":"672","severity":1,"message":"673","line":229,"column":13,"nodeType":"674","messageId":"675","endLine":229,"endColumn":118},{"ruleId":"597","severity":1,"message":"598","line":229,"column":34,"nodeType":"599","messageId":"600","endLine":229,"endColumn":36},{"ruleId":"597","severity":1,"message":"598","line":231,"column":49,"nodeType":"599","messageId":"600","endLine":231,"endColumn":51},{"ruleId":"573","severity":1,"message":"623","line":4,"column":38,"nodeType":"575","messageId":"576","endLine":4,"endColumn":45},{"ruleId":"573","severity":1,"message":"604","line":4,"column":52,"nodeType":"575","messageId":"576","endLine":4,"endColumn":56},{"ruleId":"573","severity":1,"message":"649","line":25,"column":18,"nodeType":"575","messageId":"576","endLine":25,"endColumn":29},{"ruleId":"573","severity":1,"message":"627","line":101,"column":11,"nodeType":"575","messageId":"576","endLine":101,"endColumn":18},{"ruleId":"597","severity":1,"message":"598","line":330,"column":49,"nodeType":"599","messageId":"600","endLine":330,"endColumn":51},{"ruleId":"573","severity":1,"message":"640","line":1,"column":8,"nodeType":"575","messageId":"576","endLine":1,"endColumn":18},{"ruleId":"573","severity":1,"message":"641","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":23},{"ruleId":"573","severity":1,"message":"686","line":27,"column":10,"nodeType":"575","messageId":"576","endLine":27,"endColumn":20},{"ruleId":"573","severity":1,"message":"637","line":29,"column":10,"nodeType":"575","messageId":"576","endLine":29,"endColumn":18},{"ruleId":"573","severity":1,"message":"687","line":29,"column":27,"nodeType":"575","messageId":"576","endLine":29,"endColumn":31},{"ruleId":"573","severity":1,"message":"688","line":29,"column":33,"nodeType":"575","messageId":"576","endLine":29,"endColumn":37},{"ruleId":"573","severity":1,"message":"590","line":52,"column":7,"nodeType":"575","messageId":"576","endLine":52,"endColumn":16},{"ruleId":"573","severity":1,"message":"689","line":99,"column":11,"nodeType":"575","messageId":"576","endLine":99,"endColumn":20},{"ruleId":"593","severity":1,"message":"690","line":104,"column":10,"nodeType":"595","endLine":104,"endColumn":12,"suggestions":"731"},{"ruleId":"573","severity":1,"message":"692","line":121,"column":11,"nodeType":"575","messageId":"576","endLine":121,"endColumn":27},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":2,"column":52,"nodeType":"575","messageId":"576","endLine":2,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"732","line":101,"column":12,"nodeType":"575","messageId":"576","endLine":101,"endColumn":28},{"ruleId":"573","severity":1,"message":"733","line":101,"column":30,"nodeType":"575","messageId":"576","endLine":101,"endColumn":49},{"ruleId":"573","severity":1,"message":"734","line":102,"column":12,"nodeType":"575","messageId":"576","endLine":102,"endColumn":31},{"ruleId":"573","severity":1,"message":"735","line":102,"column":33,"nodeType":"575","messageId":"576","endLine":102,"endColumn":55},{"ruleId":"573","severity":1,"message":"698","line":107,"column":11,"nodeType":"575","messageId":"576","endLine":107,"endColumn":26},{"ruleId":"573","severity":1,"message":"693","line":116,"column":12,"nodeType":"575","messageId":"576","endLine":116,"endColumn":26},{"ruleId":"573","severity":1,"message":"694","line":116,"column":28,"nodeType":"575","messageId":"576","endLine":116,"endColumn":45},{"ruleId":"593","severity":1,"message":"695","line":159,"column":8,"nodeType":"595","endLine":159,"endColumn":10,"suggestions":"736"},{"ruleId":"573","severity":1,"message":"697","line":174,"column":14,"nodeType":"575","messageId":"576","endLine":174,"endColumn":28},{"ruleId":"597","severity":1,"message":"598","line":304,"column":28,"nodeType":"599","messageId":"600","endLine":304,"endColumn":30},{"ruleId":"597","severity":1,"message":"598","line":307,"column":35,"nodeType":"599","messageId":"600","endLine":307,"endColumn":37},{"ruleId":"597","severity":1,"message":"598","line":340,"column":49,"nodeType":"599","messageId":"600","endLine":340,"endColumn":51},{"ruleId":"597","severity":1,"message":"598","line":346,"column":78,"nodeType":"599","messageId":"600","endLine":346,"endColumn":80},{"ruleId":"573","severity":1,"message":"586","line":1,"column":17,"nodeType":"575","messageId":"576","endLine":1,"endColumn":28},{"ruleId":"573","severity":1,"message":"604","line":3,"column":54,"nodeType":"575","messageId":"576","endLine":3,"endColumn":58},{"ruleId":"573","severity":1,"message":"606","line":6,"column":16,"nodeType":"575","messageId":"576","endLine":6,"endColumn":27},{"ruleId":"573","severity":1,"message":"645","line":98,"column":10,"nodeType":"575","messageId":"576","endLine":98,"endColumn":21},{"ruleId":"597","severity":1,"message":"598","line":376,"column":47,"nodeType":"599","messageId":"600","endLine":376,"endColumn":49},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"648","line":3,"column":46,"nodeType":"575","messageId":"576","endLine":3,"endColumn":51},{"ruleId":"573","severity":1,"message":"604","line":3,"column":52,"nodeType":"575","messageId":"576","endLine":3,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"649","line":15,"column":18,"nodeType":"575","messageId":"576","endLine":15,"endColumn":29},{"ruleId":"573","severity":1,"message":"652","line":105,"column":23,"nodeType":"575","messageId":"576","endLine":105,"endColumn":35},{"ruleId":"593","severity":1,"message":"710","line":185,"column":8,"nodeType":"595","endLine":185,"endColumn":26,"suggestions":"737"},{"ruleId":"573","severity":1,"message":"657","line":3,"column":20,"nodeType":"575","messageId":"576","endLine":3,"endColumn":24},{"ruleId":"573","severity":1,"message":"686","line":6,"column":10,"nodeType":"575","messageId":"576","endLine":6,"endColumn":20},{"ruleId":"573","severity":1,"message":"614","line":7,"column":10,"nodeType":"575","messageId":"576","endLine":7,"endColumn":14},{"ruleId":"573","severity":1,"message":"649","line":9,"column":18,"nodeType":"575","messageId":"576","endLine":9,"endColumn":29},{"ruleId":"573","severity":1,"message":"700","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":17},{"ruleId":"573","severity":1,"message":"623","line":5,"column":38,"nodeType":"575","messageId":"576","endLine":5,"endColumn":45},{"ruleId":"573","severity":1,"message":"604","line":5,"column":52,"nodeType":"575","messageId":"576","endLine":5,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":8,"column":15,"nodeType":"575","messageId":"576","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"624","line":9,"column":8,"nodeType":"575","messageId":"576","endLine":9,"endColumn":16},{"ruleId":"573","severity":1,"message":"625","line":12,"column":9,"nodeType":"575","messageId":"576","endLine":12,"endColumn":23},{"ruleId":"573","severity":1,"message":"614","line":15,"column":9,"nodeType":"575","messageId":"576","endLine":15,"endColumn":13},{"ruleId":"573","severity":1,"message":"701","line":15,"column":27,"nodeType":"575","messageId":"576","endLine":15,"endColumn":38},{"ruleId":"573","severity":1,"message":"702","line":23,"column":8,"nodeType":"575","messageId":"576","endLine":23,"endColumn":18},{"ruleId":"573","severity":1,"message":"703","line":25,"column":11,"nodeType":"575","messageId":"576","endLine":25,"endColumn":16},{"ruleId":"573","severity":1,"message":"627","line":103,"column":11,"nodeType":"575","messageId":"576","endLine":103,"endColumn":18},{"ruleId":"573","severity":1,"message":"630","line":110,"column":12,"nodeType":"575","messageId":"576","endLine":110,"endColumn":18},{"ruleId":"573","severity":1,"message":"738","line":115,"column":12,"nodeType":"575","messageId":"576","endLine":115,"endColumn":27},{"ruleId":"573","severity":1,"message":"739","line":116,"column":12,"nodeType":"575","messageId":"576","endLine":116,"endColumn":28},{"ruleId":"597","severity":1,"message":"598","line":284,"column":49,"nodeType":"599","messageId":"600","endLine":284,"endColumn":51},{"ruleId":"573","severity":1,"message":"686","line":27,"column":10,"nodeType":"575","messageId":"576","endLine":27,"endColumn":20},{"ruleId":"573","severity":1,"message":"637","line":29,"column":10,"nodeType":"575","messageId":"576","endLine":29,"endColumn":18},{"ruleId":"573","severity":1,"message":"687","line":29,"column":27,"nodeType":"575","messageId":"576","endLine":29,"endColumn":31},{"ruleId":"573","severity":1,"message":"688","line":29,"column":33,"nodeType":"575","messageId":"576","endLine":29,"endColumn":37},{"ruleId":"573","severity":1,"message":"590","line":52,"column":7,"nodeType":"575","messageId":"576","endLine":52,"endColumn":16},{"ruleId":"573","severity":1,"message":"689","line":99,"column":11,"nodeType":"575","messageId":"576","endLine":99,"endColumn":20},{"ruleId":"593","severity":1,"message":"690","line":104,"column":10,"nodeType":"595","endLine":104,"endColumn":12,"suggestions":"740"},{"ruleId":"573","severity":1,"message":"692","line":121,"column":11,"nodeType":"575","messageId":"576","endLine":121,"endColumn":27},{"ruleId":"573","severity":1,"message":"586","line":1,"column":16,"nodeType":"575","messageId":"576","endLine":1,"endColumn":27},{"ruleId":"573","severity":1,"message":"604","line":2,"column":52,"nodeType":"575","messageId":"576","endLine":2,"endColumn":56},{"ruleId":"573","severity":1,"message":"606","line":5,"column":15,"nodeType":"575","messageId":"576","endLine":5,"endColumn":26},{"ruleId":"573","severity":1,"message":"645","line":99,"column":12,"nodeType":"575","messageId":"576","endLine":99,"endColumn":23},{"ruleId":"573","severity":1,"message":"693","line":104,"column":12,"nodeType":"575","messageId":"576","endLine":104,"endColumn":26},{"ruleId":"573","severity":1,"message":"694","line":104,"column":28,"nodeType":"575","messageId":"576","endLine":104,"endColumn":45},{"ruleId":"593","severity":1,"message":"695","line":154,"column":8,"nodeType":"595","endLine":154,"endColumn":26,"suggestions":"741"},{"ruleId":"573","severity":1,"message":"697","line":169,"column":14,"nodeType":"575","messageId":"576","endLine":169,"endColumn":28},{"ruleId":"573","severity":1,"message":"698","line":256,"column":11,"nodeType":"575","messageId":"576","endLine":256,"endColumn":26},{"ruleId":"597","severity":1,"message":"598","line":311,"column":28,"nodeType":"599","messageId":"600","endLine":311,"endColumn":30},{"ruleId":"597","severity":1,"message":"598","line":314,"column":35,"nodeType":"599","messageId":"600","endLine":314,"endColumn":37},{"ruleId":"597","severity":1,"message":"598","line":347,"column":49,"nodeType":"599","messageId":"600","endLine":347,"endColumn":51},{"ruleId":"597","severity":1,"message":"598","line":353,"column":78,"nodeType":"599","messageId":"600","endLine":353,"endColumn":80},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["742"],"no-negated-in-lhs",["743"],"'Router' is defined but never used.","'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["744"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'CardContent' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"745","text":"746"},"'Link' is defined but never used.","'classes' is assigned a value but never used.","'Typography' is defined but never used.","'Label' is defined but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentObject'. Either include it or remove the dependency array.",["747"],{"range":"748","text":"746"},"React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["749"],"'Spinner' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'fontWeight' is defined but never used.","'history' is assigned a value but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'country', 'getStates', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["750"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.","'hivTestDate' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","'Input' is defined but never used.","'LabelRibbon' is defined but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'props.extra.riskAssessment'. Either include them or remove the dependency array. If 'setRiskAssessment' needs the current value of 'props.extra.riskAssessment', you can also switch to useReducer instead of useState and read 'props.extra.riskAssessment' in the reducer.",["751"],"'setObjValues' is assigned a value but never used.","no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["752"],"no-useless-computed-key","Unnecessarily computed property ['rencencyInterpretation'] found.","Property","unnecessarilyComputedProperty",{"range":"753","text":"754"},{"range":"755","text":"754"},{"range":"756","text":"754"},{"range":"757","text":"754"},{"range":"758","text":"754"},{"range":"759","text":"754"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["760"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'targetGroupValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["761"],{"range":"762","text":"754"},{"range":"763","text":"754"},{"range":"764","text":"754"},{"range":"765","text":"754"},{"range":"766","text":"754"},{"range":"767","text":"754"},["768"],"'FaUserPlus' is defined but never used.","'Menu' is defined but never used.","'Icon' is defined but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["769"],"'handleIEditIndex' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["770"],"'getProvincesId' is defined but never used.","'handleItemClick' is assigned a value but never used.",["771"],"'MatButton' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["772"],"'useState' is defined but never used.","'baseUrl' is defined but never used.",{"range":"773","text":"746"},"'token' is defined but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["774"],"'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'toggle' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["775"],{"range":"776","text":"754"},{"range":"777","text":"754"},{"range":"778","text":"754"},{"range":"779","text":"754"},{"range":"780","text":"754"},{"range":"781","text":"754"},["782"],["783"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["784"],["785"],"'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.",["786"],["787"],"no-global-assign","no-unsafe-negation",{"desc":"788","fix":"789"},[156,170],"token",{"desc":"790","fix":"791"},[149,163],{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"796","fix":"797"},{"desc":"798","fix":"799"},[4795,4821],"'rencencyInterpretation'",[5072,5098],[5416,5442],[5686,5712],[5954,5980],[6078,6104],{"desc":"800","fix":"801"},{"desc":"802","fix":"803"},[6716,6742],[6984,7010],[7314,7340],[7570,7596],[7825,7851],[7923,7949],{"desc":"800","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},[184,198],{"desc":"813","fix":"814"},{"desc":"798","fix":"815"},[7673,7699],[7950,7976],[8280,8306],[8536,8562],[8791,8817],[8901,8927],{"desc":"800","fix":"816"},{"desc":"805","fix":"817"},{"desc":"818","fix":"819"},{"desc":"813","fix":"820"},{"desc":"805","fix":"821"},{"desc":"807","fix":"822"},"Update the dependencies array to be: [locationState]",{"range":"823","text":"824"},"Update the dependencies array to be: [PatientCurrentObject, props.patientObj]",{"range":"825","text":"826"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"827","text":"828"},"Update the dependencies array to be: [objValues.age, props.patientObj, props.extra.age, getStates, props, country]",{"range":"829","text":"830"},"Update the dependencies array to be: [knowledgeAssessment, props.extra.riskAssessment, props.patientObj]",{"range":"831","text":"832"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"833","text":"834"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"835","text":"836"},"Update the dependencies array to be: [objValues.age, props]",{"range":"837","text":"838"},{"range":"839","text":"836"},"Update the dependencies array to be: [patients]",{"range":"840","text":"841"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"842","text":"843"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"844","text":"845"},"Update the dependencies array to be: [props.activePage.activeObject, props.patientObj]",{"range":"846","text":"847"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"848","text":"849"},{"range":"850","text":"834"},{"range":"851","text":"836"},{"range":"852","text":"841"},"Update the dependencies array to be: [getStates]",{"range":"853","text":"854"},{"range":"855","text":"849"},{"range":"856","text":"841"},{"range":"857","text":"843"},[7824,7826],"[locationState]",[2371,2389],"[PatientCurrentObject, props.patientObj]",[1416,1451],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[10885,10935],"[objValues.age, props.patientObj, props.extra.age, getStates, props, country]",[5815,5833],"[knowledgeAssessment, props.extra.riskAssessment, props.patientObj]",[5016,5058],"[props.patientObj, postTest.hivTestResult, postTest]",[6130,6217],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[6042,6057],"[objValues.age, props]",[8863,8950],[4009,4011],"[patients]",[4679,4697],"[getStates, props.patientObj]",[4879,4898],"[postTest, props.patientObj]",[5416,5434],"[props.activePage.activeObject, props.patientObj]",[7296,7314],"[knowledgeAssessment, props.patientObj, riskAssessment]",[5112,5153],[8953,9040],[4005,4007],[4851,4853],"[getStates]",[7329,7347],[4005,4007],[4683,4701]]