[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"17","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"18","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"19","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"20","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"21","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js":"22","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"23","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js":"24","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js":"25","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js":"26","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js":"27","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js":"28","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js":"29","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js":"30","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"31","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"32","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"33","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js":"34","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"35","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"36","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"37","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"38","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"39","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"40","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"41","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"42","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"43","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"44","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"45","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"46","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"47","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"48","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"49","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"50","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"51","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"52","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"53","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"54","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"55","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"56","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"57","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"58","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js":"59","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js":"60","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js":"61","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js":"62","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js":"63","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js":"64","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js":"65","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js":"66","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js":"67","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js":"68","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ClientReferral\\RefferalUnit.js":"69","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js":"70"},{"size":715,"mtime":1712310613394,"results":"71","hashOfConfig":"72"},{"size":1264,"mtime":1712310613378,"results":"73","hashOfConfig":"72"},{"size":362,"mtime":1712310614538,"results":"74","hashOfConfig":"72"},{"size":8947,"mtime":1712310614565,"results":"75","hashOfConfig":"72"},{"size":2005,"mtime":1712310695533,"results":"76","hashOfConfig":"72"},{"size":4031,"mtime":1713873818743,"results":"77","hashOfConfig":"72"},{"size":2920,"mtime":1712310614581,"results":"78","hashOfConfig":"72"},{"size":24556,"mtime":1713950015252,"results":"79","hashOfConfig":"72"},{"size":9607,"mtime":1712310695718,"results":"80","hashOfConfig":"72"},{"size":10066,"mtime":1712310695649,"results":"81","hashOfConfig":"72"},{"size":10970,"mtime":1712310695665,"results":"82","hashOfConfig":"72"},{"size":23694,"mtime":1713887246142,"results":"83","hashOfConfig":"72"},{"size":4139,"mtime":1712310695580,"results":"84","hashOfConfig":"72"},{"size":6540,"mtime":1712310696855,"results":"85","hashOfConfig":"72"},{"size":81897,"mtime":1712310696197,"results":"86","hashOfConfig":"72"},{"size":12541,"mtime":1712310696150,"results":"87","hashOfConfig":"72"},{"size":67035,"mtime":1712310696103,"results":"88","hashOfConfig":"72"},{"size":63286,"mtime":1713958301207,"results":"89","hashOfConfig":"72"},{"size":37729,"mtime":1713955453330,"results":"90","hashOfConfig":"72"},{"size":29656,"mtime":1713872942666,"results":"91","hashOfConfig":"72"},{"size":53745,"mtime":1713891629818,"results":"92","hashOfConfig":"72"},{"size":95835,"mtime":1713955453330,"results":"93","hashOfConfig":"72"},{"size":2102,"mtime":1712310696381,"results":"94","hashOfConfig":"72"},{"size":8939,"mtime":1713955453347,"results":"95","hashOfConfig":"72"},{"size":85090,"mtime":1713959838090,"results":"96","hashOfConfig":"72"},{"size":1946,"mtime":1712310701923,"results":"97","hashOfConfig":"72"},{"size":46925,"mtime":1712310696686,"results":"98","hashOfConfig":"72"},{"size":428,"mtime":1713955499402,"results":"99","hashOfConfig":"72"},{"size":64534,"mtime":1713955453349,"results":"100","hashOfConfig":"72"},{"size":26821,"mtime":1713955453351,"results":"101","hashOfConfig":"72"},{"size":7778,"mtime":1712310696406,"results":"102","hashOfConfig":"72"},{"size":40569,"mtime":1712310696366,"results":"103","hashOfConfig":"72"},{"size":24556,"mtime":1713956752409,"results":"104","hashOfConfig":"72"},{"size":7397,"mtime":1713104094426,"results":"105","hashOfConfig":"72"},{"size":12541,"mtime":1712310696598,"results":"106","hashOfConfig":"72"},{"size":41484,"mtime":1713872942686,"results":"107","hashOfConfig":"72"},{"size":70500,"mtime":1712310696517,"results":"108","hashOfConfig":"72"},{"size":37001,"mtime":1712310696671,"results":"109","hashOfConfig":"72"},{"size":81902,"mtime":1712310696655,"results":"110","hashOfConfig":"72"},{"size":31055,"mtime":1712310696486,"results":"111","hashOfConfig":"72"},{"size":2530,"mtime":1712310696934,"results":"112","hashOfConfig":"72"},{"size":1137,"mtime":1712310697139,"results":"113","hashOfConfig":"72"},{"size":2177,"mtime":1712310696802,"results":"114","hashOfConfig":"72"},{"size":43873,"mtime":1712310695902,"results":"115","hashOfConfig":"72"},{"size":34233,"mtime":1713956659496,"results":"116","hashOfConfig":"72"},{"size":30484,"mtime":1713872942651,"results":"117","hashOfConfig":"72"},{"size":12541,"mtime":1712310695818,"results":"118","hashOfConfig":"72"},{"size":2199,"mtime":1712310695950,"results":"119","hashOfConfig":"72"},{"size":7777,"mtime":1712310695966,"results":"120","hashOfConfig":"72"},{"size":40569,"mtime":1712310695935,"results":"121","hashOfConfig":"72"},{"size":7777,"mtime":1712310696833,"results":"122","hashOfConfig":"72"},{"size":41058,"mtime":1712310696787,"results":"123","hashOfConfig":"72"},{"size":1172,"mtime":1712310697234,"results":"124","hashOfConfig":"72"},{"size":1163,"mtime":1712310697108,"results":"125","hashOfConfig":"72"},{"size":1540,"mtime":1712310697218,"results":"126","hashOfConfig":"72"},{"size":71082,"mtime":1712310695780,"results":"127","hashOfConfig":"72"},{"size":80355,"mtime":1712310695865,"results":"128","hashOfConfig":"72"},{"size":36258,"mtime":1712310695765,"results":"129","hashOfConfig":"72"},{"size":1209,"mtime":1712571661748,"results":"130","hashOfConfig":"72"},{"size":2351,"mtime":1713886714944,"results":"131","hashOfConfig":"72"},{"size":10623,"mtime":1713883031176,"results":"132","hashOfConfig":"72"},{"size":82657,"mtime":1713885590213,"results":"133","hashOfConfig":"72"},{"size":107709,"mtime":1713889154676,"results":"134","hashOfConfig":"72"},{"size":10518,"mtime":1713889916023,"results":"135","hashOfConfig":"72"},{"size":3172,"mtime":1713872942672,"results":"136","hashOfConfig":"72"},{"size":8685,"mtime":1713879620172,"results":"137","hashOfConfig":"72"},{"size":63299,"mtime":1713962628362,"results":"138","hashOfConfig":"72"},{"size":10795,"mtime":1713960600059,"results":"139","hashOfConfig":"72"},{"size":85579,"mtime":1713950015230,"results":"140","hashOfConfig":"72"},{"size":85496,"mtime":1713955486797,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},"1cxhekk",{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"145"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"145"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"145"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165","usedDeprecatedRules":"145"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168","usedDeprecatedRules":"145"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"145"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"145"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"177","usedDeprecatedRules":"145"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"145"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"145"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"145"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"145"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"145"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"145"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"145"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"145"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"145"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"230","usedDeprecatedRules":"145"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"145"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"145"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"145"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":"241","usedDeprecatedRules":"145"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"145"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"145"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"145"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"145"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"145"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"145"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"145"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"145"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"145"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"145"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"145"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"145"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"145"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"145"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"145"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"145"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"145"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"145"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"145"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"145"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"145"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"313","usedDeprecatedRules":"145"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"145"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"145"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js",["328"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["329","330"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js",["331"],"import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './main/webapp/jsx/components/Home'\nimport RegisterPatient from './main/webapp/jsx/components/Patient/RegisterPatient';\n//import RegisterPatientEnrollment from './main/webapp/jsx/components/Patient/RegisterPatientEnrollment';\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\n\n\n\nexport default function App() {\n  return (\n\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route path=\"/patient-history\">\n            <PatientDetail />\n          </Route>          \n          <Route path=\"/register-patient\">\n            <RegisterPatient />\n          </Route>\n          \n          <Route path=\"/\">\n            <Home />\n          </Route>\n        \n          \n        </Switch>\n      </div>\n \n  );\n}\n\n\n\n\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js",["332","333"],"import React, { useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\nimport Dashboard from \"./Patient/PatientList\";\nimport HTSList from \"./Patient/HTSList\";\nimport VisualisationHome from \"./Visualisation/Index\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n  const [key, setKey] = useState(\"home\");\n\n  return (\n    <Fragment>\n      <div\n        className=\"row page-titles mx-0\"\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\n      >\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item active\">\n            <h4>HTS</h4>\n          </li>\n        </ol>\n      </div>\n      <Link to={\"register-patient\"}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"mt-2 mr-3 mb-0 float-end\"\n          startIcon={<FaUserPlus size=\"10\" />}\n          style={{ backgroundColor: \"#014d88\" }}\n        >\n          <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n        </Button>\n      </Link>\n      <br />\n      <br /> <br />\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"home\" title=\"Patients\">\n                    <Dashboard />\n                  </Tab>\n                  <Tab eventKey=\"hts\" title=\"HTS Patients\">\n                    <HTSList />\n                  </Tab>\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["334","335"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport PatientCardDetail from \"./PatientCard\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport PatientHistory from \"./../History/PatientHistory\";\nimport PatientHtsEnrollment from \"./PatientHtsEnrollment\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"20.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  let history = useHistory();\n  const [activePage, setActivePage] = useState({\n    activePage: \"home\",\n    activeObject: {},\n    actionType: \"\",\n  });\n  const { classes } = props;\n  useEffect(() => {}, [activePage]);\n  const patientObject =\n    history.location && history.location.state\n      ? history.location.state.patientObject\n      : {};\n  const patientObj =\n    history.location && history.location.state\n      ? history.location.state.patientObj\n      : {};\n  const clientCode =\n    history.location && history.location.state\n      ? history.location.state.clientCode\n      : \"\";\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m;\n    }\n    return age_now;\n  };\n  const patientAge = calculate_age(\n    moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className=\"row page-titles mx-0\"\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\n      >\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item active\">\n            <h4>\n              {\" \"}\n              <Link to={\"/\"}>HTS /</Link> Patient Dashboard\n            </h4>\n          </li>\n        </ol>\n      </div>\n      <Card>\n        <CardContent>\n          <PatientCardDetail\n            patientObj={patientObj}\n            clientCode={clientCode}\n            patientObject={patientObject}\n          />\n          {activePage.activePage === \"home\" && (\n            <PatientHistory\n              patientObj={patientObj}\n              activePage={activePage}\n              setActivePage={setActivePage}\n              clientCode={clientCode}\n              patientAge={patientAge}\n              patientObject={patientObject}\n            />\n          )}\n          {activePage.activePage === \"view\" && (\n            <PatientHtsEnrollment\n              patientObj={patientObj}\n              activePage={activePage}\n              setActivePage={setActivePage}\n              clientCode={clientCode}\n              patientAge={patientAge}\n              patientObject={patientObject}\n            />\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["336","337","338","339","340","341","342","343","344","345","346"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["347","348"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst Patients = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                //setLoading(false)\n                resolve({\n                  data: result.data.records.filter((a) => a.clientCode === null ).map((row) => ({\n                    //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                    name: row.firstName + \" \" + row.surname,\n                    // hospital_number: row.hospitalNumber,\n                    clientCode: row.clientCode,\n                    gender: row.gender,\n                    age: row.age,\n                    count: (\n                      <Label color=\"blue\" size=\"mini\">\n                        {row.htsCount}\n                      </Label>\n                    ),\n                    actions: (\n                      <div>\n                        {row.htsCount >= 0 && (\n                          <>\n                            <Link\n                              to={{\n                                pathname: \"/patient-history\",\n                                state: {\n                                  patientObject: row,\n                                  patientObj: row,\n                                  clientCode: row.clientCode,\n                                },\n                              }}\n                            >\n                              <ButtonGroup\n                                variant=\"contained\"\n                                aria-label=\"split button\"\n                                style={{\n                                  backgroundColor: \"rgb(153, 46, 98)\",\n                                  height: \"30px\",\n                                  width: \"215px\",\n                                }}\n                                size=\"large\"\n                              >\n                                <Button\n                                  color=\"primary\"\n                                  size=\"small\"\n                                  aria-label=\"select merge strategy\"\n                                  aria-haspopup=\"menu\"\n                                  style={{\n                                    backgroundColor: \"rgb(153, 46, 98)\",\n                                  }}\n                                >\n                                  <MdDashboard />\n                                </Button>\n                                <Button\n                                  style={{\n                                    backgroundColor: \"rgb(153, 46, 98)\",\n                                  }}\n                                >\n                                  <span\n                                    style={{\n                                      fontSize: \"12px\",\n                                      color: \"#fff\",\n                                      fontWeight: \"bolder\",\n                                    }}\n                                  >\n                                    Patient Dashboard\n                                  </span>\n                                </Button>\n                              </ButtonGroup>\n                            </Link>\n                          </>\n                        )}\n                      </div>\n                    ),\n                  })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Patients;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js",["349","350"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst HTSList = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find HTS Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/only/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                //setLoading(false)\n                resolve({\n                  data:\n                    result?.data?.records &&\n                    result?.data?.records\n                      .filter((client) => {\n                        return client.clientCode !== null;\n                      })\n                      .map((row) => ({\n                        //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                        name: row.firstName + \" \" + row.surname,\n                        // hospital_number: row.hospitalNumber,\n                        clientCode: row.clientCode,\n                        gender: row.gender,\n                        age: row.age,\n                        count: (\n                          <Label color=\"blue\" size=\"mini\">\n                            {row.htsCount}\n                          </Label>\n                        ),\n                        actions: (\n                          <div>\n                            {row.htsCount >= 0 && (\n                              <>\n                                <Link\n                                  to={{\n                                    pathname: \"/patient-history\",\n                                    state: {\n                                      patientObject: row,\n                                      patientObj: row,\n                                      clientCode: row.clientCode,\n                                    },\n                                  }}\n                                >\n                                  <ButtonGroup\n                                    variant=\"contained\"\n                                    aria-label=\"split button\"\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                      height: \"30px\",\n                                      width: \"215px\",\n                                    }}\n                                    size=\"large\"\n                                  >\n                                    <Button\n                                      color=\"primary\"\n                                      size=\"small\"\n                                      aria-label=\"select merge strategy\"\n                                      aria-haspopup=\"menu\"\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <MdDashboard />\n                                    </Button>\n                                    <Button\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          fontSize: \"12px\",\n                                          color: \"#fff\",\n                                          fontWeight: \"bolder\",\n                                        }}\n                                      >\n                                        Patient Dashboard\n                                      </span>\n                                    </Button>\n                                  </ButtonGroup>\n                                </Link>\n                              </>\n                            )}\n                          </div>\n                        ),\n                      })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HTSList;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["351","352","353","354","355","356"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n//import classNames from 'classnames';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import Chip from '@material-ui/core/Chip';\n//import Divider from '@material-ui/core/Divider';\nimport { Link } from \"react-router-dom\";\nimport ButtonMui from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Label, Sticky } from \"semantic-ui-react\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"20.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  //console.log(props.patientObj);\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\n  const patientObjs = props.patientObj ? props.patientObj : {};\n  //const permissions= props.permissions ? props.permissions : [];\n  const [patientObj, setPatientObj] = useState(null);\n  const [hivStatus, setHivStatus] = useState(\"false\");\n  const [htscount, setHtscount] = useState(0);\n  const [htsResult, setHtsResult] = useState(\"\");\n  const [htsResult2, setHtsResult2] = useState(\"\");\n\n  useEffect(() => {\n    PatientCurrentObject();\n  }, []);\n\n  ///GET LIST OF Patients\n  async function PatientCurrentObject() {\n    axios\n      .get(`${baseUrl}hts/persons/${patientObjs.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(\"data\", response.data);\n        setPatientObj(response.data);\n\n        setHtscount(response.data.htsCount);\n        setHtsResult(\n          response.data.htsClientDtoList[\n            response.data.htsClientDtoList.length - 1\n          ].hivTestResult\n        );\n        setHtsResult2(\n          response.data.htsClientDtoList[\n            response.data.htsClientDtoList.length - 1\n          ].hivTestResult2\n        );\n      })\n      .catch((error) => {});\n  }\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\n      age_now--;\n    }\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    //   age_now--;\n    // }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n  const getHospitalNumber = (identifier) => {\n    const identifiers = identifier;\n    const hospitalNumber = identifiers.identifier.find(\n      (obj) => obj.type == \"HospitalNumber\"\n    );\n    return hospitalNumber ? hospitalNumber.value : \"\";\n  };\n  const getPhoneNumber = (identifier) => {\n    const identifiers = identifier;\n    const phoneNumber = identifiers.contactPoint.find(\n      (obj) => obj.type == \"phone\"\n    );\n    return phoneNumber ? phoneNumber.value : \"\";\n  };\n  const getAddress = (identifier) => {\n    const identifiers = identifier;\n    const address = identifiers.address.find((obj) => obj.city);\n    const houseAddress =\n      address && address.line[0] !== null ? address.line[0] : \"\";\n    const landMark =\n      address && address.city && address.city !== null ? address.city : \"\";\n    return address ? houseAddress + \" \" + landMark : \"\";\n  };\n\n  return (\n    <Sticky>\n      <div className={classes.root}>\n        <ExpansionPanel>\n          <ExpansionPanelSummary>\n            <Row>\n              <Col md={12}>\n                <Row className={\"mt-1\"}>\n                  {patientObj && patientObj !== null ? (\n                    <>\n                      <Col md={12} className={classes.root2}>\n                        <b\n                          style={{\n                            fontSize: \"25px\",\n                            color: \"rgb(153, 46, 98)\",\n                          }}\n                        >\n                          {patientObj.personResponseDto.firstName +\n                            \" \" +\n                            patientObj.personResponseDto.surname}\n                        </b>\n                        <Link to={\"/\"}>\n                          <ButtonMui\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"float-end ms-2 mr-2 mt-2\"\n                            //startIcon={<FaUserPlus size=\"10\"/>}\n                            style={{\n                              backgroundColor: \"rgb(153, 46, 98)\",\n                              color: \"#fff\",\n                              height: \"35px\",\n                            }}\n                          >\n                            <span style={{ textTransform: \"capitalize\" }}>\n                              Back\n                            </span>\n                          </ButtonMui>\n                        </Link>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Patient ID :\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getHospitalNumber(\n                              patientObj.personResponseDto.identifier\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          Date Of Birth :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj.personResponseDto.dateOfBirth}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Age :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {calculate_age(\n                              moment(\n                                patientObj.personResponseDto.dateOfBirth\n                              ).format(\"DD-MM-YYYY\")\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4}>\n                        <span>\n                          {\" \"}\n                          Gender :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj.personResponseDto &&\n                            patientObj.personResponseDto.sex !== null\n                              ? patientObj.personResponseDto.sex\n                              : \"\"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Phone Number :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getPhoneNumber(\n                              patientObj.personResponseDto.contactPoint\n                            )}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Address :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {getAddress(patientObj.personResponseDto.address)}{\" \"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={4} className={classes.root2}>\n                        <span>\n                          {\" \"}\n                          Client Code :{\" \"}\n                          <b style={{ color: \"#0B72AA\" }}>\n                            {patientObj && patientObj.clientCode\n                              ? patientObj.clientCode\n                              : \"\"}{\" \"}\n                          </b>\n                        </span>\n                      </Col>\n                      <Col md={12}>\n                        <div>\n                          <Typography variant=\"caption\">\n                            {htscount < 1 ? (\n                              <Label color=\"blue\" size={\"mini\"}>\n                                STATUS : Not Tested\n                              </Label>\n                            ) : patientObj &&\n                              (htsResult === \"Positive\" ||\n                                htsResult === \"Positive\") ? (\n                              <Label color={\"red\"} size={\"mini\"}>\n                                STATUS : Positive\n                              </Label>\n                            ) : (\n                              <Label color=\"teal\" size={\"mini\"}>\n                                STATUS : Negative\n                              </Label>\n                            )}\n                          </Typography>\n                        </div>\n                      </Col>\n                    </>\n                  ) : (\n                    <p>Loading Please wait...</p>\n                  )}\n                </Row>\n              </Col>\n            </Row>\n          </ExpansionPanelSummary>\n        </ExpansionPanel>\n      </div>\n    </Sticky>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\n//import {TiArrowBack} from 'react-icons/ti'\r\n//import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Icon, Menu, Sticky } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport BasicInfo from \"./NewRegistrationEnrollement/BasicInfo\";\r\nimport PreTest from \"./NewRegistrationEnrollement/PreTest\";\r\nimport HivTestResult from \"./NewRegistrationEnrollement/HivTestResult\";\r\nimport IndexingContactTracing from \"./NewRegistrationEnrollement/Elicitation/Index\";\r\nimport Others from \"./NewRegistrationEnrollement/Others\";\r\nimport PostTest from \"./NewRegistrationEnrollement/PostTest\";\r\nimport RecencyTesting from \"./NewRegistrationEnrollement/RecencyTesting\";\r\nimport RiskStratification from \"./NewRegistrationEnrollement/RiskStratification\";\r\n// import FamilyIndexTesting from \"./NewRegistrationEnrollement/familyIndexTesting\";\r\n// import PartnerNotificationService from \"./NewRegistrationEnrollement/partnerNotificationService\";\r\nimport PnsForm from \"./NewRegistration/PartnerNotificationServices/PnsForm\";\r\nimport PNSHistory from \"./NewRegistration/PartnerNotificationServices/PNSHistory\";\r\nimport ViewPNSForm from \"./NewRegistration/PartnerNotificationServices/ViewPnsForm\";\r\nimport ViewFamilyIndexTestingForm from \"./NewRegistration/PartnerNotificationServices/ViewFamilyIndexForm\";\r\nimport ViewClientReferral from \"./NewRegistrationEnrollement/ClientReferral/Referrall_view_update\";\r\nimport ClientReferralHistory from \"./NewRegistrationEnrollement/ClientReferral/ClientReferralHistory\";\r\nimport RefferralUnit from \"./NewRegistration/RefferalUnit\";\r\nimport FamilyIndexHistory from \"./NewRegistration/PartnerNotificationServices/FamilyIndexhIstory\";\r\nimport FamilyIndexTestingForm from \"./NewRegistration/FamilyIndexTestingForm\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const classes = useStyles();\r\n  const [activeItem, setactiveItem] = useState(\"basic\");\r\n  const [completed, setCompleted] = useState([]);\r\n  const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n  const [patientObj, setPatientObj] = useState(props.activePage.activeObject);\r\n  const [extra, setExtra] = useState({\r\n    risk: \"\",\r\n    index: \"\",\r\n    pre: \"\",\r\n    post: \"\",\r\n    recency: \"\",\r\n    elicitation: \"\",\r\n    familyIndexTesting: \"\",\r\n    pns: \"\",\r\n  });\r\n  const [basicInfo, setBasicInfo] = useState({});\r\n  const [organizationInfo, setOrganizationInfo] = useState({});\r\n  const [row, setRow] = useState({});\r\n  const [action, setAction] = useState(\"\");\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const handleItemClick = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  const handleAction = (activeItem) => {\r\n    setactiveItem(activeItem);\r\n    //setCompleted({...completed, ...completedMenu})\r\n  };\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"home\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n\r\n  console.log(familyIndexList);\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h3>\r\n                HIV COUNSELLING AND TESTING -{\" \"}\r\n                {patientObj && patientObj.dateVisit ? patientObj.dateVisit : \"\"}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\" float-end\"\r\n                  //startIcon={<FaUserPlus size=\"10\"/>}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={LoadViewPage}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                </Button>\r\n              </h3>\r\n              <br />\r\n              <br />\r\n\r\n              <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                <Menu\r\n                  size=\"large\"\r\n                  vertical\r\n                  style={{ backgroundColor: \"#014D88\" }}\r\n                >\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"risk\"}\r\n                    onClick={() => handleItemClick(\"risk\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"risk\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Risk Stratification\r\n                      {completed.includes(\"risk\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"basic\"}\r\n                    onClick={() => handleItemClick(\"basic\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"basic\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Basic Information\r\n                      {completed.includes(\"basic\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  {props.patientAge >= 15 && (\r\n                    <Menu.Item\r\n                      name=\"spam\"\r\n                      active={activeItem === \"pre-test-counsel\"}\r\n                      onClick={() => handleItemClick(\"pre-test-counsel\")}\r\n                      style={{\r\n                        backgroundColor:\r\n                          activeItem === \"pre-test-counsel\" ? \"#000\" : \"\",\r\n                      }}\r\n                      //disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                    >\r\n                      {/* <Label>2</Label> */}\r\n                      <span style={{ color: \"#fff\" }}>\r\n                        Pre Test Counseling\r\n                        {completed.includes(\"pre-test-counsel\") && (\r\n                          <Icon name=\"check\" color=\"green\" />\r\n                        )}\r\n                      </span>\r\n                    </Menu.Item>\r\n                  )}\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"hiv-test\"}\r\n                    onClick={() => handleItemClick(\"hiv-test\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"hiv-test\" ? \"#000\" : \"\",\r\n                    }}\r\n                    //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      Request {\"&\"} Result Form\r\n                      {completed.includes(\"hiv-test\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                    {/* <Label color='teal'>3</Label> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"post-test\"}\r\n                    onClick={() => handleItemClick(\"post-test\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"post-test\" ? \"#000\" : \"\",\r\n                    }}\r\n                    //disabled={activeItem !== 'post-test' ? true : false}\r\n                  >\r\n                    {/* <Label>4</Label> */}\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      Post Test Counseling\r\n                      {completed.includes(\"post-test\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"recency-testing\"}\r\n                    onClick={() => handleItemClick(\"recency-testing\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"recency-testing\" ? \"#000\" : \"\",\r\n                    }}\r\n                    //disabled={activeItem !== 'recency-testing' ? true : false}\r\n                  >\r\n                    {/* <Label>4</Label> */}\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      HIV Recency Testing\r\n                      {completed.includes(\"recency-testing\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  {/* \r\n                  <Menu.Item\r\n                    name=\"spam\"\r\n                    active={activeItem === \"indexing\"}\r\n                    onClick={() => handleItemClick(\"indexing\")}\r\n                    style={{\r\n                      backgroundColor: activeItem === \"indexing\" ? \"#000\" : \"\",\r\n                    }}\r\n                  > */}\r\n                  {/* <Label>4</Label> */}\r\n                  {/* <span style={{ color: \"#fff\" }}>\r\n                      Index Notification Services - Elicitation\r\n                      {completed.includes(\"indexing\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item> */}\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pns-history\"}\r\n                    onClick={() => handleItemClick(\"pns-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"pns-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Partner Notification Services\r\n                      {completed.includes(\"pns\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  {/* <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"pns-history\"}\r\n                    onClick={() => handleItemClick(\"pns-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"pns-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Partner Notification Services\r\n                      {completed.includes(\"pns\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item> */}\r\n                  {/* Family Index Testing form */}\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"fit-history\"}\r\n                    onClick={() => handleItemClick(\"fit-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"fit-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Family Index Testing form\r\n                      {completed.includes(\"fit-history\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    name=\"inbox\"\r\n                    active={activeItem === \"refferal-history\"}\r\n                    onClick={() => handleItemClick(\"refferal-history\")}\r\n                    style={{\r\n                      backgroundColor:\r\n                        activeItem === \"refferal-history\" ? \"#000\" : \"\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#fff\" }}>\r\n                      {\" \"}\r\n                      Client Referral Service\r\n                      {completed.includes(\"refferal\") && (\r\n                        <Icon name=\"check\" color=\"green\" />\r\n                      )}\r\n                    </span>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-9 col-sm-9 col-lg-9 \"\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  margingLeft: \"-50px\",\r\n                  paddingLeft: \"-20px\",\r\n                }}\r\n              >\r\n                {activeItem === \"risk\" && (\r\n                  <RiskStratification\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setHideOtherMenu={setHideOtherMenu}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                    setOrganizationInfo={setOrganizationInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"basic\" && (\r\n                  <BasicInfo\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                    setBasicInfo={setBasicInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"pre-test-counsel\" && (\r\n                  <PreTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"hiv-test\" && (\r\n                  <HivTestResult\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"post-test\" && (\r\n                  <PostTest\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"indexing\" && (\r\n                  <IndexingContactTracing\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"recency-testing\" && (\r\n                  <RecencyTesting\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    patientAge={props.patientAge}\r\n                  />\r\n                )}\r\n                {activeItem === \"others\" && (\r\n                  <Others\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                  />\r\n                )}\r\n                {activeItem === \"pns-history\" && (\r\n                  <PNSHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"pns\" && (\r\n                  <PnsForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"view-pns\" && (\r\n                  <ViewPNSForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"view-fit\" && (\r\n                  <ViewFamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    action={action}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"fit-history\" && (\r\n                  <FamilyIndexHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                    setAction={setAction}\r\n                  />\r\n                )}\r\n\r\n                {activeItem === \"fit\" && (\r\n                  <FamilyIndexTestingForm\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                  />\r\n                )}\r\n                {activeItem === \"view-referral\" && (\r\n                  <ViewClientReferral\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                    row={row}\r\n                  />\r\n                )}\r\n                {activeItem === \"refferal-history\" && (\r\n                  <ClientReferralHistory\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    activePage={props.activePage}\r\n                    setActivePage={props.setActivePage}\r\n                    setRow={setRow}\r\n                  />\r\n                )}\r\n                {activeItem === \"client-referral\" && (\r\n                  <RefferralUnit\r\n                    handleItemClick={handleItemClick}\r\n                    setCompleted={setCompleted}\r\n                    completed={completed}\r\n                    setPatientObj={setPatientObj}\r\n                    patientObj={patientObj}\r\n                    setExtra={setExtra}\r\n                    extra={extra}\r\n                    basicInfo={basicInfo}\r\n                    organizationInfo={organizationInfo}\r\n                    addNewForm={false}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>{\" \"}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["369","370"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\n//import { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\nimport History from \"./History\";\nimport ContineousRegistrationTesting from \"./../Patient/ContineousRegistrationTesting\";\n//import CheckedInPatients from './Patient/CheckedInPatients'\nimport * as moment from \"moment\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = (props) => {\n  const [patientList, setPatientList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const patientId =\n    props.patientObj && props.patientObj.personId\n      ? props.patientObj.personId\n      : null;\n  const [key, setKey] = useState(\"home\");\n  const [lastVisitCount, setLastVisitCount] = useState(null);\n  //Calculate last date of visit\n  const calculateLastVisitDate = (visitDate) => {\n    const monthDifference = moment(\n      new Date(moment(new Date()).format(\"YYYY-MM-DD\"))\n    ).diff(new Date(visitDate), \"months\", true);\n    //console.log(monthDifference)\n    return monthDifference;\n  };\n  useEffect(() => {\n    patients();\n    patientsCurrentHts();\n    if (props.activePage.activePage === \"home\") {\n      setKey(\"home\");\n    }\n  }, [props.patientObj, props.activePage]);\n  ///GET LIST OF Patients\n  async function patients() {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}hts/persons/${patientId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data)\n        setLoading(false);\n        setPatientList(response.data.htsClientDtoList);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  }\n  async function patientsCurrentHts() {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}hts/persons/${patientId}/current-hts`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //set the last date of visit after the response\n        setLastVisitCount(\n          Math.round(calculateLastVisitDate(response.data.dateVisit))\n        );\n      })\n      .catch((error) => {\n        //setLoading(false)\n      });\n  }\n\n  return (\n    <Fragment>\n      <br />\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"home\" title=\"HTS HISTORY\">\n                    <History\n                      patientObj={props.patientObj}\n                      setPatientObj={props.setPatientObj}\n                      activePage={props.activePage}\n                      setActivePage={props.setActivePage}\n                      clientCode={props.clientCode}\n                      patientAge={props.patientAge}\n                      patients={patients}\n                      patientList={patientList}\n                      loading={loading}\n                    />\n                  </Tab>\n                  {lastVisitCount !== null &&\n                    lastVisitCount >= 3 && ( //check if the last test is more than 3months\n                      <Tab eventKey=\"new\" title=\"NEW HTS\">\n                        <ContineousRegistrationTesting\n                          patientObj={props.patientObj}\n                          activePage={props.activePage}\n                          setActivePage={props.setActivePage}\n                          clientCode={props.clientCode}\n                          patientAge={props.patientAge}\n                          patients={patients}\n                        />\n                      </Tab>\n                    )}\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["371","372","373","374","375","376","377","378","379","380"],"import React, { Fragment } from \"react\";\n// BS\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Link } from \"react-router-dom\";\n// images\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\n\nconst options = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [20, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [200, 45, 30,20]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 10, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst options2 = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [200, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [2000, 450, 300,200]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 100, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst Widget = () => {\n  return (\n    <Fragment>     \n      <div className=\"row\">\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-primary text-danger\">\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY TESTED</p>\n                  <h4 className=\"mb-0\">3280</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-warning text-warning\">\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENT ON ART</p>\n                  <h4 className=\"mb-0\">2570</h4>\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body  p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-danger text-danger\">\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\n                  <h4 className=\"mb-0\">50</h4>\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-success text-success\">\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\n                  <h4 className=\"mb-0\">2340</h4>\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <SummaryView />\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n          />\n        </div> */}\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options2}\n          />\n        </div> */}\n        \n      </div>\n    </Fragment>\n  );\n};\n\nexport default Widget;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["381","382","383","384","385","386","387","388","389","390","391","392"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  FormGroup,\n  Label,\n  CardBody,\n  Spinner,\n  Badge,\n  Input,\n  Form,\n} from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PanToolIcon from \"@mui/icons-material/PanTool\";\n//import * as moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst BasicInfo = (props) => {\n  const [predictionValue, setPredictionValue] = useState(0);\n\n  const predictionRanges = (prediction) => {\n    if (parseFloat(prediction) <= 0.2) {\n      return <Badge color=\"success\">Low Risk</Badge>;\n    } else if (\n      parseFloat(prediction) >= 0.21 &&\n      parseFloat(prediction) <= 0.4\n    ) {\n      return <Badge color=\"info\">Medium Risk</Badge>;\n    } else if (\n      parseFloat(prediction) >= 0.41 &&\n      parseFloat(prediction) <= 0.8\n    ) {\n      return <Badge color=\"warning\">High Risk</Badge>;\n    } else if (parseFloat(prediction) >= 0.81) {\n      return <Badge color=\"danger\">Highest Risk</Badge>;\n    } else {\n      return <Badge color=\"dark\">No Prediction Result</Badge>;\n    }\n  };\n\n  const classes = useStyles();\n  //let patientAge=\"\"\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  const [savingPrediction, setSavingPrediction] = useState(false);\n  const [savingResult, setSavingRsult] = useState(false);\n  const [errors, setErrors] = useState({});\n  let temp = { ...errors };\n  //console.log(\"data_pre_test\", props.patientObj);\n  // const calculate_age = dob => {\n  //     var today = new Date();\n  //     var dateParts = dob.split(\"-\");\n  //     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n  //     var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n  //     var age_now = today.getFullYear() - birthDate.getFullYear();\n  //     var m = today.getMonth() - birthDate.getMonth();\n  //         if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n  //                 age_now--;\n  //             }\n  //         if (age_now === 0) {\n  //                 return m + \" month(s)\";\n  //             }\n  //             return age_now ;\n  // };\n  const [knowledgeAssessment, setKnowledgeAssessment] = useState({\n    previousTestedHIVNegative: \"\",\n    timeLastHIVNegativeTestResult: \"\",\n    clientPregnant: \"\",\n    clientInformHivTransRoutes: \"\",\n    clientInformRiskkHivTrans: \"\",\n    clientInformPreventingsHivTrans: \"\",\n    clientInformPossibleTestResult: \"\",\n    informConsentHivTest: \"\",\n  });\n  useEffect(() => {\n    if (props.patientObj) {\n      setKnowledgeAssessment(\n        props.patientObj.knowledgeAssessment &&\n          props.patientObj.knowledgeAssessment !== null\n          ? props.patientObj.knowledgeAssessment\n          : {}\n      );\n      setRiskAssessment(\n        props.patientObj.riskAssessment &&\n          props.patientObj.riskAssessment !== null\n          ? props.patientObj.riskAssessment\n          : {}\n      );\n      setRiskAssessmentPartner(\n        props.patientObj.sexPartnerRiskAssessment &&\n          props.patientObj.sexPartnerRiskAssessment !== null\n          ? props.patientObj.sexPartnerRiskAssessment\n          : {}\n      );\n      setStiScreening(\n        props.patientObj.stiScreening && props.patientObj.stiScreening !== null\n          ? props.patientObj.stiScreening\n          : {}\n      );\n      setTbScreening(\n        props.patientObj.tbScreening && props.patientObj.tbScreening !== null\n          ? props.patientObj.tbScreening\n          : {}\n      );\n      //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n      //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n      if (\n        props.patientObj.riskStratificationResponseDto &&\n        Object.keys(\n          props.patientObj.riskStratificationResponseDto.riskAssessment\n        ).length !== 0 &&\n        props.patientObj.riskAssessment === null\n      ) {\n        //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n        props.patientObj.riskStratificationResponseDto.riskAssessment\n          .whatWasTheResult !== \"\" &&\n        props.patientObj.riskStratificationResponseDto.riskAssessment\n          .whatWasTheResult === \"Positive\"\n          ? (knowledgeAssessment.previousTestedHIVNegative = \"false\")\n          : (knowledgeAssessment.previousTestedHIVNegative = \"true\");\n      } else {\n        setRiskAssessment({\n          ...riskAssessment,\n          ...props.patientObj.riskAssessment,\n        });\n      }\n      knowledgeAssessment.clientPregnant =\n        props.patientObj.pregnant === 73 ? \"true\" : \"\";\n    }\n  }, [props.patientObj]);\n\n  const handleItemClick = (page, completedMenu) => {\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n    props.handleItemClick(page);\n  };\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    knowledgeAssessment: {},\n    personId: patientID,\n    riskAssessment: {},\n    stiScreening: {},\n    tbScreening: {},\n    sexPartnerRiskAssessment: {},\n  });\n\n  const handleInputChangeKnowledgeAssessment = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n\n    setKnowledgeAssessment({\n      ...knowledgeAssessment,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const [riskAssessment, setRiskAssessment] = useState({\n    everHadSexualIntercourse: \"\",\n    bloodtransInlastThreeMonths: \"\",\n    uprotectedSexWithCasualLastThreeMonths: \"\",\n    uprotectedSexWithRegularPartnerLastThreeMonths: \"\",\n    unprotectedVaginalSex: \"\",\n    uprotectedAnalSex: \"\",\n    stiLastThreeMonths: \"\",\n    sexUnderInfluence: \"\",\n    moreThanOneSexPartnerLastThreeMonths: \"\",\n    experiencePain: \"\",\n    haveSexWithoutCondom: \"\",\n    abuseDrug: \"\",\n    bloodTransfusion: \"\",\n    consistentWeightFeverNightCough: \"\",\n    soldPaidVaginalSex: \"\",\n    consistentWeightFeverNightCough: \"\",\n    soldPaidVaginalSex: \"\",\n    haveCondomBurst: \"\",\n  });\n\n  // const postPredictions = (name, value) => {\n  //   if (name === \"soldPaidVaginalSex\" && value !== \"null\") {\n  //     setSavingRsult(true);\n  //     let mlData = {\n  //       modelConfigs: {\n  //         debug: \"true\",\n  //         encounterDate: props.patientObj?.dateVisit,\n  //         facilityId: \"LBgwDTw2C8u\",\n  //         modelId: \"hts_v1\",\n  //       },\n  //       variableValues: {\n  //         age: props.patientObj?.riskStratificationResponseDto.age,\n  //         client_pregnant_X0: props.patientObj?.pregnant === null ? 0 : 1,\n  //         first_time_visit_Y:\n  //           props.patientObj?.firstTimeVisit === false ? 0 : 1,\n  //         hts_setting_Other: 0,\n  //         hts_setting_Others: 0,\n  //         hts_setting_Outreach: 1,\n  //         marital_status_Divorced: 0,\n  //         marital_status_Married:\n  //           props.patientObj?.personResponseDto?.maritalStatus === null ? 0 : 1,\n  //         marital_status_Widowed: 0,\n  //         previously_tested_hiv_negative_Missing: 0,\n  //         previously_tested_hiv_negative_TRUE: 0,\n  //         referred_from_Other: 0,\n  //         referred_from_Self: 1,\n  //         session_type_Individual: 0,\n  //         sex_F: props.patientObj?.personResponseDto?.sex === \"Female\" ? 1 : 0,\n  //         sex_M: props.patientObj?.personResponseDto?.sex === \"Male\" ? 1 : 0,\n  //         tested_for_hiv_before_within_this_year_NotPreviouslyTested: 1,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedNegative: 0,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveInHIVCare: 0,\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveNotInHIVCare: 0,\n  //       },\n  //     };\n  //     //ML Post\n  //     axios\n  //       .post(`${baseUrl}machine-learning/evaluate`, mlData, {\n  //         headers: { Authorization: `Bearer ${token}` },\n  //       })\n  //       .then((resp) => {\n  //         console.log(\"ML\", resp);\n  //         let predictions = Object.values(resp.data.result.predictions);\n  //         setPredictionValue(predictions);\n  //         setSavingPrediction(true);\n  //         setSavingRsult(false);\n  //       })\n  //       .catch((err) => {\n  //         console.error(\"ML_err\", err);\n  //       });\n  //   }\n  // };\n\n  const handleInputChangeRiskAssessment = (e) => {\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\n    //postPredictions(e.target.name, e.target.value);\n  };\n  // Getting the number count of riskAssessment True\n  const actualRiskCountTrue = Object.values(riskAssessment);\n  const riskCount = actualRiskCountTrue.filter((x) => x === \"true\");\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\n    sexPartnerHivPositive: \"\",\n    newDiagnosedHivlastThreeMonths: \"\",\n    currentlyArvForPmtct: \"\",\n    knowHivPositiveOnArv: \"\",\n    knowHivPositiveAfterLostToFollowUp: \"\",\n    uprotectedAnalSex: \"\",\n  });\n  const handleInputChangeRiskAssessmentPartner = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setRiskAssessmentPartner({\n      ...riskAssessmentPartner,\n      [e.target.name]: e.target.value,\n    });\n    // if(riskAssessmentPartner.sexPartnerHivPositive==='false' || (e.target.name==='sexPartnerHivPositive' &&  e.target.value==='false')){\n    //     setRiskAssessmentPartner ({\n    //         sexPartnerHivPositive:'false',\n    //         newDiagnosedHivlastThreeMonths:\"\",\n    //         currentlyArvForPmtct :\"\",\n    //         knowHivPositiveOnArv :\"\",\n    //         knowHivPositiveAfterLostToFollowUp:\"\",\n    //         uprotectedAnalSex  :\"\",\n    //     })\n    // }\n  };\n  // Getting the number count of sexPartRiskCount True\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(\n    (x) => x === \"true\"\n  );\n  const [stiScreening, setStiScreening] = useState({\n    vaginalDischarge: \"\",\n    lowerAbdominalPains: \"\",\n    urethralDischarge: \"\",\n    complaintsOfScrotal: \"\",\n    complaintsGenitalSore: \"\",\n  });\n  const handleInputChangeStiScreening = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\n  };\n  // Getting the number count of STI True\n  const actualStiTrue = Object.values(stiScreening);\n  const stiCount = actualStiTrue.filter((x) => x === \"true\");\n  const [tbScreening, setTbScreening] = useState({\n    currentCough: \"\",\n    weightLoss: \"\",\n    lymphadenopathy: \"\",\n    fever: \"\",\n    nightSweats: \"\",\n  });\n  const handleInputChangeTbScreening = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTbScreening({ ...tbScreening, [e.target.name]: e.target.value });\n  };\n  // Getting the number count of TB True\n  const actualTBTrue = Object.values(tbScreening);\n  const newTbTrue = actualTBTrue.filter((x) => x === \"true\");\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n    //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n    //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n    //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n    //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n    //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n    //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n    //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n    //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n    //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n    //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n    //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n    //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\n      (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\n      (temp.bloodtransInlastThreeMonths =\n        riskAssessment.bloodtransInlastThreeMonths\n          ? \"\"\n          : \"This field is required.\");\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n    // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.experiencePain = riskAssessment.experiencePain\n        ? \"\"\n        : \"This field is required.\");\n\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.abuseDrug = riskAssessment.abuseDrug\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.bloodTransfusion = riskAssessment.bloodTransfusion\n        ? \"\"\n        : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.consistentWeightFeverNightCough =\n        riskAssessment.consistentWeightFeverNightCough\n          ? \"\"\n          : \"This field is required.\");\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\n      (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex\n        ? \"\"\n        : \"This field is required.\");\n\n    // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x === \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.htsClientId = clientId;\n      objValues.knowledgeAssessment = knowledgeAssessment;\n      objValues.personId = patientID;\n      objValues.riskAssessment = riskAssessment;\n      objValues.stiScreening = stiScreening;\n      objValues.tbScreening = tbScreening;\n      objValues.sexPartnerRiskAssessment = riskAssessmentPartner;\n\n      axios\n        .put(`${baseUrl}hts/${clientId}/pre-test-counseling`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);\n          //toast.success(\"Risk Assesment successful\");\n          handleItemClick(\"hiv-test\", \"pre-test-counsel\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    } else {\n      toast.error(\"All fields are required\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>PRE TEST COUNSELING</h2>\n          {savingPrediction ? (\n            <Stack sx={{ width: \"50%\" }} spacing={2}>\n              <Alert severity=\"info\" style={{ fontSize: \"16px\", color: \"000\" }}>\n                <b>ML Prediction Result for HTS Patient :</b>{\" \"}\n                {predictionRanges(predictionValue[1])}\n              </Alert>\n            </Stack>\n          ) : (\n            \"\"\n          )}\n          <br />\n          <form>\n            <div className=\"row\">\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"rgb(0,181,173)\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Knowledge Assessment\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Previously tested HIV negative{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"previousTestedHIVNegative\"\n                    id=\"previousTestedHIVNegative\"\n                    value={knowledgeAssessment.previousTestedHIVNegative}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.previousTestedHIVNegative !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.previousTestedHIVNegative}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {knowledgeAssessment.previousTestedHIVNegative === \"true\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Time of last HIV Negative test Result</Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"timeLastHIVNegativeTestResult\"\n                      id=\"timeLastHIVNegativeTestResult\"\n                      value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                      onChange={handleInputChangeKnowledgeAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"<1\"> {\"< 1\"} month</option>\n                      <option value=\"1-3 Months\">1-3 Months</option>\n                      <option value=\"4-6 Months\">4-6 Months</option>\n                      <option value=\">6 Months\"> {\">6\"} Months</option>\n                      {knowledgeAssessment.previousTestedHIVNegative !==\n                        \"true\" && <option value=\"Never\"> Never</option>}\n                    </select>\n                    {errors.timeLastHIVNegativeTestResult !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.timeLastHIVNegativeTestResult}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n              {props.patientObj &&\n                (props.patientObj.personResponseDto.sex === \"Female\" ||\n                  props.patientObj.personResponseDto.sex === \"female\" ||\n                  props.patientObj.personResponseDto.sex === \"FEMALE\") && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Client pregnant </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"clientPregnant\"\n                        id=\"clientPregnant\"\n                        value={knowledgeAssessment.clientPregnant}\n                        onChange={handleInputChangeKnowledgeAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.clientPregnant !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.clientPregnant}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client informed about HIV transmission routes </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformHivTransRoutes\"\n                    id=\"clientInformHivTransRoutes\"\n                    value={knowledgeAssessment.clientInformHivTransRoutes}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformHivTransRoutes !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformHivTransRoutes}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client informed about risk factors for HIV transmission{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformRiskkHivTrans\"\n                    id=\"clientInformRiskkHivTrans\"\n                    value={knowledgeAssessment.clientInformRiskkHivTrans}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformRiskkHivTrans !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformRiskkHivTrans}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client informed on preventing HIV transmission methods{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformPreventingsHivTrans\"\n                    id=\"clientInformPreventingsHivTrans\"\n                    value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformPreventingsHivTrans !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformPreventingsHivTrans}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client informed about possible test results </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientInformPossibleTestResult\"\n                    id=\"clientInformPossibleTestResult\"\n                    value={knowledgeAssessment.clientInformPossibleTestResult}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.clientInformPossibleTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.clientInformPossibleTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Informed consent for HIV testing given </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informConsentHivTest\"\n                    id=\"informConsentHivTest\"\n                    value={knowledgeAssessment.informConsentHivTest}\n                    onChange={handleInputChangeKnowledgeAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.informConsentHivTest !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.informConsentHivTest}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <hr />\n              <br />\n              {savingResult ? (\n                <div\n                  style={{\n                    display: \"block\",\n                    width: 1000,\n                    padding: 10,\n                  }}\n                >\n                  <Spinner style={{ width: \"2rem\", height: \"2rem\" }} />\n                  <b style={{ color: \"#992E62\", fontSize: \"14px\" }}>\n                    {\" \"}\n                    <PanToolIcon /> requesting HTS ML predictions...\n                  </b>\n                </div>\n              ) : (\n                \" \"\n              )}\n              {props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" && (\n                <>\n                  <div\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                    style={{\n                      backgroundColor: \"#992E62\",\n                      width: \"125%\",\n                      height: \"35px\",\n                      color: \"#fff\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    HIV Risk Assessment (Last 3 months)\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Ever had sexual intercourse{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"everHadSexualIntercourse\"\n                        id=\"everHadSexualIntercourse\"\n                        value={riskAssessment.everHadSexualIntercourse}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.everHadSexualIntercourse !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.everHadSexualIntercourse}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Blood transfusion in last 3 months{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"bloodtransInlastThreeMonths\"\n                        id=\"bloodtransInlastThreeMonths\"\n                        value={riskAssessment.bloodtransInlastThreeMonths}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.bloodtransInlastThreeMonths !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.bloodtransInlastThreeMonths}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected sex with casual partner in last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedSexWithCasualLastThreeMonths\"\n                            id=\"uprotectedSexWithCasualLastThreeMonths\"\n                            value={\n                              riskAssessment.uprotectedSexWithCasualLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedSexWithCasualLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {errors.uprotectedSexWithCasualLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected sex with regular partner in the last\n                            3months <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                            id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                            value={\n                              riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {\n                                errors.uprotectedSexWithRegularPartnerLastThreeMonths\n                              }\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected vaginal sex{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"unprotectedVaginalSex\"\n                            id=\"unprotectedVaginalSex\"\n                            value={riskAssessment.unprotectedVaginalSex}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.unprotectedVaginalSex !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.unprotectedVaginalSex}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Unprotected Anal sex{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"uprotectedAnalSex\"\n                            id=\"uprotectedAnalSex\"\n                            value={riskAssessment.uprotectedAnalSex}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.uprotectedAnalSex !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.uprotectedAnalSex}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            STI in last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"stiLastThreeMonths\"\n                            id=\"stiLastThreeMonths\"\n                            value={riskAssessment.stiLastThreeMonths}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.stiLastThreeMonths !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.stiLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            Sex under the influence of drugs or alcohol{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"sexUnderInfluence\"\n                            id=\"sexUnderInfluence\"\n                            value={riskAssessment.sexUnderInfluence}\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.sexUnderInfluence !== \"\" ? (\n                            <span className={classes.error}>\n                              {errors.sexUnderInfluence}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\n                      <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label>\n                            More than 1 sex partner during last 3 months{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"moreThanOneSexPartnerLastThreeMonths\"\n                            id=\"moreThanOneSexPartnerLastThreeMonths\"\n                            value={\n                              riskAssessment.moreThanOneSexPartnerLastThreeMonths\n                            }\n                            onChange={handleInputChangeRiskAssessment}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                          {errors.moreThanOneSexPartnerLastThreeMonths !==\n                          \"\" ? (\n                            <span className={classes.error}>\n                              {errors.moreThanOneSexPartnerLastThreeMonths}\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </FormGroup>\n                      </div>\n                    )}\n\n                  <Message warning>\n                    <h4> Risk assessment score (sum of all 7 answers)</h4>\n                    <b>Score : {riskCount.length}</b>\n                  </Message>\n                  <hr />\n                  <br />\n                </>\n              )}\n              {props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" && (\n                <>\n                  <div\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                    style={{\n                      backgroundColor: \"#992E62\",\n                      width: \"125%\",\n                      height: \"35px\",\n                      color: \"#fff\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    HIV Risk Assessment (Last 3 months)\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/your partner experienced lower abdominal pain,\n                        smelly discharge, blisters and wounds around you/partner\n                        vagina, penis anus or mouth?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"experiencePain\"\n                        id=\"experiencePain\"\n                        value={riskAssessment.experiencePain}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.experiencePain !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.experiencePain}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner had sex without a condom with someone\n                        of unknown HIV status, or you/partner raped by person\n                        with unknown HIV status?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"haveSexWithoutCondom\"\n                        id=\"haveSexWithoutCondom\"\n                        value={riskAssessment.haveSexWithoutCondom}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.haveSexWithoutCondom !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.haveSexWithoutCondom}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you had a condom burst with your partner during\n                        sexual intercourse?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"haveCondomBurst\"\n                        id=\"haveCondomBurst\"\n                        value={riskAssessment.haveCondomBurst}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.haveCondomBurst !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.haveCondomBurst}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Do you/partner share needles/syringes, other sharp\n                        objects or used abuse drug substances of any kind?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"abuseDrug\"\n                        id=\"abuseDrug\"\n                        value={riskAssessment.abuseDrug}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.abuseDrug !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.abuseDrug}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner had any blood or blood product\n                        transfusion? <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"bloodTransfusion\"\n                        id=\"bloodTransfusion\"\n                        value={riskAssessment.bloodTransfusion}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.bloodTransfusion !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.bloodTransfusion}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner experienced coughing, weight loss,\n                        fever, night sweats consistently?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"consistentWeightFeverNightCough\"\n                        id=\"consistentWeightFeverNightCough\"\n                        value={riskAssessment.consistentWeightFeverNightCough}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.consistentWeightFeverNightCough !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.consistentWeightFeverNightCough}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Have you/partner paid or sold vaginal, anal or oral sex?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"soldPaidVaginalSex\"\n                        id=\"soldPaidVaginalSex\"\n                        value={riskAssessment.soldPaidVaginalSex}\n                        onChange={handleInputChangeRiskAssessment}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.soldPaidVaginalSex !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.soldPaidVaginalSex}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <Message warning>\n                    <h4> HIV Risk assessment score (sum of all 7 answers)</h4>\n                    <b>Score :{riskCount.length}</b>\n                  </Message>\n                  <hr />\n                  <br />\n                </>\n              )}\n\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#000\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Clinical TB screening\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Current cough </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"currentCough\"\n                    id=\"currentCough\"\n                    value={tbScreening.currentCough}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.currentCough !== \"\" ? (\n                    <span className={classes.error}>{errors.currentCough}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Weight loss </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"weightLoss\"\n                    id=\"weightLoss\"\n                    value={tbScreening.weightLoss}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.weightLoss !== \"\" ? (\n                    <span className={classes.error}>{errors.weightLoss}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lymphadenopathy\"\n                    id=\"lymphadenopathy\"\n                    value={tbScreening.lymphadenopathy}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.lymphadenopathy !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.lymphadenopathy}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Fever </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"fever\"\n                    id=\"fever\"\n                    value={tbScreening.fever}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.fever !== \"\" ? (\n                    <span className={classes.error}>{errors.fever}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Night sweats</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"nightSweats\"\n                    id=\"nightSweats\"\n                    value={tbScreening.nightSweats}\n                    onChange={handleInputChangeTbScreening}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.nightSweats !== \"\" ? (\n                    <span className={classes.error}>{errors.nightSweats}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <Message warning>\n                <h4>\n                  TB Screening score (calculate the sum of the TB assessment) If\n                  score {\">= 1\"}, test for Xper MTB RIF or refer to TB service{\" \"}\n                </h4>\n                <b>Score : {newTbTrue.length}</b>\n              </Message>\n              <hr />\n              <br />\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#992E62\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Sex Partner Risk Assessment (Last 3 months)\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you had sex with a partner who is HIV positive?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"sexPartnerHivPositive\"\n                    id=\"sexPartnerHivPositive\"\n                    value={riskAssessmentPartner.sexPartnerHivPositive}\n                    onChange={handleInputChangeRiskAssessmentPartner}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.sexPartnerHivPositive !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.sexPartnerHivPositive}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {riskAssessmentPartner.sexPartnerHivPositive === \"true\" && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Is sex partner newly diagnosed with HIV and started\n                        treatment less than 3-6 months ago?\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"newDiagnosedHivlastThreeMonths\"\n                        id=\"newDiagnosedHivlastThreeMonths\"\n                        value={\n                          riskAssessmentPartner.newDiagnosedHivlastThreeMonths\n                        }\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.newDiagnosedHivlastThreeMonths !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.newDiagnosedHivlastThreeMonths}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Is sex partner pregnant and currently receiving ARV for\n                        PMTCT?\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyArvForPmtct\"\n                        id=\"currentlyArvForPmtct\"\n                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.currentlyArvForPmtct !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.currentlyArvForPmtct}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Known HIV positive partner on ARV with an unsurpressed\n                        VL\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"knowHivPositiveOnArv\"\n                        id=\"knowHivPositiveOnArv\"\n                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.knowHivPositiveOnArv !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.knowHivPositiveOnArv}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Known HIV positive recently returned to treatment after\n                        being lost to follow up\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                        value={\n                          riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp\n                        }\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.knowHivPositiveAfterLostToFollowUp !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.knowHivPositiveAfterLostToFollowUp}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Unprotected Anal sex</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"uprotectedAnalSex\"\n                        id=\"uprotectedAnalSex\"\n                        value={riskAssessmentPartner.uprotectedAnalSex}\n                        onChange={handleInputChangeRiskAssessmentPartner}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                      {errors.uprotectedAnalSex !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.uprotectedAnalSex}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n              <Message warning>\n                <h4>\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\n                </h4>\n                <b>Score :{sexPartRiskCount.length}</b>\n              </Message>\n\n              <hr />\n              <br />\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#014D88\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Syndromic STI Screening\n              </div>\n              {props.patientObj.personResponseDto &&\n                props.patientObj.personResponseDto.sex === \"Female\" && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of vaginal discharge or burning when\n                          urinating?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"vaginalDischarge\"\n                          id=\"vaginalDischarge\"\n                          value={stiScreening.vaginalDischarge}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.vaginalDischarge !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.vaginalDischarge}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of lower abdominal pains with or without\n                          vaginal discharge?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lowerAbdominalPains\"\n                          id=\"lowerAbdominalPains\"\n                          value={stiScreening.lowerAbdominalPains}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lowerAbdominalPains !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lowerAbdominalPains}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              {props.patientObj.personResponseDto &&\n                props.patientObj.personResponseDto.sex === \"Male\" && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of urethral discharge or burning when\n                          urinating?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"urethralDischarge\"\n                          id=\"urethralDischarge\"\n                          value={stiScreening.urethralDischarge}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.urethralDischarge !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.urethralDischarge}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Complaints of scrotal swelling and pain</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"complaintsOfScrotal\"\n                          id=\"complaintsOfScrotal\"\n                          value={stiScreening.complaintsOfScrotal}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.complaintsOfScrotal !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.complaintsOfScrotal}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Complaints of genital sore(s) or swollen inguinal\n                          lymph nodes with or without pains?\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"complaintsGenitalSore\"\n                          id=\"complaintsGenitalSore\"\n                          value={stiScreening.complaintsGenitalSore}\n                          onChange={handleInputChangeStiScreening}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.complaintsGenitalSore !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.complaintsGenitalSore}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              <Message warning>\n                <h4>\n                  Calculate the sum of the STI screening. If {\">= \"}1, should be\n                  referred for STI test{\" \"}\n                </h4>\n                <b>Score :{stiCount.length}</b>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"basic\", \"basic\")}\n                  />\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default BasicInfo;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["393","394","395","396","397","398","399","400","401","402"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["403","404","405","406","407","408","409"],"import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast } from \"react-toastify\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst HivTestResult = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  let temp = { ...errors };\n  console.log(\"data2\", props.patientObj);\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [showCD4Count, setShowCD4Count] = useState(true);\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now;\n  };\n  const patientAge = calculate_age(\n    moment(\n      props.patientObj.personResponseDto &&\n        props.patientObj.personResponseDto.dateOfBirth\n        ? props.patientObj.personResponseDto.dateOfBirth\n        : 0\n    ).format(\"DD-MM-YYYY\")\n  );\n\n  const [objValues, setObjValues] = useState({\n    confirmatoryTest: {},\n    confirmatoryTest2: {},\n    hivTestResult: \"\",\n    hivTestResult2: \"\",\n    htsClientId: \"\",\n    personId: props.patientObj ? props.patientObj.id : \"\",\n    test1: {},\n    test2: {},\n    tieBreakerTest: {},\n    tieBreakerTest2: {},\n    syphilisTesting: {},\n    hepatitisTesting: {},\n    others: {},\n    cd4: {},\n    prepOffered: \"\",\n    prepAccepted: \"\",\n  });\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  const [initialTest1, setInitailTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [initialTest12, setInitailTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeCd4Count = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\n  };\n  const [cd4Count, setCd4Count] = useState({\n    cd4Count: \"\",\n    cd4SemiQuantitative: \"\",\n    cd4FlowCyteometry: \"\",\n  });\n  const handleInputChangeInitial = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setConfirmatoryTest({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setErrors({ date: \"\", prepOffered: \"\", prepAccepted: \"\" });\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeInitial2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      setConfirmatoryTest2({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest2({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeConfirmatory = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest({\n      ...confirmatoryTest,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeConfirmatory2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest2({\n      ...confirmatoryTest2,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [tieBreakerTest, setTieBreakerTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeTie = (e) => {\n    console.log(e.target.value);\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeTie2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [syphills, setSyphills] = useState({\n    syphilisTestResult: \"\",\n    // result  :\"\",\n  });\n  const handleInputChangeSyphills = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\n  };\n  const [hepatitis, setHepatitis] = useState({\n    hepatitisCTestResult: \"\",\n    hepatitisBTestResult: \"\",\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  const handleInputChangeHepatitis = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\n  };\n  const [others, setOthers] = useState({\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  useEffect(() => {\n    //console.log(props.patientObj)\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n      setCd4Count(\n        props.patientObj && props.patientObj.cd4 !== null\n          ? props.patientObj.cd4\n          : {}\n      );\n      setInitailTest(\n        props.patientObj && props.patientObj.test1 !== null\n          ? props.patientObj.test1\n          : {}\n      );\n      setConfirmatoryTest(\n        props.patientObj && props.patientObj.confirmatoryTest !== null\n          ? props.patientObj.confirmatoryTest\n          : {}\n      );\n      setTieBreakerTest(\n        props.patientObj && props.patientObj.tieBreakerTest !== null\n          ? props.patientObj.tieBreakerTest\n          : {}\n      );\n      setSyphills(\n        props.patientObj && props.patientObj.syphilisTesting !== null\n          ? props.patientObj.syphilisTesting\n          : {}\n      );\n      setHepatitis(\n        props.patientObj && props.patientObj.hepatitisTesting !== null\n          ? props.patientObj.hepatitisTesting\n          : {}\n      );\n      setOthers(\n        props.patientObj && props.patientObj.others !== null\n          ? props.patientObj.others\n          : {}\n      );\n\n      setInitailTest2(\n        props.patientObj && props.patientObj.test2 !== null\n          ? props.patientObj.test2\n          : {}\n      );\n      setConfirmatoryTest2(\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\n          ? props.patientObj.confirmatoryTest2\n          : {}\n      );\n      setTieBreakerTest2(\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\n          ? props.patientObj.tieBreakerTest2\n          : {}\n      );\n    }\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\n\n  const handleInputChangeOthers = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setOthers({ ...others, [e.target.name]: e.target.value });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  function CheckTestResult() {\n    //Logic to show CD4 Count\n    // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n    //     objValues.hivTestResult=\"Negative\"\n    // }\n  }\n  function CheckTestResult2() {\n    //Logic to show CD4 Count\n    if (initialTest12.result2 === \"No\") {\n      setShowCD4Count(false);\n    } else if (\n      initialTest12.result2 === \"Yes\" &&\n      confirmatoryTest2.result2 === \"Yes\"\n    ) {\n      setShowCD4Count(true);\n    }\n    // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n    //     objValues.hivTestResult2=\"Negative\"\n    // }\n    else if (\n      confirmatoryTest2.result2 === \"No\" &&\n      tieBreakerTest2.result2 === \"Yes\"\n    ) {\n      setShowCD4Count(true);\n    } else if (\n      confirmatoryTest2.result2 === \"No\" &&\n      tieBreakerTest2.result2 === \"No\"\n    ) {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  }\n  const validate = () => {\n    //HTS FORM VALIDATION\n    initialTest1.date !== \"\" &&\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\n\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      (temp.prepOffered = objValues.prepOffered\n        ? \"\"\n        : \"The Prep Offered field is required.\");\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      objValues.prepOffered === \"true\" &&\n      (temp.prepAccepted = objValues.prepAccepted\n        ? \"\"\n        : \"The Prep Accepted field is required.\");\n    // temp.syphilisTestResult = syphills.syphilisTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n    //  initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      //logic to get Hiv result test\n      if (initialTest12.result2 === \"No\") {\n        objValues.hivTestResult2 = \"Negative\";\n      } else if (\n        initialTest12.result2 === \"Yes\" &&\n        confirmatoryTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      }\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n      //     objValues.hivTestResult2=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      } else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"No\"\n      ) {\n        objValues.hivTestResult2 = \"Negative\";\n      } else {\n        objValues.hivTestResult2 = \"\";\n      }\n\n      if (initialTest1.result === \"No\") {\n        objValues.hivTestResult = \"Negative\";\n      } else if (\n        initialTest1.result === \"Yes\" &&\n        confirmatoryTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      }\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n      //     objValues.hivTestResult=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      } else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"No\"\n      ) {\n        objValues.hivTestResult = \"Negative\";\n      } else {\n        objValues.hivTestResult = \"\";\n      }\n      objValues.htsClientId = clientId;\n      objValues.confirmatoryTest = confirmatoryTest;\n      objValues.confirmatoryTest2 = confirmatoryTest2;\n      objValues.personId = patientID;\n      objValues.test1 = initialTest1;\n      objValues.test2 = initialTest12;\n      objValues.tieBreakerTest = tieBreakerTest;\n      objValues.tieBreakerTest2 = tieBreakerTest2;\n      objValues.syphilisTesting = syphills;\n      objValues.hepatitisTesting = hepatitis;\n\n      objValues.cd4 = cd4Count;\n      objValues.others = others;\n      axios\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);\n          //console.log(response.data)\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\n          //toast.success(\"HIV test successful\");\n          handleItemClick(\"post-test\", \"hiv-test\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\n              </LabelRibbon>\n              <br />\n              <div className=\"form-group  col-md-2\"></div>\n              <h4>Initial Test :</h4>\n              <div className=\"form-group mb-3 col-md-5\">\n                <FormGroup>\n                  <Label for=\"\"> Date </Label>\n                  <Input\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    value={initialTest1.date}\n                    onChange={handleInputChangeInitial}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    required\n                  />\n                  {errors.date !== \"\" ? (\n                    <span className={classes.error}>{errors.date}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {initialTest1.date && (\n                <div className=\"form-group  col-md-5\">\n                  <FormGroup>\n                    <Label>Result </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"result\"\n                      id=\"result\"\n                      value={initialTest1.result}\n                      onChange={handleInputChangeInitial}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={initialTest1.date === \"\" ? true : false}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"Yes\">Reactive</option>\n                      <option value=\"No\">Non Reactive</option>\n                    </select>\n                    {errors.result !== \"\" ? (\n                      <span className={classes.error}>{errors.result}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n              <div className=\"form-group  col-md-2\"></div>\n              {initialTest1.result === \"Yes\" && (\n                <>\n                  <h4>Confirmatory Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={confirmatoryTest.date}\n                        onChange={handleInputChangeConfirmatory}\n                        min={initialTest1.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                      />\n                      {errors.dateOfEac1 !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.dateOfEac1}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  {confirmatoryTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={confirmatoryTest.result}\n                          onChange={handleInputChangeConfirmatory}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              {confirmatoryTest.result === \"No\" && (\n                <>\n                  <h4>Tie Breaker Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={tieBreakerTest.date}\n                        onChange={handleInputChangeTie}\n                        min={confirmatoryTest.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                      />\n                    </FormGroup>\n                  </div>\n                  {tieBreakerTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={tieBreakerTest.result}\n                          onChange={handleInputChangeTie}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              <div className=\"row\">\n                <div className=\"form-group  col-md-12\">\n                  {initialTest1.result === \"No\" && (\n                    <>\n                      <b> Result : </b>\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                    </>\n                  )}\n                  {initialTest1.result === \"No\" &&\n                    confirmatoryTest.result === \"No\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest1.result === \"Yes\" &&\n                    confirmatoryTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n                        <div className=\"row\">\n                          <h4>RETESTING:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={confirmatoryTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  initialTest12.date2 === \"\" ? true : false\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      confirmatoryTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      tieBreakerTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {/* This is result for Test 1 */}\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n\n                        <div className=\"row\">\n                          <h4>Retesting:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={tieBreakerTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  initialTest12.date2 === \"\" ? true : false\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      confirmatoryTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      tieBreakerTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {errors.prepOffered !== \"\" ? (\n                    <span className={classes.error}>{errors.prepOffered}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {errors.prepAccepted !== \"\" ? (\n                    <span className={classes.error}>{errors.prepAccepted}</span>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"No\" &&\n                    (initialTest1.result === \"Yes\" ||\n                      initialTest1.result !== \"\") && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                        <br />\n                        <div className=\"row\">\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Offered{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepOffered\"\n                                id=\"prepOffered\"\n                                value={objValues.prepOffered}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                          {objValues.prepOffered !== \"\" &&\n                            objValues.prepOffered === \"true\" && (\n                              <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                  <Label>\n                                    Prep Accepted{\" \"}\n                                    <span style={{ color: \"red\" }}> *</span>\n                                  </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"prepAccepted\"\n                                    id=\"prepAccepted\"\n                                    value={objValues.prepAccepted}\n                                    onChange={handleInputChange}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"true\">Yes</option>\n                                    <option value=\"false\">No</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                            )}\n                        </div>\n                      </>\n                    )}\n                  {/* END of  result for Test 1 */}\n                  {/* This is result for Test 2 */}\n                  {initialTest12.result2 === \"No\" && (\n                    <>\n                      <b> Final Result : </b>\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      <br />\n                      <br />\n                      <div className=\"row\">\n                        <div className=\"form-group  col-md-5\">\n                          <FormGroup>\n                            <Label>\n                              Prep Offered{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepOffered\"\n                              id=\"prepOffered\"\n                              value={objValues.prepOffered}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                        {objValues.prepOffered !== \"\" &&\n                          objValues.prepOffered === \"true\" && (\n                            <div className=\"form-group  col-md-5\">\n                              <FormGroup>\n                                <Label>\n                                  Prep Accepted{\" \"}\n                                  <span style={{ color: \"red\" }}> *</span>\n                                </Label>\n                                <select\n                                  className=\"form-control\"\n                                  name=\"prepAccepted\"\n                                  id=\"prepAccepted\"\n                                  value={objValues.prepAccepted}\n                                  onChange={handleInputChange}\n                                  style={{\n                                    border: \"1px solid #014D88\",\n                                    borderRadius: \"0.2rem\",\n                                  }}\n                                >\n                                  <option value={\"\"}></option>\n                                  <option value=\"true\">Yes</option>\n                                  <option value=\"false\">No</option>\n                                </select>\n                              </FormGroup>\n                            </div>\n                          )}\n                      </div>\n                    </>\n                  )}\n                  {initialTest12.result2 === \"No\" &&\n                    confirmatoryTest2.result2 === \"No\" && (\n                      <>\n                        <b> FinalnResult : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest12.result2 === \"Yes\" &&\n                    confirmatoryTest2.result2 === \"Yes\" && (\n                      <>\n                        <b> Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                        <br />\n                      </>\n                    )}\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"Yes\" && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                      </>\n                    )}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"No\" &&\n                    (initialTest12.result2 === \"Yes\" ||\n                      initialTest12.result2 === \"Yes\" ||\n                      initialTest12.result2 === \"\") && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {/* END of  result for Test 2*/}\n                </div>\n              </div>\n              {initialTest1.result === \"No\" && (\n                <>\n                  <div className=\"row\">\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"prepOffered\"\n                          id=\"prepOffered\"\n                          value={objValues.prepOffered}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                    {objValues.prepOffered !== \"\" &&\n                      objValues.prepOffered === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Prep Accepted{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepAccepted\"\n                              id=\"prepAccepted\"\n                              value={objValues.prepAccepted}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                      )}\n                  </div>\n                </>\n              )}\n              {confirmatoryTest2.result2 === \"No\" &&\n                tieBreakerTest2.result2 === \"No\" && (\n                  <>\n                    <div className=\"row\">\n                      <div className=\"form-group  col-md-6\">\n                        <FormGroup>\n                          <Label>\n                            Prep Offered{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"prepOffered\"\n                            id=\"prepOffered\"\n                            value={objValues.prepOffered}\n                            onChange={handleInputChange}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                        </FormGroup>\n                      </div>\n                      {objValues.prepOffered !== \"\" &&\n                        objValues.prepOffered === \"true\" && (\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Accepted{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepAccepted\"\n                                id=\"prepAccepted\"\n                                value={objValues.prepAccepted}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                        )}\n                    </div>\n                  </>\n                )}\n              {showCD4Count && (\n                <>\n                  <LabelRibbon\n                    as=\"a\"\n                    color=\"blue\"\n                    style={{ width: \"106%\", height: \"35px\" }}\n                    ribbon\n                  >\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\n                  </LabelRibbon>\n                  <br /> <br />\n                  <div className=\"form-group  col-md-5\">\n                    <FormGroup>\n                      <Label>CD4 Count </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"cd4Count\"\n                        id=\"cd4Count\"\n                        value={cd4Count.cd4Count}\n                        onChange={handleInputChangeCd4Count}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"Semi-Quantitative\">\n                          Semi-Quantitative\n                        </option>\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>CD4 Count Value</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"cd4SemiQuantitative\"\n                          id=\"cd4SemiQuantitative\"\n                          value={cd4Count.cd4SemiQuantitative}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<200\">{\"<200\"}</option>\n                          <option value=\">=200\">{\">=200\"}</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">CD4 Count Value</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"cd4FlowCyteometry\"\n                          id=\"cd4FlowCyteometry\"\n                          value={cd4Count.cd4FlowCyteometry}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-7\"></div>\n                </>\n              )}\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"syphilisTestResult\"\n                    id=\"syphilisTestResult\"\n                    value={syphills.syphilisTestResult}\n                    onChange={handleInputChangeSyphills}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Reactive</option>\n                    <option value=\"No\">Non-Reactive</option>\n                  </select>\n                  {errors.syphilisTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.syphilisTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis B virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisBTestResult\"\n                    id=\"hepatitisBTestResult\"\n                    value={hepatitis.hepatitisBTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisBTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisBTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis C virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisCTestResult\"\n                    id=\"hepatitisCTestResult\"\n                    value={hepatitis.hepatitisCTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisCTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisCTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\n              </LabelRibbon>\n              <br /> <br />\n              {props.patientObj.riskStratificationResponseDto !== null &&\n                props.patientObj.riskStratificationResponseDto\n                  .communityEntryPoint !== \"\" && (\n                  <>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Longitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"longitude\"\n                          id=\"longitude\"\n                          value={others.longitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Latitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"latitude\"\n                          id=\"latitude\"\n                          value={others.latitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">Adhoc Code</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"adhocCode\"\n                    id=\"adhocCode\"\n                    value={others.adhocCode}\n                    onChange={handleInputChangeOthers}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {patientAge <= 15 ? (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() =>\n                          handleItemClick(\n                            \"pre-test-counsel\",\n                            \"pre-test-counsel\"\n                          )\n                        }\n                      />\n                    </>\n                  )}\n\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default HivTestResult;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["444","445","446","447","448"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst PostTest = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  ///const [errors, setErrors] = useState({});\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    postTestCounselingKnowledgeAssessment: {},\n    personId: patientID,\n  });\n\n  const [postTest, setPostTest] = useState({\n    hivTestResult: \"\",\n    hivTestBefore:\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.lastHivTestDone !== \"Never\" &&\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\n        ?.whatWasTheResult === \"Positive\"\n        ? \"Previously tested positive in HIV care\"\n        : \"\",\n    hivRequestResult: \"\",\n    hivRequestResultCt: \"\",\n    clientReceivedHivTestResult: \"\",\n    postTestCounseling: \"\",\n    riskReduction: \"\",\n    postTestDisclosure: \"\",\n    bringPartnerHivtesting: \"\",\n    childrenHivtesting: \"\",\n    informationFp: \"\",\n    partnerFpThanCondom: \"\",\n    partnerFpUseCondom: \"\",\n    correctCondomUse: \"\",\n    condomProvidedToClient: \"\",\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\n    referredToServices: \"\",\n    condomProvidedToClientCount: \"\",\n    lubricantProvidedToClientCount: \"\",\n  });\n  useEffect(() => {\n    //console.log(props.patientObj)\n    if (\n      props.patientObj &&\n      props.patientObj.postTestCounselingKnowledgeAssessment\n    ) {\n      setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment);\n    } else {\n      ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {})\n      if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult2 !== \"\" &&\n        props.patientObj.hivTestResult2 !== null &&\n        props.patientObj.hivTestResult2 === \"Positive\"\n      ) {\n        postTest.hivTestResult = \"true\";\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult2 !== \"\" &&\n        props.patientObj.hivTestResult2 !== null &&\n        props.patientObj.hivTestResult2 === \"Negative\"\n      ) {\n        postTest.hivTestResult = \"false\";\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult !== \"\" &&\n        props.patientObj.hivTestResult !== null &&\n        props.patientObj.hivTestResult === \"Positive\"\n      ) {\n        postTest.hivTestResult = \"true\";\n        setPostTest({ ...postTest, hivTestResult: \"true\" });\n      } else if (\n        postTest.hivTestResult === \"\" &&\n        props.patientObj.hivTestResult !== \"\" &&\n        props.patientObj.hivTestResult !== null &&\n        props.patientObj.hivTestResult === \"Negative\"\n      ) {\n        postTest.hivTestResult = \"false\";\n        setPostTest({ ...postTest, hivTestResult: \"false\" });\n      }\n    }\n  }, [props.patientObj, postTest.hivTestResult]);\n  const handleInputChangePostTest = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setPostTest({ ...postTest, [e.target.name]: e.target.value });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSaving(true);\n    //handleItemClick('recency-testing', 'post-test')\n    //if(!(Object.values(postTest).every(x => x === \"\"))){\n    objValues.htsClientId = props.patientObj.id;\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\n    objValues.personId = props.patientObj.personResponseDto.id;\n    axios\n      .put(\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\n        objValues,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setSaving(false);\n        props.setPatientObj(response.data);\n        //toast.success(\"Risk Assesment successful\");\n        if (postTest.hivTestResult === \"true\") {\n          handleItemClick(\"recency-testing\", \"post-test\");\n        } else if (postTest.hivTestResult === \"false\") {\n          // history.push(\"/\");\n        }\n      })\n      .catch((error) => {\n        setSaving(false);\n        if (error.response && error.response.data) {\n          let errorMessage =\n            error.response.data.apierror &&\n            error.response.data.apierror.message !== \"\"\n              ? error.response.data.apierror.message\n              : \"Something went wrong, please try again\";\n          toast.error(errorMessage);\n        } else {\n          toast.error(\"Something went wrong. Please try again...\");\n        }\n      });\n    // }else{\n    //     toast.error(\"All post test fields are required\")\n\n    // }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>POST TEST COUNSELING</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n              </LabelRibbon>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestResult\"\n                    id=\"hivTestResult\"\n                    value={postTest.hivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Positive</option>\n                    <option value=\"false\">Negative</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Have you been tested for HIV before within this year?{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivTestBefore\"\n                    id=\"hivTestBefore\"\n                    value={postTest.hivTestBefore}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Not previously tested\">\n                      Not previously tested\n                    </option>\n                    <option value=\"Previously tested negative\">\n                      Previously tested negative\n                    </option>\n                    <option value=\"Previously tested positive in HIV care\">\n                      Previously tested positive in HIV care\n                    </option>\n                    <option value=\"Previously tested positive not in HIV care\">\n                      Previously tested positive not in HIV care\n                    </option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>HIV Request and Result form signed by tester </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResult\"\n                    id=\"hivRequestResult\"\n                    value={postTest.hivRequestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hivRequestResultCt\"\n                    id=\"hivRequestResultCt\"\n                    value={postTest.hivRequestResultCt}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client received HIV test result </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"clientReceivedHivTestResult\"\n                    id=\"clientReceivedHivTestResult\"\n                    value={postTest.clientReceivedHivTestResult}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test counseling done </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestCounseling\"\n                    id=\"postTestCounseling\"\n                    value={postTest.postTestCounseling}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Risk reduction plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"riskReduction\"\n                    id=\"riskReduction\"\n                    value={postTest.riskReduction}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Post test disclosure plan developed </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"postTestDisclosure\"\n                    id=\"postTestDisclosure\"\n                    value={postTest.postTestDisclosure}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Will bring partner(s) for HIV testing </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"bringPartnerHivtesting\"\n                    id=\"bringPartnerHivtesting\"\n                    value={postTest.bringPartnerHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"childrenHivtesting\"\n                    id=\"childrenHivtesting\"\n                    value={postTest.childrenHivtesting}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Provided with information on FP and dual contraception{\" \"}\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"informationFp\"\n                    id=\"informationFp\"\n                    value={postTest.informationFp}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Client/Partner use FP methods (other than condom)\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpThanCondom\"\n                    id=\"partnerFpThanCondom\"\n                    value={postTest.partnerFpThanCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"partnerFpUseCondom\"\n                    id=\"partnerFpUseCondom\"\n                    value={postTest.partnerFpUseCondom}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Correct condom use demonstrated </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"correctCondomUse\"\n                    id=\"correctCondomUse\"\n                    value={postTest.correctCondomUse}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Condoms provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"condomProvidedToClient\"\n                    id=\"condomProvidedToClient\"\n                    value={postTest.condomProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.condomProvidedToClient !== null &&\n                postTest.condomProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many condoms were provided to client </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"condomProvidedToClientCount\"\n                        id=\"condomProvidedToClientCount\"\n                        value={postTest.condomProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Lubricant were provided to client </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lubricantProvidedToClient\"\n                    id=\"lubricantProvidedToClient\"\n                    value={postTest.lubricantProvidedToClient}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              {postTest.lubricantProvidedToClient !== null &&\n                postTest.lubricantProvidedToClient === \"true\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>How many lubricant provided to client </Label>\n                      <Input\n                        type=\"number\"\n                        name=\"lubricantProvidedToClientCount\"\n                        id=\"lubricantProvidedToClientCount\"\n                        value={postTest.lubricantProvidedToClientCount}\n                        onChange={handleInputChangePostTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Client referred to other services </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredToServices\"\n                    id=\"referredToServices\"\n                    value={postTest.referredToServices}\n                    onChange={handleInputChangePostTest}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <Message success>\n                <h4>\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\n                  re-testing after 3 months\n                </h4>\n              </Message>\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\n                  />\n                  {postTest.hivTestResult === \"true\" && (\n                    <Button\n                      content=\"Save & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                  {postTest.hivTestResult === \"false\" && (\n                    <Button\n                      content=\"Save & Finish\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default PostTest;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["449","450","451","452","453","454","455","456","457","458"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n//import PhoneInput from 'react-phone-input-2'\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst BasicInfo = (props) => {\n  const classes = useStyles();\n  //const history = useHistory();\n  const [enrollSetting, setEnrollSetting] = useState([]);\n  const [entryPoint, setEntryPoint] = useState([]);\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\n  let riskCountQuestion = [];\n  const [kP, setKP] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [saving, setSaving] = useState(false);\n  let temp = { ...errors };\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  const [setting, setSetting] = useState([]);\n  const [riskCount, setRiskCount] = useState(0);\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\n  const [objValues, setObjValues] = useState({\n    age: \"\",\n    dob: \"\",\n    code: \"\",\n    visitDate: \"\", //\n    dateOfBirth: null,\n    dateOfRegistration: null,\n    isDateOfBirthEstimated: \"\",\n    targetGroup: \"\",\n    testingSetting: \"\", //\n    modality: \"\", //\n    careProvider: \"\",\n    personId: \"\",\n    id: \"\",\n    riskAssessment: {},\n    entryPoint: \"\",\n    communityEntryPoint: \"\",\n  });\n  const [riskAssessment, setRiskAssessment] = useState({\n    // everHadSexualIntercourse:\"\",\n    // bloodtransInlastThreeMonths:\"\",\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n    // unprotectedVaginalSex:\"\",\n    // uprotectedAnalSex:\"\",\n    // stiLastThreeMonths:\"\",\n    // sexUnderInfluence :\"\",\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\n    // experiencePain:\"\",\n    // haveSexWithoutCondom:\"\",\n    // abuseDrug:\"\",\n    // bloodTransfusion:\"\",\n    // consistentWeightFeverNightCough:\"\",\n    // soldPaidVaginalSex:\"\",\n    //New Question\n    lastHivTestForceToHaveSex: \"\",\n    lastHivTestHadAnal: \"\",\n    lastHivTestInjectedDrugs: \"\",\n    whatWasTheResult: \"\",\n    lastHivTestDone: \"\",\n    diagnosedWithTb: \"\",\n    lastHivTestPainfulUrination: \"\",\n    lastHivTestBloodTransfusion: \"\",\n    lastHivTestVaginalOral: \"\",\n    lastHivTestBasedOnRequest: \"\",\n  });\n  useEffect(() => {\n    KP();\n    TargetGroupSetup();\n    EnrollmentSetting();\n    EntryPoint();\n    HTS_ENTRY_POINT_COMMUNITY();\n    //objValues.dateVisit=moment(new Date()).format(\"YYYY-MM-DD\")\n    if (objValues.age !== \"\") {\n      props.setPatientObjAge(objValues.age);\n    }\n    if (props.patientObj.riskStratificationResponseDto !== null) {\n      setObjValues(props.patientObj.riskStratificationResponseDto);\n      SettingModality(\n        props.patientObj.riskStratificationResponseDto.testingSetting\n      );\n      setRiskAssessment(\n        props.patientObj.riskStratificationResponseDto.riskAssessment\n      );\n    }\n  }, [objValues.age]);\n  //Get list of HIV STATUS ENROLLMENT\n  const EnrollmentSetting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEnrollSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const EntryPoint = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPoint(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPointCommunity(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const TargetGroupSetup = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setTargetGroupValue(response.data);\n\n        props.setOrganizationInfo(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const KP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setKP(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\n      SettingModality(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\n    }\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\n      //SettingModality(e.target.value)\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (\n        e.target.value ===\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\n      ) {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else {\n        setRiskCount(0);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      }\n    }\n\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\n        age_now--;\n      }\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      //   age_now--;\n      // }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n    if (objValues.age !== \"\" && objValues.age <= 15) {\n      props.setHideOtherMenu(true);\n    } else if (objValues.age !== \"\" && objValues.age > 15) {\n      props.setHideOtherMenu(true);\n    } else {\n      props.setHideOtherMenu(true);\n    }\n\n    if (objValues.age !== \"\" && objValues.age >= 85) {\n      toggle();\n    }\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      if (e.target.value !== \"\" && e.target.value >= 85) {\n        toggle();\n      }\n      if (e.target.value !== \"\" && e.target.value <= 15) {\n        props.setHideOtherMenu(false);\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\n        props.setHideOtherMenu(true);\n      } else {\n        props.setHideOtherMenu(true);\n      }\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //Get list of DSD Model Type\n  function SettingModality(settingId) {\n    const setting = settingId;\n    axios\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n  //End of Date of Birth and Age handling\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n\n    temp.visitDate = objValues.visitDate ? \"\" : \"This field is required.\";\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\n    temp.testingSetting = objValues.testingSetting\n      ? \"\"\n      : \"This field is required.\";\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\n    temp.dob = objValues.dob ? \"\" : \"This field is required.\";\n    temp.age = objValues.age ? \"\" : \"This field is required.\";\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\n      ? \"\"\n      : \"This field is required.\";\n\n    objValues.age > 15 &&\n      (temp.targetGroup = objValues.targetGroup\n        ? \"\"\n        : \"This field is required.\");\n    objValues.entryPoint !== \"\" &&\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\n      (temp.communityEntryPoint = objValues.communityEntryPoint\n        ? \"\"\n        : \"This field is required.\");\n\n    //Risk Assement section\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\n        ? \"\"\n        : \"This field is required.\");\n    riskAssessment.lastHivTestDone !== \"\" &&\n      riskAssessment.lastHivTestDone !== \"Never\" &&\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestBloodTransfusion =\n        riskAssessment.lastHivTestBloodTransfusion\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestPainfulUrination =\n        riskAssessment.lastHivTestPainfulUrination\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\n        ? \"\"\n        : \"This field is required.\");\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  // Getting the number count of riskAssessment True\n  const actualRiskCountTrue = Object.values(riskAssessment);\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\n\n  const handleInputChangeRiskAssessment = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.patientObj.riskStratificationResponseDto = objValues;\n    props.patientObj.personResponseDto.dob = objValues.dob;\n    props.patientObj.personResponseDto.dateOfBirth = objValues.dob;\n    props.patientObj.personResponseDto.isDateOfBirthEstimated =\n      objValues.isDateOfBirthEstimated;\n    props.patientObj.targetGroup = objValues.targetGroup;\n    props.patientObj.testingSetting = objValues.testingSetting;\n    props.patientObj.modality = objValues.modality;\n    props.patientObj.dateVisit = objValues.visitDate;\n\n    //props.patientObj.riskAssessment =riskAssessment\n    objValues.riskAssessment = riskAssessment;\n    //Check if riskStratificationResponseDto is null or empty then call the update method\n    if (\n      props.patientObj.riskStratificationResponseDto &&\n      props.patientObj.riskStratificationResponseDto !== null &&\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\n    ) {\n      if (validate()) {\n        setSaving(true);\n        handleItemClick(\"basic\", \"risk\");\n\n        props.setHideOtherMenu(false);\n        axios\n          .put(\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\n            objValues,\n            { headers: { Authorization: `Bearer ${token}` } }\n          )\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.riskStratificationResponseDto = response.data;\n            objValues.code = response.data.code;\n            props.setExtra(objValues);\n            //toast.success(\"Risk stratification save succesfully!\");\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      }\n    } else {\n      //if riskStratificationResponseDto is null then make a new call to save the record\n      if (\n        (riskCount > 0 || riskCountQuestion.length > 0) &&\n        objValues.age > 15\n      ) {\n        if (validate()) {\n          setSaving(true);\n          handleItemClick(\"basic\", \"risk\");\n\n          props.setHideOtherMenu(false);\n          axios\n            .post(`${baseUrl}risk-stratification`, objValues, {\n              headers: { Authorization: `Bearer ${token}` },\n            })\n            .then((response) => {\n              setSaving(false);\n              props.patientObj.riskStratificationResponseDto = response.data;\n              objValues.code = response.data.code;\n              props.setExtra(objValues);\n              //toast.success(\"Risk stratification save succesfully!\");\n            })\n            .catch((error) => {\n              setSaving(false);\n              if (error.response && error.response.data) {\n                let errorMessage =\n                  error.response.data.apierror &&\n                  error.response.data.apierror.message !== \"\"\n                    ? error.response.data.apierror.message\n                    : \"Something went wrong, please try again\";\n                toast.error(errorMessage, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              } else {\n                toast.error(\"Something went wrong. Please try again...\", {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              }\n            });\n        } else {\n          toast.error(\"All fields are required\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        }\n      } else if (objValues.age < 15) {\n        if (validate()) {\n          setSaving(true);\n          axios\n            .post(`${baseUrl}risk-stratification`, objValues, {\n              headers: { Authorization: `Bearer ${token}` },\n            })\n            .then((response) => {\n              setSaving(false);\n              props.patientObj.riskStratificationResponseDto = response.data;\n              objValues.code = response.data.code;\n              props.setExtra(objValues);\n              handleItemClick(\"basic\", \"risk\");\n              //toast.success(\"Risk stratification save succesfully!\");\n            })\n            .catch((error) => {\n              setSaving(false);\n              if (error.response && error.response.data) {\n                let errorMessage =\n                  error.response.data.apierror &&\n                  error.response.data.apierror.message !== \"\"\n                    ? error.response.data.apierror.message\n                    : \"Something went wrong, please try again\";\n                toast.error(errorMessage, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              } else {\n                toast.error(\"Something went wrong. Please try again...\", {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              }\n            });\n        } else {\n          toast.error(\"All fields are required\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        }\n      } else {\n        props.setHideOtherMenu(false);\n        props.setExtra(objValues);\n        if (validate()) {\n          setSaving(true);\n          axios\n            .post(`${baseUrl}risk-stratification`, objValues, {\n              headers: { Authorization: `Bearer ${token}` },\n            })\n            .then((response) => {\n              setSaving(false);\n              props.patientObj.riskStratificationResponseDto = response.data;\n              objValues.code = response.data.code;\n              props.setExtra(objValues);\n              //toast.success(\"Risk stratification save succesfully!\");\n            })\n            .catch((error) => {\n              setSaving(false);\n              if (error.response && error.response.data) {\n                let errorMessage =\n                  error.response.data.apierror &&\n                  error.response.data.apierror.message !== \"\"\n                    ? error.response.data.apierror.message\n                    : \"Something went wrong, please try again\";\n                toast.error(errorMessage, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              } else {\n                toast.error(\"Something went wrong. Please try again...\", {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              }\n            });\n        } else {\n          toast.error(\"All fields are required\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#992E62\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Modality\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"entryPoint\"\n                      id=\"entryPoint\"\n                      value={objValues.entryPoint}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {entryPoint.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.entryPoint !== \"\" ? (\n                      <span className={classes.error}>{errors.entryPoint}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\n                  <div className=\"form-group  col-md-6\">\n                    <FormGroup>\n                      <Label>\n                        Community Entry Point{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"communityEntryPoint\"\n                        id=\"communityEntryPoint\"\n                        value={objValues.communityEntryPoint}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}>Select</option>\n                        {entryPointCommunity.map((value) => (\n                          <option key={value.id} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.communityEntryPoint !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.communityEntryPoint}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n                <div className=\"form-group mb-3 col-md-6\">\n                  <FormGroup>\n                    <Label for=\"\">\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\n                    </Label>\n                    <Input\n                      type=\"date\"\n                      name=\"visitDate\"\n                      id=\"visitDate\"\n                      value={objValues.visitDate}\n                      onChange={handleInputChange}\n                      min=\"1929-12-31\"\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                    />\n                    {errors.visitDate !== \"\" ? (\n                      <span className={classes.error}>{errors.visitDate}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Setting <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"testingSetting\"\n                      id=\"testingSetting\"\n                      value={objValues.testingSetting}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {objValues.communityEntryPoint ===\n                        \"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" &&\n                      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\"\n                        ? enrollSetting.map((value) =>\n                            value.code === \"TEST_SETTING_CPMTCT\" ? (\n                              <option key={value.id} value={value.code}>\n                                {value.display}\n                              </option>\n                            ) : (\n                              <></>\n                            )\n                          )\n                        : enrollSetting.map((value) => (\n                            <option key={value.id} value={value.code}>\n                              {value.display}\n                            </option>\n                          ))}\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\n                                        \n                                        <option value=\"TEST_SETTING_FP\">FP</option>\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\n                    </select>\n                    {errors.testingSetting !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.testingSetting}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Modality <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"modality\"\n                      id=\"modality\"\n                      value={objValues.modality}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {setting.map((value) => (\n                        <option key={value.code} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.modality !== \"\" ? (\n                      <span className={classes.error}>{errors.modality}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              </div>\n              <br />\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Target Group <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"targetGroup\"\n                    id=\"targetGroup\"\n                    onChange={handleInputChange}\n                    value={objValues.targetGroup}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {kP.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.targetGroup !== \"\" ? (\n                    <span className={classes.error}>{errors.targetGroup}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-2 col-md-2\">\n                <FormGroup>\n                  <Label>\n                    Date Of Birth <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <div className=\"radio\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"Actual\"\n                        name=\"dateOfBirth\"\n                        defaultChecked\n                        onChange={(e) => handleDateOfBirthChange(e)}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />{\" \"}\n                      Actual\n                    </label>\n                  </div>\n                  <div className=\"radio\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"Estimated\"\n                        name=\"dateOfBirth\"\n                        onChange={(e) => handleDateOfBirthChange(e)}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />{\" \"}\n                      Estimated\n                    </label>\n                  </div>\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label>\n                    Date <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dob\"\n                    id=\"dob\"\n                    min=\"1929-12-31\"\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    value={objValues.dob}\n                    onChange={handleDobChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                  {errors.dob !== \"\" ? (\n                    <span className={classes.error}>{errors.dob}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label>\n                    Age <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <input\n                    className=\"form-control\"\n                    type=\"number\"\n                    name=\"age\"\n                    id=\"age\"\n                    value={objValues.age}\n                    disabled={ageDisabled}\n                    onChange={handleAgeChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  />\n                  {errors.age !== \"\" ? (\n                    <span className={classes.error}>{errors.age}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-6\">\n                <FormGroup>\n                  <Label>\n                    Is this HIV test based on a Clinician/Doctor/Health Care\n                    Provider's request ?{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"lastHivTestBasedOnRequest\"\n                    id=\"lastHivTestBasedOnRequest\"\n                    value={riskAssessment.lastHivTestBasedOnRequest}\n                    onChange={handleInputChangeRiskAssessment}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}>Select</option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  {errors.lastHivTestBasedOnRequest !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.lastHivTestBasedOnRequest}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <br />\n\n              {objValues.age > 15 &&\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\n                  <>\n                    <div\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                      style={{\n                        backgroundColor: \"#992E62\",\n                        width: \"125%\",\n                        height: \"35px\",\n                        color: \"#fff\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      HIV Risk Assessment (Last 3 months)\n                    </div>\n\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          When was your last HIV test done?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestDone\"\n                          id=\"lastHivTestDone\"\n                          value={riskAssessment.lastHivTestDone}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<1\"> {\"< 1\"} month</option>\n                          <option value=\"1-3 Months\">1-3 Months</option>\n                          <option value=\"4-6 Months\">4-6 Months</option>\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\n                          <option value=\"Never\">Never</option>\n                        </select>\n                        {errors.lastHivTestDone !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestDone}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    {riskAssessment.lastHivTestDone !== \"\" &&\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              What was the result?{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"whatWasTheResult\"\n                              id=\"whatWasTheResult\"\n                              value={riskAssessment.whatWasTheResult}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"Positive\">Positive</option>\n                              <option value=\"Negative\">Negative</option>\n                            </select>\n                            {errors.whatWasTheResult !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.whatWasTheResult}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal or vaginal\n                          or oral sex without a condom with someone who was HIV\n                          positive or unaware of their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestVaginalOral\"\n                          id=\"lastHivTestVaginalOral\"\n                          value={riskAssessment.lastHivTestVaginalOral}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestVaginalOral}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had a blood or\n                          blood product transfusion?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestBloodTransfusion\"\n                          id=\"lastHivTestBloodTransfusion\"\n                          value={riskAssessment.lastHivTestBloodTransfusion}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestBloodTransfusion}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you experienced painful\n                          urination, lower abdominal pain, vaginal or penile\n                          discharge, pain during sexual intercourse, thick,\n                          cloudy, or foul smelling discharge and/or small bumps\n                          or blisters near the mouth, penis, vagina, or anal\n                          areas? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestPainfulUrination\"\n                          id=\"lastHivTestPainfulUrination\"\n                          value={riskAssessment.lastHivTestPainfulUrination}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestPainfulUrination}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you been diagnosed with TB or currently have any\n                          of the following symptoms : cough, fever, weight loss,\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"diagnosedWithTb\"\n                          id=\"diagnosedWithTb\"\n                          value={riskAssessment.diagnosedWithTb}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.diagnosedWithTb !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.diagnosedWithTb}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you ever injected\n                          drugs, shared needles or other sharp objects with\n                          someone known to be HIV positive or who you didn’t\n                          know their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestInjectedDrugs\"\n                          //id=\"sexUnderInfluence\"\n                          value={riskAssessment.lastHivTestInjectedDrugs}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestInjectedDrugs}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal, oral or\n                          vaginal sex in exchange for money or other benefits?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestHadAnal\"\n                          id=\"lastHivTestHadAnal\"\n                          value={riskAssessment.lastHivTestHadAnal}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestHadAnal !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestHadAnal}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you been forced to have\n                          sex? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestForceToHaveSex\"\n                          value={riskAssessment.lastHivTestForceToHaveSex}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestForceToHaveSex}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <br />\n                  </>\n                )}\n              <br />\n              <Message warning>\n                <h4> Risk assessment score </h4>\n                <b>\n                  Score :\n                  {riskCount +\n                    (objValues.age > 15 ? riskCountQuestion.length : 0)}\n                </b>\n              </Message>\n              <hr />\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    type=\"submit\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Are you Sure of the Age entered?</h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n          >\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default BasicInfo;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["500","501"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { useHistory, } from \"react-router-dom\";\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const history = useHistory();\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleDone =()=>{\n      history.push('/');\n    }\n    const handleItemClick =(page, completedMenu)=>{        \n      if(props.completed.includes(completedMenu)) {\n      }else{\n          props.setCompleted([...props.completed, completedMenu])\n      }\n      props.handleItemClick(page)\n  }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js",["502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js",["563","564","565","566","567","568"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n//import SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n//import PhoneInput from 'react-phone-input-2'\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst RiskStratification = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  //console.log(\"active\", props.activePage.activeObject);\n  //console.log(\"con\", props.patientObj);\n  const [enrollSetting, setEnrollSetting] = useState([]);\n  const [entryPoint, setEntryPoint] = useState([]);\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\n  let riskCountQuestion = [];\n  const [kP, setKP] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n  let temp = { ...errors };\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  const [setting, setSetting] = useState([]);\n  const [riskCount, setRiskCount] = useState(0);\n  const [objValues, setObjValues] = useState({\n    age: props.patientAge,\n    dob: props.patientObj.dateOfBirth,\n    visitDate: \"\",\n    dateOfBirth: props.patientObj.dateOfBirth,\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\n    targetGroup: \"\",\n    testingSetting: \"\", //\n    modality: \"\", //\n    code: \"\",\n    id: \"\",\n    personId: props.patientObj.id,\n    riskAssessment: {},\n    entryPoint: \"\",\n    careProvider: \"\",\n    communityEntryPoint: \"\",\n  });\n  const [riskAssessment, setRiskAssessment] = useState({\n    // everHadSexualIntercourse:\"\",\n    // bloodtransInlastThreeMonths:\"\",\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n    // unprotectedVaginalSex:\"\",\n    // uprotectedAnalSex:\"\",\n    // stiLastThreeMonths:\"\",\n    // sexUnderInfluence :\"\",\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\n    // experiencePain:\"\",\n    // haveSexWithoutCondom:\"\",\n    // abuseDrug:\"\",\n    // bloodTransfusion:\"\",\n    // consistentWeightFeverNightCough:\"\",\n    // soldPaidVaginalSex:\"\",\n    //New Question\n    lastHivTestForceToHaveSex: \"\",\n    lastHivTestHadAnal: \"\",\n    lastHivTestInjectedDrugs: \"\",\n    whatWasTheResult: \"\",\n    lastHivTestDone: \"\",\n    diagnosedWithTb: \"\",\n    lastHivTestPainfulUrination: \"\",\n    lastHivTestBloodTransfusion: \"\",\n    lastHivTestVaginalOral: \"\",\n    lastHivTestBasedOnRequest: \"\",\n  });\n  useEffect(() => {\n    KP();\n    EnrollmentSetting();\n    EntryPoint();\n    HTS_ENTRY_POINT_COMMUNITY();\n\n    if (props.activePage.activeObject.riskStratificationResponseDto !== null) {\n      setObjValues(props.activePage.activeObject.riskStratificationResponseDto);\n\n      SettingModality(\n        props.activePage.activeObject.riskStratificationResponseDto\n          .testingSetting\n      );\n\n      setRiskAssessment(\n        props.activePage.activeObject.riskStratificationResponseDto &&\n          props.activePage.activeObject.riskStratificationResponseDto\n            .riskAssessment\n      );\n    }\n  }, [props.patientObj]);\n\n  //Get list of HIV STATUS ENROLLMENT\n  const EnrollmentSetting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEnrollSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const EntryPoint = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPoint(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPointCommunity(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const KP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setKP(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\n      SettingModality(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\n    }\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\n      //SettingModality(e.target.value)\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (\n        e.target.value ===\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\n      ) {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else {\n        setRiskCount(0);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      }\n    }\n\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  //Get list of DSD Model Type\n  function SettingModality(settingId) {\n    const setting = settingId;\n    axios\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSetting(response.data);\n        console.log(\"#################### modality\",response.data)\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n  //End of Date of Birth and Age handling\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\n    temp.testingSetting = objValues.testingSetting\n      ? \"\"\n      : \"This field is required.\";\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\n    props.patientAge > 15 &&\n      (temp.targetGroup = objValues.targetGroup\n        ? \"\"\n        : \"This field is required.\");\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\n      ? \"\"\n      : \"This field is required.\";\n    //Risk Assement section\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\n        ? \"\"\n        : \"This field is required.\");\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\n    objValues.entryPoint !== \"\" &&\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\n      (temp.communityEntryPoint = objValues.communityEntryPoint\n        ? \"\"\n        : \"This field is required.\");\n\n    riskAssessment.lastHivTestDone !== \"\" &&\n      riskAssessment.lastHivTestDone !== \"Never\" &&\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\n        ? \"\"\n        : \"This field is required.\");\n\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestBloodTransfusion =\n        riskAssessment.lastHivTestBloodTransfusion\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestPainfulUrination =\n        riskAssessment.lastHivTestPainfulUrination\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\n        ? \"\"\n        : \"This field is required.\");\n\n    //targetGroup\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  // Getting the number count of riskAssessment True\n  const actualRiskCountTrue = Object.values(riskAssessment);\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\n  const handleInputChangeRiskAssessment = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(riskAssessment)\n    props.patientObj.targetGroup = objValues.targetGroup;\n    props.patientObj.testingSetting = objValues.testingSetting;\n    props.patientObj.dateVisit = objValues.visitDate;\n    props.patientObj.modality = objValues.modality;\n    props.patientObj.riskStratificationResponseDto = objValues;\n    //props.patientObj.riskAssessment =riskAssessment\n\n    objValues.riskAssessment = riskAssessment;\n    if (\n      props.patientObj.riskStratificationResponseDto &&\n      props.patientObj.riskStratificationResponseDto !== null &&\n      props.patientObj.personId !== \"\" &&\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\n    ) {\n      if (validate()) {\n        setSaving(true);\n        handleItemClick(\"basic\", \"risk\");\n\n        props.setHideOtherMenu(false);\n        axios\n          .put(\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\n            objValues,\n            { headers: { Authorization: `Bearer ${token}` } }\n          )\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.riskStratificationResponseDto = response.data;\n            objValues.code = response.data.code;\n            props.setExtra(objValues);\n            //toast.success(\"Risk stratification save succesfully!\");\n          })\n          .catch((error) => {\n            console.log(error);\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      }\n    } else {\n      //console.log(\"post\");\n      if (validate()) {\n        setSaving(true);\n        axios\n          .post(`${baseUrl}risk-stratification`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            objValues.code = response.data.code;\n            props.setExtra(objValues);\n            handleItemClick(\"basic\", \"risk\");\n            props.setHideOtherMenu(false);\n            //toast.success(\"Risk stratification save succesfully!\");\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      } else {\n        toast.error(\"All fields are required\", {\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#992E62\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Modality\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"entryPoint\"\n                      id=\"entryPoint\"\n                      value={objValues.entryPoint}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {entryPoint.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.entryPoint !== \"\" ? (\n                      <span className={classes.error}>{errors.entryPoint}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\n                  <div className=\"form-group  col-md-6\">\n                    <FormGroup>\n                      <Label>\n                        Community Entry Point{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"communityEntryPoint\"\n                        id=\"communityEntryPoint\"\n                        value={objValues.communityEntryPoint}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}>Select</option>\n                        {entryPointCommunity.map((value) => (\n                          <option key={value.id} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.communityEntryPoint !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.communityEntryPoint}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n                <div className=\"form-group mb-3 col-md-6\">\n                  <FormGroup>\n                    <Label for=\"\">\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\n                    </Label>\n                    <Input\n                      type=\"date\"\n                      name=\"visitDate\"\n                      id=\"visitDate\"\n                      value={objValues.visitDate}\n                      onChange={handleInputChange}\n                      min=\"1929-12-31\"\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                      readOnly={props.activePage.actionType === \"view\"}\n                    />\n                    {errors.dateVisit !== \"\" ? (\n                      <span className={classes.error}>{errors.dateVisit}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Setting <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"testingSetting\"\n                      id=\"testingSetting\"\n                      value={objValues.testingSetting}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {\n                        (objValues.communityEntryPoint===\"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" && objValues.entryPoint===\"HTS_ENTRY_POINT_COMMUNITY\")?\n                            enrollSetting.map((value) => (\n                                  (value.code === \"TEST_SETTING_CPMTCT\") ? (\n                                      <option key={value.id} value={value.code}>\n                                        {value.display}\n                                      </option>\n                                  ) : (\n                                      <></>\n\n                                  )\n\n                              ))\n                            :\n                            enrollSetting.map((value) => (\n                                <option key={value.id} value={value.code}>\n                                  {value.display}\n                                </option>\n                            ))\n\n                      }\n\n\n\n\n\n\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\n                                        \n                                        <option value=\"TEST_SETTING_FP\">FP</option>\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\n                    </select>\n                    {errors.testingSetting !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.testingSetting}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Modality <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"modality\"\n                      id=\"modality\"\n                      value={objValues.modality}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {setting.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.modality !== \"\" ? (\n                      <span className={classes.error}>{errors.modality}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Target Group <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"targetGroup\"\n                      id=\"targetGroup\"\n                      onChange={handleInputChange}\n                      value={objValues.targetGroup}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      {kP.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.targetGroup !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.targetGroup}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              </div>\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Is this HIV test based on a Clinician/Doctor/Health Care\n                      Provider's request ?{\" \"}\n                      <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"lastHivTestBasedOnRequest\"\n                      id=\"lastHivTestBasedOnRequest\"\n                      value={riskAssessment.lastHivTestBasedOnRequest}\n                      onChange={handleInputChangeRiskAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}>Select</option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.lastHivTestBasedOnRequest}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              </div>\n              <br />\n\n              {props.patientAge > 15 &&\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\n                  <>\n                    <div\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                      style={{\n                        backgroundColor: \"#992E62\",\n                        width: \"125%\",\n                        height: \"35px\",\n                        color: \"#fff\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      HIV Risk Assessment (Last 3 months)\n                    </div>\n\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          When was your last HIV test done?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestDone\"\n                          id=\"lastHivTestDone\"\n                          value={riskAssessment.lastHivTestDone}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<1\"> {\"< 1\"} month</option>\n                          <option value=\"1-3 Months\">1-3 Months</option>\n                          <option value=\"4-6 Months\">4-6 Months</option>\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\n                          <option value=\"Never\"> Never</option>\n                        </select>\n                        {errors.lastHivTestDone !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestDone}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    {riskAssessment.lastHivTestDone !== \"\" &&\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              What was the result?{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"whatWasTheResult\"\n                              id=\"whatWasTheResult\"\n                              value={riskAssessment.whatWasTheResult}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"Positive\">Positive</option>\n                              <option value=\"Negative\">Negative</option>\n                            </select>\n                            {errors.whatWasTheResult !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.whatWasTheResult}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal or vaginal\n                          or oral sex without a condom with someone who was HIV\n                          positive or unaware of their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestVaginalOral\"\n                          id=\"lastHivTestVaginalOral\"\n                          value={riskAssessment.lastHivTestVaginalOral}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestVaginalOral}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had a blood or\n                          blood product transfusion?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestBloodTransfusion\"\n                          id=\"lastHivTestBloodTransfusion\"\n                          value={riskAssessment.lastHivTestBloodTransfusion}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestBloodTransfusion}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you experienced painful\n                          urination, lower abdominal pain, vaginal or penile\n                          discharge, pain during sexual intercourse, thick,\n                          cloudy, or foul smelling discharge and/or small bumps\n                          or blisters near the mouth, penis, vagina, or anal\n                          areas? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestPainfulUrination\"\n                          id=\"lastHivTestPainfulUrination\"\n                          value={riskAssessment.lastHivTestPainfulUrination}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestPainfulUrination}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you been diagnosed with TB or currently have any\n                          of the following symptoms : cough, fever, weight loss,\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"diagnosedWithTb\"\n                          id=\"diagnosedWithTb\"\n                          value={riskAssessment.diagnosedWithTb}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.diagnosedWithTb !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.diagnosedWithTb}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you ever injected\n                          drugs, shared needles or other sharp objects with\n                          someone known to be HIV positive or who you didn’t\n                          know their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestInjectedDrugs\"\n                          id=\"sexUnderInfluence\"\n                          value={riskAssessment.lastHivTestInjectedDrugs}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestInjectedDrugs}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal, oral or\n                          vaginal sex in exchange for money or other benefits?\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestHadAnal\"\n                          id=\"lastHivTestHadAnal\"\n                          value={riskAssessment.lastHivTestHadAnal}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestHadAnal !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestHadAnal}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you been forced to have\n                          sex? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestForceToHaveSex\"\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\n                          value={riskAssessment.lastHivTestForceToHaveSex}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestForceToHaveSex}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <br />\n                  </>\n                )}\n\n              <br />\n              <Message warning>\n                <h4> Risk assessment score </h4>\n                <b>\n                  Score :\n                  {riskCount +\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\n                </b>\n              </Message>\n              <hr />\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  {props.activePage.actionType === \"update\" && (\n                    <Button\n                      content=\"Update & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                  {props.activePage.actionType === \"view\" && (\n                    <Button\n                      content=\"Next\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n\n                  {/* <Button content='Save ' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/> */}\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Are you Sure of the Age entered?</h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n          >\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default RiskStratification;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js",["569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["625","626","627","628","629","630","631","632"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          // { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["633","634","635","636","637","638","639","640","641","642","643"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value === \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value === \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["644","645","646","647","648","649","650"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js",["651","652","653","654"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { toast } from \"react-toastify\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  let history = useHistory();\n  useEffect(() => {\n    //patients()\n  }, [props.patientObj]);\n\n  const LoadViewPage = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"view\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n\n  const handleHTSDelete = (row) => {\n    console.log(props.patientList);\n    axios\n      .delete(`${baseUrl}hts/${row.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response);\n        toast.success(\n          `HTS patient with client code ${row.clientCode}, deleted successfully`\n        );\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"HTS HISTORY \"\n        columns={[\n          // { title: \"HTS ID\", field: \"id\" },\n          { title: \"Date\", field: \"date\" },\n          { title: \"Pre Test Counseling\", field: \"pre\" },\n          { title: \"Recency Test\", field: \"rencency\" },\n          { title: \"Post Test\", field: \"post\" },\n          // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\n          {\n            title: \"Request & Result\",\n            field: \"requestResult\",\n            filtering: false,\n          },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        isLoading={props.loading}\n        data={props.patientList.map((row) => ({\n          // id: row.id,\n          date: row.dateVisit,\n          pre: row.knowledgeAssessment ? \"Filled\" : \"Not Filled \",\n          requestResult: row.confirmatoryTest ? \"Filled\" : \"Not Filled \",\n          rencency: row.recency ? \"Filled\" : \"Not Filled \",\n          post: row.postTestCounselingKnowledgeAssessment\n            ? \"Filled\"\n            : \"Not Filled \",\n          //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\n\n          actions: (\n            <div>\n              <Menu.Menu position=\"right\">\n                <Menu.Item>\n                  <Button\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                    primary\n                    onClick={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <Dropdown item text=\"Action\">\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"view\")}\n                        >\n                          {\" \"}\n                          <Icon name=\"eye\" />\n                          View\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"update\")}\n                        >\n                          <Icon name=\"edit\" />\n                          Edit\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\n                          <Icon name=\"delete\" />\n                          Delete\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Button>\n                </Menu.Item>\n              </Menu.Menu>\n            </div>\n          ),\n        }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["655","656","657","658","659","660","661","662","663","664"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["665","666","667","668"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label, CardBody, Spinner, Input, Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {useHistory} from \"react-router-dom\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl} from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport {Label as LabelRibbon, Button, Message} from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(1),\n        },\n        \"& .card-title\": {\n            color: \"#fff\",\n            fontWeight: \"bold\",\n        },\n        \"& .form-control\": {\n            borderRadius: \"0.25rem\",\n            height: \"41px\",\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\",\n        },\n        \"& select\": {\n            \"-webkit-appearance\": \"listbox !important\",\n        },\n        \"& p\": {\n            color: \"red\",\n        },\n        \"& label\": {\n            fontSize: \"14px\",\n            color: \"#014d88\",\n            fontWeight: \"bold\",\n        },\n    },\n\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"12.8px\",\n    },\n}));\n\nconst PostTest = (props) => {\n    console.log(\"post\", props);\n    const classes = useStyles();\n    const history = useHistory();\n    const patientID =\n        props.patientObj && props.patientObj.personResponseDto\n            ? props.patientObj.personResponseDto.id\n            : \"\";\n    const clientId =\n        props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const {postTestCounselingKnowledgeAssessment} = props.patientObj;\n\n    ///const [errors, setErrors] = useState({});\n    const [objValues, setObjValues] = useState({\n        htsClientId: clientId,\n        postTestCounselingKnowledgeAssessment: {},\n        personId: patientID,\n    });\n\n    const [postTest, setPostTest] = useState({\n        hivTestResult: \"\",\n        hivTestBefore:\n            props.activePage.activeObject?.riskStratificationResponseDto\n                ?.riskAssessment?.lastHivTestDone !== \"Never\" &&\n            props.activePage.activeObject?.riskStratificationResponseDto\n                ?.riskAssessment?.whatWasTheResult === \"Positive\"\n                ? \"Previously tested positive in HIV care\"\n                : postTestCounselingKnowledgeAssessment?.hivTestBefore,\n        hivRequestResult: postTestCounselingKnowledgeAssessment?.hivRequestResult,\n        hivRequestResultCt:\n        postTestCounselingKnowledgeAssessment?.hivRequestResultCt,\n        clientReceivedHivTestResult:\n        postTestCounselingKnowledgeAssessment?.clientReceivedHivTestResult,\n        postTestCounseling:\n        postTestCounselingKnowledgeAssessment?.postTestCounseling,\n        riskReduction: postTestCounselingKnowledgeAssessment?.riskReduction,\n        postTestDisclosure:\n        postTestCounselingKnowledgeAssessment?.postTestDisclosure,\n        bringPartnerHivtesting:\n        postTestCounselingKnowledgeAssessment?.bringPartnerHivtesting,\n        childrenHivtesting:\n        postTestCounselingKnowledgeAssessment?.childrenHivtesting,\n        informationFp: postTestCounselingKnowledgeAssessment?.informationFp,\n        partnerFpThanCondom:\n        postTestCounselingKnowledgeAssessment?.partnerFpThanCondom,\n        partnerFpUseCondom:\n        postTestCounselingKnowledgeAssessment?.partnerFpUseCondom,\n        correctCondomUse: postTestCounselingKnowledgeAssessment?.correctCondomUse,\n        condomProvidedToClient:\n        postTestCounselingKnowledgeAssessment?.condomProvidedToClient,\n        unprotectedSexRegularPartnerLastThreeMonth:\n        postTestCounselingKnowledgeAssessment?.unprotectedSexRegularPartnerLastThreeMonth,\n        referredToServices:\n        postTestCounselingKnowledgeAssessment?.referredToServices,\n        lubricantProvidedToClient:\n        postTestCounselingKnowledgeAssessment?.lubricantProvidedToClient,\n        condomProvidedToClientCount:\n        postTestCounselingKnowledgeAssessment?.condomProvidedToClientCount,\n        lubricantProvidedToClientCount:\n        postTestCounselingKnowledgeAssessment?.lubricantProvidedToClientCount,\n    });\n    const handleInputChangePostTest = (e) => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setPostTest({...postTest, [e.target.name]: e.target.value});\n    };\n    const handleItemClick = (page, completedMenu) => {\n        props.handleItemClick(page);\n        if (props.completed.includes(completedMenu)) {\n        } else {\n            props.setCompleted([...props.completed, completedMenu]);\n        }\n    };\n    useEffect(() => {\n        //console.log(props.patientObj.postTestCounselingKnowledgeAssessment)\n        setPostTest({\n            ...postTest,\n            ...props.patientObj.postTestCounselingKnowledgeAssessment,\n        });\n\n        if (\n            props.patientObj?.hivTestResult2?.length > 0 &&\n            props.patientObj.hivTestResult2 === \"Positive\"\n        ) {\n            postTest.hivTestResult = \"true\";\n            setPostTest({...postTest, hivTestResult: \"true\"});\n        } else if (\n            props.patientObj?.hivTestResult2?.length > 0 &&\n            props.patientObj.hivTestResult2 === \"Negative\"\n        ) {\n            postTest.hivTestResult = \"false\";\n            setPostTest({...postTest, hivTestResult: \"false\"});\n        } else if (\n            props.patientObj?.hivTestResult?.length > 0 &&\n            props.patientObj.hivTestResult === \"Positive\"\n        ) {\n            postTest.hivTestResult = \"true\";\n            setPostTest({...postTest, hivTestResult: \"true\"});\n        } else if (\n            props.patientObj?.hivTestResult?.length > 0 &&\n            props.patientObj.hivTestResult === \"Negative\"\n        ) {\n            postTest.hivTestResult = \"false\";\n            setPostTest({...postTest, hivTestResult: \"false\"});\n        }\n    }, [props.patientObj]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (props.activePage.actionType === \"view\") {\n            //e.preventDefault();\n            handleItemClick(\"recency-testing\", \"post-test\");\n        }\n        if (props.activePage.actionType === \"update\") {\n            setSaving(true);\n            //e.preventDefault();\n            objValues.htsClientId = clientId;\n            objValues.postTestCounselingKnowledgeAssessment = postTest;\n            objValues.personId = patientID;\n            axios\n                .put(`${baseUrl}hts/${clientId}/post-test-counseling`, objValues, {\n                    headers: {Authorization: `Bearer ${token}`},\n                })\n                .then((response) => {\n                    setSaving(false);\n                    props.setPatientObj(response.data);\n                    //toast.success(\"Risk Assesment successful\");\n                    if (postTest.hivTestResult === \"true\") {\n                        handleItemClick(\"recency-testing\", \"post-test\");\n                    } else if (postTest.hivTestResult === \"false\") {\n                        history.push(\"/\");\n                    }\n                })\n                .catch((error) => {\n                    setSaving(false);\n                    if (error.response && error.response.data) {\n                        let errorMessage =\n                            error.response.data.apierror &&\n                            error.response.data.apierror.message !== \"\"\n                                ? error.response.data.apierror.message\n                                : \"Something went wrong, please try again\";\n                        toast.error(errorMessage);\n                    } else {\n                        toast.error(\"Something went wrong. Please try again...\");\n                    }\n                });\n        }\n    };\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n                    <h2>POST TEST COUNSELING</h2>\n                    <form>\n                        <div className=\"row\">\n                            <LabelRibbon\n                                as=\"a\"\n                                color=\"blue\"\n                                style={{width: \"106%\", height: \"35px\"}}\n                                ribbon\n                            >\n                                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        HIV test result <span style={{color: \"red\"}}> *</span>\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestResult\"\n                                        id=\"hivTestResult\"\n                                        value={postTest.hivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Positive</option>\n                                        <option value=\"false\">Negative</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        Have you been tested for HIV before within this year?{\" \"}\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestBefore\"\n                                        id=\"hivTestBefore\"\n                                        value={postTest.hivTestBefore}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Not previously tested\">\n                                            Not previously tested\n                                        </option>\n                                        <option value=\"Previously tested negative\">\n                                            Previously tested negative\n                                        </option>\n                                        <option value=\"Previously tested positive in HIV care\">\n                                            Previously tested positive in HIV care\n                                        </option>\n                                        <option value=\"Previously tested positive not in HIV care\">\n                                            Previously tested positive not in HIV care\n                                        </option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form signed by tester </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResult\"\n                                        id=\"hivRequestResult\"\n                                        value={postTest.hivRequestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        HIV Request and Result form filled with CT Intake Form{\" \"}\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCt\"\n                                        id=\"hivRequestResultCt\"\n                                        value={postTest.hivRequestResultCt}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client received HIV test result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientReceivedHivTestResult\"\n                                        id=\"clientReceivedHivTestResult\"\n                                        value={postTest.clientReceivedHivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test counseling done </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestCounseling\"\n                                        id=\"postTestCounseling\"\n                                        value={postTest.postTestCounseling}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Risk reduction plan developed </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"riskReduction\"\n                                        id=\"riskReduction\"\n                                        value={postTest.riskReduction}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test disclosure plan developed </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestDisclosure\"\n                                        id=\"postTestDisclosure\"\n                                        value={postTest.postTestDisclosure}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Will bring partner(s) for HIV testing </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bringPartnerHivtesting\"\n                                        id=\"bringPartnerHivtesting\"\n                                        value={postTest.bringPartnerHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        Will bring own children {\"<5\"} years for HIV testing{\" \"}\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"childrenHivtesting\"\n                                        id=\"childrenHivtesting\"\n                                        value={postTest.childrenHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        Provided with information on FP and dual contraception{\" \"}\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informationFp\"\n                                        id=\"informationFp\"\n                                        value={postTest.informationFp}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>\n                                        Client/Partner use FP methods (other than condom)\n                                    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpThanCondom\"\n                                        id=\"partnerFpThanCondom\"\n                                        value={postTest.partnerFpThanCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpUseCondom\"\n                                        id=\"partnerFpUseCondom\"\n                                        value={postTest.partnerFpUseCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Correct condom use demonstrated </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"correctCondomUse\"\n                                        id=\"correctCondomUse\"\n                                        value={postTest.correctCondomUse}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Condoms provided to client </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"condomProvidedToClient\"\n                                        id=\"condomProvidedToClient\"\n                                        value={postTest.condomProvidedToClient}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            {postTest.condomProvidedToClient !== null &&\n                                postTest.condomProvidedToClient === \"true\" && (\n                                    <div className=\"form-group  col-md-4\">\n                                        <FormGroup>\n                                            <Label>How many condoms were provided to client </Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"condomProvidedToClientCount\"\n                                                id=\"condomProvidedToClientCount\"\n                                                value={postTest.condomProvidedToClientCount}\n                                                onChange={handleInputChangePostTest}\n                                                style={{\n                                                    border: \"1px solid #014D88\",\n                                                    borderRadius: \"0.25rem\",\n                                                }}\n                                                readOnly={props.activePage.actionType === \"view\"}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                )}\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lubricant were provided to client </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lubricantProvidedToClient\"\n                                        id=\"lubricantProvidedToClient\"\n                                        value={postTest.lubricantProvidedToClient}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            {postTest.lubricantProvidedToClient !== null &&\n                                postTest.lubricantProvidedToClient === \"true\" && (\n                                    <div className=\"form-group  col-md-4\">\n                                        <FormGroup>\n                                            <Label>How many lubricant provided to client </Label>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"lubricantProvidedToClientCount\"\n                                                id=\"lubricantProvidedToClientCount\"\n                                                value={postTest.lubricantProvidedToClientCount}\n                                                onChange={handleInputChangePostTest}\n                                                style={{\n                                                    border: \"1px solid #014D88\",\n                                                    borderRadius: \"0.25rem\",\n                                                }}\n                                                readOnly={props.activePage.actionType === \"view\"}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                )}\n\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client referred to other services </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"referredToServices\"\n                                        id=\"referredToServices\"\n                                        value={postTest.referredToServices}\n                                        onChange={handleInputChangePostTest}\n                                        style={{\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0.2rem\",\n                                        }}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </FormGroup>\n                            </div>\n                            <Message success>\n                                <h4>\n                                    If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\n                                    {\">0\"} or there is evidence for a STI syndrome, recommend\n                                    re-testing after 3 months\n                                </h4>\n                            </Message>\n\n                            {saving ? <Spinner/> : \"\"}\n                            <br/>\n                            <div className=\"row\">\n                                <div className=\"form-group mb-3 col-md-12\">\n                                    <Button\n                                        content=\"Back\"\n                                        icon=\"left arrow\"\n                                        labelPosition=\"left\"\n                                        style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\n                                        onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\n                                    />\n\n                                    {props.activePage.actionType === \"update\" && (\n                                        <Button\n                                            content=\"Update & Continue\"\n                                            icon=\"right arrow\"\n                                            labelPosition=\"right\"\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\n                                            onClick={handleSubmit}\n                                            disabled={saving}\n                                        />\n                                    )}\n                                    {props.activePage.actionType === \"view\" && (\n                                        <Button\n                                            content=\"Next\"\n                                            icon=\"right arrow\"\n                                            labelPosition=\"right\"\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\n                                            onClick={handleSubmit}\n                                            disabled={saving}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default PostTest;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["669","670","671","672"],"import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast } from \"react-toastify\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst HivTestResult = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  let temp = { ...errors };\n  //console.log(\"data3\", props.patientObj);\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [showCD4Count, setShowCD4Count] = useState(true);\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now;\n  };\n  const patientAge = calculate_age(\n    moment(\n      props.patientObj.personResponseDto &&\n        props.patientObj.personResponseDto.dateOfBirth\n        ? props.patientObj.personResponseDto.dateOfBirth\n        : 0\n    ).format(\"DD-MM-YYYY\")\n  );\n\n  const [objValues, setObjValues] = useState({\n    confirmatoryTest: {},\n    confirmatoryTest2: {},\n    hivTestResult: \"\",\n    hivTestResult2: \"\",\n    htsClientId: \"\",\n    personId: props.patientObj ? props.patientObj.id : \"\",\n    test1: {},\n    test2: {},\n    tieBreakerTest: {},\n    tieBreakerTest2: {},\n    syphilisTesting: {},\n    hepatitisTesting: {},\n    others: {},\n    cd4: {},\n    prepOffered: \"\",\n    prepAccepted: \"\",\n  });\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  const [initialTest1, setInitailTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [initialTest12, setInitailTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeCd4Count = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\n  };\n  const [cd4Count, setCd4Count] = useState({\n    cd4Count: \"\",\n    cd4SemiQuantitative: \"\",\n    cd4FlowCyteometry: \"\",\n  });\n  const handleInputChangeInitial = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setConfirmatoryTest({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeInitial2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      setConfirmatoryTest2({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest2({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeConfirmatory = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest({\n      ...confirmatoryTest,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeConfirmatory2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest2({\n      ...confirmatoryTest2,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [tieBreakerTest, setTieBreakerTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeTie = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeTie2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [syphills, setSyphills] = useState({\n    syphilisTestResult: \"\",\n    // result  :\"\",\n  });\n  const handleInputChangeSyphills = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\n  };\n  const [hepatitis, setHepatitis] = useState({\n    hepatitisCTestResult: \"\",\n    hepatitisBTestResult: \"\",\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  const handleInputChangeHepatitis = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\n  };\n  const [others, setOthers] = useState({\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  useEffect(() => {\n    //console.log(props.patientObj)\n    if (props.patientObj) {\n      setCd4Count(\n        props.patientObj && props.patientObj.cd4 !== null\n          ? props.patientObj.cd4\n          : {}\n      );\n      setInitailTest(\n        props.patientObj && props.patientObj.test1 !== null\n          ? props.patientObj.test1\n          : {}\n      );\n      setConfirmatoryTest(\n        props.patientObj && props.patientObj.confirmatoryTest !== null\n          ? props.patientObj.confirmatoryTest\n          : {}\n      );\n      setTieBreakerTest(\n        props.patientObj && props.patientObj.tieBreakerTest !== null\n          ? props.patientObj.tieBreakerTest\n          : {}\n      );\n      setSyphills(\n        props.patientObj && props.patientObj.syphilisTesting !== null\n          ? props.patientObj.syphilisTesting\n          : {}\n      );\n      setHepatitis(\n        props.patientObj && props.patientObj.hepatitisTesting !== null\n          ? props.patientObj.hepatitisTesting\n          : {}\n      );\n      setOthers(\n        props.patientObj && props.patientObj.others !== null\n          ? props.patientObj.others\n          : {}\n      );\n\n      setInitailTest2(\n        props.patientObj && props.patientObj.test2 !== null\n          ? props.patientObj.test2\n          : {}\n      );\n      setConfirmatoryTest2(\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\n          ? props.patientObj.confirmatoryTest2\n          : {}\n      );\n      setTieBreakerTest2(\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\n          ? props.patientObj.tieBreakerTest2\n          : {}\n      );\n      //Logic for cd4 count section to show\n      if (\n        props.patientObj.hivTestResult !== null &&\n        props.patientObj.hivTestResult !== \"\" &&\n        props.patientObj.hivTestResult === \"Positive\"\n      ) {\n        setShowCD4Count(true);\n      } else {\n        setShowCD4Count(false);\n      }\n      if (\n        props.patientObj.hivTestResult2 !== null &&\n        props.patientObj.hivTestResult2 !== \"\" &&\n        props.patientObj.hivTestResult2 === \"Positive\"\n      ) {\n        setShowCD4Count(true);\n      } else {\n        setShowCD4Count(false);\n      }\n    }\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\n\n  const handleInputChangeOthers = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setOthers({ ...others, [e.target.name]: e.target.value });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    initialTest1.date !== \"\" &&\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\n\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      (temp.prepOffered = objValues.prepOffered\n        ? \"\"\n        : \"The Prep Offered field is required.\");\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      objValues.prepOffered === \"true\" &&\n      (temp.prepAccepted = objValues.prepAccepted\n        ? \"\"\n        : \"The Prep Accepted field is required.\");\n    // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\n    // temp.syphilisTestResult = syphills.syphilisTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\n    //   ? \"\"\n    //   : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(errors);\n    if (validate()) {\n      //logic to get Hiv result test\n      setSaving(true);\n      if (initialTest12.result2 === \"No\") {\n        objValues.hivTestResult2 = \"Negative\";\n      } else if (\n        initialTest12.result2 === \"Yes\" &&\n        confirmatoryTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      }\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n      //     objValues.hivTestResult2=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      } else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"No\"\n      ) {\n        objValues.hivTestResult2 = \"Negative\";\n      } else {\n        objValues.hivTestResult2 = \"\";\n      }\n\n      if (initialTest1.result === \"No\") {\n        objValues.hivTestResult = \"Negative\";\n      } else if (\n        initialTest1.result === \"Yes\" &&\n        confirmatoryTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      }\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n      //     objValues.hivTestResult=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      } else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"No\"\n      ) {\n        objValues.hivTestResult = \"Negative\";\n      } else {\n        objValues.hivTestResult = \"\";\n      }\n      if (props.activePage.actionType === \"view\") {\n        //e.preventDefault();\n        handleItemClick(\"post-test\", \"hiv-test\");\n      }\n      if (props.activePage.actionType === \"update\") {\n        objValues.htsClientId = clientId;\n        objValues.confirmatoryTest = confirmatoryTest;\n        objValues.confirmatoryTest2 = confirmatoryTest2;\n        objValues.personId = patientID;\n        objValues.test1 = initialTest1;\n        objValues.test2 = initialTest12;\n        objValues.tieBreakerTest = tieBreakerTest;\n        objValues.tieBreakerTest2 = tieBreakerTest2;\n        objValues.syphilisTesting = syphills;\n        objValues.hepatitisTesting = hepatitis;\n\n        objValues.cd4 = cd4Count;\n        objValues.others = others;\n\n        //console.log(clientId, objValues)\n        axios\n          .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            props.setPatientObj(response.data);\n            console.log(\"saved\", response.data);\n            //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\n            //toast.success(\"HIV test successful\");\n            handleItemClick(\"post-test\", \"hiv-test\");\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            } else {\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\n              </LabelRibbon>\n              <br />\n              <div className=\"form-group  col-md-2\"></div>\n              <h4>Initial Test :</h4>\n              <div className=\"form-group mb-3 col-md-5\">\n                <FormGroup>\n                  <Label for=\"\"> Date </Label>\n                  <Input\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    value={initialTest1.date}\n                    onChange={handleInputChangeInitial}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    required\n                    disabled={props.activePage.actionType === \"view\"}\n                  />\n                  {errors.date !== \"\" ? (\n                    <span className={classes.error}>{errors.date}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {initialTest1.date && (\n                <div className=\"form-group  col-md-5\">\n                  <FormGroup>\n                    <Label>Result </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"result\"\n                      id=\"result\"\n                      value={initialTest1.result}\n                      onChange={handleInputChangeInitial}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      //disabled={initialTest1.date === \"\" ? true : false}\n                      disabled={props.activePage.actionType === \"view\"}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"Yes\">Reactive</option>\n                      <option value=\"No\">Non Reactive</option>\n                    </select>\n                    {errors.result !== \"\" ? (\n                      <span className={classes.error}>{errors.result}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n              <div className=\"form-group  col-md-2\"></div>\n              {initialTest1.result === \"Yes\" && (\n                <>\n                  <h4>Confirmatory Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={confirmatoryTest.date}\n                        onChange={handleInputChangeConfirmatory}\n                        min={initialTest1.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                      {errors.dateOfEac1 !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.dateOfEac1}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  {confirmatoryTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={confirmatoryTest.result}\n                          onChange={handleInputChangeConfirmatory}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              {confirmatoryTest.result === \"No\" && (\n                <>\n                  <h4>Tie Breaker Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={tieBreakerTest.date}\n                        onChange={handleInputChangeTie}\n                        min={confirmatoryTest.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                  {tieBreakerTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={tieBreakerTest.result}\n                          onChange={handleInputChangeTie}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          //disabled={tieBreakerTest.date === \"\" ? true : false}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              <div className=\"row\">\n                <div className=\"form-group  col-md-12\">\n                  {initialTest1.result === \"No\" && (\n                    <>\n                      <b> Result : </b>\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                    </>\n                  )}\n                  {initialTest1.result === \"No\" &&\n                    confirmatoryTest.result === \"No\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest1.result === \"Yes\" &&\n                    confirmatoryTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n                        <div className=\"row\">\n                          <h4>RETESTING:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={confirmatoryTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                                readOnly={\n                                  props.activePage.actionType === \"view\"\n                                }\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                // disabled={\n                                //   initialTest12.date2 === \"\" ? true : false\n                                // }\n                                disabled={\n                                  props.activePage.actionType === \"view\"\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                    readOnly={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    // disabled={\n                                    //   confirmatoryTest2.date2 === \"\"\n                                    //     ? true\n                                    //     : false\n                                    // }\n                                    disabled={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                    readOnly={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      tieBreakerTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {/* This is result for Test 1 */}\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n\n                        <div className=\"row\">\n                          <h4>Retesting:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={tieBreakerTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  initialTest12.date2 === \"\" ? true : false\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                    readOnly={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    // disabled={\n                                    //   confirmatoryTest2.date2 === \"\"\n                                    //     ? true\n                                    //     : false\n                                    // }\n                                    disabled={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                    readOnly={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    // disabled={\n                                    //   tieBreakerTest2.date2 === \"\"\n                                    //     ? true\n                                    //     : false\n                                    // }\n                                    disabled={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {errors.prepOffered !== \"\" ? (\n                    <span className={classes.error}>{errors.prepOffered}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {errors.prepAccepted !== \"\" ? (\n                    <span className={classes.error}>{errors.prepAccepted}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"No\" &&\n                    (initialTest1.result === \"Yes\" ||\n                      initialTest1.result !== \"\") && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                        <br />\n                        <div className=\"row\">\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Offered{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepOffered\"\n                                id=\"prepOffered\"\n                                value={objValues.prepOffered}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  props.activePage.actionType === \"view\"\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                          {objValues.prepOffered !== \"\" &&\n                            objValues.prepOffered === \"true\" && (\n                              <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                  <Label>\n                                    Prep Accepted{\" \"}\n                                    <span style={{ color: \"red\" }}> *</span>\n                                  </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"prepAccepted\"\n                                    id=\"prepAccepted\"\n                                    value={objValues.prepAccepted}\n                                    onChange={handleInputChange}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      props.activePage.actionType === \"view\"\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"true\">Yes</option>\n                                    <option value=\"false\">No</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                            )}\n                        </div>\n                      </>\n                    )}\n                  {/* END of  result for Test 1 */}\n                  {/* This is result for Test 2 */}\n                  {initialTest12.result2 === \"No\" && (\n                    <>\n                      <b> Final Result : </b>\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      <br />\n                      <br />\n                      <div className=\"row\">\n                        <div className=\"form-group  col-md-5\">\n                          <FormGroup>\n                            <Label>\n                              Prep Offered{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepOffered\"\n                              id=\"prepOffered\"\n                              value={objValues.prepOffered}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                        {objValues.prepOffered !== \"\" &&\n                          objValues.prepOffered === \"true\" && (\n                            <div className=\"form-group  col-md-5\">\n                              <FormGroup>\n                                <Label>\n                                  Prep Accepted{\" \"}\n                                  <span style={{ color: \"red\" }}> *</span>\n                                </Label>\n                                <select\n                                  className=\"form-control\"\n                                  name=\"prepAccepted\"\n                                  id=\"prepAccepted\"\n                                  value={objValues.prepAccepted}\n                                  onChange={handleInputChange}\n                                  style={{\n                                    border: \"1px solid #014D88\",\n                                    borderRadius: \"0.2rem\",\n                                  }}\n                                  disabled={\n                                    props.activePage.actionType === \"view\"\n                                  }\n                                >\n                                  <option value={\"\"}></option>\n                                  <option value=\"true\">Yes</option>\n                                  <option value=\"false\">No</option>\n                                </select>\n                              </FormGroup>\n                            </div>\n                          )}\n                      </div>\n                    </>\n                  )}\n                  {initialTest12.result2 === \"No\" &&\n                    confirmatoryTest2.result2 === \"No\" && (\n                      <>\n                        <b> FinalnResult : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest12.result2 === \"Yes\" &&\n                    confirmatoryTest2.result2 === \"Yes\" && (\n                      <>\n                        <b> Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                        <br />\n                      </>\n                    )}\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"Yes\" && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                      </>\n                    )}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"No\" &&\n                    (initialTest12.result2 === \"Yes\" ||\n                      initialTest12.result2 === \"Yes\" ||\n                      initialTest12.result2 === \"\") && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {/* END of  result for Test 2*/}\n                </div>\n              </div>\n              {initialTest1.result === \"No\" && (\n                <>\n                  <div className=\"row\">\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"prepOffered\"\n                          id=\"prepOffered\"\n                          value={objValues.prepOffered}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                    {objValues.prepOffered !== \"\" &&\n                      objValues.prepOffered === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Prep Accepted{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepAccepted\"\n                              id=\"prepAccepted\"\n                              value={objValues.prepAccepted}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                              disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                      )}\n                  </div>\n                </>\n              )}\n              {confirmatoryTest2.result2 === \"No\" &&\n                tieBreakerTest2.result2 === \"No\" && (\n                  <>\n                    <div className=\"row\">\n                      <div className=\"form-group  col-md-6\">\n                        <FormGroup>\n                          <Label>\n                            Prep Offered{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"prepOffered\"\n                            id=\"prepOffered\"\n                            value={objValues.prepOffered}\n                            onChange={handleInputChange}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                            disabled={props.activePage.actionType === \"view\"}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                        </FormGroup>\n                      </div>\n                      {objValues.prepOffered !== \"\" &&\n                        objValues.prepOffered === \"true\" && (\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Accepted{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepAccepted\"\n                                id=\"prepAccepted\"\n                                value={objValues.prepAccepted}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                        )}\n                    </div>\n                  </>\n                )}\n              {showCD4Count && (\n                <>\n                  <LabelRibbon\n                    as=\"a\"\n                    color=\"blue\"\n                    style={{ width: \"106%\", height: \"35px\" }}\n                    ribbon\n                  >\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\n                  </LabelRibbon>\n                  <br /> <br />\n                  <div className=\"form-group  col-md-5\">\n                    <FormGroup>\n                      <Label>CD4 Count </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"cd4Count\"\n                        id=\"cd4Count\"\n                        value={cd4Count.cd4Count}\n                        onChange={handleInputChangeCd4Count}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"Semi-Quantitative\">\n                          Semi-Quantitative\n                        </option>\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>CD4 Count Value</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"cd4SemiQuantitative\"\n                          id=\"cd4SemiQuantitative\"\n                          value={cd4Count.cd4SemiQuantitative}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<200\">{\"<200\"}</option>\n                          <option value=\">=200\">{\">=200\"}</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">CD4 Count Value</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"cd4FlowCyteometry\"\n                          id=\"cd4FlowCyteometry\"\n                          value={cd4Count.cd4FlowCyteometry}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        />\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-7\"></div>\n                </>\n              )}\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"syphilisTestResult\"\n                    id=\"syphilisTestResult\"\n                    value={syphills.syphilisTestResult}\n                    onChange={handleInputChangeSyphills}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Reactive</option>\n                    <option value=\"No\">Non-Reactive</option>\n                  </select>\n                  {errors.syphilisTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.syphilisTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis B virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisBTestResult\"\n                    id=\"hepatitisBTestResult\"\n                    value={hepatitis.hepatitisBTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisBTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisBTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis C virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisCTestResult\"\n                    id=\"hepatitisCTestResult\"\n                    value={hepatitis.hepatitisCTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisCTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisCTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\n              </LabelRibbon>\n              <br /> <br />\n              {props.patientObj.riskStratificationResponseDto !== null &&\n                props.patientObj.riskStratificationResponseDto\n                  .communityEntryPoint !== \"\" && (\n                  <>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Longitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"longitude\"\n                          id=\"longitude\"\n                          value={others.longitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          readOnly={props.activePage.actionType === \"view\"}\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Latitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"latitude\"\n                          id=\"latitude\"\n                          value={others.latitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          readOnly={props.activePage.actionType === \"view\"}\n                        />\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">Adhoc Code</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"adhocCode\"\n                    id=\"adhocCode\"\n                    value={others.adhocCode}\n                    onChange={handleInputChangeOthers}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    readOnly={props.activePage.actionType === \"view\"}\n                  />\n                </FormGroup>\n              </div>\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {patientAge <= 15 ? (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() =>\n                          handleItemClick(\n                            \"pre-test-counsel\",\n                            \"pre-test-counsel\"\n                          )\n                        }\n                      />\n                    </>\n                  )}\n                  {props.activePage.actionType === \"update\" && (\n                    <Button\n                      content=\"Update & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                  {props.activePage.actionType === \"view\" && (\n                    <Button\n                      content=\"Next\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default HivTestResult;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { token, url as baseUrl } from \"../../../../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst Recency = (props) => {\n  console.log(\"data1\", props.patientObj);\n  const classes = useStyles();\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  let temp = { ...errors };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n\n  const [objValues, setObjValues] = useState({\n    htsClientId: clientId,\n    recency: {},\n    personId: patientID,\n  });\n  const [recency, setRecency] = useState({\n    optOutRTRI:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.optOutRTRI\n        : \"\",\n    optOutRTRITestName:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.optOutRTRITestName\n        : \"\",\n    optOutRTRITestDate:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.optOutRTRITestDate\n        : \"\",\n    rencencyId:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.rencencyId\n        : \"\",\n    controlLine:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.controlLine\n        : \"\",\n    verififcationLine:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.verififcationLine\n        : \"\",\n    longTermLine:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.longTermLine\n        : \"\",\n    rencencyInterpretation:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.rencencyInterpretation\n        : \"\",\n    hasViralLoad:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.hasViralLoad\n        : \"\",\n    sampleCollectedDate:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.sampleCollectedDate\n        : \"\",\n    sampleReferanceNumber:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.sampleReferanceNumber\n        : \"\",\n    dateSampleSentToPCRLab:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.dateSampleSentToPCRLab\n        : \"\",\n    sampleTestDate:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.sampleTestDate\n        : \"\",\n    sampleType:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.sampleType\n        : \"\",\n    receivingPcrLab:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.receivingPcrLab\n        : \"\",\n    viralLoadResultClassification:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.viralLoadResultClassification\n        : \"\",\n    recencyResult:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.recencyResult\n        : \"\",\n    finalRecencyResult:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.finalRecencyResult\n        : \"\",\n    viralLoadConfirmationResult:\n      props.patientObj && props.patientObj.recency !== null\n        ? props.patientObj.recency.viralLoadConfirmationResult\n        : \"\",\n    receivedResultDate:\n        props.patientObj && props.patientObj.recency !==null\n      ? props.patientObj.recency.receivedResultDate\n          :\"\"\n  });\n\n  useEffect(() => {\n    if (props.patientObj && props.patientObj.recency !== null) {\n      console.log(props.patientObj.recency);\n      setRecency(props.patientObj.recency);\n      if (\n        props.patientObj.confirmatoryTest &&\n        props.patientObj.confirmatoryTest.date !== \"\"\n      ) {\n        setHivTestDate(props.patientObj.confirmatoryTest.date);\n      } else if (\n        props.patientObj.confirmatoryTest2 &&\n        props.patientObj.confirmatoryTest2.date2 !== \"\"\n      ) {\n        setHivTestDate(props.patientObj.confirmatoryTest2.date2);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n    if (\n      recency.longTermLine === \"true\" &&\n      recency.verififcationLine === \"true\" &&\n      recency.controlLine === \"true\"\n    ) {\n      recency.rencencyInterpretation = \"RTRI Long Term\";\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Long Term\" });\n    } else if (\n      recency.longTermLine === \"false\" &&\n      recency.verififcationLine === \"true\" &&\n      recency.controlLine === \"true\"\n    ) {\n      recency.rencencyInterpretation = \"RTRI Recent\";\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Recent\" });\n      //setRecency ({...recency,  ['hasViralLoad']: 'true'});\n    } else if (\n      recency.longTermLine === \"false\" &&\n      recency.verififcationLine === \"false\" &&\n      recency.controlLine === \"true\"\n    ) {\n      recency.rencencyInterpretation = \"Negative\";\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Negative\" });\n    } else if (\n      recency.longTermLine === \"true\" &&\n      recency.verififcationLine === \"true\" &&\n      recency.controlLine === \"false\"\n    ) {\n      recency.rencencyInterpretation = \"Invalid\";\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\n    } else if (\n      recency.longTermLine === \"true\" &&\n      recency.verififcationLine === \"false\" &&\n      recency.controlLine === \"true\"\n    ) {\n      recency.rencencyInterpretation = \"Invalid\";\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\n    } else {\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"\" });\n    }\n    if (recency.optOutRTRI === \"true\") {\n      setRecency({\n        optOutRTRI:\n          props.patientObj && props.patientObj.recency !== null\n            ? props.patientObj.recency.optOutRTRI\n            : \"\",\n        optOutRTRITestName: \"\",\n        optOutRTRITestDate: \"\",\n        rencencyId: \"\",\n        controlLine: \"\",\n        verififcationLine: \"\",\n        longTermLine: \"\",\n        rencencyInterpretation: \"\",\n        hasViralLoad: \"\",\n        sampleCollectedDate: \"\",\n        sampleReferanceNumber: \"\",\n        dateSampleSentToPCRLab: \"\",\n        sampleTestDate: \"\",\n        sampleType: \"\",\n        receivingPcrLab: \"\",\n        viralLoadResultClassification: \"\",\n\n        recencyResult: \"\",\n        finalRecencyResult: \"\",\n        viralLoadConfirmationResult: \"\",\n        receivedResultDate:\"\",\n      });\n    }\n  }, [\n    recency.longTermLine,\n    recency.verififcationLine,\n    recency.controlLine,\n    props.patientObj,\n  ]);\n  //console.log(props.patientObj)\n  const handleInputChangeRecency = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"viralLoadConfirmationResult\") {\n      if (e.target.value >= 1000) {\n        recency.viralLoadResultClassification = \">=1000\";\n        recency.finalRecencyResult = \"RITA Recent\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      }else if (e.target.value < 1000) {\n        recency.viralLoadResultClassification = \"<1000\";\n        recency.finalRecencyResult = \"RITA Long term\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      }\n    }\n    if (e.target.name === \"viralLoadResultClassification\") {\n      if (e.target.value === \">=1000\") {\n        recency.finalRecencyResult = \"RITA Recent\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"<1000\") {\n        recency.finalRecencyResult = \"RITA Long term\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"Failed run\") {\n        recency.finalRecencyResult = \"RITA Inconclusive\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"Invalid viral load result\") {\n        recency.finalRecencyResult = \"RITA Inconclusive\";\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      } else {\n        setRecency({ ...recency, [e.target.name]: e.target.value });\n      }\n    } else if (e.target.name === \"rencencyId\" && e.target.value !== \"\") {\n      const recencyIdNumberValue = checkRecencyLimit(e.target.value);\n      setRecency({ ...recency, [e.target.name]: recencyIdNumberValue });\n    }\n    else if(e.target.name=== \"receivedResultDate\"){\n      setRecency({...recency, [e.target.name]: e.target.value});\n    }\n    else {\n      setRecency({ ...recency, [e.target.name]: e.target.value });\n    }\n  };\n  const checkRecencyLimit = (e) => {\n    const limit = 10;\n    const acceptedNumber = e.slice(0, limit);\n    return acceptedNumber;\n  };\n\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n    {\n      recency.hasViralLoad == \"true\" &&\n        (temp.sampleReferanceNumber = recency.sampleReferanceNumber\n          ? \"\"\n          : \"This field is required.\");\n    }\n    // {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\n    {\n      recency.hasViralLoad == \"true\" &&\n        (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\");\n    }\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    objValues.htsClientId = clientId;\n    objValues.recency = recency;\n    objValues.personId = patientID;\n    //console.log(recency)\n    if (validate()) {\n      setSaving(true);\n      axios\n        .put(`${baseUrl}hts/${clientId}/recency`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);\n          //toast.success(\"Risk Assesment successful\");\n          handleItemClick(\"indexing\", \"recency-testing\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2>RECENCY FORM</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>RECENCY</h5>\n              </LabelRibbon>\n              <br />\n              <br />\n              <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Opt Out of RTRI? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"optOutRTRI\"\n                    id=\"optOutRTRI\"\n                    value={recency.optOutRTRI}\n                    onChange={handleInputChangeRecency}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-8\"></div>\n              {recency.optOutRTRI === \"false\" && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Test Name <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"optOutRTRITestName\"\n                        id=\"optOutRTRITestName\"\n                        value={recency.optOutRTRITestName}\n                        onChange={handleInputChangeRecency}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"Asante\">Asante</option>\n                        <option value=\"Others\">Others</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Test Date <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"optOutRTRITestDate\"\n                        id=\"optOutRTRITestDate\"\n                        value={recency.optOutRTRITestDate}\n                        onChange={handleInputChangeRecency}\n                        min={\n                          hivTestDate !== \"\" && hivTestDate !== null\n                            ? hivTestDate\n                            : \"\"\n                        }\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Recency ID <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        className=\"form-control\"\n                        name=\"rencencyId\"\n                        id=\"rencencyId\"\n                        type=\"text\"\n                        value={recency.rencencyId}\n                        onChange={handleInputChangeRecency}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Control Line <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"controlLine\"\n                        id=\"controlLine\"\n                        value={recency.controlLine}\n                        onChange={handleInputChangeRecency}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Verification Line{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"verififcationLine\"\n                        id=\"verififcationLine\"\n                        value={recency.verififcationLine}\n                        onChange={handleInputChangeRecency}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Long Term Line <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"longTermLine\"\n                        id=\"longTermLine\"\n                        value={recency.longTermLine}\n                        onChange={handleInputChangeRecency}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Recency Interpretation{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        className=\"form-control\"\n                        name=\"rencencyInterpretation\"\n                        id=\"rencencyInterpretation\"\n                        type=\"text\"\n                        value={recency.rencencyInterpretation}\n                        disabled\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                  {recency.rencencyInterpretation === \"RTRI Recent\" && (\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Has Viral Load been ordered? </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"hasViralLoad\"\n                          id=\"hasViralLoad\"\n                          value={recency.hasViralLoad}\n                          onChange={handleInputChangeRecency}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  {recency.hasViralLoad === \"true\" && (\n                    <>\n                      <div className=\"row\">\n                        <h4>Recency Viral Load Classification :</h4>\n                        <br/>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Recency Sample Collected Date</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"sampleCollectedDate\"\n                                id=\"sampleCollectedDate\"\n                                type=\"date\"\n                                value={recency.sampleCollectedDate}\n                                min={recency.optOutRTRITestDate}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Recency Sample Reference Number{\" \"}\n                              <span style={{color: \"red\"}}> *</span>\n                            </Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"sampleReferanceNumber\"\n                                id=\"sampleReferanceNumber\"\n                                type=\"text\"\n                                value={recency.sampleReferanceNumber}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={props.activePage.actionType === \"view\"}\n                            />\n                            {errors.sampleReferanceNumber !== \"\" ? (\n                                <span className={classes.error}>\n                                {errors.sampleReferanceNumber}\n                              </span>\n                            ) : (\n                                \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Recency Sample Type{\" \"}\n                              <span style={{color: \"red\"}}> *</span>\n                            </Label>\n                            <select\n                                className=\"form-control\"\n                                name=\"sampleType\"\n                                id=\"sampleType\"\n                                value={recency.sampleType}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"DBS\">DBS</option>\n                              <option value=\"Plasma\">Plasma</option>\n                            </select>\n                            {errors.sampleType !== \"\" ? (\n                                <span className={classes.error}>\n                                {errors.sampleType}\n                              </span>\n                            ) : (\n                                \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Date Recency Sample Sent to PCR Lab</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"dateSampleSentToPCRLab\"\n                                id=\"dateSampleSentToPCRLab\"\n                                type=\"date\"\n                                min={recency.optOutRTRITestDate}\n                                value={recency.dateSampleSentToPCRLab}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                            {errors.dateSampleSentToPCRLab !== \"\" ? (\n                                <span className={classes.error}>\n                                {errors.dateSampleSentToPCRLab}\n                              </span>\n                            ) : (\n                                \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Recency Sample Test Date</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"sampleTestDate\"\n                                id=\"sampleTestDate\"\n                                type=\"date\"\n                                min={recency.optOutRTRITestDate}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                value={recency.sampleTestDate}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Receiving PCR Lab</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"receivingPcrLab\"\n                                id=\"receivingPcrLab\"\n                                type=\"text\"\n                                value={recency.receivingPcrLab}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Recency Viral Load Confirmation Result (copies/ml)</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"viralLoadConfirmationResult\"\n                                id=\"viralLoadConfirmationResult\"\n                                type=\"number\"\n                                value={recency.viralLoadConfirmationResult}\n                                onChange={handleInputChangeRecency}\n                                style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                disabled={props.activePage.actionType === \"view\"}\n                            />\n\n                          </FormGroup>\n                        </div>\n\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Recency Viral Load Result Received Date</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"receivedResultDate\"\n                                id=\"receivedResultDate\"\n                                type=\"date\"\n                                min={recency.optOutRTRITestDate}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                value={recency.receivedResultDate}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                          </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Recency Viral Load Result Classification and Result\n                              (copies/ml)\n                            </Label>\n                            <select\n                                className=\"form-control\"\n                                name=\"viralLoadResultClassification\"\n                                id=\"viralLoadResultClassification\"\n                                value={recency.viralLoadResultClassification}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={props.activePage.actionType === \"view\"}\n                            >\n                              <option value={\"\"}>Select</option>\n                              <option value=\">=1000\">{\">= \"} 1000</option>\n                              <option value=\"<1000\">{\"< \"} 1000</option>\n                              <option value=\"Failed run\">Failed run</option>\n                              <option value=\"Invalid viral load result\">\n                                Invalid viral load result\n                              </option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                        {/* <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Result (copies/ml)</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"recencyResult\"\n                                            id=\"recencyResult\"\n                                            type=\"text\"\n                                            value={recency.recencyResult}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n\n                                    </FormGroup>\n                                </div> */}\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>Final Recency Result</Label>\n                            <Input\n                                className=\"form-control\"\n                                name=\"finalRecencyResult\"\n                                id=\"finalRecencyResult\"\n                                type=\"text\"\n                                disabled\n                                value={recency.finalRecencyResult}\n                                onChange={handleInputChangeRecency}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                readOnly={props.activePage.actionType === \"view\"}\n                            />\n                          </FormGroup>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </>\n              )}\n\n              {saving ? <Spinner/> : \"\"}\n              <br/>\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  <Button\n                      content=\"Back\"\n                      icon=\"left arrow\"\n                      labelPosition=\"left\"\n                      style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\n                      onClick={() => handleItemClick(\"post-test\", \"post-test\")}\n                  />\n                  <Button\n                      content=\"Save & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\n                      onClick={handleSubmit}\n                      disabled={\n                        props.patientObj?.postTestCounselingKnowledgeAssessment\n                            ?.hivTestResult === \"true\" && recency.optOutRTRI === \"\"\n                            ? true\n                            : false\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default Recency;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["689","690","691","692","693","694","695"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\",\n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\",\n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n            unprotectedVaginalSex:\"\",\n            uprotectedAnalSex:\"\",\n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\",\n            complaintsGenitalSore  :\"\",\n\n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\",\n            fever :\"\",\n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => {\n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})\n            }\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value});\n\n    }\n\n    const handleInputChangeRiskAssessment = e => {\n        setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeRiskAssessmentPartner = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n\n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n\n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        }\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});\n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n\n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n\n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n\n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n\n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                         disabled={props.activePage.actionType === \"view\"}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n\n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>\n\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n\n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["696","697","698","699","700","701","702","703","704","705","706","707","708","709"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Modal } from \"react-bootstrap\";\n//import { objectValues } from \"react-toastify/dist/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst BasicInfo = (props) => {\n  console.log(\"#############\",props.patientObj);\n  const classes = useStyles();\n  const history = useHistory();\n  //console.log(\"enr\", props.activePage.activeObject);\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n  //const [hideNumChild, setHideNumChild] = useState(false);\n  const [kP, setKP] = useState([]);\n  const [enrollSetting, setEnrollSetting] = useState([]);\n  const [sourceReferral, setSourceReferral] = useState([]);\n  const [gender, setGender] = useState([]);\n  const [counselingType, setCounselingType] = useState([]);\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\n  const [indexTesting, setIndexTesting] = useState([]);\n  let temp = { ...errors };\n  //console.log(props?.patientObj?.dateVisit)\n\n  const [objValues, setObjValues] = useState({\n    active: true,\n    clientCode: \"\",\n    age: \"\",\n    dob: \"\",\n    breastFeeding: \"\",\n    dateVisit: props?.patientObj?.dateVisit,\n    firstTimeVisit: null,\n    indexClient: null,\n    numChildren: \"\",\n    numWives: \"\",\n    pregnant: \"\",\n    dateOfBirth: null,\n    dateOfRegistration: null,\n    deceased: true,\n    deceasedDateTime: null,\n    educationId: \"\",\n    employmentStatusId: \"\",\n    facilityId: \"\",\n    firstName: \"\",\n    genderId: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    isDateOfBirthEstimated: \"\",\n    maritalStatusId: \"\",\n    organizationId: \"\",\n    otherName: \"\",\n    sexId: \"\",\n    state: null,\n    lga: \"\",\n    id: \"\",\n    surname: \"\",\n    previouslyTested: \"\",\n    referredFrom: \"\",\n    targetGroup: \"\",\n    testingSetting: \"\",\n    typeCounseling: \"\",\n    relationWithIndexClient:\n      props.activePage?.activeObject?.relationWithIndexClient,\n    indexClientCode: \"\",\n  });\n\n  useEffect(() => {\n    KP();\n    EnrollmentSetting();\n    SourceReferral();\n    Genders();\n    CounselingType();\n    PregnancyStatus();\n    IndexTesting();\n    setObjValues(props.activePage.activeObject);\n    // if(props.patientObj){\n    //     objValues.referredFrom=props.patientObj.referredFrom\n    // }\n    //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\n    //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\n  }, [props.patientObj]);\n  //Get list of KP\n  const KP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setKP(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const PregnancyStatus = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPregnancyStatus(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const CounselingType = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setCounselingType(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of HIV STATUS ENROLLMENT\n  const EnrollmentSetting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEnrollSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of Source of Referral\n  const SourceReferral = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSourceReferral(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of Genders from\n  const Genders = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setGender(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\n    temp.typeCounseling = objValues.typeCounseling\n      ? \"\"\n      : \"This field is required.\";\n    temp.testingSetting = objValues.testingSetting\n      ? \"\"\n      : \"This field is required.\";\n    temp.targetGroup =\n      objValues.targetGroup !== \"\" ? \"\" : \"This field is required.\";\n    temp.referredFrom =\n      objValues.referredFrom !== \"\" ? \"\" : \"This field is required.\";\n    temp.previouslyTested =\n      objValues.previouslyTested !== \"\" ? \"\" : \"This field is required.\";\n    temp.indexClient =\n      objValues.indexClient !== \"\" ? \"\" : \"This field is required.\";\n    temp.firstTimeVisit =\n      objValues.firstTimeVisit !== \"\" ? \"\" : \"This field is required.\";\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (props.activePage.actionType === \"update\") {\n      //e.preventDefault();\n      const patientForm = {\n        ...props.patientObj,\n        clientCode: objValues.clientCode,\n        dateVisit: objValues.dateVisit,\n        extra: {},\n        id: objValues.id,\n        firstTimeVisit: objValues.firstTimeVisit,\n        indexClient: objValues.indexClient,\n        numChildren: objValues.numChildren,\n        numWives: objValues.numWives,\n        personId: props.patientObj.personId,\n        hospitalNumber: objValues.clientCode,\n        previouslyTested: objValues.previouslyTested,\n        referredFrom: objValues.referredFrom,\n        targetGroup: objValues.targetGroup,\n        testingSetting: objValues.testingSetting,\n        typeCounseling: objValues.typeCounseling,\n        breastFeeding: objValues.breastFeeding,\n        indexClientCode: objValues.indexClientCode,\n        pregnant: objValues.pregnant,\n        relationWithIndexClient: objValues.relationWithIndexClient,\n      };\n\n      if (validate()) {\n        setSaving(true);\n        axios\n          .put(`${baseUrl}hts/${props.patientObj.id}`, patientForm, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            props.setPatientObj(response.data);\n            toast.success(\"HTS Test successful\");\n            if (props.patientAge > 14) {\n              handleItemClick(\"pre-test-counsel\", \"basic\");\n            } else {\n              handleItemClick(\"hiv-test\", \"basic\");\n            }\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            } else {\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n          });\n      }\n    }\n    if (props.activePage.actionType === \"view\") {\n      //e.preventDefault();\n      setSaving(true);\n      if (props.patientAge > 14) {\n        setSaving(false);\n        handleItemClick(\"pre-test-counsel\", \"basic\");\n      } else {\n        setSaving(false);\n        handleItemClick(\"hiv-test\", \"pre-test-counsel\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Target Groups <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"targetGroup\"\n                    id=\"targetGroup\"\n                    onChange={handleInputChange}\n                    value={objValues.targetGroup}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    {kP.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.targetGroup !== \"\" ? (\n                    <span className={classes.error}>{errors.targetGroup}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">\n                    Client Code <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"clientCode\"\n                    id=\"clientCode\"\n                    value={objValues.clientCode}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    readOnly={props.activePage.actionType === \"view\"}\n                  />\n                  {errors.clientCode !== \"\" ? (\n                    <span className={classes.error}>{errors.clientCode}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Referred From <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredFrom\"\n                    id=\"referredFrom\"\n                    value={objValues.referredFrom}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    {sourceReferral.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.referredFrom !== \"\" ? (\n                    <span className={classes.error}>{errors.referredFrom}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Setting <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"testingSetting\"\n                    id=\"testingSetting\"\n                    value={objValues.testingSetting}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    {enrollSetting.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.testingSetting !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.testingSetting}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"date\"\n                    name=\"dateVisit\"\n                    id=\"dateVisit\"\n                    value={objValues.dateVisit}\n                    onChange={handleInputChange}\n                    min={objValues.dateOfRegistration}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    readOnly={props.activePage.actionType === \"view\"}\n                  />\n                  {errors.dateVisit !== \"\" ? (\n                    <span className={classes.error}>{errors.dateVisit}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\n                            <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Gender</Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"genderId\"\n                                    id=\"genderId\"\n                                    value={objValues.genderId}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                >\n                                    <option value={\"\"}></option>\n                                    {gender.map((value) => (\n                                        <option key={value.id} value={value.id}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </select>\n                               \n                            </FormGroup>\n                            </div>\n                            )} */}\n              {props.patientAge > 9 &&\n                (props.patientObj.personResponseDto.sex === \"Male\" ||\n                  props.patientObj.personResponseDto.sex === \"male\" ||\n                  props.patientObj.personResponseDto.sex === \"MALE\") && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Number of wives/co-wives</Label>\n                      <Input\n                        type=\"number\"\n                        name=\"numWives\"\n                        id=\"numWives\"\n                        min={0}\n                        value={objValues.numWives}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        readOnly={props.activePage.actionType === \"view\"}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n              {props.patientAge > 9 && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Number of Children {\"<5\"} years</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"numChildren\"\n                      id=\"numChildren\"\n                      min={0}\n                      value={objValues.numChildren}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                      readOnly={props.activePage.actionType === \"view\"}\n                    />\n                  </FormGroup>\n                </div>\n              )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Index Testing</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"indexClient\"\n                    id=\"indexClient\"\n                    value={objValues.indexClient}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.indexClient !== \"\" ? (\n                    <span className={classes.error}>{errors.indexClient}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.indexClient === \"true\" ||\n                (objValues.indexClient === true && (\n                  <>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Relationship of the index client</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"relationWithIndexClient\"\n                          id=\"relationWithIndexClient\"\n                          value={objValues.relationWithIndexClient}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={props.activePage.actionType === \"view\"}\n                        >\n                          <option value={\"\"}></option>\n                          {indexTesting.map((value) => (\n                            <option key={value.id} value={value.id}>\n                              {value.display}\n                            </option>\n                          ))}\n                        </select>\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>Index Client Code/ID</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"indexClientCode\"\n                          id=\"indexClientCode\"\n                          value={objValues.indexClientCode}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          readOnly={props.activePage.actionType === \"view\"}\n                        />\n                      </FormGroup>\n                    </div>\n                  </>\n                ))}\n              {(props.patientObj.personResponseDto.sex === \"Female\" ||\n                props.patientObj.personResponseDto.sex === \"female\" ||\n                props.patientObj.personResponseDto.sex === \"FEMALE\") && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Pregnant Status</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"pregnant\"\n                        id=\"pregnant\"\n                        value={objValues.pregnant}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                        disabled={props.activePage.actionType === \"view\"}\n                      >\n                        <option value={\"\"}></option>\n                        {pregnancyStatus.map((value) => (\n                            ((props.patientObj.riskStratificationResponseDto.modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" || props.patientObj.riskStratificationResponseDto.modality ===\"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" || props.patientObj.riskStratificationResponseDto.testingSetting===\"TEST_SETTING_CPMTCT\" || props.patientObj.riskStratificationResponseDto.modality ===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\")  && value.code === \"PREGANACY_STATUS_NOT_PREGNANT\") ? (\n                                <></>\n                            ) : (\n                                <option key={value.id} value={value.id}>\n                                  {value.display}\n                                </option>\n                            )\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {/*objValues.pregnant!== 73 || objValues.pregnant!== \"73\" && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Breast Feeding</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"breastFeeding\"\n                                        id=\"breastFeeding\"\n                                        value={objValues.breastFeeding}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )*/}\n                </>\n              )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>First time visit</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"firstTimeVisit\"\n                    id=\"firstTimeVisit\"\n                    value={objValues.firstTimeVisit}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.firstTimeVisit !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.firstTimeVisit}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Previously tested within the last 3 months</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"previouslyTested\"\n                    id=\"previouslyTested\"\n                    value={objValues.previouslyTested}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.previouslyTested !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.previouslyTested}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>Type of Counseling</Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"typeCounseling\"\n                    id=\"typeCounseling\"\n                    value={objValues.typeCounseling}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={props.activePage.actionType === \"view\"}\n                  >\n                    <option value={\"\"}></option>\n                    {counselingType.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.typeCounseling !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.typeCounseling}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {props.activePage.actionType === \"update\" && (\n                    <Button\n                      content=\"Update & Continue\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                  {props.activePage.actionType === \"view\" && (\n                    <Button\n                      content=\"Next\"\n                      icon=\"right arrow\"\n                      labelPosition=\"right\"\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default BasicInfo;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725"],"import React, { useState } from 'react';\n\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\n   } from \"reactstrap\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from 'highcharts';\n import HighchartsReact from 'highcharts-react-official';\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\nimport { Progress } from 'reactstrap';\n\n\n// Load Highcharts modules\n//require(\"highcharts/modules/exporting\")(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n    },\n},\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst SummaryView = (props) => {\n  const classes = useStyles();\n  const [chartValue, setChartValue] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n  const [state, setState] = useState({ activeItem: 'gamepad' })\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n  const { activeItem } = state\n  const chartPage  = e => {\n\n    setChartValue(e)\n  }\n\n  //Menu Icon \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  return (\n    <div  spacing={5} style={{ padding: 20 }} >\n      <Row>\n        <Col md={12}>\n          {/* The second Column Card Layout  */}\n        <Row>\n                 \n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\n                  </CardBody></Card>\n                  </Col>\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\n                  </CardBody></Card>\n                  </Col>\n              </Row>\n\n           \n        </Col>\n      </Row>\n\n      \n\n      \n\n    </div>\n  );\n}\n\nexport default SummaryView;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["726","727","728","729"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=(row, actionType)=>{\n\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\n    }\n    \n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["730","731","732","733","734"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\n//import SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n//import PhoneInput from 'react-phone-input-2'\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst RiskStratification = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  console.log(\"cons\", props.patientObj);\n  const [enrollSetting, setEnrollSetting] = useState([]);\n  const [entryPoint, setEntryPoint] = useState([]);\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\n  let riskCountQuestion = [];\n  const [kP, setKP] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n  let temp = { ...errors };\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  const [setting, setSetting] = useState([]);\n  const [riskCount, setRiskCount] = useState(0);\n  const [objValues, setObjValues] = useState({\n    age: props.patientAge,\n    dob: props.patientObj.dateOfBirth,\n    visitDate: \"\",\n    dateOfBirth: props.patientObj.dateOfBirth,\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\n    targetGroup: \"\",\n    testingSetting: \"\", //\n    modality: \"\", //\n    code: \"\",\n    id: \"\",\n    personId: props.patientObj.id,\n    riskAssessment: {},\n    entryPoint: \"\",\n    careProvider: \"\",\n    communityEntryPoint: \"\",\n  });\n  const [riskAssessment, setRiskAssessment] = useState({\n    // everHadSexualIntercourse:\"\",\n    // bloodtransInlastThreeMonths:\"\",\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n    // unprotectedVaginalSex:\"\",\n    // uprotectedAnalSex:\"\",\n    // stiLastThreeMonths:\"\",\n    // sexUnderInfluence :\"\",\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\n    // experiencePain:\"\",\n    // haveSexWithoutCondom:\"\",\n    // abuseDrug:\"\",\n    // bloodTransfusion:\"\",\n    // consistentWeightFeverNightCough:\"\",\n    // soldPaidVaginalSex:\"\",\n    //New Question\n    lastHivTestForceToHaveSex: \"\",\n    lastHivTestHadAnal: \"\",\n    lastHivTestInjectedDrugs: \"\",\n    whatWasTheResult: \"\",\n    lastHivTestDone: \"\",\n    diagnosedWithTb: \"\",\n    lastHivTestPainfulUrination: \"\",\n    lastHivTestBloodTransfusion: \"\",\n    lastHivTestVaginalOral: \"\",\n    lastHivTestBasedOnRequest: \"\",\n  });\n  useEffect(() => {\n    KP();\n    EnrollmentSetting();\n    EntryPoint();\n    HTS_ENTRY_POINT_COMMUNITY();\n    if (props.patientObj.riskStratificationResponseDto !== null) {\n      setObjValues(props.patientObj.riskStratificationResponseDto);\n      SettingModality(\n        props.patientObj.riskStratificationResponseDto.testingSetting\n      );\n      setRiskAssessment(\n        props.patientObj.riskStratificationResponseDto &&\n          props.patientObj.riskStratificationResponseDto.riskAssessment\n      );\n    }\n  }, [props.patientObj]);\n\n  //Get list of HIV STATUS ENROLLMENT\n  const EnrollmentSetting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEnrollSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const EntryPoint = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPoint(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPointCommunity(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const KP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setKP(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\n      SettingModality(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\n    }\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\n      //SettingModality(e.target.value)\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (\n        e.target.value ===\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\n      ) {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\n        //setRiskCount(1)\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\n        setRiskCount(1);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      } else {\n        setRiskCount(0);\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\n      }\n    }\n\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  //Get list of DSD Model Type\n  function SettingModality(settingId) {\n    const setting = settingId;\n    axios\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n  //End of Date of Birth and Age handling\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\n    temp.testingSetting = objValues.testingSetting\n      ? \"\"\n      : \"This field is required.\";\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\n    props.patientAge > 15 &&\n      (temp.targetGroup = objValues.targetGroup\n        ? \"\"\n        : \"This field is required.\");\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\n      ? \"\"\n      : \"This field is required.\";\n    //Risk Assement section\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\n        ? \"\"\n        : \"This field is required.\");\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\n    objValues.entryPoint !== \"\" &&\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\n      (temp.communityEntryPoint = objValues.communityEntryPoint\n        ? \"\"\n        : \"This field is required.\");\n\n    riskAssessment.lastHivTestDone !== \"\" &&\n      riskAssessment.lastHivTestDone !== \"Never\" &&\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\n        ? \"\"\n        : \"This field is required.\");\n\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestBloodTransfusion =\n        riskAssessment.lastHivTestBloodTransfusion\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestPainfulUrination =\n        riskAssessment.lastHivTestPainfulUrination\n          ? \"\"\n          : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\n        ? \"\"\n        : \"This field is required.\");\n    objValues.age > 15 &&\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\n      (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\n        ? \"\"\n        : \"This field is required.\");\n\n    //targetGroup\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  // Getting the number count of riskAssessment True\n  const actualRiskCountTrue = Object.values(riskAssessment);\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\n  const handleInputChangeRiskAssessment = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(riskAssessment)\n    props.patientObj.targetGroup = objValues.targetGroup;\n    props.patientObj.testingSetting = objValues.testingSetting;\n    props.patientObj.dateVisit = objValues.visitDate;\n    props.patientObj.modality = objValues.modality;\n    props.patientObj.riskStratificationResponseDto = objValues;\n    //props.patientObj.riskAssessment =riskAssessment\n\n    objValues.riskAssessment = riskAssessment;\n    if (\n      (props.patientObj.riskStratificationResponseDto &&\n        props.patientObj.riskStratificationResponseDto !== null &&\n        props.patientObj.personId !== \"\") ||\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\n    ) {\n      console.log(\"put\");\n      axios\n        .put(\n          `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\n          objValues,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setSaving(false);\n          props.patientObj.riskStratificationResponseDto = response.data;\n          objValues.code = response.data.code;\n          props.setExtra(objValues);\n          //toast.success(\"Risk stratification save succesfully!\");\n        })\n        .catch((error) => {\n          console.log(error);\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    } else {\n      if (validate()) {\n        setSaving(true);\n        axios\n          .post(`${baseUrl}risk-stratification`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            objValues.code = response.data.code;\n            props.setExtra(objValues);\n            handleItemClick(\"basic\", \"risk\");\n            props.setHideOtherMenu(false);\n            //toast.success(\"Risk stratification save succesfully!\");\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      } else {\n        toast.error(\"All fields are required\", {\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                style={{\n                  backgroundColor: \"#992E62\",\n                  width: \"125%\",\n                  height: \"35px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Modality\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"entryPoint\"\n                      id=\"entryPoint\"\n                      value={objValues.entryPoint}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {entryPoint.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.entryPoint !== \"\" ? (\n                      <span className={classes.error}>{errors.entryPoint}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\n                  <div className=\"form-group  col-md-6\">\n                    <FormGroup>\n                      <Label>\n                        Community Entry Point{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"communityEntryPoint\"\n                        id=\"communityEntryPoint\"\n                        value={objValues.communityEntryPoint}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}>Select</option>\n                        {entryPointCommunity.map((value) => (\n                          <option key={value.id} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.communityEntryPoint !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.communityEntryPoint}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n                <div className=\"form-group mb-3 col-md-6\">\n                  <FormGroup>\n                    <Label for=\"\">\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\n                    </Label>\n                    <Input\n                      type=\"date\"\n                      name=\"visitDate\"\n                      id=\"visitDate\"\n                      value={objValues.visitDate}\n                      onChange={handleInputChange}\n                      min=\"1929-12-31\"\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                    />\n                    {errors.dateVisit !== \"\" ? (\n                      <span className={classes.error}>{errors.dateVisit}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Setting <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"testingSetting\"\n                      id=\"testingSetting\"\n                      value={objValues.testingSetting}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {enrollSetting.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\n                                        \n                                        <option value=\"TEST_SETTING_FP\">FP</option>\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\n                    </select>\n                    {errors.testingSetting !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.testingSetting}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Modality <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"modality\"\n                      id=\"modality\"\n                      value={objValues.modality}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {setting.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.modality !== \"\" ? (\n                      <span className={classes.error}>{errors.modality}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Target Group <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"targetGroup\"\n                      id=\"targetGroup\"\n                      onChange={handleInputChange}\n                      value={objValues.targetGroup}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {kP.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.targetGroup !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.targetGroup}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              </div>\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group  col-md-6\">\n                  <FormGroup>\n                    <Label>\n                      Is this HIV test based on a Clinician/Doctor/Health Care\n                      Provider's request ?{\" \"}\n                      <span style={{ color: \"red\" }}> *</span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"lastHivTestBasedOnRequest\"\n                      id=\"lastHivTestBasedOnRequest\"\n                      value={riskAssessment.lastHivTestBasedOnRequest}\n                      onChange={handleInputChangeRiskAssessment}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}>Select</option>\n                      <option value=\"true\">Yes</option>\n                      <option value=\"false\">No</option>\n                    </select>\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.lastHivTestBasedOnRequest}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              </div>\n              <br />\n\n              {props.patientAge > 15 &&\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\n                  <>\n                    <div\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\n                      style={{\n                        backgroundColor: \"#992E62\",\n                        width: \"125%\",\n                        height: \"35px\",\n                        color: \"#fff\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      HIV Risk Assessment (Last 3 months)\n                    </div>\n\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          When was your last HIV test done?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestDone\"\n                          id=\"lastHivTestDone\"\n                          value={riskAssessment.lastHivTestDone}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<1\"> {\"< 1\"} month</option>\n                          <option value=\"1-3 Months\">1-3 Months</option>\n                          <option value=\"4-6 Months\">4-6 Months</option>\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\n                          <option value=\"Never\"> Never</option>\n                        </select>\n                        {errors.lastHivTestDone !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestDone}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    {riskAssessment.lastHivTestDone !== \"\" &&\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              What was the result?{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"whatWasTheResult\"\n                              id=\"whatWasTheResult\"\n                              value={riskAssessment.whatWasTheResult}\n                              onChange={handleInputChangeRiskAssessment}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"Positive\">Positive</option>\n                              <option value=\"Negative\">Negative</option>\n                            </select>\n                            {errors.whatWasTheResult !== \"\" ? (\n                              <span className={classes.error}>\n                                {errors.whatWasTheResult}\n                              </span>\n                            ) : (\n                              \"\"\n                            )}\n                          </FormGroup>\n                        </div>\n                      )}\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal or vaginal\n                          or oral sex without a condom with someone who was HIV\n                          positive or unaware of their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestVaginalOral\"\n                          id=\"lastHivTestVaginalOral\"\n                          value={riskAssessment.lastHivTestVaginalOral}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestVaginalOral}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had a blood or\n                          blood product transfusion?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestBloodTransfusion\"\n                          id=\"lastHivTestBloodTransfusion\"\n                          value={riskAssessment.lastHivTestBloodTransfusion}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestBloodTransfusion}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you experienced painful\n                          urination, lower abdominal pain, vaginal or penile\n                          discharge, pain during sexual intercourse, thick,\n                          cloudy, or foul smelling discharge and/or small bumps\n                          or blisters near the mouth, penis, vagina, or anal\n                          areas? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestPainfulUrination\"\n                          id=\"lastHivTestPainfulUrination\"\n                          value={riskAssessment.lastHivTestPainfulUrination}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestPainfulUrination}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Have you been diagnosed with TB or currently have any\n                          of the following symptoms : cough, fever, weight loss,\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"diagnosedWithTb\"\n                          id=\"diagnosedWithTb\"\n                          value={riskAssessment.diagnosedWithTb}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.diagnosedWithTb !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.diagnosedWithTb}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you ever injected\n                          drugs, shared needles or other sharp objects with\n                          someone known to be HIV positive or who you didn’t\n                          know their HIV status?{\" \"}\n                          <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestInjectedDrugs\"\n                          id=\"sexUnderInfluence\"\n                          value={riskAssessment.lastHivTestInjectedDrugs}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestInjectedDrugs}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you had anal, oral or\n                          vaginal sex in exchange for money or other benefits?\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestHadAnal\"\n                          id=\"lastHivTestHadAnal\"\n                          value={riskAssessment.lastHivTestHadAnal}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestHadAnal !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestHadAnal}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Since your last HIV test, have you been forced to have\n                          sex? <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"lastHivTestForceToHaveSex\"\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\n                          value={riskAssessment.lastHivTestForceToHaveSex}\n                          onChange={handleInputChangeRiskAssessment}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\n                          <span className={classes.error}>\n                            {errors.lastHivTestForceToHaveSex}\n                          </span>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormGroup>\n                    </div>\n                    <br />\n                  </>\n                )}\n\n              <br />\n              <Message warning>\n                <h4> Risk assessment score </h4>\n                <b>\n                  Score :\n                  {riskCount +\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\n                </b>\n              </Message>\n              <hr />\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save \"\n                    type=\"submit\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n      <Modal\n        show={open}\n        toggle={toggle}\n        className=\"fade\"\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Are you Sure of the Age entered?</h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={toggle}\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n          >\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default RiskStratification;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["735","736","737","738","739","740","741","742","743","744","745","746","747","748"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["749","750","751","752","753"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PostTest = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  console.log(\"data3\", props.patientObj);\r\n  ///const [errors, setErrors] = useState({});\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    personId: patientID,\r\n  });\r\n\r\n  const [postTest, setPostTest] = useState({\r\n    hivTestResult: \"\",\r\n    hivTestBefore:\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.lastHivTestDone !== \"Never\" &&\r\n      props.patientObj?.riskStratificationResponseDto?.riskAssessment\r\n        ?.whatWasTheResult === \"Positive\"\r\n        ? \"Previously tested positive in HIV care\"\r\n        : \"\",\r\n    hivRequestResult: \"\",\r\n    hivRequestResultCt: \"\",\r\n    clientReceivedHivTestResult: \"\",\r\n    postTestCounseling: \"\",\r\n    riskReduction: \"\",\r\n    postTestDisclosure: \"\",\r\n    bringPartnerHivtesting: \"\",\r\n    childrenHivtesting: \"\",\r\n    informationFp: \"\",\r\n    partnerFpThanCondom: \"\",\r\n    partnerFpUseCondom: \"\",\r\n    correctCondomUse: \"\",\r\n    condomProvidedToClient: \"\",\r\n    unprotectedSexRegularPartnerLastThreeMonth: \"\",\r\n    referredToServices: \"\",\r\n    lubricantProvidedToClient: \"\",\r\n    condomProvidedToClientCount: \"\",\r\n    lubricantProvidedToClientCount: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setPostTest({\r\n      ...postTest,\r\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\r\n    });\r\n\r\n    if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    }\r\n    // if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\r\n    //     setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment)\r\n    // }else{\r\n    //     if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\r\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Positive') {\r\n    //         postTest.hivTestResult='true'\r\n    //         setPostTest({...postTest, hivTestResult:'true' })\r\n    //     }else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult2!==\"\"\r\n    //     && props.patientObj.hivTestResult2!==null && props.patientObj.hivTestResult2==='Negative') {\r\n    //         postTest.hivTestResult='false'\r\n    //         setPostTest({...postTest, hivTestResult:'false' })\r\n    //     }\r\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\r\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Positive') {\r\n    //         postTest.hivTestResult='true'\r\n    //         setPostTest({...postTest, hivTestResult:'true' })\r\n    //     }\r\n    //     else if (postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\"\r\n    //     && props.patientObj.hivTestResult!==null && props.patientObj.hivTestResult==='Negative') {\r\n    //         postTest.hivTestResult='false'\r\n    //         setPostTest({...postTest, hivTestResult:'false' })\r\n    //     }\r\n    // }\r\n  }, [props.patientObj, postTest.hivTestResult]);\r\n  const handleInputChangePostTest = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //handleItemClick('recency-testing', 'post-test')\r\n    // if(!(Object.values(postTest).every(x => x === \"\"))){\r\n    setSaving(true);\r\n    objValues.htsClientId = props.patientObj.id;\r\n    objValues.postTestCounselingKnowledgeAssessment = postTest;\r\n    objValues.personId = props.patientObj.personResponseDto.id;\r\n    axios\r\n      .put(\r\n        `${baseUrl}hts/${props.patientObj.id}/post-test-counseling`,\r\n        objValues,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setSaving(false);\r\n        props.setPatientObj(response.data);\r\n        //toast.success(\"Risk Assesment successful\");\r\n        // if (postTest.hivTestResult === \"true\") {\r\n        //   handleItemClick(\"recency-testing\", \"post-test\");\r\n        // } else if (postTest.hivTestResult === \"false\") {\r\n        //   history.push(\"/\");\r\n        // }\r\n        handleItemClick(\"recency-testing\", \"post-test\");\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n    // }else{\r\n    //     toast.error(\"All post test fields are required\")\r\n\r\n    // }\r\n  };\r\n\r\n  //console.log(postTest.hivTestResult)\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>POST TEST COUNSELING</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n              </LabelRibbon>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={postTest.hivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Positive</option>\r\n                    <option value=\"false\">Negative</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been tested for HIV before within this year?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestBefore\"\r\n                    id=\"hivTestBefore\"\r\n                    value={postTest.hivTestBefore}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Not previously tested\">\r\n                      Not previously tested\r\n                    </option>\r\n                    <option value=\"Previously tested negative\">\r\n                      Previously tested negative\r\n                    </option>\r\n                    <option value=\"Previously tested positive in HIV care\">\r\n                      Previously tested positive in HIV care\r\n                    </option>\r\n                    <option value=\"Previously tested positive not in HIV care\">\r\n                      Previously tested positive not in HIV care\r\n                    </option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV Request and Result form signed by tester </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResult\"\r\n                    id=\"hivRequestResult\"\r\n                    value={postTest.hivRequestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResultCt\"\r\n                    id=\"hivRequestResultCt\"\r\n                    value={postTest.hivRequestResultCt}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client received HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientReceivedHivTestResult\"\r\n                    id=\"clientReceivedHivTestResult\"\r\n                    value={postTest.clientReceivedHivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test counseling done </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestCounseling\"\r\n                    id=\"postTestCounseling\"\r\n                    value={postTest.postTestCounseling}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Risk reduction plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"riskReduction\"\r\n                    id=\"riskReduction\"\r\n                    value={postTest.riskReduction}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test disclosure plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestDisclosure\"\r\n                    id=\"postTestDisclosure\"\r\n                    value={postTest.postTestDisclosure}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Will bring partner(s) for HIV testing </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"bringPartnerHivtesting\"\r\n                    id=\"bringPartnerHivtesting\"\r\n                    value={postTest.bringPartnerHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"childrenHivtesting\"\r\n                    id=\"childrenHivtesting\"\r\n                    value={postTest.childrenHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Provided with information on FP and dual contraception{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informationFp\"\r\n                    id=\"informationFp\"\r\n                    value={postTest.informationFp}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client/Partner use FP methods (other than condom)\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpThanCondom\"\r\n                    id=\"partnerFpThanCondom\"\r\n                    value={postTest.partnerFpThanCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpUseCondom\"\r\n                    id=\"partnerFpUseCondom\"\r\n                    value={postTest.partnerFpUseCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Correct condom use demonstrated </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"correctCondomUse\"\r\n                    id=\"correctCondomUse\"\r\n                    value={postTest.correctCondomUse}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Condoms provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"condomProvidedToClient\"\r\n                    id=\"condomProvidedToClient\"\r\n                    value={postTest.condomProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.condomProvidedToClient !== null &&\r\n                postTest.condomProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many condoms were provided to client </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"condomProvidedToClientCount\"\r\n                        id=\"condomProvidedToClientCount\"\r\n                        value={postTest.condomProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lubricant were provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lubricantProvidedToClient\"\r\n                    id=\"lubricantProvidedToClient\"\r\n                    value={postTest.lubricantProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.lubricantProvidedToClient !== null &&\r\n                postTest.lubricantProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many lubricant provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantProvidedToClientCount\"\r\n                        id=\"lubricantProvidedToClientCount\"\r\n                        value={postTest.lubricantProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client referred to other services </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredToServices\"\r\n                    id=\"referredToServices\"\r\n                    value={postTest.referredToServices}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <Message success>\r\n                <h4>\r\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\r\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\r\n                  re-testing after 3 months\r\n                </h4>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\r\n                  />\r\n                  {/*{postTest.hivTestResult === \"true\" && (*/}\r\n                  {/*  <Button*/}\r\n                  {/*    content=\"Save & Continue\"*/}\r\n                  {/*    icon=\"right arrow\"*/}\r\n                  {/*    labelPosition=\"right\"*/}\r\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n                  {/*    onClick={handleSubmit}*/}\r\n                  {/*  />*/}\r\n                  {/*)}*/}\r\n                  {/*{postTest.hivTestResult === \"false\" && (*/}\r\n                  {/*  <Button*/}\r\n                  {/*    content=\"Save & Finish\"*/}\r\n                  {/*    icon=\"right arrow\"*/}\r\n                  {/*    labelPosition=\"right\"*/}\r\n                  {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n                  {/*    onClick={handleSubmit}*/}\r\n                  {/*  />*/}\r\n                  {/*)}*/}\r\n                  <Button\r\n                      content=\"Save & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTest;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["754","755","756","757","758","759","760","761","762","763"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["764","765","766","767"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      //window.location.reload(false);\n      props.setActivePage({...props.activePage, activePage:\"home\"})\n     \n    }\n\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["768","769","770","771","772","773","774","775"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          //{ title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["776","777","778","779","780","781","782","783","784","785","786","787","788"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["789","790","791","792","793","794","795","796"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n  useEffect(() => {\n    getStates();\n    Sex();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n  }, []);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      //     age_now--;\n      // }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n\n      //console.log(\"obj\", objValues);\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\");\n\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n\n          // handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Sex <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        Address <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Relationship to Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Do you currently live with this partner?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Notification Method selected{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["814","815"],"import Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nexport const NewlyEnrolledArtByAge = {\n    chart: {\n        \n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Number of Adults and Children newly enrolled on ART '\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n        point: {\n            valueSuffix: '%'\n        }\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'black'\n            },\n            showInLegend: true\n        }\n    },\n    series: [{\n        name: 'Newly Enrolled on ART by Age',\n        data: [\n            \n            { name: '25 + ', sliced: true, y: 61.41 },\n            { name: '20-24 ', y: 11.84 },\n            { name: '10-19 ', y: 10.85 },\n            { name: '≤ 9 ', y: 4.67 },\n        ]\n    }]\n};","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["816","817","818","819","820"],"import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast } from \"react-toastify\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst HivTestResult = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  let temp = { ...errors };\n  //console.log(\"data1\", props.patientObj);\n  const patientID =\n    props.patientObj && props.patientObj.personResponseDto\n      ? props.patientObj.personResponseDto.id\n      : \"\";\n  const clientId =\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [showCD4Count, setShowCD4Count] = useState(true);\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now;\n  };\n  const patientAge = calculate_age(\n    moment(\n      props.patientObj.personResponseDto &&\n        props.patientObj.personResponseDto.dateOfBirth\n        ? props.patientObj.personResponseDto.dateOfBirth\n        : 0\n    ).format(\"DD-MM-YYYY\")\n  );\n\n  const [objValues, setObjValues] = useState({\n    confirmatoryTest: {},\n    confirmatoryTest2: {},\n    hivTestResult: \"\",\n    hivTestResult2: \"\",\n    htsClientId: \"\",\n    personId: props.patientObj ? props.patientObj.id : \"\",\n    test1: {},\n    test2: {},\n    tieBreakerTest: {},\n    tieBreakerTest2: {},\n    syphilisTesting: {},\n    hepatitisTesting: {},\n    others: {},\n    cd4: {},\n    prepOffered: \"\",\n    prepAccepted: \"\",\n  });\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  const [initialTest1, setInitailTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [initialTest12, setInitailTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeCd4Count = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\n  };\n  const [cd4Count, setCd4Count] = useState({\n    cd4Count: \"\",\n    cd4SemiQuantitative: \"\",\n    cd4FlowCyteometry: \"\",\n  });\n  const handleInputChangeInitial = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setConfirmatoryTest({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\n      setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeInitial2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.value === \"No\") {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      setConfirmatoryTest2({\n        date: \"\",\n        result: \"\",\n      });\n      setTieBreakerTest2({\n        date: \"\",\n        result: \"\",\n      });\n      //This is to show cd4 count section\n      setShowCD4Count(false);\n    } else {\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\n      //This is to show cd4 count section\n      setShowCD4Count(true);\n    }\n  };\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeConfirmatory = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest({\n      ...confirmatoryTest,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeConfirmatory2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setConfirmatoryTest2({\n      ...confirmatoryTest2,\n      [e.target.name]: e.target.value,\n    });\n    //This is to show cd4 count section\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [tieBreakerTest, setTieBreakerTest] = useState({\n    date: \"\",\n    result: \"\",\n  });\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\n    date2: \"\",\n    result2: \"\",\n  });\n  const handleInputChangeTie = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const handleInputChangeTie2 = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\n    //This is to show cd4 count section\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\n      setShowCD4Count(true);\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\n      setShowCD4Count(false);\n    } else {\n      setShowCD4Count(true);\n    }\n  };\n  const [syphills, setSyphills] = useState({\n    syphilisTestResult: \"\",\n    // result  :\"\",\n  });\n  const handleInputChangeSyphills = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\n  };\n  const [hepatitis, setHepatitis] = useState({\n    hepatitisCTestResult: \"\",\n    hepatitisBTestResult: \"\",\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  const handleInputChangeHepatitis = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\n  };\n  const [others, setOthers] = useState({\n    longitude: \"\",\n    latitude: \"\",\n    adhocCode: \"\",\n  });\n  useEffect(() => {\n    //console.log(props.patientObj)\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n      setCd4Count(\n        props.patientObj && props.patientObj.cd4 !== null\n          ? props.patientObj.cd4\n          : {}\n      );\n      setInitailTest(\n        props.patientObj && props.patientObj.test1 !== null\n          ? props.patientObj.test1\n          : {}\n      );\n      setConfirmatoryTest(\n        props.patientObj && props.patientObj.confirmatoryTest !== null\n          ? props.patientObj.confirmatoryTest\n          : {}\n      );\n      setTieBreakerTest(\n        props.patientObj && props.patientObj.tieBreakerTest !== null\n          ? props.patientObj.tieBreakerTest\n          : {}\n      );\n      setSyphills(\n        props.patientObj && props.patientObj.syphilisTesting !== null\n          ? props.patientObj.syphilisTesting\n          : {}\n      );\n      setHepatitis(\n        props.patientObj && props.patientObj.hepatitisTesting !== null\n          ? props.patientObj.hepatitisTesting\n          : {}\n      );\n      setOthers(\n        props.patientObj && props.patientObj.others !== null\n          ? props.patientObj.others\n          : {}\n      );\n\n      setInitailTest2(\n        props.patientObj && props.patientObj.test2 !== null\n          ? props.patientObj.test2\n          : {}\n      );\n      setConfirmatoryTest2(\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\n          ? props.patientObj.confirmatoryTest2\n          : {}\n      );\n      setTieBreakerTest2(\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\n          ? props.patientObj.tieBreakerTest2\n          : {}\n      );\n    }\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\n\n  const handleInputChangeOthers = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    setOthers({ ...others, [e.target.name]: e.target.value });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    initialTest1.date !== \"\" &&\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\n\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      (temp.prepOffered = objValues.prepOffered\n        ? \"\"\n        : \"The Prep Offered field is required.\");\n    initialTest1.date !== \"\" &&\n      initialTest1.result === \"No\" &&\n      objValues.prepOffered === \"true\" &&\n      (temp.prepAccepted = objValues.prepAccepted\n        ? \"\"\n        : \"The Prep Accepted field is required.\");\n    // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\n    // temp.syphilisTestResult = syphills.syphilisTestResult ? \"\" : \"This field is required.\"\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      //logic to get Hiv result test\n      if (initialTest12.result2 === \"No\") {\n        objValues.hivTestResult2 = \"Negative\";\n      } else if (\n        initialTest12.result2 === \"Yes\" &&\n        confirmatoryTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      }\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n      //     objValues.hivTestResult2=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"Yes\"\n      ) {\n        objValues.hivTestResult2 = \"Positive\";\n      } else if (\n        confirmatoryTest2.result2 === \"No\" &&\n        tieBreakerTest2.result2 === \"No\"\n      ) {\n        objValues.hivTestResult2 = \"Negative\";\n      } else {\n        objValues.hivTestResult2 = \"\";\n      }\n\n      if (initialTest1.result === \"No\") {\n        objValues.hivTestResult = \"Negative\";\n      } else if (\n        initialTest1.result === \"Yes\" &&\n        confirmatoryTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      }\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n      //     objValues.hivTestResult=\"Negative\"\n      // }\n      else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"Yes\"\n      ) {\n        objValues.hivTestResult = \"Positive\";\n      } else if (\n        confirmatoryTest.result === \"No\" &&\n        tieBreakerTest.result === \"No\"\n      ) {\n        objValues.hivTestResult = \"Negative\";\n      } else {\n        objValues.hivTestResult = \"\";\n      }\n      objValues.htsClientId = clientId;\n      objValues.confirmatoryTest = confirmatoryTest;\n      objValues.confirmatoryTest2 = confirmatoryTest2;\n      objValues.personId = patientID;\n      objValues.test1 = initialTest1;\n      objValues.test2 = initialTest12;\n      objValues.tieBreakerTest = tieBreakerTest;\n      objValues.tieBreakerTest2 = tieBreakerTest2;\n      objValues.syphilisTesting = syphills;\n      objValues.hepatitisTesting = hepatitis;\n\n      objValues.cd4 = cd4Count;\n      objValues.others = others;\n      axios\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);\n          //console.log(response.data)\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\n          //toast.success(\"HIV test successful\");\n          handleItemClick(\"post-test\", \"hiv-test\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\n          <form>\n            <div className=\"row\">\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\n              </LabelRibbon>\n              <br />\n              <div className=\"form-group  col-md-2\"></div>\n              <h4>Initial Test :</h4>\n              <div className=\"form-group mb-3 col-md-5\">\n                <FormGroup>\n                  <Label for=\"\"> Date </Label>\n                  <Input\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    value={initialTest1.date}\n                    onChange={handleInputChangeInitial}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    required\n                  />\n                  {errors.date !== \"\" ? (\n                    <span className={classes.error}>{errors.date}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {initialTest1.date && (\n                <div className=\"form-group  col-md-5\">\n                  <FormGroup>\n                    <Label>Result </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"result\"\n                      id=\"result\"\n                      value={initialTest1.result}\n                      onChange={handleInputChangeInitial}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                      disabled={initialTest1.date === \"\" ? true : false}\n                    >\n                      <option value={\"\"}></option>\n                      <option value=\"Yes\">Reactive</option>\n                      <option value=\"No\">Non Reactive</option>\n                    </select>\n                    {errors.result !== \"\" ? (\n                      <span className={classes.error}>{errors.result}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n              <div className=\"form-group  col-md-2\"></div>\n              {initialTest1.result === \"Yes\" && (\n                <>\n                  <h4>Confirmatory Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={confirmatoryTest.date}\n                        onChange={handleInputChangeConfirmatory}\n                        min={initialTest1.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                      />\n                      {errors.dateOfEac1 !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.dateOfEac1}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  {confirmatoryTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={confirmatoryTest.result}\n                          onChange={handleInputChangeConfirmatory}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              {confirmatoryTest.result === \"No\" && (\n                <>\n                  <h4>Tie Breaker Test:</h4>\n                  <div className=\"form-group mb-3 col-md-5\">\n                    <FormGroup>\n                      <Label for=\"\"> Date </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"date\"\n                        value={tieBreakerTest.date}\n                        onChange={handleInputChangeTie}\n                        min={confirmatoryTest.date}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        required\n                      />\n                    </FormGroup>\n                  </div>\n                  {tieBreakerTest.date && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>Result </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={tieBreakerTest.result}\n                          onChange={handleInputChangeTie}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"Yes\">Reactive</option>\n                          <option value=\"No\">Non Reactive</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-2\"></div>\n                </>\n              )}\n              <div className=\"row\">\n                <div className=\"form-group  col-md-12\">\n                  {initialTest1.result === \"No\" && (\n                    <>\n                      <b> Result : </b>\n                      <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                    </>\n                  )}\n                  {initialTest1.result === \"No\" &&\n                    confirmatoryTest.result === \"No\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest1.result === \"Yes\" &&\n                    confirmatoryTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n                        <div className=\"row\">\n                          <h4>RETESTING:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={confirmatoryTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  initialTest12.date2 === \"\" ? true : false\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      confirmatoryTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      tieBreakerTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {/* This is result for Test 1 */}\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\n                                                        <LabelRibbon color=\"green\" >\n                                                            Negative\n                                                        </LabelRibbon>\n                                                    )} */}\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"Yes\" && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\n                        <br />\n                        <hr />\n\n                        <div className=\"row\">\n                          <h4>Retesting:</h4>\n                          <div className=\"form-group mb-3 col-md-5\">\n                            <FormGroup>\n                              <Label for=\"\"> Date </Label>\n                              <Input\n                                type=\"date\"\n                                name=\"date2\"\n                                id=\"date2\"\n                                value={initialTest12.date2}\n                                onChange={handleInputChangeInitial2}\n                                min={tieBreakerTest.date}\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.25rem\",\n                                }}\n                                required\n                              />\n                              {errors.date2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.date2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-5\">\n                            <FormGroup>\n                              <Label>Result </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"result2\"\n                                id=\"result2\"\n                                value={initialTest12.result2}\n                                onChange={handleInputChangeInitial2}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                                disabled={\n                                  initialTest12.date2 === \"\" ? true : false\n                                }\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"Yes\">Reactive</option>\n                                <option value=\"No\">Non Reactive</option>\n                              </select>\n                              {errors.result2 !== \"\" ? (\n                                <span className={classes.error}>\n                                  {errors.result2}\n                                </span>\n                              ) : (\n                                \"\"\n                              )}\n                            </FormGroup>\n                          </div>\n                          <div className=\"form-group  col-md-2\"></div>\n                          {initialTest12.result2 === \"Yes\" && (\n                            <>\n                              <h4>Confirmatory Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={confirmatoryTest2.date2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    min={initialTest12.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={confirmatoryTest2.result2}\n                                    onChange={handleInputChangeConfirmatory2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      confirmatoryTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                          {confirmatoryTest2.result2 === \"No\" && (\n                            <>\n                              <h4>Tie Breaker Test 2:</h4>\n                              <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                  <Label for=\"\"> Date </Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"date2\"\n                                    id=\"date2\"\n                                    value={tieBreakerTest2.date2}\n                                    onChange={handleInputChangeTie2}\n                                    min={confirmatoryTest2.date2}\n                                    max={moment(new Date()).format(\n                                      \"YYYY-MM-DD\"\n                                    )}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.25rem\",\n                                    }}\n                                    required\n                                  />\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                  <Label>Result </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"result2\"\n                                    id=\"result2\"\n                                    value={tieBreakerTest2.result2}\n                                    onChange={handleInputChangeTie2}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                    disabled={\n                                      tieBreakerTest2.date2 === \"\"\n                                        ? true\n                                        : false\n                                    }\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Yes\">Reactive</option>\n                                    <option value=\"No\">Non Reactive</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                              <div className=\"form-group  col-md-2\"></div>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  {errors.prepOffered !== \"\" ? (\n                    <span className={classes.error}>{errors.prepOffered}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {errors.prepAccepted !== \"\" ? (\n                    <span className={classes.error}>{errors.prepAccepted}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {confirmatoryTest.result === \"No\" &&\n                    tieBreakerTest.result === \"No\" &&\n                    (initialTest1.result === \"Yes\" ||\n                      initialTest1.result !== \"\") && (\n                      <>\n                        <b> Result : </b>\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\n                        <br />\n                        <div className=\"row\">\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Offered{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepOffered\"\n                                id=\"prepOffered\"\n                                value={objValues.prepOffered}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                          {objValues.prepOffered !== \"\" &&\n                            objValues.prepOffered === \"true\" && (\n                              <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                  <Label>\n                                    Prep Accepted{\" \"}\n                                    <span style={{ color: \"red\" }}> *</span>\n                                  </Label>\n                                  <select\n                                    className=\"form-control\"\n                                    name=\"prepAccepted\"\n                                    id=\"prepAccepted\"\n                                    value={objValues.prepAccepted}\n                                    onChange={handleInputChange}\n                                    style={{\n                                      border: \"1px solid #014D88\",\n                                      borderRadius: \"0.2rem\",\n                                    }}\n                                  >\n                                    <option value={\"\"}></option>\n                                    <option value=\"true\">Yes</option>\n                                    <option value=\"false\">No</option>\n                                  </select>\n                                </FormGroup>\n                              </div>\n                            )}\n                        </div>\n                      </>\n                    )}\n                  {/* END of  result for Test 1 */}\n                  {/* This is result for Test 2 */}\n                  {initialTest12.result2 === \"No\" && (\n                    <>\n                      <b> Final Result : </b>\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      <br />\n                      <br />\n                      <div className=\"row\">\n                        <div className=\"form-group  col-md-5\">\n                          <FormGroup>\n                            <Label>\n                              Prep Offered{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepOffered\"\n                              id=\"prepOffered\"\n                              value={objValues.prepOffered}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                        {objValues.prepOffered !== \"\" &&\n                          objValues.prepOffered === \"true\" && (\n                            <div className=\"form-group  col-md-5\">\n                              <FormGroup>\n                                <Label>\n                                  Prep Accepted{\" \"}\n                                  <span style={{ color: \"red\" }}> *</span>\n                                </Label>\n                                <select\n                                  className=\"form-control\"\n                                  name=\"prepAccepted\"\n                                  id=\"prepAccepted\"\n                                  value={objValues.prepAccepted}\n                                  onChange={handleInputChange}\n                                  style={{\n                                    border: \"1px solid #014D88\",\n                                    borderRadius: \"0.2rem\",\n                                  }}\n                                >\n                                  <option value={\"\"}></option>\n                                  <option value=\"true\">Yes</option>\n                                  <option value=\"false\">No</option>\n                                </select>\n                              </FormGroup>\n                            </div>\n                          )}\n                      </div>\n                    </>\n                  )}\n                  {initialTest12.result2 === \"No\" &&\n                    confirmatoryTest2.result2 === \"No\" && (\n                      <>\n                        <b> FinalnResult : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {initialTest12.result2 === \"Yes\" &&\n                    confirmatoryTest2.result2 === \"Yes\" && (\n                      <>\n                        <b> Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                        <br />\n                      </>\n                    )}\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\n                                                        <LabelRibbon color=\"green\" >\n                                                            Negative\n                                                        </LabelRibbon>\n                                                    )} */}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"Yes\" && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\n                      </>\n                    )}\n                  {confirmatoryTest2.result2 === \"No\" &&\n                    tieBreakerTest2.result2 === \"No\" &&\n                    (initialTest12.result2 === \"Yes\" ||\n                      initialTest12.result2 !== \"\") && (\n                      <>\n                        <b>Final Result : </b>\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\n                      </>\n                    )}\n\n                  {/* END of  result for Test 2*/}\n                </div>\n              </div>\n              {initialTest1.result === \"No\" && (\n                <>\n                  <div className=\"row\">\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"prepOffered\"\n                          id=\"prepOffered\"\n                          value={objValues.prepOffered}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                    {objValues.prepOffered !== \"\" &&\n                      objValues.prepOffered === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Prep Accepted{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepAccepted\"\n                              id=\"prepAccepted\"\n                              value={objValues.prepAccepted}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                      )}\n                  </div>\n                </>\n              )}\n              {/* {confirmatoryTest.result === \"No\" &&\n                tieBreakerTest.result === \"No\" && (\n                  <>\n                    <div className=\"row\">\n                      <div className=\"form-group  col-md-6\">\n                        <FormGroup>\n                          <Label>\n                            Prep Offered{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"prepOffered\"\n                            id=\"prepOffered\"\n                            value={objValues.prepOffered}\n                            onChange={handleInputChange}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                        </FormGroup>\n                      </div>\n                      {objValues.prepOffered !== \"\" &&\n                        objValues.prepOffered === \"true\" && (\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Accepted{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepAccepted\"\n                                id=\"prepAccepted\"\n                                value={objValues.prepAccepted}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                        )}\n                    </div>\n                  </>\n                )} */}\n              {/* {initialTest1.result === \"No\" && (\n                <>\n                  <div className=\"row\">\n                    <div className=\"form-group  col-md-4\">\n                      <FormGroup>\n                        <Label>\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\n                        </Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"prepOffered\"\n                          id=\"prepOffered\"\n                          value={objValues.prepOffered}\n                          onChange={handleInputChange}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"true\">Yes</option>\n                          <option value=\"false\">No</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                    {objValues.prepOffered !== \"\" &&\n                      objValues.prepOffered === \"true\" && (\n                        <div className=\"form-group  col-md-4\">\n                          <FormGroup>\n                            <Label>\n                              Prep Accepted{\" \"}\n                              <span style={{ color: \"red\" }}> *</span>\n                            </Label>\n                            <select\n                              className=\"form-control\"\n                              name=\"prepAccepted\"\n                              id=\"prepAccepted\"\n                              value={objValues.prepAccepted}\n                              onChange={handleInputChange}\n                              style={{\n                                border: \"1px solid #014D88\",\n                                borderRadius: \"0.2rem\",\n                              }}\n                            >\n                              <option value={\"\"}></option>\n                              <option value=\"true\">Yes</option>\n                              <option value=\"false\">No</option>\n                            </select>\n                          </FormGroup>\n                        </div>\n                      )}\n                  </div>\n                </>\n              )} */}\n              {confirmatoryTest2.result2 === \"No\" &&\n                tieBreakerTest2.result2 === \"No\" && (\n                  <>\n                    <div className=\"row\">\n                      <div className=\"form-group  col-md-6\">\n                        <FormGroup>\n                          <Label>\n                            Prep Offered{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <select\n                            className=\"form-control\"\n                            name=\"prepOffered\"\n                            id=\"prepOffered\"\n                            value={objValues.prepOffered}\n                            onChange={handleInputChange}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          >\n                            <option value={\"\"}></option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                          </select>\n                        </FormGroup>\n                      </div>\n                      {objValues.prepOffered !== \"\" &&\n                        objValues.prepOffered === \"true\" && (\n                          <div className=\"form-group  col-md-6\">\n                            <FormGroup>\n                              <Label>\n                                Prep Accepted{\" \"}\n                                <span style={{ color: \"red\" }}> *</span>\n                              </Label>\n                              <select\n                                className=\"form-control\"\n                                name=\"prepAccepted\"\n                                id=\"prepAccepted\"\n                                value={objValues.prepAccepted}\n                                onChange={handleInputChange}\n                                style={{\n                                  border: \"1px solid #014D88\",\n                                  borderRadius: \"0.2rem\",\n                                }}\n                              >\n                                <option value={\"\"}></option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                            </FormGroup>\n                          </div>\n                        )}\n                    </div>\n                  </>\n                )}\n              {showCD4Count && (\n                <>\n                  <LabelRibbon\n                    as=\"a\"\n                    color=\"blue\"\n                    style={{ width: \"106%\", height: \"35px\" }}\n                    ribbon\n                  >\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\n                  </LabelRibbon>\n                  <br /> <br />\n                  <div className=\"form-group  col-md-5\">\n                    <FormGroup>\n                      <Label>CD4 Count </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"cd4Count\"\n                        id=\"cd4Count\"\n                        value={cd4Count.cd4Count}\n                        onChange={handleInputChangeCd4Count}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"Semi-Quantitative\">\n                          Semi-Quantitative\n                        </option>\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\n                    <div className=\"form-group  col-md-5\">\n                      <FormGroup>\n                        <Label>CD4 Count Value</Label>\n                        <select\n                          className=\"form-control\"\n                          name=\"cd4SemiQuantitative\"\n                          id=\"cd4SemiQuantitative\"\n                          value={cd4Count.cd4SemiQuantitative}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.2rem\",\n                          }}\n                        >\n                          <option value={\"\"}></option>\n                          <option value=\"<200\">{\"<200\"}</option>\n                          <option value=\">=200\">{\">=200\"}</option>\n                        </select>\n                      </FormGroup>\n                    </div>\n                  )}\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">CD4 Count Value</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"cd4FlowCyteometry\"\n                          id=\"cd4FlowCyteometry\"\n                          value={cd4Count.cd4FlowCyteometry}\n                          onChange={handleInputChangeCd4Count}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                  )}\n                  <div className=\"form-group  col-md-7\"></div>\n                </>\n              )}\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"syphilisTestResult\"\n                    id=\"syphilisTestResult\"\n                    value={syphills.syphilisTestResult}\n                    onChange={handleInputChangeSyphills}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Reactive</option>\n                    <option value=\"No\">Non-Reactive</option>\n                  </select>\n                  {errors.syphilisTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.syphilisTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\n              </LabelRibbon>\n              <br /> <br />\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis B virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisBTestResult\"\n                    id=\"hepatitisBTestResult\"\n                    value={hepatitis.hepatitisBTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisBTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisBTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Hepatitis C virus test result{\" \"}\n                    <span style={{ color: \"red\" }}> </span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"hepatitisCTestResult\"\n                    id=\"hepatitisCTestResult\"\n                    value={hepatitis.hepatitisCTestResult}\n                    onChange={handleInputChangeHepatitis}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"Yes\">Positive</option>\n                    <option value=\"No\">Negative</option>\n                  </select>\n                  {errors.hepatitisCTestResult !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.hepatitisCTestResult}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <LabelRibbon\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\n              </LabelRibbon>\n              <br /> <br />\n              {props.patientObj.riskStratificationResponseDto !== null &&\n                props.patientObj.riskStratificationResponseDto\n                  .communityEntryPoint !== \"\" && (\n                  <>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Longitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"longitude\"\n                          id=\"longitude\"\n                          value={others.longitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                        <Label for=\"\">Latitude</Label>\n                        <Input\n                          type=\"number\"\n                          name=\"latitude\"\n                          id=\"latitude\"\n                          value={others.latitude}\n                          onChange={handleInputChangeOthers}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                        />\n                      </FormGroup>\n                    </div>\n                  </>\n                )}\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">Adhoc Code</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"adhocCode\"\n                    id=\"adhocCode\"\n                    value={others.adhocCode}\n                    onChange={handleInputChangeOthers}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  {patientAge <= 15 ? (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Button\n                        content=\"Back\"\n                        icon=\"left arrow\"\n                        labelPosition=\"left\"\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                        onClick={() =>\n                          handleItemClick(\n                            \"pre-test-counsel\",\n                            \"pre-test-counsel\"\n                          )\n                        }\n                      />\n                    </>\n                  )}\n\n                  <Button\n                    content=\"Save & Continue\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default HivTestResult;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["821","822","823","824","825","826","827"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    //console.log(\"data1\", props.patientObj)\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \n            } \n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n \n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            \n            \n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                \n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n                                         \n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport { token, url as baseUrl } from \"../../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Modal } from \"react-bootstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n  success: {\n    color: \"green\",\n    fontSize: \"12.8px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst BasicInfo = (props) => {\n  console.log(\"basic\", props.patientObj.clientCode);\n  console.log(\"############# Continues model\")\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n  //const [hideNumChild, setHideNumChild] = useState(false);\n  const [kP, setKP] = useState([]);\n  const [enrollSetting, setEnrollSetting] = useState([]);\n  const [sourceReferral, setSourceReferral] = useState([]);\n  const [gender, setGender] = useState([]);\n  const [counselingType, setCounselingType] = useState([]);\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\n  const [indexTesting, setIndexTesting] = useState([]);\n  let temp = { ...errors };\n  const [clientCodeetail, setclientCodeetail] = useState(\"\");\n  const [clientCodeetail2, setclientCodeetail2] = useState(\"\");\n  const [clientCodeCheck, setClientCodeCheck] = useState(\"\");\n  const [createdCode, setCreatedCode] = useState(\"\");\n  const [facilityCode, setFacilityCode] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(null);\n\n  const [objValues, setObjValues] = useState({\n    active: true,\n    personId: props.patientObj.personId,\n    clientCode:\n      props.patientObj && props.patientObj.clientCode\n        ? props.patientObj.clientCode\n        : \"\",\n    breastFeeding:\n      props.patientObj && props.patientObj.breastFeeding\n        ? props.patientObj.breastFeeding\n        : \"\",\n    dateVisit:\n      props.patientObj && props.patientObj.dateVisit\n        ? props.patientObj.dateVisit\n        : \"\",\n    firstTimeVisit:\n      props.patientObj && props.patientObj.firstTimeVisit\n        ? props.patientObj.firstTimeVisit\n        : \"\",\n    indexClient:\n      props.patientObj && props.patientObj.indexClient\n        ? props.patientObj.indexClient\n        : \"\",\n    numChildren:\n      props.patientObj && props.patientObj.numChildren\n        ? props.patientObj.numChildren\n        : \"\",\n    numWives:\n      props.patientObj && props.patientObj.numWives\n        ? props.patientObj.numWives\n        : \"\",\n    pregnant:\n      props.patientObj && props.patientObj.pregnant\n        ? props.patientObj.pregnant\n        : \"\",\n    previouslyTested: props.patientObj ? props.patientObj.previouslyTested : \"\",\n    referredFrom: props.patientObj ? props.patientObj.referredFrom : \"\",\n    riskAssessment:\n      props.patientObj && props.patientObj.riskAssessment\n        ? props.patientObj.riskAssessment\n        : {},\n    riskStratificationCode:\n      props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\n    targetGroup:\n      props.patientObj && props.patientObj.targetGroup\n        ? props.patientObj.targetGroup\n        : \"\",\n    testingSetting: props.patientObj ? props.patientObj.testingSetting : \"\",\n    typeCounseling: props.patientObj ? props.patientObj.typeCounseling : \"\",\n    relationWithIndexClient: props.patientObj\n      ? props.patientObj.relationWithIndexClient\n      : \"\",\n    indexClientCode: \"\",\n  });\n\n  const CreateClientCode = () => {\n    let facilityShortCode = \"\";\n    axios\n      .get(`${baseUrl}hts/get-facility-code`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        // console.log('Response Facility Short Code **** ', response.data);\n        setFacilityCode(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    let visitDate = new Date(props.patientObj.dateVisit);\n\n    let modality = props.patientObj.modality;\n    let modalityCode = \"\";\n    if (modality?.includes(\"STI\")) {\n      modalityCode = \"STI\";\n    } else if (modality?.includes(\"EMERGENCY\")) {\n      modalityCode = \"EME\";\n    } else if (modality?.includes(\"INDEX\")) {\n      modalityCode = \"IND\";\n    } else if (modality?.includes(\"INPATIENT\")) {\n      modalityCode = \"INP\";\n    } else if (modality?.includes(\"PMTCT\")) {\n      modalityCode = \"PMTCT\";\n    } else if (modality?.includes(\"TB\")) {\n      modalityCode = \"TB\";\n    } else if (modality?.includes(\"VCT\")) {\n      modalityCode = \"VCT\";\n    } else if (modality?.includes(\"MOBILE\")) {\n      modalityCode = \"MOB\";\n    } else if (modality?.includes(\"SNS\")) {\n      modalityCode = \"SNS\";\n    } else if (modality?.includes(\"OTHER\")) {\n      modalityCode = \"OTH\";\n    }\n\n    let month = visitDate.getMonth();\n    let year = visitDate.getFullYear();\n    let codeCreated =\n      \"C\" + facilityCode + \"/\" + modalityCode + \"/\" + month + \"/\" + year + \"/\";\n    setCreatedCode(codeCreated);\n    setObjValues({ ...objValues, clientCode: createdCode });\n    //setObjValues({ ...objValues, clientCode: props.clientCode });\n    // console.log('Created Code **** ', createdCode);\n  };\n\n  useEffect(() => {\n    console.log(\"############# Continues model\")\n\n    KP();\n    EnrollmentSetting();\n    SourceReferral();\n    Genders();\n    CounselingType();\n    PregnancyStatus();\n    IndexTesting();\n    setObjValues({\n      ...props.patientObj,\n      clientCode: props.patientObj.clientCode,\n    });\n    CreateClientCode();\n  }, [props.patientObj, facilityCode]);\n  //Get list of KP\n  const KP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setKP(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of KP\n  const PregnancyStatus = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPregnancyStatus(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  //Get list of KP\n  const CounselingType = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setCounselingType(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of HIV STATUS ENROLLMENT\n  const EnrollmentSetting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEnrollSetting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  //Get list of Source of Referral\n  const SourceReferral = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSourceReferral(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of Genders from\n  const Genders = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setGender(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"indexClientCode\" && e.target.value !== \"\") {\n      async function getIndexClientCode() {\n        const indexClientCode = e.target.value;\n        const response = await axios.get(\n          `${baseUrl}hts/client/${indexClientCode}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"text/plain\",\n            },\n          }\n        );\n        if (response.data !== \"Record Not Found\") {\n          setclientCodeetail2(\"\");\n          setclientCodeetail(response.data);\n        } else {\n          setclientCodeetail(\"\");\n          setclientCodeetail2(response.data);\n        }\n      }\n      getIndexClientCode();\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n\n  /*****  Validation  */\n  const validate = () => {\n    //HTS FORM VALIDATION\n\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\n    temp.typeCounseling = objValues.typeCounseling\n      ? \"\"\n      : \"This field is required.\";\n    temp.testingSetting = objValues.testingSetting\n      ? \"\"\n      : \"This field is required.\";\n    temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\";\n    temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\";\n    temp.previouslyTested = objValues.previouslyTested\n      ? \"\"\n      : \"This field is required.\";\n    temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\";\n    temp.firstTimeVisit = objValues.firstTimeVisit\n      ? \"\"\n      : \"This field is required.\";\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  //checkClientCode\n  //   const checkClientCode = (e) => {\n  //     async function getIndexClientCode() {\n  //       const indexClientCode = objValues.clientCode;\n  //       const response = await axios.get(\n  //         `${baseUrl}hts/client/${indexClientCode}`,\n  //         {\n  //           headers: {\n  //             Authorization: `Bearer ${token}`,\n  //             \"Content-Type\": \"text/plain\",\n  //           },\n  //         }\n  //       );\n  //       // if(response.data!=='Record Not Found'){\n  //       //     setClientCodeCheck(\"Client code already exist\")\n  //       // }else{\n  //       //     setClientCodeCheck(\"\")\n  //       // }\n  //     }\n  //     getIndexClientCode();\n  //   };\n  //checkClientCode\n  const checkClientCode = (e) => {\n    let code = \"\";\n    if (e.target.name === \"serialNumber\") {\n      code = createdCode + e.target.value;\n      setCreatedCode(code);\n      console.log(\"Code created is &&&& \", createdCode);\n      setObjValues({ ...objValues, clientCode: code });\n    }\n    async function getIndexClientCode() {\n      const indexClientCode = objValues.clientCode;\n      console.log(indexClientCode);\n      const response = await axios.get(\n        `${baseUrl}hts/client/${indexClientCode}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"text/plain\",\n          },\n        }\n      );\n    }\n    getIndexClientCode();\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const patientForm = {\n      clientCode: objValues.clientCode,\n      dateVisit: objValues.dateVisit,\n      extra: {},\n      firstTimeVisit: objValues.firstTimeVisit,\n      indexClient: objValues.indexClient,\n      numChildren: objValues.numChildren,\n      numWives: objValues.numWives,\n      personId: props.patientObject.personId,\n      hospitalNumber: objValues.clientCode,\n      previouslyTested: objValues.previouslyTested,\n      referredFrom: objValues.referredFrom,\n      targetGroup: objValues.targetGroup,\n      testingSetting: objValues.testingSetting,\n      typeCounseling: objValues.typeCounseling,\n      breastFeeding: objValues.breastFeeding,\n      pregnant: objValues.pregnant,\n      indexClientCode: objValues.indexClientCode,\n      relationWithIndexClient: objValues.relationWithIndexClient,\n      riskStratificationCode:\n        props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\n    };\n\n    if (validate()) {\n      setSaving(true);\n      axios\n        .post(`${baseUrl}hts`, patientForm, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.setPatientObj(response.data);\n          //toast.success(\"HTS Test successful\");\n          if (props.patientAge > 15) {\n            handleItemClick(\"pre-test-counsel\", \"basic\");\n          } else {\n            handleItemClick(\"hiv-test\", \"basic\");\n          }\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    } else {\n      toast.error(\"All fields are required\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Target Group <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"targetGroup\"\n                    id=\"targetGroup\"\n                    onChange={handleInputChange}\n                    value={objValues.targetGroup}\n                    disabled\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    {/* <option value={\"\"}></option>\n                                        {kP.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))} */}\n                    {(props.sex === \"Female\" || props.sex === \"female\") && (\n                      <>\n                        {\" \"}\n                        {kP\n                          .filter((x) => x.display !== \"MSM\")\n                          .map((value) => (\n                            <option key={value.id} value={value.code}>\n                              {value.display}\n                            </option>\n                          ))}\n                      </>\n                    )}\n\n                    {(props.sex === \"Male\" || props.sex === \"male\") && (\n                      <>\n                        {\" \"}\n                        {kP\n                          .filter((x) => x.display !== \"FSW\")\n                          .map((value) => (\n                            <option key={value.id} value={value.code}>\n                              {value.display}\n                            </option>\n                          ))}{\" \"}\n                      </>\n                    )}\n                  </select>\n                  {errors.targetGroup !== \"\" ? (\n                    <span className={classes.error}>{errors.targetGroup}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">\n                    Serial Number <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"serialNumber\"\n                    id=\"serialNumber\"\n                    value={serialNumber}\n                    //value={Math.floor(Math.random() * 1093328)}\n                    onBlur={checkClientCode}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">\n                    Client Code <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"clientCode\"\n                    id=\"clientCode\"\n                    value={objValues.clientCode}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    //readOnly={props.activePage.actionType === \"view\"}\n                  />\n                  {errors.clientCode !== \"\" ? (\n                    <span className={classes.error}>{errors.clientCode}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Referred From <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"referredFrom\"\n                    id=\"referredFrom\"\n                    onChange={handleInputChange}\n                    value={objValues.referredFrom}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {sourceReferral.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.referredFrom !== \"\" ? (\n                    <span className={classes.error}>{errors.referredFrom}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Setting <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"testingSetting\"\n                    id=\"testingSetting\"\n                    value={objValues.testingSetting}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {enrollSetting.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.testingSetting !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.testingSetting}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <Label for=\"\">\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"date\"\n                    name=\"dateVisit\"\n                    id=\"dateVisit\"\n                    value={objValues.dateVisit}\n                    onChange={handleInputChange}\n                    min={objValues.dateOfRegistration}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                  />\n                  {errors.dateVisit !== \"\" ? (\n                    <span className={classes.error}>{errors.dateVisit}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\n                            <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Gender</Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"genderId\"\n                                    id=\"genderId\"\n                                    value={objValues.genderId}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                >\n                                    <option value={\"\"}></option>\n                                    {gender.map((value) => (\n                                        <option key={value.id} value={value.id}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </select>\n                               \n                            </FormGroup>\n                            </div>\n                            )} */}\n\n              {props.patientAge > 9 && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>Number of Children {\"<5\"} years</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"numChildren\"\n                      id=\"numChildren\"\n                      min={0}\n                      value={objValues.numChildren}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                    />\n                  </FormGroup>\n                </div>\n              )}\n              {props.patientAge > 9 &&\n                (props.patientObject.gender === \"Male\" ||\n                  props.patientObject.gender === \"MALE\" ||\n                  props.patientObject.gender === \"male\") && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Number of wives/co-wives</Label>\n                      <Input\n                        type=\"number\"\n                        name=\"numWives\"\n                        id=\"numWives\"\n                        min={0}\n                        value={objValues.numWives}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                )}\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Index Testing <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"indexClient\"\n                    id=\"indexClient\"\n                    value={objValues.indexClient}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.indexClient !== \"\" ? (\n                    <span className={classes.error}>{errors.indexClient}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.indexClient === \"true\" && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship of the index client</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relationWithIndexClient\"\n                        id=\"relationWithIndexClient\"\n                        value={objValues.relationWithIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Index Client Code/ID</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"indexClientCode\"\n                        id=\"indexClientCode\"\n                        value={objValues.indexClientCode}\n                        onBlur={checkClientCode}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {clientCodeCheck !== \"\" ? (\n                        <span className={classes.error}>{clientCodeCheck}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n              {(props.patientObject.gender === \"female\" ||\n                props.patientObject.gender === \"FEMALE\" ||\n                props.patientObject.gender === \"Female\") && (\n                <>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Pregnant Status</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"pregnant\"\n                        id=\"pregnant\"\n                        value={objValues.pregnant}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {pregnancyStatus.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {/* objValues.pregnant === \"\" && (objValues.pregnant!== 73 || objValues.pregnant!== '73') && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Breast Feeding</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"breastFeeding\"\n                                        id=\"breastFeeding\"\n                                        value={objValues.breastFeeding}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )*/}\n                </>\n              )}\n\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    First time visit <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"firstTimeVisit\"\n                    id=\"firstTimeVisit\"\n                    value={objValues.firstTimeVisit}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.firstTimeVisit !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.firstTimeVisit}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Previously tested within the last 3 months{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"previouslyTested\"\n                    id=\"previouslyTested\"\n                    value={objValues.previouslyTested}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    <option value=\"true\">YES</option>\n                    <option value=\"false\">NO</option>\n                  </select>\n                  {errors.previouslyTested !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.previouslyTested}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Type of Counseling <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"typeCounseling\"\n                    id=\"typeCounseling\"\n                    value={objValues.typeCounseling}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {counselingType.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.typeCounseling !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.typeCounseling}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                  <Button\n                    content=\"Back\"\n                    icon=\"left arrow\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    onClick={() => handleItemClick(\"risk\", \"risk\")}\n                  />\n                  <Button\n                    content=\"Save & Continue\"\n                    type=\"submit\"\n                    icon=\"right arrow\"\n                    labelPosition=\"right\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default BasicInfo;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js",["848","849"],"export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate(); // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      if (monthGap > 0) {\r\n        return assumedAge;\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge;\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n        if (dateGap > 0) {\r\n          return assumedAge;\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge;\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js",["850","851","852","853","854"],"import React, { useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\n\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Button from '@material-ui/core/Button';\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport PNSList from \"./PNSlist\";\r\n\r\nconst PNSHistory = (props) => {\r\n  const [activePage, setActivePage] = useState(\"list\");\r\n  const handleIClickPage = (activeItem) => {\r\n    setActivePage(activeItem);\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleDone = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"home\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={12}>\r\n          {activePage === \"list\" && (\r\n            <PNSList\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              handleIClickPage={handleIClickPage}\r\n              patientObj={props.patientObj}\r\n              handleItemClick={handleItemClick}\r\n              setRow={props.setRow}\r\n            />\r\n          )}\r\n          \r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"form-group mb-3 col-md-12\">\r\n              <Button\r\n                content=\"Back\"\r\n                icon=\"left arrow\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                onClick={() =>\r\n                  handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                }\r\n              />\r\n              <Button\r\n                content=\"Done\"\r\n                icon=\"list\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                onClick={() => handleDone()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PNSHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js",["855","856","857","858","859"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PNSList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"pns\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-pns\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(\r\n        `${baseUrl}hts-personal-notification-service/${recordSelected.id}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>Add New PNS </span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client contact\"\r\n          columns={[\r\n            { title: \"Partner Name\", field: \"date\" },\r\n            { title: \"Partner ID\", field: \"age\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Partner Address\", field: \"address\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.htsClientInformation.partnerName,\r\n              age: row.partnerId,\r\n              // phone: row.phoneNumber,\r\n              address: row.htsClientInformation.partnerAddress,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                        style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                        primary\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown\r\n                          item\r\n                          text=\"Action\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => LoadViewPage(row, \"view\")}\r\n                            >\r\n                              {\" \"}\r\n                              <Icon name=\"eye\" />\r\n                              View\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"update\")}\r\n                            >\r\n                              <Icon name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                              <Icon name=\"delete\" />\r\n                              Delete\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PNSList;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js",["860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nimport { calculate_age } from \"../../../utils\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst ViewPNSForm = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n  const [setting, setSetting] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setIsClientCurrentlyOnHiv] = useState(true);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [roleProvider, setRoleProvider] = useState([]);\r\n  const [facilityInfo, setFacilityInfo] = useState(\r\n    props?.organizationInfo.currentOrganisationUnitName\r\n  );\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const [partnerId, setPartnerId] = useState(\"\");\r\n\r\n  let temp = { ...errors };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n  const [contactTracing, setContactTracing] = useState({\r\n    partnerPhoneNumber: \"\",\r\n    numberOfAttempt: \"\",\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    acceptedHts: \"\",\r\n    offeredPns: \"\",\r\n    acceptedPns: \"\",\r\n    address: \"\", //\r\n    contactTracing: {\r\n      partnerPhoneNumber: \"\",\r\n      numberOfAttempt: \"\",\r\n    },\r\n    dateEnrollmentOnART: \"\",\r\n    datePartnerTested: \"\",\r\n    dob: props?.basicInfo?.personResponseDto?.dateOfBirth,\r\n    facilityId: props?.organizationInfo.currentOrganisationUnitId,\r\n    phoneNumber:\r\n      props?.basicInfo?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n    alternatePhoneNumber: \"\",\r\n    firstName: props?.basicInfo?.personResponseDto?.firstName,\r\n    hivTestResult: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    indexClientId: props?.basicInfo?.indexClientCode,\r\n    intermediatePartnerViolence: {\r\n      DeprivedOfBasicNeedsEmotional: \"\",\r\n      DeniedBasicNecessitiesForHealthcareEmotional: \"\",\r\n      ForcedSexualActsSexual: \"\",\r\n    },\r\n    knownHivPositive: \"\",\r\n    lastName: props?.basicInfo?.personResponseDto?.surname,\r\n    middleName: props?.basicInfo?.personResponseDto?.otherName,\r\n    notificationMethod: \"\",\r\n    partnerId: \"\",\r\n    relationshipToIndexClient: \"\",\r\n    sex: props?.basicInfo?.personResponseDto?.gender.id,\r\n    htsClientInformation: {\r\n      testingSetting: \"\",\r\n      providerNameCompletingForm: \"\",\r\n      providerRoleCompletingForm: \"\",\r\n      maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n      descriptiveResidentialAddress:\r\n        props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n      dateIndexClientConfirmedHiv: \"\",\r\n      isClientCurrentlyOnHiv: \"\",\r\n      DateOfTreatmentInitiation: \"\",\r\n      recencyTesting: \"\",\r\n      artEnrollmentNumber: \"\",\r\n      facilityOfEnrollment: \"\",\r\n      numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n\r\n      partnerName: \"\",\r\n      partnerSex: \"\",\r\n      partnerAge: \"\",\r\n      partnerAddress: \"\",\r\n      relativeToIndexClient: \"\",\r\n      contactTracingType: \"\",\r\n      freedomDenial: \"\",\r\n      threatenToHurt: \"\",\r\n      sexuallyUncomfortable: \"\",\r\n\r\n      //\r\n\r\n      partnerNotification: \"\",\r\n      viralllyUnsppressed: \"\",\r\n\r\n      numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    },\r\n  });\r\n\r\n  const [htsClientInformation, sethtsClientInformation] = useState({\r\n    testingSetting: \"\",\r\n    providerNameCompletingForm: \"\",\r\n    providerRoleCompletingForm: \"\",\r\n    maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n    descriptiveResidentialAddress:\r\n      props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n    dateIndexClientConfirmedHiv: \"\",\r\n    isClientCurrentlyOnHiv: \"\",\r\n    DateOfTreatmentInitiation: \"\",\r\n    recencyTesting: \"\",\r\n    artEnrollmentNumber: \"\",\r\n    facilityOfEnrollment: \"\",\r\n    numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n    partnerName: \"\",\r\n    partnerSex: \"\",\r\n    partnerAge: \"\",\r\n    partnerAddress: \"\",\r\n    relativeToIndexClient: \"\",\r\n    contactTracingType: \"\",\r\n    freedomDenial: \"\",\r\n    threatenToHurt: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n\r\n    //\r\n\r\n    partnerNotification: \"\",\r\n    viralllyUnsppressed: \"\",\r\n\r\n    numberOfPartnerIdentifiedFromClientIndex: \"\",\r\n  });\r\n\r\n  //   const getPNSInfo = (id) => {\r\n  //     axios\r\n  //       .get(`${baseUrl}hts-personal-notification-service/${id}/hts-client`, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((response) => {\r\n  //         setMaritalStatus(response.data);\r\n  //       })\r\n  //       .catch((error) => {});\r\n  //   };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFacilityInfo(response.data.currentOrganisationUnitName);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPartnerId = (id) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/get-partner-id?htsClientId=${props.patientObj?.id}&clientCode=${props?.patientObj?.clientCode}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPartnerId(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getPartnerId();\r\n    Sex();\r\n    getStates();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n    getMaritalStatus();\r\n    PROVIDER_ROLE();\r\n    viewPnIsnfo();\r\n    // if (props.patientObj) {\r\n    //   if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n    //     setHivTestDate(props.patientObj.dateVisit);\r\n    //   } else {\r\n    //     setHivTestDate(\"\");\r\n    //   }\r\n\r\n    //   setObjValues({\r\n    //     ...objValues,\r\n    //     firstName: props.patientObj.personResponseDto.firstName,\r\n    //     middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    //     lastName: props?.patientObj?.personResponseDto?.surname,\r\n    //     sex: props?.patientObj?.personResponseDto?.gender.id,\r\n    //     dob: props?.patientObj?.personResponseDto?.dateOfBirth,\r\n    //     phoneNumber:\r\n    //       props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n    //         ?.value,\r\n    //   });\r\n\r\n    //   sethtsClientInformation({\r\n    //     ...htsClientInformation,\r\n    //     maritalStatus: props?.patientObj?.personResponseDto?.maritalStatus.id,\r\n    //     descriptiveResidentialAddress:\r\n    //       props?.patientObj?.personResponseDto?.address?.address[0].city,\r\n    //   });\r\n\r\n    // offeredPns: props.patientObj.personResponseDto.firstName\r\n\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // })\r\n    // }\r\n\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      getProvincesId(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  useEffect(() => {\r\n    loadFamilyIndexSetting();\r\n  }, []);\r\n\r\n  // console.log(props.basicInfo);\r\n  const handleHTSClientInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    sethtsClientInformation({\r\n      ...htsClientInformation,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const PROVIDER_ROLE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PROVIDER_ROLE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setRoleProvider(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setErrors({ ...temp, stateId: \"\" });\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    // setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  console.log(props);\r\n  //Get all recorcd by htsClientId\r\n  const getAllRecordByHTSClientId = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/{id}/hts-client`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get view pns info\r\n  const viewPnIsnfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-personal-notification-service/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setObjValues(response.data);\r\n        sethtsClientInformation(response.data.htsClientInformation);\r\n        setContactTracing(response.data.contactTracing);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n\r\n  const handleInputContactChanges = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setContactTracing({ ...contactTracing, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (\r\n      e.target.name === \"providerNameCompletingForm\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"clientName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    // temp.stateId = objValues.stateId ? \"\" : \"This field is required.\";\r\n    // temp.lga = objValues.lga ? \"\" : \"This field is required.\";\r\n    // temp.facilityId = objValues.facilityId ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = htsClientInformation.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.providerRoleCompletingForm =\r\n      htsClientInformation.providerRoleCompletingForm\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    temp.relativeToIndexClient = htsClientInformation.relativeToIndexClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   objValues.htsClientInformation = htsClientInformation;\r\n  //   objValues.contactTracing = contactTracing;\r\n\r\n  //   console.log(objValues);\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    objValues.htsClientInformation = htsClientInformation;\r\n    objValues.contactTracing = contactTracing;\r\n    objValues.htsClientId =\r\n      props && props.patientObj ? props.patientObj?.id : \"\";\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n      axios\r\n        .put(\r\n          `${baseUrl}hts-personal-notification-service/${props.row.row.id}`,\r\n          objValues,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n\r\n          handleItemClick(\"pns-history\");\r\n\r\n          if (\r\n            objValues.offeredPns !== \"No\" &&\r\n            objValues.acceptedPns !== \"No\"\r\n            // objValues.elicited !== \"No\"\r\n          ) {\r\n            // setElicitedCount(elicitedCount + 1);\r\n            // setObjValues({\r\n            //   providerNameCompletingForm: \"\",\r\n            //   clientName: \"\",\r\n            //   lastName: \"\",\r\n            //   dob: \"\",\r\n            //   phoneNumber: \"\",\r\n            //   altPhoneNumber: \"\",\r\n            //   sex: \"\",\r\n            //   htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n            // physicalHurt: \"\",\r\n            // threatenToHurt: \"\",\r\n            // descriptiveResidentialAddress: \"\",\r\n            // hangOutSpots: \"\",\r\n            // relativeToIndexClient: \"\",\r\n            // currentlyLiveWithPartner: \"\",\r\n            // partnerTestedPositive: \"\",\r\n            // sexuallyUncomfortable: \"\",\r\n            // notificationMethod: \"\",\r\n            // datePartnerCameForTesting: \"\",\r\n            // age: \"\",\r\n            // isDateOfBirthEstimated: false,\r\n            // //offeredPns:\"\",\r\n            //acceptedPns:\"\",\r\n            //elicited: \"\",\r\n            // stateId: \"\",\r\n            // lga: \"\",\r\n            // datePartnerTested: \"\",\r\n            //   // partnerCurrentHivStatus: \"\",\r\n            // });\r\n          }\r\n          //handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Partner Notification Services\r\n            {/*<Button*/}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    color=\"primary\"*/}\r\n            {/*    className=\" float-end  mr-2 mt-2\"*/}\r\n            {/*    onClick={() => handleItemClickPage(\"list\")}*/}\r\n            {/*//startIcon={<FaUserPlus size=\"10\"/>}*/}\r\n            {/*>*/}\r\n            {/*    <span style={{ textTransform: \"capitalize\" }}>*/}\r\n            {/*        {\" \"}*/}\r\n            {/*        Back To Client List*/}\r\n            {/*    </span>*/}\r\n            {/*</Button>*/}\r\n          </h2>\r\n\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered PNS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredPns\"\r\n                    id=\"offeredPns\"\r\n                    value={objValues.offeredPns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.row.action === \"view\" ? true : false}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredPns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredPns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.offeredPns !== \"\" && objValues.offeredPns !== \"No\" && (\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted PNS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedPns\"\r\n                      id=\"acceptedPns\"\r\n                      value={objValues.acceptedPns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.row.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/*{objValues.acceptedPns !== \"\" &&*/}\r\n              {/*    objValues.acceptedPns !== \"No\" && (*/}\r\n              {/*        <div className=\"form-group  col-md-4\">*/}\r\n              {/*            <FormGroup>*/}\r\n              {/*                <Label>*/}\r\n              {/*                    Elicited ? <span style={{ color: \"red\" }}> </span>*/}\r\n              {/*                </Label>*/}\r\n              {/*                <select*/}\r\n              {/*                    className=\"form-control\"*/}\r\n              {/*                    name=\"elicited\"*/}\r\n              {/*                    id=\"elicited\"*/}\r\n              {/*                    value={objValues.elicited}*/}\r\n              {/*                    onChange={handleInputChange}*/}\r\n              {/*                    style={{*/}\r\n              {/*                        border: \"1px solid #014D88\",*/}\r\n              {/*                        borderRadius: \"0.2rem\",*/}\r\n              {/*                    }}*/}\r\n              {/*                >*/}\r\n              {/*                    <option value={\"\"}></option>*/}\r\n              {/*                    {consent.map((value) => (*/}\r\n              {/*                        <option key={value.id} value={value.display}>*/}\r\n              {/*                            {value.display}*/}\r\n              {/*                        </option>*/}\r\n              {/*                    ))}*/}\r\n              {/*                </select>*/}\r\n              {/*            </FormGroup>*/}\r\n              {/*        </div>*/}\r\n              {/*    )}*/}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.acceptedPns !== \"\" &&\r\n                objValues.acceptedPns !== \"No\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"state\"\r\n                          id=\"state\"\r\n                          onChange={getProvinces}\r\n                          value={stateInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {states.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          LGA <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lga\"\r\n                          id=\"lga\"\r\n                          value={lgaInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.lga !== \"\" ? (\r\n                          <span className={classes.error}>{errors.lga}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"providerNameCompletingForm\">\r\n                          Facility Name\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"facilityId\"\r\n                          id=\"facilityId\"\r\n                          value={facilityInfo}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.facilityId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.facilityId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Setting <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"testingSetting\"\r\n                          id=\"testingSetting\"\r\n                          value={htsClientInformation.testingSetting}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {setting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.testingSetting !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.testingSetting}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Name of provider completing the form\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"providerNameCompletingForm\"\r\n                          id=\"providerNameCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerNameCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Role of the provider completing Form\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"providerRoleCompletingForm\"\r\n                          id=\"providerRoleCompletingForm\"\r\n                          value={\r\n                            htsClientInformation.providerRoleCompletingForm\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {roleProvider.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.providerRoleCompletingForm !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.providerRoleCompletingForm}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 1 : INFORMATION ABOUT THE INDEX CLIENT\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Firstname </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={objValues.firstName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Middlename </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"middleName\"\r\n                          id=\"middleName\"\r\n                          value={objValues.middleName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Client's Lastname</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastName\"\r\n                          value={objValues.lastName}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Index Client ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientId\"\r\n                          id=\"indexClientId\"\r\n                          value={objValues.indexClientId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={objValues.sex}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                    {/*    <FormGroup>*/}\r\n                    {/*        <Label for=\"\">Last Name</Label>*/}\r\n                    {/*        <Input*/}\r\n                    {/*            type=\"text\"*/}\r\n                    {/*            name=\"lastName\"*/}\r\n                    {/*            id=\"lastName\"*/}\r\n                    {/*            value={objValues.lastName}*/}\r\n                    {/*            onChange={handleInputChange}*/}\r\n                    {/*            style={{*/}\r\n                    {/*                border: \"1px solid #014D88\",*/}\r\n                    {/*                borderRadius: \"0.25rem\",*/}\r\n                    {/*            }}*/}\r\n                    {/*        />*/}\r\n                    {/*    </FormGroup>*/}\r\n                    {/*</div>*/}\r\n                    {/* <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Actual\"\r\n                              name=\"dateOfBirth\"\r\n                              defaultChecked\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Actual\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Estimated\"\r\n                              name=\"dateOfBirth\"\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Estimated\r\n                          </label>\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          id=\"dob\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={objValues.dob}\r\n                          onChange={handleDobChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-2 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Age</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"age\"\r\n                          id=\"age\"\r\n                          value={calculate_age(\r\n                            props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n                              : props?.patientObj?.personResponseDto\r\n                                  ?.dateOfBirth\r\n                          )}\r\n                          // disabled={ageDisabled}\r\n                          disabled\r\n                          onChange={handleAgeChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Marital Status <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"maritalStatus\"\r\n                          id=\"maritalStatus\"\r\n                          value={htsClientInformation.maritalStatus}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                          // disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {maritalStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* {errors.testingSetting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.testingSetting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Phone Number</Label>\r\n\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          minLength={10}\r\n                          name=\"phoneNumber\"\r\n                          disabled\r\n                          id=\"phoneNumber\"\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          value={objValues.phoneNumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                          }}\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Alternative Phone Number</Label>\r\n                        <PhoneInput\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          minLength={10}\r\n                          name=\"alternatePhoneNumber\"\r\n                          id=\"altPhoneNumber\"\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          value={objValues.alternatePhoneNumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"alternatePhoneNumber\");\r\n                          }}\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Descriptive Residential Address </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descriptiveResidentialAddress\"\r\n                          id=\"descriptiveResidentialAddress\"\r\n                          value={\r\n                            htsClientInformation.descriptiveResidentialAddress\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date Of Index Client's confirmed HIV-positive test\r\n                          results <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateIndexClientConfirmedHiv\"\r\n                          id=\"dateIndexClientConfirmedHiv\"\r\n                          value={\r\n                            htsClientInformation.dateIndexClientConfirmedHiv\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                        {errors.dateIndexClientConfrimedHiv !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* {indexClientConfirmedHivPositive && ( */}\r\n\r\n                    {/* )} */}\r\n                    {/* if index client is hiv positive, and date is selected */}\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Is client current on HIV treatment?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"isClientCurrentlyOnHiv\"\r\n                          id=\"isClientCurrentlyOnHiv\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.isClientCurrentlyOnHiv}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsClientInformation.isClientCurrentlyOnHiv &&\r\n                      htsClientInformation.isClientCurrentlyOnHiv === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date of Treatment Initiation{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"DateOfTreatmentInitiation\"\r\n                              id=\"DateOfTreatmentInitiation\"\r\n                              value={\r\n                                htsClientInformation.DateOfTreatmentInitiation\r\n                              }\r\n                              onChange={handleHTSClientInputChange}\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              disabled={\r\n                                props.row.action === \"view\" ? true : false\r\n                              }\r\n                            />\r\n                            {/* {errors.treatmentDateI !== \"\" ? (\r\n                                          <span className={classes.error}>\r\n                                            {errors.referralDate}\r\n                                          </span>\r\n                                        ) : (\r\n                                          \"\"\r\n                                        )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Recency Testing</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"recencyTesting\"\r\n                          id=\"recencyTesting\"\r\n                          onChange={handleHTSClientInputChange}\r\n                          value={htsClientInformation.recencyTesting}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Recent Infection\">\r\n                            Recent Infection\r\n                          </option>\r\n                          <option value=\"Long Infection\">Long Infection</option>\r\n                          <option value=\"Not Done\">Not Done</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> ART Enrollment Number </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"artEnrollmentNumber\"\r\n                          id=\"artEnrollmentNumber\"\r\n                          value={htsClientInformation.artEnrollmentNumber}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Facility Of Enrollment </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityOfEnrollment\"\r\n                          id=\"facilityOfEnrollment\"\r\n                          value={htsClientInformation.facilityOfEnrollment}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Notification Method selected </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"notificationMethod\"\r\n                          id=\"notificationMethod\"\r\n                          value={objValues.notificationMethod}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {notificationContact.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Number of Partner{\" \"}\r\n                          <span>\r\n                            {\" \"}\r\n                            (sexual or social) identified/elicited from index{\" \"}\r\n                          </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          id=\"numberOfPartnerIdentifiedFromClientIndex\"\r\n                          value={\r\n                            htsClientInformation.numberOfPartnerIdentifiedFromClientIndex\r\n                          }\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      SECTION 2 : LISTING INDEX CLIENT PARTNER\r\n                    </div>\r\n                    <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n                      <i>\r\n                        Instruction: Ask index client to list all the client\r\n                        that have had sex with in the last 12 months. who may be\r\n                        risk to HIV and or partners who they share needle for\r\n                        injection of drugs where index client alluded to\r\n                        injection drugs\r\n                      </i>\r\n                    </p>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Partner ID </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerId\"\r\n                          id=\"partnerId\"\r\n                          value={objValues.partnerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Name of Partner <span> (Enter surname first) </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerName\"\r\n                          id=\"partnerName\"\r\n                          value={htsClientInformation.partnerName}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Sex </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"partnerSex\"\r\n                          id=\"partnerSex\"\r\n                          value={htsClientInformation.partnerSex}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {sexs.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Age <span> (In years) </span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"partnerAge\"\r\n                          id=\"partnerAge\"\r\n                          value={htsClientInformation.partnerAge}\r\n                          // disabled={ageDisabled}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          {\" \"}\r\n                          Home/Contact Address <span> include landmark </span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"partnerAddress\"\r\n                          id=\"partnerAddress\"\r\n                          value={htsClientInformation.partnerAddress}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Contact Phone Number</Label>\r\n\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          minLength={10}\r\n                          name=\"partnerPhoneNumber\"\r\n                          id=\"partnerPhoneNumber\"\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          value={contactTracing.partnerPhoneNumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"partnerPhoneNumber\");\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                        {errors.partnerPhoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.partnerPhoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Relationship to Index Client{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relativeToIndexClient\"\r\n                          id=\"relativeToIndexClient\"\r\n                          value={htsClientInformation.relativeToIndexClient}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                      {errors.relativeToIndexClient !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.relativeToIndexClient}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Contact tracing</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"contactTracingType\"\r\n                          id=\"contactTracingType\"\r\n                          value={htsClientInformation.contactTracingType}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}>select</option>\r\n                          <option value=\"Phone calls\">Phone calls</option>\r\n                          <option value=\"Physical visit\">Physical visit</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\"> Number of Attempt</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfAttempt\"\r\n                          id=\"numberOfAttempt\"\r\n                          value={contactTracing.numberOfAttempt}\r\n                          onChange={handleInputContactChanges}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          // disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever denied you of food, shelter,\r\n                          freedom of movement,livehood?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"freedomDenial\"\r\n                          id=\"freedomDenial\"\r\n                          value={htsClientInformation.freedomDenial}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to hurt you? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"threatenToHurt\"\r\n                          id=\"threatenToHurt\"\r\n                          value={htsClientInformation.threatenToHurt}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Has this partner ever threatened to rape and force to\r\n                          have sex with you ? *\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sexuallyUncomfortable\"\r\n                          id=\"sexuallyUncomfortable\"\r\n                          value={htsClientInformation.sexuallyUncomfortable}\r\n                          onChange={handleHTSClientInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 \">\r\n                      <Label>Known HIV Positive ?</Label>\r\n                      <FormGroup>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"knownHivPositive\"\r\n                          id=\"knownHivPositive\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.knownHivPositive}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Accepted HTS ? <span style={{ color: \"red\" }}> </span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          value={objValues.acceptedHts}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {consent.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          HIV Test Result{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hivTestResult\"\r\n                          id=\"hivTestResult \"\r\n                          value={objValues.hivTestResult}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"negative\">Negative</option>\r\n                          <option value=\"positive\">Positive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {objValues.partnerCurrentHivStatus !== \"\" &&\r\n                      objValues.partnerCurrentHivStatus === \"positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"\">\r\n                              Date Tested?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"date\"\r\n                              name=\"datePartnerTested\"\r\n                              id=\"datePartnerTested\"\r\n                              value={objValues.datePartnerTested}\r\n                              onChange={handleInputChange}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.25rem\",\r\n                              }}\r\n                              disabled={\r\n                                props.row.action === \"view\" ? true : false\r\n                              }\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Date Enrolled On ART</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateEnrollmentOnART\"\r\n                          id=\"dateEnrollmentOnART\"\r\n                          value={objValues.dateEnrollmentOnART}\r\n                          onChange={handleInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.row.action === \"view\" ? true : false}\r\n\r\n                          // disabled\r\n                        />\r\n                        {errors.referralDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              {props.row.action === \"update\" && (\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Button\r\n                      content=\"Update\"\r\n                      icon=\"save\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewPNSForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js",["885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\n\r\nimport Select from \"react-select\";\r\n// import { getAcount } from \"../../../../utility\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllStateByCountryId,\r\n  getAllCountry,\r\n  getAllProvinces,\r\n  getAllGenders,\r\n  alphabetOnly,\r\n} from \"../../../../../utility\";\r\n\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewFamilyIndexTestingForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [maritalStatus, setMaritalStatus] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [isClientCurrentlyOnHiv, setClientCurrentlyOnHiv] = useState(true);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [indexClientConfirmedHivPositive, setIndexClientConfirmedHivPositive] =\r\n    useState(false);\r\n  const [familyRelationship, setFamilyRelationship] = useState([]);\r\n  const [selectedFamilyIndex, setSelectedFamilyIndex] = useState({});\r\n  const [familyIndexHivStatus, setFamilyIndexHivStatus] = useState([]);\r\n  const [familyIndex, setFamilyIndex] = useState([]);\r\n  const [followUpAppointmentLocation, setFollowUpAppointmentLocation] =\r\n    useState([]);\r\n  const [indexVisitAttempt, setIndexVisitAttempt] = useState([]);\r\n  const [isWillingToHaveChildrenTested, setIsWillingToHaveChildrenTested] =\r\n    useState(false);\r\n  const [stateInfo, setStateInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n      : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n  );\r\n\r\n  const [lgaInfo, setLgaInfo] = useState(\r\n    props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      ? props?.basicInfo?.personResponseDto?.address?.address[0].district\r\n      : props?.patientObj?.personResponseDto?.address?.address[0].district\r\n  );\r\n  const [facilityName, setFacilityName] = useState(Cookies.get(\"facilityName\"));\r\n  const [facilityInfo, setFacilityInfo] = useState(props?.organizationInfo);\r\n\r\n  const [familyIndexRequestDto, setFamilyIndexRequestDto] = useState({\r\n    childNumber: \"\",\r\n    familyIndexHivStatus: \"\",\r\n    familyIndexTestingUuid: \"\",\r\n    familyRelationship: \"\",\r\n    motherDead: \"\",\r\n    yearMotherDead: \"\",\r\n    uan: \"\",\r\n  });\r\n\r\n  const [arrayFamilyIndexRequestDto, setArrayFamilyIndexRequestDto] = useState(\r\n    []\r\n  );\r\n  const [familIndexInfo, setFamilIndexInfo] = useState({});\r\n  const [errorFamilyIndexDTO, setErrorFamilyIndexDTO] = useState({});\r\n  const [errorFamilyIndexTracker, setErrorFamilyIndexDTOTracker] = useState({});\r\n\r\n  const [addIndexTracker, setaAddIndexTracker] = useState(false);\r\n  const [addIndexTracker2, setaAddIndexTracker2] = useState(false);\r\n  const [selectedFamilyIndexForm, setSelectedFamilyIndexForm] = useState({});\r\n  const [selectedFamilyTrackerForm, setSelectedFamilyTrackerForm] = useState(\r\n    {}\r\n  );\r\n\r\n  const [familyTestingTrackerRequestDTO, setFamilyTestingTrackerRequestDTO] =\r\n    useState({});\r\n  const [\r\n    arrayFamilyTestingTrackerRequestDTO,\r\n    setArrayFamilyTestingTrackerRequestDTO,\r\n  ] = useState([]);\r\n\r\n  const [payload, setPayload] = useState({\r\n    age: calculate_age(\r\n      props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        ? props?.basicInfo?.personResponseDto?.dateOfBirth\r\n        : props?.patientObj?.personResponseDto?.dateOfBirth\r\n    ),\r\n    alternatePhoneNumber: \"\",\r\n    dateClientEnrolledOnTreatment: \"\",\r\n    dateIndexClientConfirmedHivPositiveTestResult: \"\",\r\n    dateOfBirth: props?.basicInfo?.personResponseDto?.dateOfBirth,\r\n    extra: {},\r\n    facilityName: \"\",\r\n    familyIndexClient: \"\",\r\n\r\n    familyIndexRequestDto: [\r\n      {\r\n        childNumber: 0,\r\n        familyIndexHivStatus: \"string\",\r\n        familyIndexTestingUuid: \"string\",\r\n        familyRelationship: \"string\",\r\n        motherDead: \"string\",\r\n        yearMotherDead: \"string\",\r\n      },\r\n    ],\r\n    familyTestingTrackerRequestDTO: [\r\n      {\r\n        attempt: \"string\",\r\n        dateEnrolledInOVC: \"string\",\r\n        dateEnrolledOnArt: \"string\",\r\n        dateTested: \"string\",\r\n        dateVisit: \"string\",\r\n        facilityId: 0,\r\n        familyIndexTestingId: 0,\r\n        familyIndexTestingUuid: \"string\",\r\n        followUpAppointmentLocation: \"string\",\r\n        hiveTestResult: \"string\",\r\n        knownHivPositive: \"string\",\r\n        ovcId: \"string\",\r\n        positionOfChildEnumerated: 0,\r\n        scheduleVisitDate: \"string\",\r\n        trackerAge: 0,\r\n        trackerSex: \"string\",\r\n      },\r\n    ],\r\n\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: \"\",\r\n    indexClientId: props?.basicInfo?.clientCode,\r\n    isClientCurrentlyOnHivTreatment: \"\",\r\n    lga: \"\",\r\n    maritalStatus: props?.basicInfo?.personResponseDto?.maritalStatus.id,\r\n    name: props?.basicInfo?.personResponseDto?.firstName,\r\n    phoneNumber:\r\n      props?.basicInfo?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n    middleName: props?.basicInfo?.personResponseDto?.otherName,\r\n    lastName: props?.basicInfo?.personResponseDto?.surname,\r\n    visitDate: \"\",\r\n    recencyTesting: \"\",\r\n    setting: \"\",\r\n    sex: props?.basicInfo?.personResponseDto?.gender.id,\r\n    state: \"\",\r\n    virallyUnSuppressed: \"\",\r\n    willingToHaveChildrenTestedElseWhere: \"\",\r\n\r\n    //\r\n    //\r\n    // referralDate: \"\",\r\n    // hospitalNumber: \"\",\r\n    // countryId: \"1\",\r\n    // stateId: \"\",\r\n\r\n    reasonForIndexClientDateHivConfirmedNotSelected: \"\",\r\n    address: props?.basicInfo?.personResponseDto?.address?.address[0].city,\r\n    recencyTesting: \"\",\r\n  });\r\n  const [formId, setFormId] = useState(\"\");\r\n\r\n  const [lgas, setLGAs] = useState([]);\r\n  const [facilities, setFacilities1] = useState([]);\r\n  const [selectedState, setSelectedState] = useState({});\r\n  const [selectedFacility, setSelectedFacility] = useState({});\r\n  const [selectedLga, setSelectedLga] = useState({});\r\n  const [viewFamilyIndexForm, setViewFamilyIndexForm] = useState(false);\r\n  const [viewFamilyTrackerForm, setViewFamilyTrackerForm] = useState(false);\r\n\r\n  const loadStates = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setStates(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch states error\" + e);\r\n      });\r\n  };\r\n\r\n  const loadLGA = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setLGAs(response.data);\r\n          // const selectedLga = response.data.find(lga => lga.id === id);\r\n          // setPayload(prevPayload => ({ ...prevPayload, lgaTransferTo: selectedLga ? selectedLga.name : \"\" }));\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch LGA error\" + e);\r\n      });\r\n  };\r\n\r\n  const getFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"this info\", response.data);\r\n          setFamilIndexInfo(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFormId(response.data.htsClientId);\r\n\r\n          console.log(\"this info\", response.data);\r\n          setPayload({\r\n            ...payload,\r\n            // id: 6,\r\n            // uuid: \"ce538c49-0795-41a3-a93f-94d3afabadff\",\r\n            // htsClientUuid: \"0c02d167-50e5-4ddf-925a-3ac95753fd28\",\r\n            htsClientId: response.data.htsClientId,\r\n            htsClientUuid: response.data.htsClientUuid,\r\n            extra: response.data.extra,\r\n            state: response.data.state,\r\n            lga: response.data.lga,\r\n            facilityName: response.data.facilityName,\r\n            visitDate: response.data.visitDate,\r\n            setting: response.data.setting,\r\n            familyIndexClient: response.data.familyIndexClient,\r\n            sex: response.data.sex,\r\n            indexClientId: response.data.indexClientId,\r\n            name: response.data.name,\r\n            dateOfBirth: response.data.dateOfBirth,\r\n            age: response.data.age,\r\n            maritalStatus: response.data.maritalStatus,\r\n            phoneNumber: response.data.phoneNumber,\r\n            alternatePhoneNumber: response.data.alternatePhoneNumber,\r\n            dateIndexClientConfirmedHivPositiveTestResult:\r\n              response.data.dateIndexClientConfirmedHivPositiveTestResult,\r\n            virallyUnSuppressed: response.data.virallyUnSuppressed,\r\n            isClientCurrentlyOnHivTreatment:\r\n              response.data.isClientCurrentlyOnHivTreatment,\r\n            dateClientEnrolledOnTreatment:\r\n              response.data.dateClientEnrolledOnTreatment,\r\n            recencyTesting: response.data.recencyTesting,\r\n            willingToHaveChildrenTestedElseWhere:\r\n              response.data?.willingToHaveChildrenTestedElseWhere,\r\n          });\r\n\r\n          console.log(response.data);\r\n          setArrayFamilyTestingTrackerRequestDTO(\r\n            response.data.familyTestingTrackerResponseDTO\r\n          );\r\n          setArrayFamilyIndexRequestDto(response.data.familyIndexList);\r\n          //  FamilyIndexInfo(response.data[0].ID)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const validateAddFamilyINdexDTO = () => {\r\n    let temp = {};\r\n\r\n    // if all are empty\r\n\r\n    if (\r\n      familyIndexRequestDto.familyRelationship === \"\" &&\r\n      familyIndexRequestDto.familyIndexHivStatus === \"\" &&\r\n      familyIndexRequestDto.motherDead === \"\"\r\n    ) {\r\n      setaAddIndexTracker(true);\r\n    } else {\r\n      setaAddIndexTracker(false);\r\n\r\n      temp.familyRelationship =\r\n        familyIndexRequestDto.familyRelationship === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.childNumber =\r\n        familyIndexRequestDto.familyRelationship ===\r\n          \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" &&\r\n        familyIndexRequestDto.childNumber === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      temp.familyIndexHivStatus =\r\n        familyIndexRequestDto.familyIndexHivStatus === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n      temp.motherDead =\r\n        familyIndexRequestDto.motherDead === \"\" ? \"field is required\" : \"\";\r\n      temp.yearMotherDead =\r\n        familyIndexRequestDto.motherDead.toLowerCase() === \"yes\" &&\r\n        familyIndexRequestDto.yearMotherDead === \"\"\r\n          ? \"field is required\"\r\n          : \"\";\r\n\r\n      setErrorFamilyIndexDTO({ ...temp });\r\n      return Object.values(temp).every((x) => x == \"\");\r\n    }\r\n  };\r\n\r\n  const loadFacilities = (id) => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFacilities1(response.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  const TargetGroupSetup = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilityInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const loadFamilyIndexSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getMaritalStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setMaritalStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getFamilyRelationship = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyRelationship(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index hiv status\r\n  const FAMILY_INDEX_HIV_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX_HIV_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndexHivStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // get family index\r\n\r\n  const FAMILY_INDEX = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_INDEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyIndex(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const FOLLOW_UP_APPOINTMENT_LOCATION = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FOLLOW UP_APPOINTMENT_LOCATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFollowUpAppointmentLocation(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // GET\r\n  const INDEX_VISIT_ATTEMPTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_VISIT_ATTEMPTS`, {\r\n        headers: { Authorization: `secBearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexVisitAttempt(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // generate index client Id using the HTS client code/family index client unique ART number\r\n  const generateIndexClientId = () => {\r\n    const indexClientId = Math.floor(1000 + Math.random() * 9000);\r\n  };\r\n\r\n  // show reason for not selecting hiv confirm date, if the hiv confirm date is not selected and hide it when it is selected\r\n  // const showReasonForNotSelectingHivConfirmDate = () => {\r\n  //        if(payload.dateIndexClientConfirmedHiv === \"\"){\r\n  //            setIndexClientConfirmedHivPositive(true);\r\n  //        }else{\r\n  //            setIndexClientConfirmedHivPositive(false);\r\n  //        }\r\n  // }\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    getAllGenders()\r\n      .then((response) => {\r\n        setGenders(response);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadStates();\r\n    loadFamilyIndexSetting();\r\n    getCountry();\r\n    getStateByCountryId();\r\n    getMaritalStatus();\r\n    getFamilyRelationship();\r\n    FAMILY_INDEX_HIV_STATUS();\r\n    FAMILY_INDEX();\r\n    FOLLOW_UP_APPOINTMENT_LOCATION();\r\n    INDEX_VISIT_ATTEMPTS();\r\n    getListoFFamilyIndexInfo();\r\n    if (\r\n      props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId ||\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n    ) {\r\n      loadLGA(\r\n        props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          ? props?.basicInfo?.personResponseDto?.address?.address[0]?.stateId\r\n          : props?.patientObj?.personResponseDto?.address?.address[0]?.stateId\r\n      );\r\n    }\r\n\r\n    if (props.organizationInfo) {\r\n      TargetGroupSetup();\r\n    }\r\n  }, []);\r\n\r\n  //Get list of State\r\n  const getStateByCountryId = () => {\r\n    getAllStateByCountryId()\r\n      .then((res) => {\r\n        setStates(res);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n\r\n    if (inputName === \"phoneNumber\") {\r\n      setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"alternatePhoneNumber\") {\r\n      setPayload({ ...payload, alternatePhoneNumber: e.slice(0, limit) });\r\n    } else if (inputName === \"phoneNoOfReferrringFacility\") {\r\n      setPayload({\r\n        ...payload,\r\n        phoneNoOfReferrringFacility: e.slice(0, limit),\r\n      });\r\n    } else if (inputName === \"phoneNoOfRecievingFacility\") {\r\n      setPayload({ ...payload, phoneNoOfRecievingFacility: e.slice(0, limit) });\r\n    }\r\n  };\r\n\r\n  // handle Facility Name to slect drop down\r\n  const handleInputChangeObject = (e) => {\r\n    setPayload({\r\n      ...payload,\r\n      nameOfRecievingFacility: e.name,\r\n      addressOfRecievingFacility: e.parentParentOrganisationUnitName,\r\n      // lgaTransferTo: e.parentOrganisationUnitName,\r\n    });\r\n    setErrors({ ...errors, nameOfRecievingFacility: \"\" });\r\n    // setSelectedState(e.parentParentOrganisationUnitName);\r\n    // setSelectedLga(e.parentOrganisationUnitName);\r\n  };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyIndexRequestDto = (e) => {\r\n    setErrorFamilyIndexDTO({ ...errorFamilyIndexDTO, [e.target.name]: \"\" });\r\n    setaAddIndexTracker(false);\r\n    // console.log(e);\r\n    setFamilyIndexRequestDto({\r\n      ...familyIndexRequestDto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n  const handleSubmitfamilyIndexRequestDto = (e) => {\r\n    if (validateAddFamilyINdexDTO()) {\r\n      let existingArray = arrayFamilyIndexRequestDto;\r\n\r\n      existingArray.push(familyIndexRequestDto);\r\n      setFamilyIndexRequestDto({\r\n        childNumber: \"\",\r\n        familyIndexHivStatus: \"\",\r\n        familyIndexTestingUuid: \"\",\r\n        familyRelationship: \"\",\r\n        motherDead: \"\",\r\n        yearMotherDead: \"\",\r\n        uan: \"\",\r\n      });\r\n\r\n      setArrayFamilyIndexRequestDto(existingArray);\r\n    }\r\n  };\r\n\r\n  // handlefamilyIndexRequestDto\r\n  const handlefamilyTestingTrackerRequestDTO = (e) => {\r\n    setErrorFamilyIndexDTOTracker({\r\n      ...errorFamilyIndexTracker,\r\n      [e.target.name]: \"\",\r\n    });\r\n    setaAddIndexTracker2(false);\r\n    setFamilyTestingTrackerRequestDTO({\r\n      ...familyTestingTrackerRequestDTO,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    // clearf the error with e.target.name\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n\r\n  const handleSubmitfamilyTestingTrackerRequestDTO = (e) => {\r\n    if (familyTestingTrackerRequestDTO?.dateVisit !== \"\") {\r\n      let existingArray = arrayFamilyTestingTrackerRequestDTO;\r\n\r\n      let newDTO = familyTestingTrackerRequestDTO;\r\n      familyTestingTrackerRequestDTO.facilityId =\r\n        facilityInfo.currentOrganisationUnitId;\r\n\r\n      existingArray.push(newDTO);\r\n      setFamilyTestingTrackerRequestDTO({\r\n        attempt: \"\",\r\n        dateEnrolledInOVC: \"\",\r\n        dateEnrolledOnArt: \"\",\r\n        dateTested: \"\",\r\n        dateVisit: \"\",\r\n        facilityId: \"\",\r\n        familyIndexTestingId: \"\",\r\n        familyIndexTestingUuid: \"\",\r\n        followUpAppointmentLocation: \"\",\r\n        hiveTestResult: \"\",\r\n        knownHivPositive: \"\",\r\n        ovcId: \"\",\r\n        positionOfChildEnumerated: \"\",\r\n        scheduleVisitDate: \"\",\r\n        trackerAge: \"\",\r\n        trackerSex: \"\",\r\n      });\r\n\r\n      setArrayFamilyTestingTrackerRequestDTO(existingArray);\r\n    } else {\r\n      let ans = Object.values(familyTestingTrackerRequestDTO).every(\r\n        (each) => each === \"\"\r\n      );\r\n\r\n      if (ans) {\r\n        setaAddIndexTracker2(true);\r\n      } else {\r\n        let temp = {};\r\n        temp.dateVisit =\r\n          familyTestingTrackerRequestDTO?.dateVisit === \"\"\r\n            ? \"field is required\"\r\n            : \"\";\r\n\r\n        setErrorFamilyIndexDTOTracker({ ...temp });\r\n        return Object.values(temp).every((x) => x == \"\");\r\n      }\r\n    }\r\n  };\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    if (e.target.value) {\r\n      setErrors({ ...errors, stateId: \"\" });\r\n    }\r\n    setPayload({ ...payload, stateId: e.target.value });\r\n    getAllProvinces(stateId)\r\n      .then((res) => {\r\n        setProvinces(res);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n  const getCountry = () => {\r\n    getAllCountry()\r\n      .then((res) => {\r\n        setCountries(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    // console.log(response);\r\n  };\r\n\r\n  const handleFamilyRelationshipChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPayload((prevPayload) => ({\r\n      ...prevPayload,\r\n      [name]: value,\r\n      // Reset childNumber when family relationship changes\r\n      childNumber:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.childNumber,\r\n      // Reset familyIndexHivStatus when family relationship changes, where mother = '1293', father = '1294', biological child = '1295', siblings = '1296'\r\n      familyIndexHivStatus: [\r\n        \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n        \"FAMILY_RELATIONSHIP_FATHER\",\r\n        \"FAMILY_RELATIONSHIP_MOTHER\",\r\n        \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n      ].includes(value)\r\n        ? \"\"\r\n        : prevPayload.familyIndexHivStatus,\r\n      // Reset uan when family relationship changes\r\n      uan:\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_SIBLINGS\"\r\n          ? \"\"\r\n          : prevPayload.uan,\r\n      // Reset motherDead when family relationship changes\r\n      motherDead:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.motherDead,\r\n      // Reset yearMotherDied when family relationship changes\r\n      yearMotherDied:\r\n        value === \"FAMILY_RELATIONSHIP_MOTHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_FATHER\" ||\r\n        value === \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\"\r\n          ? \"\"\r\n          : prevPayload.yearMotherDied,\r\n    }));\r\n  };\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n\r\n  const convertCodeToDisplay = (type, value) => {\r\n    let data = \"\";\r\n    if (type === \"familyRelationship\") {\r\n      data = familyRelationship.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n    if (type === \"familyIndexHivStatus\") {\r\n      data = familyIndexHivStatus.filter((each) => {\r\n        if (each.code === value) {\r\n          return each;\r\n        }\r\n      });\r\n\r\n      return data[0]?.display;\r\n    }\r\n  };\r\n\r\n  // View Row\r\n  const viewFamilyIndexRow = (data, index) => {\r\n    setViewFamilyIndexForm(true);\r\n    setSelectedFamilyIndexForm({ data: data, index: index });\r\n    setFamilyIndexRequestDto({ ...data });\r\n  };\r\n  const viewFamilyTrackerRow = (data, index) => {\r\n    setViewFamilyTrackerForm(true);\r\n    setSelectedFamilyTrackerForm({ data: data, index: index });\r\n    setFamilyTestingTrackerRequestDTO({ ...data });\r\n  };\r\n  // Update  Row\r\n  const updateFamilyIndexRow = () => {\r\n    if (validateAddFamilyINdexDTO()) {\r\n      setViewFamilyIndexForm(false);\r\n\r\n      let newArray = [...arrayFamilyIndexRequestDto];\r\n      newArray[selectedFamilyIndexForm.index] = familyIndexRequestDto;\r\n      // newArray[selectedFamilyIndexForm.index] = familyIndexRequestDto;\r\n      setArrayFamilyIndexRequestDto(newArray);\r\n    }\r\n  };\r\n\r\n  const updateFamilyTrackerRow = () => {\r\n    setViewFamilyTrackerForm(false);\r\n\r\n    let newArray = [...arrayFamilyTestingTrackerRequestDTO];\r\n    newArray[selectedFamilyTrackerForm.index] = familyTestingTrackerRequestDTO;\r\n    setArrayFamilyTestingTrackerRequestDTO(newArray);\r\n  };\r\n\r\n  // Remove Row\r\n  const removeFamilyIndexRow = (index) => {\r\n    arrayFamilyIndexRequestDto.splice(index, 1);\r\n    setArrayFamilyIndexRequestDto([...arrayFamilyIndexRequestDto]);\r\n  };\r\n\r\n  const removeFamilyTrackerRow = (index) => {\r\n    arrayFamilyTestingTrackerRequestDTO.splice(index, 1);\r\n    setArrayFamilyTestingTrackerRequestDTO([\r\n      ...arrayFamilyTestingTrackerRequestDTO,\r\n    ]);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    const { name, value } = e.target;\r\n\r\n    if (e.target.name === \"name\" || e.target.name === \"lastName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: name,\r\n      }));\r\n    } else if (name === \"willingToHaveChildrenTested\") {\r\n      setPayload((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n        familyIndexTracker: {\r\n          ...prevState.familyIndexTracker,\r\n          positionOfChildEnumerated:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.positionOfChildEnumerated\r\n              : \"\",\r\n          trackerSex:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerSex : \"\",\r\n          trackerAge:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.trackerAge : \"\",\r\n          scheduleVisitDate:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.scheduleVisitDate\r\n              : \"\",\r\n          followUpAppointmentLocation:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.followUpAppointmentLocation\r\n              : \"\",\r\n          dateVisit:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateVisit : \"\",\r\n          knownHivPositive:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.knownHivPositive\r\n              : \"\",\r\n          dateTested:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.dateTested : \"\",\r\n          hivTestResult:\r\n            value === \"Yes\" ? prevState.familyIndexTracker.hivTestResult : \"\",\r\n          dateEnrolledInOVC:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledInOVC\r\n              : \"\",\r\n          dateEnrolledOnArt:\r\n            value === \"Yes\"\r\n              ? prevState.familyIndexTracker.dateEnrolledOnArt\r\n              : \"\",\r\n          attempt: value === \"Yes\" ? prevState.familyIndexTracker.attempt : \"\",\r\n        },\r\n      }));\r\n    } else if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"indexClientId\" && e.target.value !== \"\") {\r\n      //    setPayload({...payload, [e.target.name]: name })\r\n    } else if (e.target.name === \"dateIndexConfirmedHiv\") {\r\n      if (e.target.value !== \"\") {\r\n        const name = e.target.name;\r\n        setPayload({ ...payload, [e.target.name]: name });\r\n        setIndexClientConfirmedHivPositive(false); // Hide extra fields when date is selected\r\n      } else {\r\n        setIndexClientConfirmedHivPositive(true); // Show extra fields if date is not selected\r\n      }\r\n    } else if (\r\n      e.target.name === \"nameOfContactPerson\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfPersonRefferringClient\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n\r\n      getHosiptalNumber();\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        age_now--;\r\n      }\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      payload.age = age_now;\r\n\r\n      //setpayload({...payload, age: age_now});\r\n    } else {\r\n      setPayload({ ...payload, age: \"\" });\r\n    }\r\n    setPayload({ ...payload, [e.target.name]: e.target.value });\r\n\r\n    setPayload({ ...payload, dateOfBirth: e.target.value });\r\n    if (payload.age !== \"\" && payload.age <= 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else if (payload.age !== \"\" && payload.age > 15) {\r\n      // props.setHideOtherMenu(true);\r\n    } else {\r\n      // props.setHideOtherMenu(true);\r\n    }\r\n\r\n    if (payload.age !== \"\" && payload.age >= 85) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      payload.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      payload.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 85) {\r\n        toggle();\r\n      }\r\n      if (e.target.value !== \"\" && e.target.value <= 15) {\r\n        props.setHideOtherMenu(false);\r\n      } else if (e.target.value !== \"\" && e.target.value > 15) {\r\n        props.setHideOtherMenu(true);\r\n      } else {\r\n        props.setHideOtherMenu(true);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setPayload({\r\n        ...payload,\r\n        dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\"),\r\n      });\r\n      payload.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setPayload({ ...payload, age: e.target.value });\r\n  };\r\n\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.referralDate = payload.referralDate ? \"\" : \"This field is required.\";\r\n    temp.name = payload.name ? \"\" : \"This field is required.\";\r\n    temp.dateIndexClientConfirmedHivPositiveTestResult =\r\n      payload.dateIndexClientConfirmedHivPositiveTestResult\r\n        ? \"\"\r\n        : \"This is field is required\";\r\n    temp.stateId = payload.stateId ? \"\" : \"This field is required.\";\r\n    temp.lgaId = payload.lgaId ? \"\" : \"This field is required.\";\r\n    temp.address = payload.address ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n    temp.sex = payload.sex ? \"\" : \"This field is required.\";\r\n    temp.dateOfBirth = payload.dateOfBirth ? \"\" : \"This field is required.\";\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.familyIndexClient = payload.familyIndexClient\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.hivStatus = payload.hivStatus ? \"\" : \"This field is required.\";\r\n    temp.facilityName = payload.facilityName ? \"\" : \"This field is required.\";\r\n    if (payload.dateIndexClientConfirmedHiv === \"\") {\r\n      temp.reasonForIndexClientDateHivConfirmedNotSelected =\r\n        payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n    }\r\n    temp.age = payload.age ? \"\" : \"This field is required.\";\r\n    temp.referredTo = payload.referredTo ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postPayload = (payload) => {\r\n    axios\r\n      .put(`${baseUrl}hts-family-index-testing/${formId}`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSaving(false);\r\n        props.handleItemClick(\"fit-history\");\r\n        toast.success(\"Family Indexform save succesfully!\");\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        console.log(error);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage, {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    payload.familyIndexRequestDto = arrayFamilyIndexRequestDto;\r\n    payload.familyTestingTrackerRequestDTO =\r\n      arrayFamilyTestingTrackerRequestDTO;\r\n    payload.state = stateInfo;\r\n    payload.lga = lgaInfo;\r\n    payload.facilityName = facilityInfo.currentOrganisationUnitName;\r\n\r\n    console.log(payload);\r\n    // if (validate()) {\r\n    //   setSaving(true);\r\n\r\n    postPayload(payload);\r\n    //    handleItemClick(\"basic\", \"risk\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}> Family Index Testing Form</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                SECTION A\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stateId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={stateInfo}\r\n                      required\r\n                      // onChange={loadLGA1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterState = states.filter((st) => {\r\n                            return Number(st.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedState(filterState);\r\n\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            stateId: filterState[0].id,\r\n                          }));\r\n                        }\r\n                        loadLGA(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select State</option>\r\n                      {states.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.stateTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.stateTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      LGA <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lgaId\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      required\r\n                      value={lgaInfo}\r\n                      // onChange={loadFacilities1}\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== \"\") {\r\n                          const filterlga = lgas.filter((lg) => {\r\n                            return Number(lg.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedLga(filterlga);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            lgaId: filterlga[0].id,\r\n                          }));\r\n                        }\r\n                        loadFacilities(e.target.value);\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option>Select LGA</option>\r\n                      {lgas.map((lga) => (\r\n                        <option key={lga.id} value={lga.id}>\r\n                          {lga.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.lgaId !== \"\" ? (\r\n                      <span className={classes.error}>{errors.lgaId}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"\"\r\n                      style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n                    >\r\n                      Facility Name\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityName\"\r\n                      style={{\r\n                        height: \"40px\",\r\n                        border: \"solid 1px #014d88\",\r\n                        borderRadius: \"5px\",\r\n                        fontWeight: \"bolder\",\r\n                        appearance: \"auto\",\r\n                      }}\r\n                      value={facilityInfo.currentOrganisationUnitName}\r\n                      required\r\n                      onChange={(e) => {\r\n                        // setPayload(prevPayload => ({ ...prevPayload, facilityTransferTo: e.target.value }));\r\n                        if (e.target.value !== \"\") {\r\n                          const filterFacility = facilities.filter((fa) => {\r\n                            return Number(fa.id) === Number(e.target.value);\r\n                          });\r\n                          setSelectedFacility(filterFacility);\r\n                          setPayload((prevPayload) => ({\r\n                            ...prevPayload,\r\n                            facilityName: filterFacility[0].name,\r\n                          }));\r\n                        }\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      {/* <option>Select Facility</option>\r\n                                            {facilities.map((facility) => (\r\n                                                <option key={facility.id} value={facility.id}>\r\n                                                    {facility.name}\r\n                                                </option>\r\n                                            ))} */}\r\n                    </Input>\r\n                    {errors.facilityTransferTo !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.facilityTransferTo}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={payload.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.visitDate !== \"\" ? (\r\n                      <span className={classes.error}>{errors.visitDate}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"setting\"\r\n                      id=\"setting\"\r\n                      value={payload.setting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.setting !== \"\" ? (\r\n                      <span className={classes.error}>{errors.setting}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Family Index client{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"familyIndexClient\"\r\n                      id=\"familIndxClient\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.familyIndexClient}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {familyIndex &&\r\n                        familyIndex.map((x, index) => (\r\n                          <option key={x.id} value={x.id}>\r\n                            {x.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.familyIndexClient !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      First Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.firstName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Middle Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.otherName}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"lastName\">\r\n                      Last Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={props.patientObj.personResponseDto.surname}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name !== \"\" ? (\r\n                      <span className={classes.error}>{errors.name}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"firstName\">\r\n                      Index Client ID\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"indexClientId\"\r\n                      id=\"indexClientId\"\r\n                      value={payload.indexClientId}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.indexClientId !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.indexClientId}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sex\"\r\n                      id=\"sex\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.sex}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {genders &&\r\n                        genders.map((gender, index) => (\r\n                          <option key={gender.id} value={gender.id}>\r\n                            {gender.display}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.sex !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date Of Birth<span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      name=\"dateOfBirth\"\r\n                      id=\"dateOfBirth\"\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      value={payload.dateOfBirth}\r\n                      onChange={handleDobChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateOfBirth !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateOfBirth}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Age <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      id=\"age\"\r\n                      value={payload.age}\r\n                      disabled={ageDisabled}\r\n                      onChange={handleAgeChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.age !== \"\" ? (\r\n                      <span className={classes.error}>{errors.age}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Marital Status <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"maritalStatus\"\r\n                      id=\"maritalStatus\"\r\n                      value={payload.maritalStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled\r\n                      // disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {maritalStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {/* {errors.setting !== \"\" ? (\r\n                                            <span className={classes.error}>\r\n                                                {errors.setting}\r\n                                            </span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )} */}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <PhoneInput\r\n                      // disabled={true}\r\n                      containerStyle={{\r\n                        width: \"100%\",\r\n                        border: \"1px solid #014D88\",\r\n                      }}\r\n                      inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                      country={\"ng\"}\r\n                      placeholder=\"(234)7099999999\"\r\n                      maxLength={5}\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                      value={payload.phoneNumber}\r\n                      onChange={(e) => {\r\n                        checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                      }}\r\n                      disabled\r\n                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                    />\r\n\r\n                    {errors.phoneNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.phoneNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Alternative Contact Number</Label>\r\n                    <PhoneInput\r\n                      // disabled={true}\r\n                      containerStyle={{\r\n                        width: \"100%\",\r\n                        border: \"1px solid #014D88\",\r\n                      }}\r\n                      inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                      country={\"ng\"}\r\n                      placeholder=\"(234)7099999999\"\r\n                      maxLength={5}\r\n                      name=\"alternatePhoneNumber\"\r\n                      id=\"alternatePhoneNumber\"\r\n                      masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                      value={payload.alternatePhoneNumber}\r\n                      onChange={(e) => {\r\n                        checkPhoneNumberBasic(e, \"alternatePhoneNumber\");\r\n                      }}\r\n                      //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                    />\r\n\r\n                    {/*{errors.phoneNumber !== \"\" ? (*/}\r\n                    {/*    <span className={classes.error}>*/}\r\n                    {/*        {errors.phoneNumber}*/}\r\n                    {/*    </span>*/}\r\n                    {/*) : (*/}\r\n                    {/*    \"\"*/}\r\n                    {/*)}*/}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Descriptiven Residential Address{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={\r\n                        props.patientObj.personResponseDto.address.address[0]\r\n                          .city\r\n                      }\r\n                      disabled\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    />\r\n                    {errors.address !== \"\" ? (\r\n                      <span className={classes.error}>{errors.address}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Date Of Index Client's confrimed HIV-positive test results{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      id=\"dateIndexClientConfirmedHivPositiveTestResult\"\r\n                      value={\r\n                        payload.dateIndexClientConfirmedHivPositiveTestResult\r\n                      }\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    />\r\n                    {errors.dateIndexClientConfirmedHivPositiveTestResult !==\r\n                    \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.referralDate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {indexClientConfirmedHivPositive && (\r\n                  <div className=\"form-group col-md-4\">\r\n                    <Label>\r\n                      {\" \"}\r\n                      Reason for not selecting Index client Hiv confirmed test\r\n                      result Date ?{\" \"}\r\n                    </Label>\r\n                    <FormGroup>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        id=\"reasonForIndexClientDateHivConfirmedNotSelected\"\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          payload.reasonForIndexClientDateHivConfirmedNotSelected\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Result not confirmed yet\">\r\n                          Result not confirmed yet\r\n                        </option>\r\n                        <option value=\"NA\">NA</option>\r\n                      </select>\r\n                      {errors.reasonForIndexClientDateHivConfirmedNotSelected !==\r\n                      \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {\r\n                            errors.reasonForIndexClientDateHivConfirmedNotSelected\r\n                          }\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                {/* )} */}\r\n                {/* if index client is hiv positive, and date is selected */}\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>Is client current on HIV treatment ?</Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"isClientCurrentlyOnHivTreatment\"\r\n                      id=\"isClientCurrentlyOnHivTreatment\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.isClientCurrentlyOnHivTreatment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {payload.isClientCurrentlyOnHivTreatment &&\r\n                  payload.isClientCurrentlyOnHivTreatment === \"Yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">\r\n                          Date of Treatment Initiation{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"dateClientEnrolledOnTreatment\"\r\n                          id=\"dateClientEnrolledOnTreatment\"\r\n                          value={payload.dateClientEnrolledOnTreatment}\r\n                          onChange={handleInputChange}\r\n                          min=\"1929-12-31\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={props.action === \"view\" ? true : false}\r\n                        />\r\n                        {errors.treatmentDate !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.referralDate}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>\r\n                    {\" \"}\r\n                    Recency Testing{\" \"}\r\n                    <span> (for newly tested HIV-positive only) </span>{\" \"}\r\n                  </Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recencyTesting\"\r\n                      id=\"reccencyTesting\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.recencyTesting}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Recent Infection\">Recent Infection</option>\r\n                      <option value=\"Long Term Infection\">\r\n                        {\" \"}\r\n                        Long Term Infection\r\n                      </option>\r\n                      <option value=\"Not Done\">Not Done</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4 \">\r\n                  <Label>virally unsuppressed</Label>\r\n                  <FormGroup>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"virallyUnsuppressed\"\r\n                      id=\"virallyUnsuppressed\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.virallyUnSuppressed}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <FormGroup>\r\n                    <Label for=\"willingToHaveChildrenTestedElseWhere\">\r\n                      Are you willing to have your children tested elsewhere by\r\n                      a health care worker?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      id=\"willingToHaveChildrenTestedElseWhere\"\r\n                      name=\"willingToHaveChildrenTestedElseWhere\"\r\n                      onChange={handleInputChange}\r\n                      value={payload.willingToHaveChildrenTestedElseWhere}\r\n                      disabled={props.action === \"view\" ? true : false}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <br />\r\n            </div>\r\n            {arrayFamilyIndexRequestDto.length > 0 && (\r\n              <>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    SECTION B: FAMILY INDEX\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {viewFamilyIndexForm && (\r\n                    <>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"familyRelationship\">\r\n                            Family Relationship\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"familyRelationship\"\r\n                            name=\"familyRelationship\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.familyRelationship}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {familyRelationship.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errorFamilyIndexDTO.familyRelationship && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.familyRelationship}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.familyRelationship ===\r\n                        \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\" && (\r\n                        <div className=\"form-group col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"childNumber\">Child Number</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              id=\"childNumber\"\r\n                              name=\"childNumber\"\r\n                              onChange={handlefamilyIndexRequestDto}\r\n                              value={familyIndexRequestDto.childNumber}\r\n                              disabled={props.action === \"view\" ? true : false}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"1\">1st Child</option>\r\n                              <option value=\"2\">2nd Child</option>\r\n                              <option value=\"3\">3rd Child</option>\r\n                              <option value=\"4\">4th Child</option>\r\n                              <option value=\"5\">5th Child</option>\r\n                              <option value=\"6\">6th Child</option>\r\n                              <option value=\"7\">7th Child</option>\r\n                            </select>\r\n                            {errorFamilyIndexDTO.childNumber && (\r\n                              <span className={classes.error}>\r\n                                {errorFamilyIndexDTO.childNumber}\r\n                              </span>\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"familyIndexHivStatus\">\r\n                            Family Index HIV Status\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"familyIndexHivStatus\"\r\n                            name=\"familyIndexHivStatus\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.familyIndexHivStatus}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {familyIndexHivStatus.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {index}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errorFamilyIndexDTO.familyIndexHivStatus && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.familyIndexHivStatus}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.familyIndexHivStatus &&\r\n                        familyIndexRequestDto.familyIndexHivStatus ===\r\n                          \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\" &&\r\n                        [\r\n                          \"FAMILY_RELATIONSHIP_BIOLOGICAL_CHILD\",\r\n                          \"FAMILY_RELATIONSHIP_FATHER\",\r\n                          \"FAMILY_RELATIONSHIP_MOTHER\",\r\n                          \"FAMILY_RELATIONSHIP_SIBLINGS\",\r\n                        ].includes(\r\n                          familyIndexRequestDto.familyRelationship\r\n                        ) && (\r\n                          <div className=\"form-group col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"uan\">UAN</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                id=\"uan\"\r\n                                type=\"text\"\r\n                                name=\"uan\"\r\n                                value={familyIndexRequestDto.uan}\r\n                                onChange={handlefamilyIndexRequestDto}\r\n                                disabled={\r\n                                  familyIndexRequestDto.familyIndexHivStatus !==\r\n                                    \"FAMILY_INDEX_HIV_STATUS_CURRENT_ON_ART\" ||\r\n                                  props.action === \"view\"\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                              {errors.uan && (\r\n                                <span className={classes.error}>\r\n                                  {errors.uan}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"motherDead\">Mother Dead?</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"motherDead\"\r\n                            name=\"motherDead\"\r\n                            onChange={handlefamilyIndexRequestDto}\r\n                            value={familyIndexRequestDto.motherDead}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                          </select>\r\n                          {errorFamilyIndexDTO.motherDead && (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexDTO.motherDead}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyIndexRequestDto.motherDead === \"Yes\" && (\r\n                        <div className=\"form-group col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"yearMotherDied\">Year Mother Died</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              id=\"yearMotherDied\"\r\n                              type=\"date\"\r\n                              min=\"1929-12-31\"\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              name=\"yearMotherDead\"\r\n                              value={familyIndexRequestDto.yearMotherDead}\r\n                              onChange={handlefamilyIndexRequestDto}\r\n                              disabled={props.action === \"view\" ? true : false}\r\n                            />\r\n                            {errorFamilyIndexDTO.yearMotherDead && (\r\n                              <span className={classes.error}>\r\n                                {errorFamilyIndexDTO.yearMotherDead}\r\n                              </span>\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                      {addIndexTracker && (\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                          <p style={{ color: \"red\" }}>\r\n                            Fill input in section B\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <LabelSui\r\n                          as=\"a\"\r\n                          color=\"black\"\r\n                          onClick={updateFamilyIndexRow}\r\n                          size=\"small\"\r\n                          style={{ marginTop: 35 }}\r\n                        >\r\n                          <Icon name=\"plus\" /> Update\r\n                        </LabelSui>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {arrayFamilyIndexRequestDto.length > 0 && (\r\n                    <List className=\"mb-5\">\r\n                      <Table striped responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Family Relationship</th>\r\n                            <th>Family Index HIV Status</th>\r\n                            <th>Mother Dead</th>\r\n\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {arrayFamilyIndexRequestDto.length > 0 &&\r\n                            arrayFamilyIndexRequestDto.map((each, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>\r\n                                    {convertCodeToDisplay(\r\n                                      \"familyRelationship\",\r\n                                      each.familyRelationship\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {convertCodeToDisplay(\r\n                                      \"familyIndexHivStatus\",\r\n                                      each.familyIndexHivStatus\r\n                                    )}\r\n                                  </td>\r\n                                  <td>{each.motherDead}</td>\r\n                                  <td>\r\n                                    {props.action === \"update\" ? (\r\n                                      <>\r\n                                        <IconButton\r\n                                          aria-label=\"update\"\r\n                                          size=\"small\"\r\n                                          color=\"success\"\r\n                                          onClick={() =>\r\n                                            viewFamilyIndexRow(each, index)\r\n                                          }\r\n                                        >\r\n                                          <CreateIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n\r\n                                        <IconButton\r\n                                          aria-label=\"delete\"\r\n                                          size=\"small\"\r\n                                          color=\"error\"\r\n                                          onClick={() =>\r\n                                            removeFamilyIndexRow(index)\r\n                                          }\r\n                                        >\r\n                                          <DeleteIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                      </>\r\n                                    ) : (\r\n                                      <IconButton\r\n                                        aria-label=\"delete\"\r\n                                        size=\"small\"\r\n                                        color=\"success\"\r\n                                        onClick={() =>\r\n                                          viewFamilyIndexRow(each, index)\r\n                                        }\r\n                                      >\r\n                                        <RemoveRedEyeIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </Table>\r\n                    </List>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n            {arrayFamilyTestingTrackerRequestDTO.length > 0 && (\r\n              <>\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"form-group col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    SECTION C: FAMILY INDEX TRACKER\r\n                  </div>\r\n\r\n                  {/* SECTION C INPUT FILEDS  */}\r\n                  {viewFamilyTrackerForm && (\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"positionOfChildEnumerated\">\r\n                            Position of the Child Enumerator\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            id=\"positionOfChildEnumerated\"\r\n                            type=\"number\"\r\n                            name=\"positionOfChildEnumerated\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.positionOfChildEnumerated\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sexTrackeer\">Sex </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"trackerSex\"\r\n                            name=\"trackerSex\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={familyTestingTrackerRequestDTO?.trackerSex}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {genders.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sex\">Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            id=\"trackerAge\"\r\n                            type=\"number\"\r\n                            name=\"trackerAge\"\r\n                            value={familyTestingTrackerRequestDTO?.trackerAge}\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"followUpAppointmentLocation\">\r\n                            Follow Up Appointment Location\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"followUpAppointmentLocation\"\r\n                            name=\"followUpAppointmentLocation\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.followUpAppointmentLocation\r\n                            }\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {followUpAppointmentLocation.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Schedule Visit Date{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"scheduleVisitDate\"\r\n                            id=\"scheduleVisitDate\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.scheduleVisitDate\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {/* {errors.referralDate !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.referralDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Date visited{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateVisit\"\r\n                            id=\"dateVisit\"\r\n                            value={familyTestingTrackerRequestDTO?.dateVisit}\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {errorFamilyIndexTracker.dateVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errorFamilyIndexTracker.dateVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Attempts <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"attempt\"\r\n                            id=\"attempt\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={familyTestingTrackerRequestDTO?.attempt}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {indexVisitAttempt.map((value, index) => (\r\n                              <option key={index} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4 \">\r\n                        <Label>Known HIV Positive ?</Label>\r\n                        <FormGroup>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"knownHivPositive\"\r\n                            id=\"knownHivPositive\"\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.knownHivPositive\r\n                            }\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {familyTestingTrackerRequestDTO.knownHivPositive &&\r\n                        familyTestingTrackerRequestDTO.knownHivPositive ===\r\n                          \"Yes\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"\">Date Tested</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"dateTested\"\r\n                                id=\"dateTested\"\r\n                                value={\r\n                                  familyTestingTrackerRequestDTO?.dateTested\r\n                                }\r\n                                onChange={handlefamilyTestingTrackerRequestDTO}\r\n                                min=\"1929-12-31\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                disabled={\r\n                                  props.action === \"view\" ? true : false\r\n                                }\r\n                              />\r\n                              {errors.referralDate !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.referralDate}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      {familyTestingTrackerRequestDTO?.knownHivPositive &&\r\n                        familyTestingTrackerRequestDTO?.knownHivPositive ===\r\n                          \"Yes\" && (\r\n                          <div className=\"form-group col-md-4 \">\r\n                            <Label>HIV Test Result </Label>\r\n                            <FormGroup>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hiveTestResult\"\r\n                                id=\"hiveTestResult\"\r\n                                onChange={handlefamilyTestingTrackerRequestDTO}\r\n                                value={\r\n                                  familyTestingTrackerRequestDTO.hiveTestResult\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  props.action === \"view\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Tested Positive\">\r\n                                  Tested Positive\r\n                                </option>\r\n                                <option value=\"Teste Negative\">\r\n                                  Tested Negative\r\n                                </option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">Date Enrolled In Ovc</Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateEnrolledInOVC\"\r\n                            id=\"dateEnrolledInOVC\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.dateEnrolledInOVC\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {errors.referralDate !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.referralDate}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">Date Enrolled On ART</Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateEnrolledOnArt\"\r\n                            id=\"dateEnrolledOnArt\"\r\n                            value={\r\n                              familyTestingTrackerRequestDTO?.dateEnrolledOnArt\r\n                            }\r\n                            onChange={handlefamilyTestingTrackerRequestDTO}\r\n                            min=\"1929-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={props.action === \"view\" ? true : false}\r\n                          />\r\n                          {errors.referralDate !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.referralDate}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {addIndexTracker2 && (\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                          <p style={{ color: \"red\" }}>\r\n                            Fill section C; Index Tracker\r\n                          </p>\r\n                        </div>\r\n                      )}{\" \"}\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <LabelSui\r\n                          as=\"a\"\r\n                          color=\"black\"\r\n                          onClick={updateFamilyTrackerRow}\r\n                          size=\"small\"\r\n                          style={{ marginTop: 35 }}\r\n                        >\r\n                          <Icon name=\"plus\" /> Update\r\n                        </LabelSui>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {arrayFamilyTestingTrackerRequestDTO.length > 0 && (\r\n                  <List>\r\n                    <Table striped responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Position of the child</th>\r\n                          <th>Sex</th>\r\n                          <th>Age</th>\r\n\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {arrayFamilyTestingTrackerRequestDTO.map(\r\n                          (each, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{each.positionOfChildEnumerated}</td>\r\n                                <td>{each.trackerSex}</td>\r\n                                <td>{each.trackerAge}</td>\r\n                                <td>\r\n                                  {props.action === \"update\" ? (\r\n                                    <>\r\n                                      <IconButton\r\n                                        aria-label=\"update\"\r\n                                        size=\"small\"\r\n                                        color=\"success\"\r\n                                        onClick={() =>\r\n                                          viewFamilyTrackerRow(each, index)\r\n                                        }\r\n                                      >\r\n                                        <CreateIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        aria-label=\"delete\"\r\n                                        size=\"small\"\r\n                                        color=\"error\"\r\n                                        onClick={() =>\r\n                                          removeFamilyTrackerRow(index)\r\n                                        }\r\n                                      >\r\n                                        <DeleteIcon fontSize=\"inherit\" />\r\n                                      </IconButton>\r\n                                    </>\r\n                                  ) : (\r\n                                    <IconButton\r\n                                      aria-label=\"delete\"\r\n                                      size=\"small\"\r\n                                      color=\"success\"\r\n                                      onClick={() =>\r\n                                        viewFamilyTrackerRow(each, index)\r\n                                      }\r\n                                    >\r\n                                      <RemoveRedEyeIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </List>\r\n                )}\r\n              </>\r\n            )}\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <Button\r\n                  content=\"Update\"\r\n                  type=\"submit\"\r\n                  icon=\"right arrow\"\r\n                  labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n        {/* <CardBody>\r\n          <ServicesProvided />\r\n        </CardBody> */}\r\n\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewFamilyIndexTestingForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js",["930","931","932","933","934"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../../../api\";\r\nimport { token as token } from \"./../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FamilyIndexHistory = (props) => {\r\n  let history = useHistory();\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFamilyIndexList([response.data]);\r\n          props.handleItemClick(\"fit-history\");\r\n        } else {\r\n          setFamilyIndexList([]);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListoFFamilyIndexInfo();\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-fit\");\r\n    props.setAction(actionType);\r\n  };\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}hts-family-index-testing/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        getListoFFamilyIndexInfo();\r\n\r\n        toggle();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group mb-3 col-md-12\">\r\n          {console.log(familyIndexList)}\r\n          {familyIndexList.length < 1 && (\r\n            <Button\r\n              content=\"Add New form\"\r\n              icon=\"left add\"\r\n              labelPosition=\"left\"\r\n              style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n              onClick={() => props.handleItemClick(\"fit\")}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            content=\"Done\"\r\n            icon=\"list\"\r\n            labelPosition=\"left\"\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            onClick={() => handleDone()}\r\n          /> */}\r\n        </div>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          // title=''\r\n          columns={[\r\n            // { title: \"HTS ID\", field: \"id\" },\r\n            { title: \"Family Index Client\", field: \"date\" },\r\n            { title: \"Date of Birth\", field: \"pre\" },\r\n            { title: \"Recency Test\", field: \"rencency\" },\r\n            // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={familyIndexList.map((row) => ({\r\n            // id: row.id,\r\n            date: row.indexClientId,\r\n            pre: row.dateOfBirth,\r\n            rencency: row.recencyTesting,\r\n\r\n            //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n            actions: (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    {/* <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  > */}\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* </Button> */}\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          }))}\r\n          options={{\r\n            toolbar: false,\r\n            search: false,\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete ?\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyIndexHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js",["935"],"import React, {Fragment, useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PNSList from \"../../NewRegistration/PartnerNotificationServices/PNSlist\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport ClientRerralList from \"./ClientRerralList\";\r\n\r\nconst ClientReferralHistory = (props) => {\r\n    const [activePage, setActivePage] = useState(\"list\");\r\n    const handleIClickPage = (activeItem) => {\r\n        setActivePage(activeItem);\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const handleDone = (row, actionType) => {\r\n        props.setActivePage({\r\n            ...props.activePage,\r\n            activePage: \"home\",\r\n            activeObject: row,\r\n            actionType: actionType,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {activePage === \"list\" && (\r\n                        <ClientRerralList\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                            handleItemClick={handleItemClick}\r\n                            setRow={props.setRow}\r\n                        />\r\n                    )}\r\n                    {activePage === \"add\" && (\r\n                        <AddIndexContact\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                        />\r\n                    )}\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button\r\n                                content=\"Back\"\r\n                                icon=\"left arrow\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                                onClick={() =>\r\n                                    handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                                }\r\n                            />\r\n                            <Button\r\n                                content=\"Done\"\r\n                                icon=\"list\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                                onClick={() => handleDone()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClientReferralHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js",["936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"../../NewRegistration/ServicesProvided\";\r\nimport RefferalForm from \"./RefferalUnit\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewClientReferral = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  const [formInfo, setFormInfo] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: \"\",\r\n    comments: \"\",\r\n    receivingStateFacility: \"\",\r\n    receivingLgaFacility: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  const viewReferralInfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFormInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    viewReferralInfo();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group  col-md-8\">\r\n          <FormGroup>\r\n            <Label>\r\n              Referral Type <span style={{ color: \"red\" }}> *</span>\r\n            </Label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"contentDropDown\"\r\n              id=\"contentDropDown\"\r\n              onChange={handleContentChange}\r\n              style={{\r\n                border: \"1px solid #014D88\",\r\n                borderRadius: \"0.2rem\",\r\n              }}\r\n            >\r\n              <option value={\"\"}>Select Refarral form type</option>\r\n              <option value={\"showReferringUnit\"}>Referral form</option>\r\n              <option value={\"showServiceProviderUnit\"}>\r\n                Service Provider form\r\n              </option>\r\n            </select>\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <Card className={classes.root}>\r\n        {content.showReferringUnit && (\r\n          <RefferralUnit\r\n            patientObj={patientObj}\r\n            formInfo={formInfo}\r\n            row={props.row}\r\n            handleItemClick={props.handleItemClick}\r\n            setCompleted={props.setCompleted}\r\n            completed={props.completed}\r\n          />\r\n        )}\r\n        {content.showServiceProviderUnit && (\r\n          <CardBody>\r\n            <ServicesProvided\r\n              patientObj={patientObj}\r\n              formInfo={formInfo}\r\n              row={props.row}\r\n              handleItemClick={props.handleItemClick}\r\n              etCompleted={props.setCompleted}\r\n              completed={props.completed}\r\n            />\r\n          </CardBody>\r\n        )}\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewClientReferral;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js",["969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js",["1003","1004","1005"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ClientReferral\\RefferalUnit.js",["1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js",["1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063"],{"ruleId":"1064","severity":1,"message":"1065","line":4,"column":10,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":23},{"ruleId":"1068","replacedBy":"1069"},{"ruleId":"1070","replacedBy":"1071"},{"ruleId":"1064","severity":1,"message":"1072","line":3,"column":19,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1073","line":2,"column":10,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1074","line":6,"column":8,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1075","line":10,"column":10,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1076","line":10,"column":15,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1078","line":5,"column":26,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1079","line":8,"column":16,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1080","line":12,"column":22,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1081","line":22,"column":8,"nodeType":"1066","messageId":"1067","endLine":22,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1082","line":29,"column":7,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1083","line":44,"column":10,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1084","line":44,"column":18,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1085","line":49,"column":10,"nodeType":"1066","messageId":"1067","endLine":49,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1087","line":263,"column":6,"nodeType":"1088","endLine":263,"endColumn":8,"suggestions":"1089"},{"ruleId":"1090","severity":1,"message":"1091","line":333,"column":34,"nodeType":"1092","messageId":"1093","endLine":333,"endColumn":36},{"ruleId":"1094","severity":1,"message":"1095","line":5,"column":10,"nodeType":"1096","messageId":"1097","endLine":5,"endColumn":24,"fix":"1098"},{"ruleId":"1064","severity":1,"message":"1073","line":26,"column":10,"nodeType":"1066","messageId":"1067","endLine":26,"endColumn":20},{"ruleId":"1094","severity":1,"message":"1095","line":5,"column":10,"nodeType":"1096","messageId":"1097","endLine":5,"endColumn":24,"fix":"1099"},{"ruleId":"1064","severity":1,"message":"1073","line":26,"column":10,"nodeType":"1066","messageId":"1067","endLine":26,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1100","line":70,"column":10,"nodeType":"1066","messageId":"1067","endLine":70,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1101","line":70,"column":21,"nodeType":"1066","messageId":"1067","endLine":70,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1102","line":73,"column":10,"nodeType":"1066","messageId":"1067","endLine":73,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1103","line":77,"column":6,"nodeType":"1088","endLine":77,"endColumn":8,"suggestions":"1104"},{"ruleId":"1090","severity":1,"message":"1091","line":125,"column":25,"nodeType":"1092","messageId":"1093","endLine":125,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":132,"column":25,"nodeType":"1092","messageId":"1093","endLine":132,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1105","line":1,"column":30,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1078","line":5,"column":26,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1106","line":8,"column":10,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1080","line":12,"column":22,"nodeType":"1066","messageId":"1067","endLine":12,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1107","line":33,"column":8,"nodeType":"1066","messageId":"1067","endLine":33,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1108","line":34,"column":10,"nodeType":"1066","messageId":"1067","endLine":34,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1109","line":34,"column":24,"nodeType":"1066","messageId":"1067","endLine":34,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1110","line":48,"column":9,"nodeType":"1066","messageId":"1067","endLine":48,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1111","line":51,"column":10,"nodeType":"1066","messageId":"1067","endLine":51,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1112","line":67,"column":27,"nodeType":"1066","messageId":"1067","endLine":67,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1113","line":73,"column":9,"nodeType":"1066","messageId":"1067","endLine":73,"endColumn":21},{"ruleId":"1094","severity":1,"message":"1095","line":4,"column":10,"nodeType":"1096","messageId":"1097","endLine":4,"endColumn":24,"fix":"1114"},{"ruleId":"1086","severity":1,"message":"1115","line":40,"column":6,"nodeType":"1088","endLine":40,"endColumn":42,"suggestions":"1116"},{"ruleId":"1064","severity":1,"message":"1117","line":3,"column":10,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1118","line":3,"column":20,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1075","line":3,"column":25,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1119","line":5,"column":8,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1106","line":6,"column":10,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1120","line":9,"column":8,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1121","line":10,"column":8,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1122","line":11,"column":9,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1123","line":13,"column":7,"nodeType":"1066","messageId":"1067","endLine":13,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1124","line":91,"column":7,"nodeType":"1066","messageId":"1067","endLine":91,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1125","line":9,"column":3,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":8},{"ruleId":"1064","severity":1,"message":"1126","line":10,"column":3,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":7},{"ruleId":"1064","severity":1,"message":"1127","line":13,"column":16,"nodeType":"1066","messageId":"1067","endLine":13,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1128","line":23,"column":19,"nodeType":"1066","messageId":"1067","endLine":23,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1129","line":97,"column":27,"nodeType":"1066","messageId":"1067","endLine":97,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1130","line":128,"column":28,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":47},{"ruleId":"1064","severity":1,"message":"1131","line":129,"column":24,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":38},{"ruleId":"1086","severity":1,"message":"1132","line":213,"column":6,"nodeType":"1088","endLine":213,"endColumn":24,"suggestions":"1133"},{"ruleId":"1064","severity":1,"message":"1134","line":222,"column":21,"nodeType":"1066","messageId":"1067","endLine":222,"endColumn":33},{"ruleId":"1135","severity":1,"message":"1136","line":256,"column":5,"nodeType":"1137","messageId":"1093","endLine":256,"endColumn":36},{"ruleId":"1135","severity":1,"message":"1138","line":257,"column":5,"nodeType":"1137","messageId":"1093","endLine":257,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1105","line":1,"column":29,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1107","line":2,"column":8,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1139","line":4,"column":8,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1126","line":5,"column":52,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1140","line":6,"column":13,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1127","line":8,"column":15,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1084","line":95,"column":20,"nodeType":"1066","messageId":"1067","endLine":95,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1141","line":96,"column":12,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1142","line":96,"column":20,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":6,"column":16,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1143","line":99,"column":10,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1144","line":369,"column":12,"nodeType":"1066","messageId":"1067","endLine":369,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1145","line":375,"column":12,"nodeType":"1066","messageId":"1067","endLine":375,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1091","line":431,"column":47,"nodeType":"1092","messageId":"1093","endLine":431,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":6,"column":16,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1148","line":10,"column":10,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1149","line":24,"column":10,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1150","line":100,"column":9,"nodeType":"1066","messageId":"1067","endLine":100,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1151","line":103,"column":10,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1152","line":103,"column":24,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1153","line":107,"column":10,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1154","line":121,"column":27,"nodeType":"1066","messageId":"1067","endLine":121,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1155","line":124,"column":24,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":39},{"ruleId":"1090","severity":1,"message":"1091","line":128,"column":25,"nodeType":"1092","messageId":"1093","endLine":128,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1156","line":161,"column":9,"nodeType":"1066","messageId":"1067","endLine":161,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1157","line":304,"column":9,"nodeType":"1066","messageId":"1067","endLine":304,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1158","line":376,"column":6,"nodeType":"1088","endLine":376,"endColumn":70,"suggestions":"1159"},{"ruleId":"1064","severity":1,"message":"1160","line":610,"column":13,"nodeType":"1066","messageId":"1067","endLine":610,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1091","line":654,"column":24,"nodeType":"1092","messageId":"1093","endLine":654,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":657,"column":31,"nodeType":"1092","messageId":"1093","endLine":657,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":716,"column":47,"nodeType":"1092","messageId":"1093","endLine":716,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1134","line":112,"column":21,"nodeType":"1066","messageId":"1067","endLine":112,"endColumn":33},{"ruleId":"1161","severity":1,"message":"1162","line":236,"column":32,"nodeType":"1163","messageId":"1164","endLine":236,"endColumn":76,"fix":"1165"},{"ruleId":"1161","severity":1,"message":"1162","line":243,"column":32,"nodeType":"1163","messageId":"1164","endLine":243,"endColumn":73,"fix":"1166"},{"ruleId":"1161","severity":1,"message":"1162","line":251,"column":32,"nodeType":"1163","messageId":"1164","endLine":251,"endColumn":70,"fix":"1167"},{"ruleId":"1161","severity":1,"message":"1162","line":258,"column":32,"nodeType":"1163","messageId":"1164","endLine":258,"endColumn":69,"fix":"1168"},{"ruleId":"1161","severity":1,"message":"1162","line":265,"column":32,"nodeType":"1163","messageId":"1164","endLine":265,"endColumn":69,"fix":"1169"},{"ruleId":"1161","severity":1,"message":"1162","line":267,"column":32,"nodeType":"1163","messageId":"1164","endLine":267,"endColumn":62,"fix":"1170"},{"ruleId":"1086","severity":1,"message":"1171","line":295,"column":6,"nodeType":"1088","endLine":300,"endColumn":4,"suggestions":"1172"},{"ruleId":"1173","severity":1,"message":"1174","line":347,"column":5,"nodeType":"1175","messageId":"1176","endLine":352,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":348,"column":28,"nodeType":"1092","messageId":"1093","endLine":348,"endColumn":30},{"ruleId":"1173","severity":1,"message":"1174","line":354,"column":5,"nodeType":"1175","messageId":"1176","endLine":357,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":355,"column":28,"nodeType":"1092","messageId":"1093","endLine":355,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":359,"column":47,"nodeType":"1092","messageId":"1093","endLine":359,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1150","line":87,"column":9,"nodeType":"1066","messageId":"1067","endLine":87,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1134","line":96,"column":21,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1177","line":172,"column":6,"nodeType":"1088","endLine":172,"endColumn":48,"suggestions":"1178"},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1079","line":13,"column":10,"nodeType":"1066","messageId":"1067","endLine":13,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1128","line":24,"column":19,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1179","line":113,"column":10,"nodeType":"1066","messageId":"1067","endLine":113,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1180","line":179,"column":6,"nodeType":"1088","endLine":179,"endColumn":21,"suggestions":"1181"},{"ruleId":"1090","severity":1,"message":"1091","line":342,"column":24,"nodeType":"1092","messageId":"1093","endLine":342,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":345,"column":31,"nodeType":"1092","messageId":"1093","endLine":345,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":463,"column":47,"nodeType":"1092","messageId":"1093","endLine":463,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1146","line":4,"column":38,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":4,"column":54,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1147","line":8,"column":8,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":20,"column":19,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":20,"column":32,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1183","line":27,"column":8,"nodeType":"1066","messageId":"1067","endLine":27,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1184","line":122,"column":10,"nodeType":"1066","messageId":"1067","endLine":122,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1185","line":123,"column":10,"nodeType":"1066","messageId":"1067","endLine":123,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1186","line":124,"column":10,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1187","line":125,"column":10,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1188","line":125,"column":34,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":57},{"ruleId":"1064","severity":1,"message":"1100","line":128,"column":10,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1101","line":128,"column":21,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1189","line":132,"column":10,"nodeType":"1066","messageId":"1067","endLine":132,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1190","line":132,"column":31,"nodeType":"1066","messageId":"1067","endLine":132,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1191","line":138,"column":10,"nodeType":"1066","messageId":"1067","endLine":138,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1192","line":138,"column":41,"nodeType":"1066","messageId":"1067","endLine":138,"endColumn":73},{"ruleId":"1064","severity":1,"message":"1193","line":140,"column":21,"nodeType":"1066","messageId":"1067","endLine":140,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1194","line":146,"column":19,"nodeType":"1066","messageId":"1067","endLine":146,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1195","line":151,"column":10,"nodeType":"1066","messageId":"1067","endLine":151,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1196","line":151,"column":24,"nodeType":"1066","messageId":"1067","endLine":151,"endColumn":39},{"ruleId":"1135","severity":1,"message":"1197","line":270,"column":5,"nodeType":"1137","messageId":"1093","endLine":270,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1198","line":275,"column":10,"nodeType":"1066","messageId":"1067","endLine":275,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1199","line":276,"column":10,"nodeType":"1066","messageId":"1067","endLine":276,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1200","line":277,"column":10,"nodeType":"1066","messageId":"1067","endLine":277,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1091","line":365,"column":49,"nodeType":"1092","messageId":"1093","endLine":365,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1201","line":480,"column":9,"nodeType":"1066","messageId":"1067","endLine":480,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1202","line":481,"column":11,"nodeType":"1066","messageId":"1067","endLine":481,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1203","line":528,"column":6,"nodeType":"1088","endLine":528,"endColumn":8,"suggestions":"1204"},{"ruleId":"1064","severity":1,"message":"1205","line":559,"column":9,"nodeType":"1066","messageId":"1067","endLine":559,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":673,"column":51,"nodeType":"1092","messageId":"1093","endLine":673,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1206","line":678,"column":9,"nodeType":"1066","messageId":"1067","endLine":678,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1207","line":702,"column":9,"nodeType":"1066","messageId":"1067","endLine":702,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":751,"column":47,"nodeType":"1210","messageId":"1211","endLine":751,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":760,"column":49,"nodeType":"1210","messageId":"1211","endLine":760,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1209","line":769,"column":49,"nodeType":"1210","messageId":"1211","endLine":769,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1212","line":932,"column":9,"nodeType":"1066","messageId":"1067","endLine":932,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":933,"column":24,"nodeType":"1092","messageId":"1093","endLine":933,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":936,"column":31,"nodeType":"1092","messageId":"1093","endLine":936,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1213","line":969,"column":9,"nodeType":"1066","messageId":"1067","endLine":969,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":997,"column":47,"nodeType":"1092","messageId":"1093","endLine":997,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1214","line":3,"column":20,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1128","line":8,"column":18,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1105","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1107","line":2,"column":8,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":47,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":52},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1140","line":4,"column":13,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1078","line":8,"column":10,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1108","line":11,"column":10,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1109","line":11,"column":24,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1128","line":19,"column":19,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":19,"column":32,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":20,"column":8,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1216","line":23,"column":8,"nodeType":"1066","messageId":"1067","endLine":23,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1217","line":103,"column":10,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":12},{"ruleId":"1064","severity":1,"message":"1218","line":103,"column":14,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1142","line":104,"column":18,"nodeType":"1066","messageId":"1067","endLine":104,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1219","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1220","line":105,"column":23,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1083","line":106,"column":10,"nodeType":"1066","messageId":"1067","endLine":106,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1084","line":106,"column":18,"nodeType":"1066","messageId":"1067","endLine":106,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1221","line":107,"column":7,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":11},{"ruleId":"1064","severity":1,"message":"1222","line":110,"column":10,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1223","line":110,"column":19,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1184","line":111,"column":10,"nodeType":"1066","messageId":"1067","endLine":111,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1224","line":111,"column":29,"nodeType":"1066","messageId":"1067","endLine":111,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1185","line":112,"column":10,"nodeType":"1066","messageId":"1067","endLine":112,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1225","line":112,"column":21,"nodeType":"1066","messageId":"1067","endLine":112,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1226","line":113,"column":10,"nodeType":"1066","messageId":"1067","endLine":113,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1227","line":113,"column":18,"nodeType":"1066","messageId":"1067","endLine":113,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1228","line":114,"column":10,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1229","line":114,"column":19,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1179","line":115,"column":10,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1230","line":115,"column":28,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":47},{"ruleId":"1064","severity":1,"message":"1231","line":118,"column":10,"nodeType":"1066","messageId":"1067","endLine":118,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":2,"column":54,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1215","line":19,"column":8,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1232","line":21,"column":8,"nodeType":"1066","messageId":"1067","endLine":21,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1233","line":26,"column":8,"nodeType":"1066","messageId":"1067","endLine":26,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1143","line":101,"column":10,"nodeType":"1066","messageId":"1067","endLine":101,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1234","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1235","line":105,"column":25,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1187","line":107,"column":10,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1236","line":107,"column":34,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":59},{"ruleId":"1064","severity":1,"message":"1193","line":117,"column":21,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1194","line":123,"column":19,"nodeType":"1066","messageId":"1067","endLine":123,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1237","line":131,"column":10,"nodeType":"1066","messageId":"1067","endLine":131,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1238","line":131,"column":26,"nodeType":"1066","messageId":"1067","endLine":131,"endColumn":43},{"ruleId":"1064","severity":1,"message":"1239","line":249,"column":9,"nodeType":"1066","messageId":"1067","endLine":249,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1240","line":354,"column":6,"nodeType":"1088","endLine":354,"endColumn":24,"suggestions":"1241"},{"ruleId":"1064","severity":1,"message":"1242","line":489,"column":9,"nodeType":"1066","messageId":"1067","endLine":489,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1243","line":502,"column":9,"nodeType":"1066","messageId":"1067","endLine":502,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1244","line":547,"column":9,"nodeType":"1066","messageId":"1067","endLine":547,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1212","line":599,"column":9,"nodeType":"1066","messageId":"1067","endLine":599,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1245","line":622,"column":9,"nodeType":"1066","messageId":"1067","endLine":622,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1246","line":633,"column":11,"nodeType":"1066","messageId":"1067","endLine":633,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1091","line":657,"column":47,"nodeType":"1092","messageId":"1093","endLine":657,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1091","line":674,"column":42,"nodeType":"1092","messageId":"1093","endLine":674,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1128","line":24,"column":19,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1150","line":99,"column":9,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1247","line":180,"column":6,"nodeType":"1088","endLine":180,"endColumn":24,"suggestions":"1248"},{"ruleId":"1090","severity":1,"message":"1091","line":385,"column":47,"nodeType":"1092","messageId":"1093","endLine":385,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":19,"column":19,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":19,"column":32,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":20,"column":8,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1183","line":21,"column":8,"nodeType":"1066","messageId":"1067","endLine":21,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1249","line":107,"column":9,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1222","line":115,"column":10,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1223","line":115,"column":19,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1100","line":122,"column":10,"nodeType":"1066","messageId":"1067","endLine":122,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1101","line":122,"column":21,"nodeType":"1066","messageId":"1067","endLine":122,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1195","line":125,"column":10,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1196","line":125,"column":24,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1250","line":126,"column":10,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1251","line":126,"column":25,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1252","line":134,"column":10,"nodeType":"1066","messageId":"1067","endLine":134,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1253","line":134,"column":29,"nodeType":"1066","messageId":"1067","endLine":134,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1254","line":135,"column":10,"nodeType":"1066","messageId":"1067","endLine":135,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1255","line":136,"column":10,"nodeType":"1066","messageId":"1067","endLine":136,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1256","line":139,"column":10,"nodeType":"1066","messageId":"1067","endLine":139,"endColumn":30},{"ruleId":"1086","severity":1,"message":"1257","line":200,"column":6,"nodeType":"1088","endLine":200,"endColumn":8,"suggestions":"1258"},{"ruleId":"1064","severity":1,"message":"1245","line":210,"column":9,"nodeType":"1066","messageId":"1067","endLine":210,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1205","line":229,"column":9,"nodeType":"1066","messageId":"1067","endLine":229,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1246","line":273,"column":11,"nodeType":"1066","messageId":"1067","endLine":273,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1212","line":442,"column":9,"nodeType":"1066","messageId":"1067","endLine":442,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":443,"column":24,"nodeType":"1092","messageId":"1093","endLine":443,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":446,"column":31,"nodeType":"1092","messageId":"1093","endLine":446,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1259","line":477,"column":9,"nodeType":"1066","messageId":"1067","endLine":477,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1091","line":538,"column":47,"nodeType":"1092","messageId":"1093","endLine":538,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1260","line":3,"column":28,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":36},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1214","line":6,"column":10,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1215","line":19,"column":8,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1219","line":99,"column":10,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1220","line":99,"column":23,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1261","line":103,"column":9,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1228","line":104,"column":10,"nodeType":"1066","messageId":"1067","endLine":104,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1262","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1263","line":105,"column":25,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1264","line":127,"column":10,"nodeType":"1066","messageId":"1067","endLine":127,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1198","line":128,"column":10,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1265","line":128,"column":25,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1199","line":129,"column":10,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1266","line":129,"column":28,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":47},{"ruleId":"1064","severity":1,"message":"1200","line":130,"column":10,"nodeType":"1066","messageId":"1067","endLine":130,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1267","line":130,"column":23,"nodeType":"1066","messageId":"1067","endLine":130,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1259","line":132,"column":11,"nodeType":"1066","messageId":"1067","endLine":132,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1246","line":146,"column":15,"nodeType":"1066","messageId":"1067","endLine":146,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1268","line":232,"column":9,"nodeType":"1066","messageId":"1067","endLine":232,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1269","line":269,"column":6,"nodeType":"1088","endLine":269,"endColumn":8,"suggestions":"1270"},{"ruleId":"1064","severity":1,"message":"1245","line":271,"column":9,"nodeType":"1066","messageId":"1067","endLine":271,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":340,"column":47,"nodeType":"1092","messageId":"1093","endLine":340,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1271","line":27,"column":10,"nodeType":"1066","messageId":"1067","endLine":27,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1117","line":29,"column":10,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1272","line":29,"column":28,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1273","line":29,"column":34,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1082","line":56,"column":7,"nodeType":"1066","messageId":"1067","endLine":56,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1274","line":102,"column":9,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1275","line":108,"column":6,"nodeType":"1088","endLine":108,"endColumn":8,"suggestions":"1276"},{"ruleId":"1064","severity":1,"message":"1277","line":124,"column":9,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":2,"column":54,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1143","line":98,"column":10,"nodeType":"1066","messageId":"1067","endLine":98,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1237","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1238","line":105,"column":26,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1278","line":152,"column":6,"nodeType":"1088","endLine":152,"endColumn":24,"suggestions":"1279"},{"ruleId":"1064","severity":1,"message":"1280","line":168,"column":12,"nodeType":"1066","messageId":"1067","endLine":168,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1259","line":260,"column":9,"nodeType":"1066","messageId":"1067","endLine":260,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1091","line":347,"column":47,"nodeType":"1092","messageId":"1093","endLine":347,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1091","line":354,"column":42,"nodeType":"1092","messageId":"1093","endLine":354,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1139","line":2,"column":10,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1078","line":5,"column":26,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1106","line":8,"column":10,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1079","line":8,"column":16,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1080","line":11,"column":22,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1082","line":26,"column":7,"nodeType":"1066","messageId":"1067","endLine":26,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1281","line":1,"column":28,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":36},{"ruleId":"1094","severity":1,"message":"1095","line":5,"column":10,"nodeType":"1096","messageId":"1097","endLine":5,"endColumn":24,"fix":"1282"},{"ruleId":"1064","severity":1,"message":"1271","line":28,"column":10,"nodeType":"1066","messageId":"1067","endLine":28,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1082","line":56,"column":7,"nodeType":"1066","messageId":"1067","endLine":56,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1105","line":1,"column":29,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1107","line":2,"column":8,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1139","line":4,"column":8,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1126","line":5,"column":52,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1140","line":6,"column":13,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1127","line":8,"column":15,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1084","line":95,"column":20,"nodeType":"1066","messageId":"1067","endLine":95,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1141","line":96,"column":12,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1142","line":96,"column":20,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":53,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":57},{"ruleId":"1064","severity":1,"message":"1134","line":102,"column":23,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1177","line":193,"column":8,"nodeType":"1088","endLine":193,"endColumn":26,"suggestions":"1283"},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":6,"column":16,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":409,"column":47,"nodeType":"1092","messageId":"1093","endLine":409,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":6,"column":16,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1134","line":106,"column":21,"nodeType":"1066","messageId":"1067","endLine":106,"endColumn":33},{"ruleId":"1161","severity":1,"message":"1162","line":218,"column":32,"nodeType":"1163","messageId":"1164","endLine":218,"endColumn":76,"fix":"1284"},{"ruleId":"1161","severity":1,"message":"1162","line":225,"column":32,"nodeType":"1163","messageId":"1164","endLine":225,"endColumn":73,"fix":"1285"},{"ruleId":"1161","severity":1,"message":"1162","line":233,"column":32,"nodeType":"1163","messageId":"1164","endLine":233,"endColumn":70,"fix":"1286"},{"ruleId":"1161","severity":1,"message":"1162","line":240,"column":32,"nodeType":"1163","messageId":"1164","endLine":240,"endColumn":69,"fix":"1287"},{"ruleId":"1161","severity":1,"message":"1162","line":247,"column":32,"nodeType":"1163","messageId":"1164","endLine":247,"endColumn":69,"fix":"1288"},{"ruleId":"1161","severity":1,"message":"1162","line":249,"column":32,"nodeType":"1163","messageId":"1164","endLine":249,"endColumn":62,"fix":"1289"},{"ruleId":"1086","severity":1,"message":"1171","line":279,"column":6,"nodeType":"1088","endLine":284,"endColumn":4,"suggestions":"1290"},{"ruleId":"1173","severity":1,"message":"1174","line":335,"column":5,"nodeType":"1175","messageId":"1176","endLine":340,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":336,"column":28,"nodeType":"1092","messageId":"1093","endLine":336,"endColumn":30},{"ruleId":"1173","severity":1,"message":"1174","line":342,"column":5,"nodeType":"1175","messageId":"1176","endLine":345,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":343,"column":28,"nodeType":"1092","messageId":"1093","endLine":343,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":347,"column":47,"nodeType":"1092","messageId":"1093","endLine":347,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":46,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":52,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":15,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1128","line":15,"column":18,"nodeType":"1066","messageId":"1067","endLine":15,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1134","line":104,"column":23,"nodeType":"1066","messageId":"1067","endLine":104,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1132","line":184,"column":8,"nodeType":"1088","endLine":184,"endColumn":26,"suggestions":"1291"},{"ruleId":"1064","severity":1,"message":"1292","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1146","line":4,"column":38,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":4,"column":54,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":16,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1147","line":8,"column":8,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1148","line":11,"column":10,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1106","line":14,"column":10,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1293","line":14,"column":28,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":22,"column":8,"nodeType":"1066","messageId":"1067","endLine":22,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1294","line":24,"column":10,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1150","line":96,"column":9,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1153","line":104,"column":10,"nodeType":"1066","messageId":"1067","endLine":104,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1295","line":167,"column":6,"nodeType":"1088","endLine":167,"endColumn":24,"suggestions":"1296"},{"ruleId":"1090","severity":1,"message":"1091","line":289,"column":47,"nodeType":"1092","messageId":"1093","endLine":289,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":15,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1297","line":3,"column":35,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1298","line":3,"column":46,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":54},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1122","line":9,"column":9,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1299","line":10,"column":9,"nodeType":"1066","messageId":"1067","endLine":10,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1300","line":13,"column":10,"nodeType":"1066","messageId":"1067","endLine":13,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1110","line":35,"column":9,"nodeType":"1066","messageId":"1067","endLine":35,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1301","line":36,"column":10,"nodeType":"1066","messageId":"1067","endLine":36,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1261","line":39,"column":9,"nodeType":"1066","messageId":"1067","endLine":39,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1259","line":42,"column":9,"nodeType":"1066","messageId":"1067","endLine":42,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1302","line":43,"column":11,"nodeType":"1066","messageId":"1067","endLine":43,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1303","line":44,"column":9,"nodeType":"1066","messageId":"1067","endLine":44,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1304","line":51,"column":9,"nodeType":"1066","messageId":"1067","endLine":51,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1305","line":53,"column":9,"nodeType":"1066","messageId":"1067","endLine":53,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1306","line":57,"column":9,"nodeType":"1066","messageId":"1067","endLine":57,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1214","line":3,"column":20,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1271","line":6,"column":10,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1106","line":7,"column":10,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1128","line":9,"column":18,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1128","line":24,"column":19,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1150","line":99,"column":9,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1091","line":378,"column":47,"nodeType":"1092","messageId":"1093","endLine":378,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1134","line":106,"column":21,"nodeType":"1066","messageId":"1067","endLine":106,"endColumn":33},{"ruleId":"1161","severity":1,"message":"1162","line":240,"column":32,"nodeType":"1163","messageId":"1164","endLine":240,"endColumn":76,"fix":"1307"},{"ruleId":"1161","severity":1,"message":"1162","line":247,"column":32,"nodeType":"1163","messageId":"1164","endLine":247,"endColumn":73,"fix":"1308"},{"ruleId":"1161","severity":1,"message":"1162","line":255,"column":32,"nodeType":"1163","messageId":"1164","endLine":255,"endColumn":70,"fix":"1309"},{"ruleId":"1161","severity":1,"message":"1162","line":262,"column":32,"nodeType":"1163","messageId":"1164","endLine":262,"endColumn":69,"fix":"1310"},{"ruleId":"1161","severity":1,"message":"1162","line":269,"column":32,"nodeType":"1163","messageId":"1164","endLine":269,"endColumn":69,"fix":"1311"},{"ruleId":"1161","severity":1,"message":"1162","line":271,"column":32,"nodeType":"1163","messageId":"1164","endLine":271,"endColumn":62,"fix":"1312"},{"ruleId":"1086","severity":1,"message":"1171","line":273,"column":6,"nodeType":"1088","endLine":278,"endColumn":4,"suggestions":"1313"},{"ruleId":"1173","severity":1,"message":"1174","line":325,"column":5,"nodeType":"1175","messageId":"1176","endLine":330,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":326,"column":28,"nodeType":"1092","messageId":"1093","endLine":326,"endColumn":30},{"ruleId":"1173","severity":1,"message":"1174","line":332,"column":5,"nodeType":"1175","messageId":"1176","endLine":335,"endColumn":6},{"ruleId":"1090","severity":1,"message":"1091","line":333,"column":28,"nodeType":"1092","messageId":"1093","endLine":333,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":337,"column":47,"nodeType":"1092","messageId":"1093","endLine":337,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1150","line":87,"column":9,"nodeType":"1066","messageId":"1067","endLine":87,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1134","line":98,"column":21,"nodeType":"1066","messageId":"1067","endLine":98,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1177","line":186,"column":6,"nodeType":"1088","endLine":186,"endColumn":48,"suggestions":"1314"},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1105","line":1,"column":29,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1107","line":2,"column":8,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1139","line":4,"column":8,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1126","line":5,"column":52,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1140","line":6,"column":13,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1127","line":8,"column":15,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1084","line":95,"column":20,"nodeType":"1066","messageId":"1067","endLine":95,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1141","line":96,"column":12,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1142","line":96,"column":20,"nodeType":"1066","messageId":"1067","endLine":96,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1214","line":3,"column":20,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1271","line":6,"column":10,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1106","line":7,"column":10,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1128","line":9,"column":18,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1271","line":27,"column":10,"nodeType":"1066","messageId":"1067","endLine":27,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1117","line":29,"column":10,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1272","line":29,"column":28,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1273","line":29,"column":34,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1082","line":56,"column":7,"nodeType":"1066","messageId":"1067","endLine":56,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1274","line":102,"column":9,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1275","line":108,"column":6,"nodeType":"1088","endLine":108,"endColumn":8,"suggestions":"1315"},{"ruleId":"1064","severity":1,"message":"1277","line":124,"column":9,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":2,"column":54,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1143","line":98,"column":10,"nodeType":"1066","messageId":"1067","endLine":98,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1237","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1238","line":105,"column":26,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1278","line":152,"column":6,"nodeType":"1088","endLine":152,"endColumn":24,"suggestions":"1316"},{"ruleId":"1064","severity":1,"message":"1280","line":168,"column":12,"nodeType":"1066","messageId":"1067","endLine":168,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1259","line":260,"column":9,"nodeType":"1066","messageId":"1067","endLine":260,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1091","line":312,"column":24,"nodeType":"1092","messageId":"1093","endLine":312,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":315,"column":31,"nodeType":"1092","messageId":"1093","endLine":315,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":347,"column":47,"nodeType":"1092","messageId":"1093","endLine":347,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1091","line":354,"column":42,"nodeType":"1092","messageId":"1093","endLine":354,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1271","line":27,"column":10,"nodeType":"1066","messageId":"1067","endLine":27,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1117","line":29,"column":10,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1272","line":29,"column":28,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1273","line":29,"column":34,"nodeType":"1066","messageId":"1067","endLine":29,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1082","line":56,"column":7,"nodeType":"1066","messageId":"1067","endLine":56,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1274","line":102,"column":9,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1275","line":108,"column":6,"nodeType":"1088","endLine":108,"endColumn":8,"suggestions":"1317"},{"ruleId":"1064","severity":1,"message":"1277","line":124,"column":9,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":2,"column":54,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1318","line":100,"column":10,"nodeType":"1066","messageId":"1067","endLine":100,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1319","line":100,"column":28,"nodeType":"1066","messageId":"1067","endLine":100,"endColumn":47},{"ruleId":"1064","severity":1,"message":"1320","line":101,"column":10,"nodeType":"1066","messageId":"1067","endLine":101,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1321","line":101,"column":31,"nodeType":"1066","messageId":"1067","endLine":101,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1259","line":107,"column":9,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1237","line":114,"column":10,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1238","line":114,"column":26,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1278","line":155,"column":6,"nodeType":"1088","endLine":155,"endColumn":8,"suggestions":"1322"},{"ruleId":"1064","severity":1,"message":"1280","line":171,"column":12,"nodeType":"1066","messageId":"1067","endLine":171,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1323","line":290,"column":13,"nodeType":"1066","messageId":"1067","endLine":290,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1091","line":305,"column":24,"nodeType":"1092","messageId":"1093","endLine":305,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":308,"column":31,"nodeType":"1092","messageId":"1093","endLine":308,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":340,"column":47,"nodeType":"1092","messageId":"1093","endLine":340,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1091","line":347,"column":42,"nodeType":"1092","messageId":"1093","endLine":347,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1120","line":1,"column":8,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1121","line":2,"column":8,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":6,"column":16,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1143","line":98,"column":10,"nodeType":"1066","messageId":"1067","endLine":98,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1091","line":389,"column":47,"nodeType":"1092","messageId":"1093","endLine":389,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":16,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":46,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":52,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":56},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":15,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1128","line":15,"column":18,"nodeType":"1066","messageId":"1067","endLine":15,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1134","line":105,"column":23,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1132","line":185,"column":8,"nodeType":"1088","endLine":185,"endColumn":26,"suggestions":"1324"},{"ruleId":"1064","severity":1,"message":"1292","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1146","line":4,"column":38,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":4,"column":54,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":7,"column":16,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1147","line":8,"column":8,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1148","line":11,"column":10,"nodeType":"1066","messageId":"1067","endLine":11,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1106","line":14,"column":10,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1293","line":14,"column":28,"nodeType":"1066","messageId":"1067","endLine":14,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":22,"column":8,"nodeType":"1066","messageId":"1067","endLine":22,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1294","line":24,"column":10,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1150","line":102,"column":9,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1153","line":109,"column":10,"nodeType":"1066","messageId":"1067","endLine":109,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1325","line":114,"column":10,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1326","line":115,"column":10,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1154","line":116,"column":27,"nodeType":"1066","messageId":"1067","endLine":116,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1155","line":119,"column":24,"nodeType":"1066","messageId":"1067","endLine":119,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1157","line":177,"column":9,"nodeType":"1066","messageId":"1067","endLine":177,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1327","line":241,"column":6,"nodeType":"1088","endLine":241,"endColumn":38,"suggestions":"1328"},{"ruleId":"1090","severity":1,"message":"1091","line":386,"column":47,"nodeType":"1092","messageId":"1093","endLine":386,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1160","line":428,"column":13,"nodeType":"1066","messageId":"1067","endLine":428,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1329","line":2,"column":27,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1330","line":5,"column":11,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1214","line":3,"column":20,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1331","line":4,"column":8,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1271","line":6,"column":10,"nodeType":"1066","messageId":"1067","endLine":6,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1106","line":7,"column":10,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1128","line":9,"column":19,"nodeType":"1066","messageId":"1067","endLine":9,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1271","line":27,"column":10,"nodeType":"1066","messageId":"1067","endLine":27,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1140","line":30,"column":8,"nodeType":"1066","messageId":"1067","endLine":30,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1082","line":58,"column":7,"nodeType":"1066","messageId":"1067","endLine":58,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1274","line":109,"column":9,"nodeType":"1066","messageId":"1067","endLine":109,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1275","line":115,"column":6,"nodeType":"1088","endLine":115,"endColumn":8,"suggestions":"1332"},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":17,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1126","line":2,"column":54,"nodeType":"1066","messageId":"1067","endLine":2,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1127","line":5,"column":16,"nodeType":"1066","messageId":"1067","endLine":5,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1232","line":21,"column":8,"nodeType":"1066","messageId":"1067","endLine":21,"endColumn":13},{"ruleId":"1064","severity":1,"message":"1233","line":24,"column":8,"nodeType":"1066","messageId":"1067","endLine":24,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1143","line":99,"column":10,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1333","line":99,"column":23,"nodeType":"1066","messageId":"1067","endLine":99,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1234","line":103,"column":10,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1235","line":103,"column":25,"nodeType":"1066","messageId":"1067","endLine":103,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1187","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1236","line":105,"column":34,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":59},{"ruleId":"1064","severity":1,"message":"1193","line":111,"column":21,"nodeType":"1066","messageId":"1067","endLine":111,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1194","line":117,"column":19,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1334","line":122,"column":10,"nodeType":"1066","messageId":"1067","endLine":122,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1237","line":125,"column":10,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1238","line":125,"column":26,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":43},{"ruleId":"1135","severity":1,"message":"1335","line":197,"column":7,"nodeType":"1137","messageId":"1093","endLine":197,"endColumn":47},{"ruleId":"1135","severity":1,"message":"1335","line":230,"column":5,"nodeType":"1137","messageId":"1093","endLine":230,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1336","line":258,"column":9,"nodeType":"1066","messageId":"1067","endLine":258,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1337","line":334,"column":6,"nodeType":"1088","endLine":334,"endColumn":24,"suggestions":"1338"},{"ruleId":"1064","severity":1,"message":"1242","line":466,"column":9,"nodeType":"1066","messageId":"1067","endLine":466,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1244","line":526,"column":9,"nodeType":"1066","messageId":"1067","endLine":526,"endColumn":28},{"ruleId":"1064","severity":1,"message":"1212","line":578,"column":9,"nodeType":"1066","messageId":"1067","endLine":578,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":625,"column":47,"nodeType":"1092","messageId":"1093","endLine":625,"endColumn":49},{"ruleId":"1090","severity":1,"message":"1091","line":644,"column":42,"nodeType":"1092","messageId":"1093","endLine":644,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":19,"column":19,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":19,"column":32,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1183","line":28,"column":8,"nodeType":"1066","messageId":"1067","endLine":28,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1184","line":123,"column":10,"nodeType":"1066","messageId":"1067","endLine":123,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1185","line":124,"column":10,"nodeType":"1066","messageId":"1067","endLine":124,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1186","line":125,"column":10,"nodeType":"1066","messageId":"1067","endLine":125,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1187","line":126,"column":10,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1188","line":126,"column":34,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":57},{"ruleId":"1064","severity":1,"message":"1100","line":129,"column":10,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1101","line":129,"column":21,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1189","line":133,"column":10,"nodeType":"1066","messageId":"1067","endLine":133,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1190","line":133,"column":31,"nodeType":"1066","messageId":"1067","endLine":133,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1191","line":139,"column":10,"nodeType":"1066","messageId":"1067","endLine":139,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1192","line":139,"column":41,"nodeType":"1066","messageId":"1067","endLine":139,"endColumn":73},{"ruleId":"1064","severity":1,"message":"1193","line":141,"column":21,"nodeType":"1066","messageId":"1067","endLine":141,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1194","line":147,"column":19,"nodeType":"1066","messageId":"1067","endLine":147,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1195","line":152,"column":10,"nodeType":"1066","messageId":"1067","endLine":152,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1196","line":152,"column":24,"nodeType":"1066","messageId":"1067","endLine":152,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1339","line":168,"column":10,"nodeType":"1066","messageId":"1067","endLine":168,"endColumn":24},{"ruleId":"1135","severity":1,"message":"1197","line":259,"column":5,"nodeType":"1137","messageId":"1093","endLine":259,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1198","line":265,"column":10,"nodeType":"1066","messageId":"1067","endLine":265,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1199","line":266,"column":10,"nodeType":"1066","messageId":"1067","endLine":266,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1200","line":267,"column":10,"nodeType":"1066","messageId":"1067","endLine":267,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1340","line":307,"column":9,"nodeType":"1066","messageId":"1067","endLine":307,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":427,"column":49,"nodeType":"1092","messageId":"1093","endLine":427,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1201","line":542,"column":9,"nodeType":"1066","messageId":"1067","endLine":542,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1202","line":543,"column":11,"nodeType":"1066","messageId":"1067","endLine":543,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1341","line":590,"column":6,"nodeType":"1088","endLine":590,"endColumn":8,"suggestions":"1342"},{"ruleId":"1064","severity":1,"message":"1205","line":621,"column":9,"nodeType":"1066","messageId":"1067","endLine":621,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1343","line":646,"column":9,"nodeType":"1066","messageId":"1067","endLine":646,"endColumn":42},{"ruleId":"1064","severity":1,"message":"1344","line":681,"column":9,"nodeType":"1066","messageId":"1067","endLine":681,"endColumn":51},{"ruleId":"1090","severity":1,"message":"1091","line":725,"column":51,"nodeType":"1092","messageId":"1093","endLine":725,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1206","line":730,"column":9,"nodeType":"1066","messageId":"1067","endLine":730,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1207","line":754,"column":9,"nodeType":"1066","messageId":"1067","endLine":754,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":803,"column":47,"nodeType":"1210","messageId":"1211","endLine":803,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":812,"column":49,"nodeType":"1210","messageId":"1211","endLine":812,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1209","line":821,"column":49,"nodeType":"1210","messageId":"1211","endLine":821,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1212","line":1015,"column":9,"nodeType":"1066","messageId":"1067","endLine":1015,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":1016,"column":24,"nodeType":"1092","messageId":"1093","endLine":1016,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":1019,"column":31,"nodeType":"1092","messageId":"1093","endLine":1019,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1213","line":1052,"column":9,"nodeType":"1066","messageId":"1067","endLine":1052,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":1080,"column":47,"nodeType":"1092","messageId":"1093","endLine":1080,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":5,"column":10,"nodeType":"1096","messageId":"1097","endLine":5,"endColumn":24,"fix":"1345"},{"ruleId":"1064","severity":1,"message":"1271","line":28,"column":10,"nodeType":"1066","messageId":"1067","endLine":28,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1082","line":57,"column":7,"nodeType":"1066","messageId":"1067","endLine":57,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1150","line":101,"column":7,"nodeType":"1066","messageId":"1067","endLine":101,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1346","line":132,"column":6,"nodeType":"1088","endLine":132,"endColumn":24,"suggestions":"1347"},{"ruleId":"1064","severity":1,"message":"1348","line":3,"column":8,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1066","messageId":"1067","endLine":1,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":38,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1125","line":3,"column":47,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":52},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1140","line":4,"column":13,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1078","line":8,"column":10,"nodeType":"1066","messageId":"1067","endLine":8,"endColumn":15},{"ruleId":"1064","severity":1,"message":"1128","line":19,"column":19,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":19,"column":32,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":20,"column":8,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1349","line":22,"column":8,"nodeType":"1066","messageId":"1067","endLine":22,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1217","line":105,"column":10,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":12},{"ruleId":"1064","severity":1,"message":"1218","line":105,"column":14,"nodeType":"1066","messageId":"1067","endLine":105,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1142","line":106,"column":18,"nodeType":"1066","messageId":"1067","endLine":106,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1219","line":107,"column":10,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1220","line":107,"column":23,"nodeType":"1066","messageId":"1067","endLine":107,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1083","line":108,"column":10,"nodeType":"1066","messageId":"1067","endLine":108,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1084","line":108,"column":18,"nodeType":"1066","messageId":"1067","endLine":108,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1221","line":109,"column":7,"nodeType":"1066","messageId":"1067","endLine":109,"endColumn":11},{"ruleId":"1064","severity":1,"message":"1222","line":112,"column":10,"nodeType":"1066","messageId":"1067","endLine":112,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1223","line":112,"column":19,"nodeType":"1066","messageId":"1067","endLine":112,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1184","line":113,"column":10,"nodeType":"1066","messageId":"1067","endLine":113,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1224","line":113,"column":29,"nodeType":"1066","messageId":"1067","endLine":113,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1185","line":114,"column":10,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1225","line":114,"column":21,"nodeType":"1066","messageId":"1067","endLine":114,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1226","line":115,"column":10,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1227","line":115,"column":18,"nodeType":"1066","messageId":"1067","endLine":115,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1228","line":116,"column":10,"nodeType":"1066","messageId":"1067","endLine":116,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1229","line":116,"column":19,"nodeType":"1066","messageId":"1067","endLine":116,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1179","line":117,"column":10,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":26},{"ruleId":"1064","severity":1,"message":"1230","line":117,"column":28,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":47},{"ruleId":"1064","severity":1,"message":"1231","line":119,"column":10,"nodeType":"1066","messageId":"1067","endLine":119,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1350","line":178,"column":6,"nodeType":"1088","endLine":178,"endColumn":8,"suggestions":"1351"},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":54,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":58},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":20,"column":19,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1182","line":20,"column":32,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1215","line":21,"column":8,"nodeType":"1066","messageId":"1067","endLine":21,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1183","line":22,"column":8,"nodeType":"1066","messageId":"1067","endLine":22,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1249","line":108,"column":9,"nodeType":"1066","messageId":"1067","endLine":108,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1222","line":116,"column":10,"nodeType":"1066","messageId":"1067","endLine":116,"endColumn":17},{"ruleId":"1064","severity":1,"message":"1223","line":116,"column":19,"nodeType":"1066","messageId":"1067","endLine":116,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1100","line":123,"column":10,"nodeType":"1066","messageId":"1067","endLine":123,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1101","line":123,"column":21,"nodeType":"1066","messageId":"1067","endLine":123,"endColumn":33},{"ruleId":"1064","severity":1,"message":"1195","line":126,"column":10,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":22},{"ruleId":"1064","severity":1,"message":"1196","line":126,"column":24,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":39},{"ruleId":"1064","severity":1,"message":"1250","line":127,"column":10,"nodeType":"1066","messageId":"1067","endLine":127,"endColumn":23},{"ruleId":"1064","severity":1,"message":"1251","line":127,"column":25,"nodeType":"1066","messageId":"1067","endLine":127,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1352","line":129,"column":10,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1252","line":135,"column":10,"nodeType":"1066","messageId":"1067","endLine":135,"endColumn":27},{"ruleId":"1064","severity":1,"message":"1253","line":135,"column":29,"nodeType":"1066","messageId":"1067","endLine":135,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1254","line":136,"column":10,"nodeType":"1066","messageId":"1067","endLine":136,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1353","line":136,"column":34,"nodeType":"1066","messageId":"1067","endLine":136,"endColumn":59},{"ruleId":"1064","severity":1,"message":"1255","line":137,"column":10,"nodeType":"1066","messageId":"1067","endLine":137,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1354","line":137,"column":37,"nodeType":"1066","messageId":"1067","endLine":137,"endColumn":65},{"ruleId":"1064","severity":1,"message":"1256","line":140,"column":10,"nodeType":"1066","messageId":"1067","endLine":140,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1150","line":141,"column":9,"nodeType":"1066","messageId":"1067","endLine":141,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1257","line":203,"column":6,"nodeType":"1088","endLine":203,"endColumn":8,"suggestions":"1355"},{"ruleId":"1064","severity":1,"message":"1356","line":220,"column":9,"nodeType":"1066","messageId":"1067","endLine":220,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1245","line":231,"column":9,"nodeType":"1066","messageId":"1067","endLine":231,"endColumn":30},{"ruleId":"1064","severity":1,"message":"1205","line":250,"column":9,"nodeType":"1066","messageId":"1067","endLine":250,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1246","line":294,"column":11,"nodeType":"1066","messageId":"1067","endLine":294,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1212","line":467,"column":9,"nodeType":"1066","messageId":"1067","endLine":467,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1091","line":468,"column":24,"nodeType":"1092","messageId":"1093","endLine":468,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":471,"column":31,"nodeType":"1092","messageId":"1093","endLine":471,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":557,"column":47,"nodeType":"1092","messageId":"1093","endLine":557,"endColumn":49},{"ruleId":"1064","severity":1,"message":"1357","line":560,"column":9,"nodeType":"1066","messageId":"1067","endLine":560,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1082","line":49,"column":7,"nodeType":"1066","messageId":"1067","endLine":49,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1262","line":97,"column":10,"nodeType":"1066","messageId":"1067","endLine":97,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1275","line":107,"column":6,"nodeType":"1088","endLine":107,"endColumn":8,"suggestions":"1358"},{"ruleId":"1064","severity":1,"message":"1146","line":3,"column":37,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":44},{"ruleId":"1064","severity":1,"message":"1126","line":3,"column":53,"nodeType":"1066","messageId":"1067","endLine":3,"endColumn":57},{"ruleId":"1064","severity":1,"message":"1147","line":7,"column":8,"nodeType":"1066","messageId":"1067","endLine":7,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":19,"column":18,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1182","line":19,"column":31,"nodeType":"1066","messageId":"1067","endLine":19,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1215","line":20,"column":8,"nodeType":"1066","messageId":"1067","endLine":20,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1183","line":21,"column":8,"nodeType":"1066","messageId":"1067","endLine":21,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1249","line":102,"column":11,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1222","line":110,"column":12,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1223","line":110,"column":21,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1100","line":117,"column":12,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1101","line":117,"column":23,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1195","line":120,"column":12,"nodeType":"1066","messageId":"1067","endLine":120,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1196","line":120,"column":26,"nodeType":"1066","messageId":"1067","endLine":120,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1250","line":121,"column":12,"nodeType":"1066","messageId":"1067","endLine":121,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1251","line":121,"column":27,"nodeType":"1066","messageId":"1067","endLine":121,"endColumn":43},{"ruleId":"1064","severity":1,"message":"1252","line":126,"column":12,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1253","line":126,"column":31,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1254","line":127,"column":12,"nodeType":"1066","messageId":"1067","endLine":127,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1255","line":128,"column":12,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1256","line":129,"column":12,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1257","line":183,"column":8,"nodeType":"1088","endLine":183,"endColumn":10,"suggestions":"1359"},{"ruleId":"1064","severity":1,"message":"1245","line":194,"column":11,"nodeType":"1066","messageId":"1067","endLine":194,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1205","line":213,"column":11,"nodeType":"1066","messageId":"1067","endLine":213,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1246","line":258,"column":15,"nodeType":"1066","messageId":"1067","endLine":258,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1212","line":424,"column":11,"nodeType":"1066","messageId":"1067","endLine":424,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1091","line":425,"column":28,"nodeType":"1092","messageId":"1093","endLine":425,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":428,"column":35,"nodeType":"1092","messageId":"1093","endLine":428,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1259","line":459,"column":11,"nodeType":"1066","messageId":"1067","endLine":459,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":516,"column":51,"nodeType":"1092","messageId":"1093","endLine":516,"endColumn":53},{"ruleId":"1064","severity":1,"message":"1147","line":4,"column":8,"nodeType":"1066","messageId":"1067","endLine":4,"endColumn":16},{"ruleId":"1064","severity":1,"message":"1128","line":16,"column":18,"nodeType":"1066","messageId":"1067","endLine":16,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1182","line":16,"column":31,"nodeType":"1066","messageId":"1067","endLine":16,"endColumn":38},{"ruleId":"1064","severity":1,"message":"1215","line":17,"column":8,"nodeType":"1066","messageId":"1067","endLine":17,"endColumn":18},{"ruleId":"1064","severity":1,"message":"1183","line":18,"column":8,"nodeType":"1066","messageId":"1067","endLine":18,"endColumn":14},{"ruleId":"1064","severity":1,"message":"1249","line":102,"column":11,"nodeType":"1066","messageId":"1067","endLine":102,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1222","line":110,"column":12,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":19},{"ruleId":"1064","severity":1,"message":"1223","line":110,"column":21,"nodeType":"1066","messageId":"1067","endLine":110,"endColumn":31},{"ruleId":"1064","severity":1,"message":"1100","line":117,"column":12,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":21},{"ruleId":"1064","severity":1,"message":"1101","line":117,"column":23,"nodeType":"1066","messageId":"1067","endLine":117,"endColumn":35},{"ruleId":"1064","severity":1,"message":"1195","line":120,"column":12,"nodeType":"1066","messageId":"1067","endLine":120,"endColumn":24},{"ruleId":"1064","severity":1,"message":"1196","line":120,"column":26,"nodeType":"1066","messageId":"1067","endLine":120,"endColumn":41},{"ruleId":"1064","severity":1,"message":"1250","line":121,"column":12,"nodeType":"1066","messageId":"1067","endLine":121,"endColumn":25},{"ruleId":"1064","severity":1,"message":"1251","line":121,"column":27,"nodeType":"1066","messageId":"1067","endLine":121,"endColumn":43},{"ruleId":"1064","severity":1,"message":"1252","line":126,"column":12,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":29},{"ruleId":"1064","severity":1,"message":"1253","line":126,"column":31,"nodeType":"1066","messageId":"1067","endLine":126,"endColumn":51},{"ruleId":"1064","severity":1,"message":"1254","line":127,"column":12,"nodeType":"1066","messageId":"1067","endLine":127,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1255","line":128,"column":12,"nodeType":"1066","messageId":"1067","endLine":128,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1256","line":129,"column":12,"nodeType":"1066","messageId":"1067","endLine":129,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1257","line":183,"column":8,"nodeType":"1088","endLine":183,"endColumn":10,"suggestions":"1360"},{"ruleId":"1064","severity":1,"message":"1245","line":194,"column":11,"nodeType":"1066","messageId":"1067","endLine":194,"endColumn":32},{"ruleId":"1064","severity":1,"message":"1205","line":213,"column":11,"nodeType":"1066","messageId":"1067","endLine":213,"endColumn":34},{"ruleId":"1064","severity":1,"message":"1246","line":258,"column":15,"nodeType":"1066","messageId":"1067","endLine":258,"endColumn":20},{"ruleId":"1064","severity":1,"message":"1212","line":424,"column":11,"nodeType":"1066","messageId":"1067","endLine":424,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1091","line":425,"column":28,"nodeType":"1092","messageId":"1093","endLine":425,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":428,"column":35,"nodeType":"1092","messageId":"1093","endLine":428,"endColumn":37},{"ruleId":"1064","severity":1,"message":"1259","line":459,"column":11,"nodeType":"1066","messageId":"1067","endLine":459,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":516,"column":51,"nodeType":"1092","messageId":"1093","endLine":516,"endColumn":53},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1361"],"no-negated-in-lhs",["1362"],"'Router' is defined but never used.","'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'ClientRefferalForm' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'patientObjAge' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["1363"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1364","text":"1365"},{"range":"1366","text":"1365"},"'hivStatus' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'htsResult2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentObject'. Either include it or remove the dependency array.",["1367"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'classes' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'setFamilyIndexList' is assigned a value but never used.","'handleAction' is assigned a value but never used.",{"range":"1368","text":"1365"},"React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["1369"],"'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'CardContent' is defined but never used.","'LabelRibbon' is defined but never used.","'setPredictionValue' is assigned a value but never used.","'setSavingPrediction' is assigned a value but never used.","'setSavingRsult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["1370"],"'setObjValues' is assigned a value but never used.","no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","'Button' is defined but never used.","'moment' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'hivTestDate' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","'Spinner' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'fontWeight' is defined but never used.","'history' is assigned a value but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'setClientCodeCheck' is assigned a value but never used.","'setSerialNumber' is assigned a value but never used.","'patientAge' is assigned a value but never used.","'facilityShortCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateClientCode', 'country', 'getStates', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1371"],"'response' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"rencencyInterpretation\"] found.","Property","unnecessarilyComputedProperty",{"range":"1372","text":"1373"},{"range":"1374","text":"1373"},{"range":"1375","text":"1373"},{"range":"1376","text":"1373"},{"range":"1377","text":"1373"},{"range":"1378","text":"1373"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["1379"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["1380"],"'targetGroupValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TargetGroupSetup' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1381"],"'Message' is defined but never used.","'Select' is defined but never used.","'hospitalNumStatus' is assigned a value but never used.","'countries' is assigned a value but never used.","'provinces' is assigned a value but never used.","'isClientCurrentlyOnHiv' is assigned a value but never used.","'setClientCurrentlyOnHiv' is assigned a value but never used.","'selectedFamilyIndex' is assigned a value but never used.","'setSelectedFamilyIndex' is assigned a value but never used.","'isWillingToHaveChildrenTested' is assigned a value but never used.","'setIsWillingToHaveChildrenTested' is assigned a value but never used.","'setStateInfo' is assigned a value but never used.","'setLgaInfo' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'setFacilityName' is assigned a value but never used.","Duplicate key 'recencyTesting'.","'selectedState' is assigned a value but never used.","'selectedFacility' is assigned a value but never used.","'selectedLga' is assigned a value but never used.","'generateIndexClientId' is assigned a value but never used.","'indexClientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1382"],"'handleInputChangeObject' is assigned a value but never used.","'getProvinces' is assigned a value but never used.","'handleFamilyRelationshipChange' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'handleDateOfBirthChange' is assigned a value but never used.","'validate' is assigned a value but never used.","'Card' is defined but never used.","'PhoneInput' is defined but never used.","'Cookies' is defined but never used.","'kP' is assigned a value but never used.","'setKP' is assigned a value but never used.","'ageDisabled' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'temp' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","'setHospitalNumStatus' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'setTargetGroupValue' is assigned a value but never used.","'contentDropDown' is assigned a value but never used.","'Badge' is defined but never used.","'PersonIcon' is defined but never used.","'elicitedCount' is assigned a value but never used.","'setElicitedCount' is assigned a value but never used.","'setIsClientCurrentlyOnHiv' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'getPNSInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPartnerId', 'getStates', 'htsClientInformation', 'objValues', 'props?.basicInfo?.personResponseDto?.address?.address', and 'props.organizationInfo'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1383"],"'getAllRecordByHTSClientId' is assigned a value but never used.","'viewPnsInfo' is assigned a value but never used.","'handleItemClickPage' is assigned a value but never used.","'checkPhoneNumberBasic' is assigned a value but never used.","'limit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject.riskStratificationResponseDto'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject.riskStratificationResponseDto', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject.riskStratificationResponseDto' in the reducer.",["1384"],"'patientObj' is assigned a value but never used.","'allFacilities' is assigned a value but never used.","'setAllFacilities' is assigned a value but never used.","'receivingFacility' is assigned a value but never used.","'setReceivingFacility' is assigned a value but never used.","'selectedReceivingState' is assigned a value but never used.","'selectedReceivingFacility' is assigned a value but never used.","'selectedReceivingLga' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadGenders'. Either include it or remove the dependency array.",["1385"],"'handleItemClick' is assigned a value but never used.","'CardBody' is defined but never used.","'toggle' is assigned a value but never used.","'serviceNeeded' is assigned a value but never used.","'setServiceNeeded' is assigned a value but never used.","'facilities1' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'setSelectedLga' is assigned a value but never used.","'handleInputChangeLocation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SERVICE_NEEDED'. Either include it or remove the dependency array.",["1386"],"'FaUserPlus' is defined but never used.","'Menu' is defined but never used.","'Icon' is defined but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["1387"],"'handleIEditIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1388"],"'getProvincesId' is defined but never used.","'useState' is defined but never used.",{"range":"1389","text":"1365"},["1390"],{"range":"1391","text":"1373"},{"range":"1392","text":"1373"},{"range":"1393","text":"1373"},{"range":"1394","text":"1373"},{"range":"1395","text":"1373"},{"range":"1396","text":"1373"},["1397"],["1398"],"'MatButton' is defined but never used.","'useLocation' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["1399"],"'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.",{"range":"1400","text":"1373"},{"range":"1401","text":"1373"},{"range":"1402","text":"1373"},{"range":"1403","text":"1373"},{"range":"1404","text":"1373"},{"range":"1405","text":"1373"},["1406"],["1407"],["1408"],["1409"],["1410"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["1411"],"'m' is assigned a value but never used.",["1412"],"'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateClientCode'. Either include it or remove the dependency array.",["1413"],"Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","'AddIndexContact' is defined but never used.",["1414"],"'setHivTestDate' is assigned a value but never used.","'partnerId' is assigned a value but never used.","Duplicate key 'numberOfPartnerIdentifiedFromClientIndex'.","'getPartnerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStates', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'viewPnIsnfo'. Either include them or remove the dependency array.",["1415"],"'familIndexInfo' is assigned a value but never used.","'getFamilyIndexInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getListoFFamilyIndexInfo', 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1416"],"'handleSubmitfamilyIndexRequestDto' is assigned a value but never used.","'handleSubmitfamilyTestingTrackerRequestDTO' is assigned a value but never used.",{"range":"1417","text":"1365"},"React Hook useEffect has a missing dependency: 'getListoFFamilyIndexInfo'. Either include it or remove the dependency array.",["1418"],"'PNSList' is defined but never used.","'RefferalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'viewReferralInfo'. Either include it or remove the dependency array.",["1419"],"'statesOfTheReceivingFacility' is assigned a value but never used.","'setSelectedReceivingState' is assigned a value but never used.","'setSelectedReceivingFacility' is assigned a value but never used.",["1420"],"'filterSelectedLGAFromState' is assigned a value but never used.","'postPayload' is assigned a value but never used.",["1421"],["1422"],["1423"],"no-global-assign","no-unsafe-negation",{"desc":"1424","fix":"1425"},[152,166],"token",[152,166],{"desc":"1426","fix":"1427"},[147,161],{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},[7547,7573],"\"rencencyInterpretation\"",[7837,7863],[8185,8211],[8465,8491],[8744,8770],[8832,8858],{"desc":"1434","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},{"desc":"1448","fix":"1449"},{"desc":"1450","fix":"1451"},{"desc":"1452","fix":"1453"},[181,195],{"desc":"1454","fix":"1455"},[6862,6888],[7145,7171],[7485,7511],[7758,7784],[8030,8056],[8116,8142],{"desc":"1434","fix":"1456"},{"desc":"1430","fix":"1457"},{"desc":"1458","fix":"1459"},[7526,7552],[7809,7835],[8149,8175],[8422,8448],[8694,8720],[8780,8806],{"desc":"1434","fix":"1460"},{"desc":"1436","fix":"1461"},{"desc":"1450","fix":"1462"},{"desc":"1452","fix":"1463"},{"desc":"1450","fix":"1464"},{"desc":"1465","fix":"1466"},{"desc":"1430","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1450","fix":"1470"},{"desc":"1471","fix":"1472"},{"desc":"1473","fix":"1474"},[191,205],{"desc":"1475","fix":"1476"},{"desc":"1477","fix":"1478"},{"desc":"1446","fix":"1479"},{"desc":"1450","fix":"1480"},{"desc":"1446","fix":"1481"},{"desc":"1446","fix":"1482"},"Update the dependencies array to be: [locationState]",{"range":"1483","text":"1484"},"Update the dependencies array to be: [PatientCurrentObject]",{"range":"1485","text":"1486"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"1487","text":"1488"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"1489","text":"1490"},"Update the dependencies array to be: [objValues.age, props.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, country]",{"range":"1491","text":"1492"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"1493","text":"1494"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"1495","text":"1496"},"Update the dependencies array to be: [TargetGroupSetup, objValues.age, props]",{"range":"1497","text":"1498"},"Update the dependencies array to be: [loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1499","text":"1500"},"Update the dependencies array to be: [getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [loadGenders]",{"range":"1505","text":"1506"},"Update the dependencies array to be: [SERVICE_NEEDED]",{"range":"1507","text":"1508"},"Update the dependencies array to be: [patients]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"1511","text":"1512"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"1513","text":"1514"},{"range":"1515","text":"1494"},{"range":"1516","text":"1490"},"Update the dependencies array to be: [props.activePage.activeObject, props.patientObj]",{"range":"1517","text":"1518"},{"range":"1519","text":"1494"},{"range":"1520","text":"1496"},{"range":"1521","text":"1510"},{"range":"1522","text":"1512"},{"range":"1523","text":"1510"},"Update the dependencies array to be: [getStates]",{"range":"1524","text":"1525"},{"range":"1526","text":"1490"},"Update the dependencies array to be: [props.patientObj, facilityCode, CreateClientCode]",{"range":"1527","text":"1528"},{"range":"1529","text":"1510"},"Update the dependencies array to be: [getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1532","text":"1533"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, props.patientObj]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [viewReferralInfo]",{"range":"1536","text":"1537"},{"range":"1538","text":"1506"},{"range":"1539","text":"1510"},{"range":"1540","text":"1506"},{"range":"1541","text":"1506"},[7642,7644],"[locationState]",[2517,2519],"[PatientCurrentObject]",[1372,1408],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[6822,6840],"[knowledgeAssessment, props.patientObj, riskAssessment]",[12524,12588],"[objValues.age, props.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, country]",[9694,9808],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[5341,5383],"[props.patientObj, postTest.hivTestResult, postTest]",[5220,5235],"[TargetGroupSetup, objValues.age, props]",[16503,16505],"[loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[11223,11241],"[getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[5361,5379],"[props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",[6614,6616],"[loadGenders]",[8401,8403],"[SERVICE_NEEDED]",[3841,3843],"[patients]",[4161,4179],"[getStates, props.patientObj]",[7188,7206],"[postTest, props.patientObj]",[8982,9091],[7069,7087],[4791,4809],"[props.activePage.activeObject, props.patientObj]",[8826,8935],[6349,6391],[3841,3843],[4161,4179],[3841,3843],[4331,4333],"[getStates]",[7147,7165],[7557,7589],"[props.patientObj, facilityCode, CreateClientCode]",[4178,4180],[10653,10671],"[getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",[19265,19267],"[getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[4570,4588],"[getListoFFamilyIndexInfo, props.patientObj]",[5804,5806],"[viewReferralInfo]",[7147,7149],[3914,3916],[7064,7066],[6990,6992]]