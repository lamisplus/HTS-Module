[{"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\index.js":"1","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\App.js":"2","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"5","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"7","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"8","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"9","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"10","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"11","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"12","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"13","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"14","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"15","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"16","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"17","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"18","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"19","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"20","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"21","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"22","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"23","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"24","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"25","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js":"26","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\api.js":"27","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"28","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"29","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"30","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"31","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"32","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"33","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"34","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"35","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\History.js":"36","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"37","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"38","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"39","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"40","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"41","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"42","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"43","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"44","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"45","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"46","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"47","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"48","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"49","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"50","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"51","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js":"52","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js":"53","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js":"54","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js":"55","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\utility\\index.js":"56","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js":"57","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js":"58","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js":"59","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js":"60","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\utils\\index.js":"61","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js":"62","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js":"63","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js":"64","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ServicesProvided.js":"65","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js":"66","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js":"67","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js":"68","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js":"69","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ClientReferral\\RefferalUnit.js":"70","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js":"71","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js":"72","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js":"73","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\UserInformationCard.js":"74","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js":"75","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPostTestAssessment.js":"76"},{"size":739,"mtime":1706072744648,"results":"77","hashOfConfig":"78"},{"size":1594,"mtime":1714582318100,"results":"79","hashOfConfig":"78"},{"size":375,"mtime":1706072747904,"results":"80","hashOfConfig":"78"},{"size":9235,"mtime":1706072744710,"results":"81","hashOfConfig":"78"},{"size":4173,"mtime":1713094046799,"results":"82","hashOfConfig":"78"},{"size":2878,"mtime":1714582318076,"results":"83","hashOfConfig":"78"},{"size":27283,"mtime":1714546305707,"results":"84","hashOfConfig":"78"},{"size":3056,"mtime":1706072744712,"results":"85","hashOfConfig":"78"},{"size":11270,"mtime":1709624819367,"results":"86","hashOfConfig":"78"},{"size":23760,"mtime":1714546305704,"results":"87","hashOfConfig":"78"},{"size":9844,"mtime":1709624819373,"results":"88","hashOfConfig":"78"},{"size":12827,"mtime":1706072747833,"results":"89","hashOfConfig":"78"},{"size":4922,"mtime":1714545785930,"results":"90","hashOfConfig":"78"},{"size":55208,"mtime":1714546305680,"results":"91","hashOfConfig":"78"},{"size":29726,"mtime":1714546305669,"results":"92","hashOfConfig":"78"},{"size":70338,"mtime":1714546305641,"results":"93","hashOfConfig":"78"},{"size":83807,"mtime":1709624819304,"results":"94","hashOfConfig":"78"},{"size":38326,"mtime":1714546305673,"results":"95","hashOfConfig":"78"},{"size":6796,"mtime":1706072747884,"results":"96","hashOfConfig":"78"},{"size":73293,"mtime":1714123861047,"results":"97","hashOfConfig":"78"},{"size":2160,"mtime":1706072747827,"results":"98","hashOfConfig":"78"},{"size":31894,"mtime":1709624849640,"results":"99","hashOfConfig":"78"},{"size":83223,"mtime":1709624819343,"results":"100","hashOfConfig":"78"},{"size":41542,"mtime":1714546305697,"results":"101","hashOfConfig":"78"},{"size":12827,"mtime":1706072747855,"results":"102","hashOfConfig":"78"},{"size":48091,"mtime":1709624819353,"results":"103","hashOfConfig":"78"},{"size":423,"mtime":1714977999663,"results":"104","hashOfConfig":"78"},{"size":111061,"mtime":1714123861053,"results":"105","hashOfConfig":"78"},{"size":38183,"mtime":1714546305700,"results":"106","hashOfConfig":"78"},{"size":2237,"mtime":1706072747849,"results":"107","hashOfConfig":"78"},{"size":8002,"mtime":1709624819286,"results":"108","hashOfConfig":"78"},{"size":41673,"mtime":1709624819282,"results":"109","hashOfConfig":"78"},{"size":2624,"mtime":1706072747883,"results":"110","hashOfConfig":"78"},{"size":1185,"mtime":1706072747878,"results":"111","hashOfConfig":"78"},{"size":27915,"mtime":1714546305625,"results":"112","hashOfConfig":"78"},{"size":7619,"mtime":1713713781716,"results":"113","hashOfConfig":"78"},{"size":8001,"mtime":1709624819336,"results":"114","hashOfConfig":"78"},{"size":42170,"mtime":1709624819333,"results":"115","hashOfConfig":"78"},{"size":1221,"mtime":1706072747882,"results":"116","hashOfConfig":"78"},{"size":44973,"mtime":1709624819270,"results":"117","hashOfConfig":"78"},{"size":35238,"mtime":1714546305637,"results":"118","hashOfConfig":"78"},{"size":12827,"mtime":1706072747811,"results":"119","hashOfConfig":"78"},{"size":30558,"mtime":1714546305633,"results":"120","hashOfConfig":"78"},{"size":77364,"mtime":1714123861036,"results":"121","hashOfConfig":"78"},{"size":81637,"mtime":1706072747814,"results":"122","hashOfConfig":"78"},{"size":37271,"mtime":1709624849623,"results":"123","hashOfConfig":"78"},{"size":1600,"mtime":1706072747880,"results":"124","hashOfConfig":"78"},{"size":1209,"mtime":1706072747877,"results":"125","hashOfConfig":"78"},{"size":2261,"mtime":1706072747796,"results":"126","hashOfConfig":"78"},{"size":8001,"mtime":1709624819263,"results":"127","hashOfConfig":"78"},{"size":41673,"mtime":1709624819259,"results":"128","hashOfConfig":"78"},{"size":10309,"mtime":1709624819274,"results":"129","hashOfConfig":"78"},{"size":8939,"mtime":1713961265244,"results":"130","hashOfConfig":"78"},{"size":98973,"mtime":1714546305650,"results":"131","hashOfConfig":"78"},{"size":88303,"mtime":1714546305654,"results":"132","hashOfConfig":"78"},{"size":2017,"mtime":1709624819381,"results":"133","hashOfConfig":"78"},{"size":69071,"mtime":1714546305676,"results":"134","hashOfConfig":"78"},{"size":29000,"mtime":1714546305686,"results":"135","hashOfConfig":"78"},{"size":2351,"mtime":1713713781727,"results":"136","hashOfConfig":"78"},{"size":94361,"mtime":1714546305664,"results":"137","hashOfConfig":"78"},{"size":1209,"mtime":1713094046807,"results":"138","hashOfConfig":"78"},{"size":10623,"mtime":1713892012897,"results":"139","hashOfConfig":"78"},{"size":8685,"mtime":1713892141176,"results":"140","hashOfConfig":"78"},{"size":66792,"mtime":1714546305692,"results":"141","hashOfConfig":"78"},{"size":29977,"mtime":1713715574875,"results":"142","hashOfConfig":"78"},{"size":3172,"mtime":1713279584872,"results":"143","hashOfConfig":"78"},{"size":10912,"mtime":1714546305689,"results":"144","hashOfConfig":"78"},{"size":109752,"mtime":1714546305659,"results":"145","hashOfConfig":"78"},{"size":10518,"mtime":1713892012894,"results":"146","hashOfConfig":"78"},{"size":88214,"mtime":1714546305645,"results":"147","hashOfConfig":"78"},{"size":64470,"mtime":1714546305629,"results":"148","hashOfConfig":"78"},{"size":105793,"mtime":1714978102994,"results":"149","hashOfConfig":"78"},{"size":14581,"mtime":1714781621912,"results":"150","hashOfConfig":"78"},{"size":17356,"mtime":1714785803787,"results":"151","hashOfConfig":"78"},{"size":119,"mtime":1714582318126,"results":"152","hashOfConfig":"78"},{"size":4389,"mtime":1714608318548,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},"110hvba",{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"157"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"157"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"180","usedDeprecatedRules":"157"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"157"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"157"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"157"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"157"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"157"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"157"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"157"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"157"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"157"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"157"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"157"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"157"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"157"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"157"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"244","usedDeprecatedRules":"157"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"157"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"157"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"157"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"157"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"157"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"157"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"157"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"157"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"157"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"157"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"157"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"286","usedDeprecatedRules":"157"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"157"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"157"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"157"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"157"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"157"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"157"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"327","usedDeprecatedRules":"157"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\index.js",["342"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["343","344"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\App.js",["345"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["346","347"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport PatientHtsEnrollment from \"./PatientHtsEnrollment\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [activePage, setActivePage] = useState({\r\n    activePage: \"home\",\r\n    activeObject: {},\r\n    actionType: \"\",\r\n  });\r\n  const { classes } = props;\r\n  useEffect(() => {}, [activePage]);\r\n  const patientObject =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObject\r\n      : {};\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const clientCode =\r\n    history.location && history.location.state\r\n      ? history.location.state.clientCode\r\n      : \"\";\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m;\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>HTS /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            clientCode={clientCode}\r\n            patientObject={patientObject}\r\n          />\r\n          {activePage.activePage === \"home\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              clientCode={clientCode}\r\n              patientAge={patientAge}\r\n              patientObject={patientObject}\r\n            />\r\n          )}\r\n          {activePage.activePage === \"view\" && (\r\n            <PatientHtsEnrollment\r\n              patientObj={patientObj}\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              clientCode={clientCode}\r\n              patientAge={patientAge}\r\n              patientObject={patientObject}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Home.js",["348","349"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["350","351","352","353","354","355","356","357","358","359","360"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["361","362","363","364","365","366"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\n//import Divider from '@material-ui/core/Divider';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Label, Sticky } from \"semantic-ui-react\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //console.log(props.patientObj);\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {};\r\n  //const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setPatientObj] = useState(null);\r\n  const [hivStatus, setHivStatus] = useState(\"false\");\r\n  const [htscount, setHtscount] = useState(0);\r\n  const [htsResult, setHtsResult] = useState(\"\");\r\n  const [htsResult2, setHtsResult2] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    PatientCurrentObject();\r\n  }, []);\r\n\r\n  ///GET LIST OF Patients\r\n  async function PatientCurrentObject() {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientObjs.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(\"data\", response.data);\r\n        setPatientObj(response.data);\r\n\r\n        setHtscount(response.data.htsCount);\r\n        setHtsResult(\r\n          response.data.htsClientDtoList[\r\n            response.data.htsClientDtoList.length - 1\r\n          ].hivTestResult\r\n        );\r\n        setHtsResult2(\r\n          response.data.htsClientDtoList[\r\n            response.data.htsClientDtoList.length - 1\r\n          ].hivTestResult2\r\n        );\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //   age_now--;\r\n    // }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type == \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <Sticky>\r\n      <div className={classes.root}>\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className={\"mt-1\"}>\r\n                  {patientObj && patientObj !== null ? (\r\n                    <>\r\n                      <Col md={12} className={classes.root2}>\r\n                        <b\r\n                          style={{\r\n                            fontSize: \"25px\",\r\n                            color: \"rgb(153, 46, 98)\",\r\n                          }}\r\n                        >\r\n                          {patientObj.personResponseDto.firstName +\r\n                            \" \" +\r\n                            patientObj.personResponseDto.surname}\r\n                        </b>\r\n                        <Link to={\"/\"}>\r\n                          <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              color: \"#fff\",\r\n                              height: \"35px\",\r\n                            }}\r\n                          >\r\n                            <span style={{ textTransform: \"capitalize\" }}>\r\n                              Back\r\n                            </span>\r\n                          </ButtonMui>\r\n                        </Link>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Patient ID :\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getHospitalNumber(\r\n                              patientObj.personResponseDto.identifier\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          Date Of Birth :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj.personResponseDto.dateOfBirth}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Age :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {calculate_age(\r\n                              moment(\r\n                                patientObj.personResponseDto.dateOfBirth\r\n                              ).format(\"DD-MM-YYYY\")\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Gender :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj.personResponseDto &&\r\n                            patientObj.personResponseDto.sex !== null\r\n                              ? patientObj.personResponseDto.sex\r\n                              : \"\"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Phone Number :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getPhoneNumber(\r\n                              patientObj.personResponseDto.contactPoint\r\n                            )}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Address :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {getAddress(patientObj.personResponseDto.address)}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                          {\" \"}\r\n                          Client Code :{\" \"}\r\n                          <b style={{ color: \"#0B72AA\" }}>\r\n                            {patientObj && patientObj.clientCode\r\n                              ? patientObj.clientCode\r\n                              : \"\"}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            {htscount < 1 ? (\r\n                              <Label color=\"blue\" size={\"mini\"}>\r\n                                STATUS : Not Tested\r\n                              </Label>\r\n                            ) : patientObj &&\r\n                              (htsResult === \"Positive\" ||\r\n                                htsResult === \"Positive\") ? (\r\n                              <Label color={\"red\"} size={\"mini\"}>\r\n                                STATUS : Positive\r\n                              </Label>\r\n                            ) : (\r\n                              <Label color=\"teal\" size={\"mini\"}>\r\n                                STATUS : Negative\r\n                              </Label>\r\n                            )}\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    </>\r\n                  ) : (\r\n                    <p>Loading Please wait...</p>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </ExpansionPanelSummary>\r\n        </ExpansionPanel>\r\n      </div>\r\n    </Sticky>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["367","368","369","370","371","372","373","374","375","376","377","378"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["379","380"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n//import moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  //const [patientList, setPatientList] = useState([])\r\n  //const [loading, setLoading] = useState(false)\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\r\n  useEffect(() => {\r\n    //patients()\r\n  }, []);\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"HTS Count\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}hts/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                //setLoading(false)\r\n                resolve({\r\n                  data: result.data.records.filter((a) => a.clientCode === null ).map((row) => ({\r\n                    //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                    name: row.firstName + \" \" + row.surname,\r\n                    // hospital_number: row.hospitalNumber,\r\n                    clientCode: row.clientCode,\r\n                    gender: row.gender,\r\n                    age: row.age,\r\n                    count: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.htsCount}\r\n                      </Label>\r\n                    ),\r\n                    actions: (\r\n                      <div>\r\n                        {row.htsCount >= 0 && (\r\n                          <>\r\n                            <Link\r\n                              to={{\r\n                                pathname: \"/patient-history\",\r\n                                state: {\r\n                                  patientObject: row,\r\n                                  patientObj: row,\r\n                                  clientCode: row.clientCode,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <ButtonGroup\r\n                                variant=\"contained\"\r\n                                aria-label=\"split button\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(153, 46, 98)\",\r\n                                  height: \"30px\",\r\n                                  width: \"215px\",\r\n                                }}\r\n                                size=\"large\"\r\n                              >\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  size=\"small\"\r\n                                  aria-label=\"select merge strategy\"\r\n                                  aria-haspopup=\"menu\"\r\n                                  style={{\r\n                                    backgroundColor: \"rgb(153, 46, 98)\",\r\n                                  }}\r\n                                >\r\n                                  <MdDashboard />\r\n                                </Button>\r\n                                <Button\r\n                                  style={{\r\n                                    backgroundColor: \"rgb(153, 46, 98)\",\r\n                                  }}\r\n                                >\r\n                                  <span\r\n                                    style={{\r\n                                      fontSize: \"12px\",\r\n                                      color: \"#fff\",\r\n                                      fontWeight: \"bolder\",\r\n                                    }}\r\n                                  >\r\n                                    Patient Dashboard\r\n                                  </span>\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </Link>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n                //setLoading(false)\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["381","382","383","384","385","386","387","388","389","390"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["391","392"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["393","394","395","396","397","398","399","400","401","402"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["403","404","405","406","407"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  CardBody,\r\n  Spinner,\r\n  Badge,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PanToolIcon from \"@mui/icons-material/PanTool\";\r\n//import * as moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  const [predictionValue, setPredictionValue] = useState(0);\r\n\r\n  const predictionRanges = (prediction) => {\r\n    if (parseFloat(prediction) <= 0.2) {\r\n      return <Badge color=\"success\">Low Risk</Badge>;\r\n    } else if (\r\n      parseFloat(prediction) >= 0.21 &&\r\n      parseFloat(prediction) <= 0.4\r\n    ) {\r\n      return <Badge color=\"info\">Medium Risk</Badge>;\r\n    } else if (\r\n      parseFloat(prediction) >= 0.41 &&\r\n      parseFloat(prediction) <= 0.8\r\n    ) {\r\n      return <Badge color=\"warning\">High Risk</Badge>;\r\n    } else if (parseFloat(prediction) >= 0.81) {\r\n      return <Badge color=\"danger\">Highest Risk</Badge>;\r\n    } else {\r\n      return <Badge color=\"dark\">No Prediction Result</Badge>;\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  //let patientAge=\"\"\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [savingPrediction, setSavingPrediction] = useState(false);\r\n  const [savingResult, setSavingRsult] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  //console.log(\"data_pre_test\", props.patientObj);\r\n  // const calculate_age = dob => {\r\n  //     var today = new Date();\r\n  //     var dateParts = dob.split(\"-\");\r\n  //     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //     var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //     var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //     var m = today.getMonth() - birthDate.getMonth();\r\n  //         if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //                 age_now--;\r\n  //             }\r\n  //         if (age_now === 0) {\r\n  //                 return m + \" month(s)\";\r\n  //             }\r\n  //             return age_now ;\r\n  // };\r\n  const [knowledgeAssessment, setKnowledgeAssessment] = useState({\r\n    previousTestedHIVNegative: \"\",\r\n    timeLastHIVNegativeTestResult: \"\",\r\n    clientPregnant: \"\",\r\n    clientInformHivTransRoutes: \"\",\r\n    clientInformRiskkHivTrans: \"\",\r\n    clientInformPreventingsHivTrans: \"\",\r\n    clientInformPossibleTestResult: \"\",\r\n    informConsentHivTest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (props.patientObj) {\r\n      setKnowledgeAssessment(\r\n        props.patientObj.knowledgeAssessment &&\r\n          props.patientObj.knowledgeAssessment !== null\r\n          ? props.patientObj.knowledgeAssessment\r\n          : {}\r\n      );\r\n      setRiskAssessment(\r\n        props.patientObj.riskAssessment &&\r\n          props.patientObj.riskAssessment !== null\r\n          ? props.patientObj.riskAssessment\r\n          : {}\r\n      );\r\n      setRiskAssessmentPartner(\r\n        props.patientObj.sexPartnerRiskAssessment &&\r\n          props.patientObj.sexPartnerRiskAssessment !== null\r\n          ? props.patientObj.sexPartnerRiskAssessment\r\n          : {}\r\n      );\r\n      setStiScreening(\r\n        props.patientObj.stiScreening && props.patientObj.stiScreening !== null\r\n          ? props.patientObj.stiScreening\r\n          : {}\r\n      );\r\n      setTbScreening(\r\n        props.patientObj.tbScreening && props.patientObj.tbScreening !== null\r\n          ? props.patientObj.tbScreening\r\n          : {}\r\n      );\r\n      //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n      //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n      if (\r\n        props.patientObj.riskStratificationResponseDto &&\r\n        Object.keys(\r\n          props.patientObj.riskStratificationResponseDto.riskAssessment\r\n        ).length !== 0 &&\r\n        props.patientObj.riskAssessment === null\r\n      ) {\r\n        //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n        props.patientObj.riskStratificationResponseDto.riskAssessment\r\n          .whatWasTheResult !== \"\" &&\r\n        props.patientObj.riskStratificationResponseDto.riskAssessment\r\n          .whatWasTheResult === \"Positive\"\r\n          ? (knowledgeAssessment.previousTestedHIVNegative = \"false\")\r\n          : (knowledgeAssessment.previousTestedHIVNegative = \"true\");\r\n      } else {\r\n        setRiskAssessment({\r\n          ...riskAssessment,\r\n          ...props.patientObj.riskAssessment,\r\n        });\r\n      }\r\n      knowledgeAssessment.clientPregnant =\r\n        props.patientObj.pregnant === 73 ? \"true\" : \"\";\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n    props.handleItemClick(page);\r\n  };\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    knowledgeAssessment: {},\r\n    personId: patientID,\r\n    riskAssessment: {},\r\n    stiScreening: {},\r\n    tbScreening: {},\r\n    sexPartnerRiskAssessment: {},\r\n  });\r\n\r\n  const handleInputChangeKnowledgeAssessment = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n\r\n    setKnowledgeAssessment({\r\n      ...knowledgeAssessment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    everHadSexualIntercourse: \"\",\r\n    bloodtransInlastThreeMonths: \"\",\r\n    uprotectedSexWithCasualLastThreeMonths: \"\",\r\n    uprotectedSexWithRegularPartnerLastThreeMonths: \"\",\r\n    unprotectedVaginalSex: \"\",\r\n    uprotectedAnalSex: \"\",\r\n    stiLastThreeMonths: \"\",\r\n    sexUnderInfluence: \"\",\r\n    moreThanOneSexPartnerLastThreeMonths: \"\",\r\n    experiencePain: \"\",\r\n    haveSexWithoutCondom: \"\",\r\n    abuseDrug: \"\",\r\n    bloodTransfusion: \"\",\r\n    consistentWeightFeverNightCough: \"\",\r\n    soldPaidVaginalSex: \"\",\r\n    consistentWeightFeverNightCough: \"\",\r\n    soldPaidVaginalSex: \"\",\r\n    haveCondomBurst: \"\",\r\n  });\r\n\r\n  // const postPredictions = (name, value) => {\r\n  //   if (name === \"soldPaidVaginalSex\" && value !== \"null\") {\r\n  //     setSavingRsult(true);\r\n  //     let mlData = {\r\n  //       modelConfigs: {\r\n  //         debug: \"true\",\r\n  //         encounterDate: props.patientObj?.dateVisit,\r\n  //         facilityId: \"LBgwDTw2C8u\",\r\n  //         modelId: \"hts_v1\",\r\n  //       },\r\n  //       variableValues: {\r\n  //         age: props.patientObj?.riskStratificationResponseDto.age,\r\n  //         client_pregnant_X0: props.patientObj?.pregnant === null ? 0 : 1,\r\n  //         first_time_visit_Y:\r\n  //           props.patientObj?.firstTimeVisit === false ? 0 : 1,\r\n  //         hts_setting_Other: 0,\r\n  //         hts_setting_Others: 0,\r\n  //         hts_setting_Outreach: 1,\r\n  //         marital_status_Divorced: 0,\r\n  //         marital_status_Married:\r\n  //           props.patientObj?.personResponseDto?.maritalStatus === null ? 0 : 1,\r\n  //         marital_status_Widowed: 0,\r\n  //         previously_tested_hiv_negative_Missing: 0,\r\n  //         previously_tested_hiv_negative_TRUE: 0,\r\n  //         referred_from_Other: 0,\r\n  //         referred_from_Self: 1,\r\n  //         session_type_Individual: 0,\r\n  //         sex_F: props.patientObj?.personResponseDto?.sex === \"Female\" ? 1 : 0,\r\n  //         sex_M: props.patientObj?.personResponseDto?.sex === \"Male\" ? 1 : 0,\r\n  //         tested_for_hiv_before_within_this_year_NotPreviouslyTested: 1,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedNegative: 0,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveInHIVCare: 0,\r\n  //         tested_for_hiv_before_within_this_year_PreviouslyTestedPositiveNotInHIVCare: 0,\r\n  //       },\r\n  //     };\r\n  //     //ML Post\r\n  //     axios\r\n  //       .post(`${baseUrl}machine-learning/evaluate`, mlData, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((resp) => {\r\n  //         console.log(\"ML\", resp);\r\n  //         let predictions = Object.values(resp.data.result.predictions);\r\n  //         setPredictionValue(predictions);\r\n  //         setSavingPrediction(true);\r\n  //         setSavingRsult(false);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.error(\"ML_err\", err);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n    //postPredictions(e.target.name, e.target.value);\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    sexPartnerHivPositive: \"\",\r\n    newDiagnosedHivlastThreeMonths: \"\",\r\n    currentlyArvForPmtct: \"\",\r\n    knowHivPositiveOnArv: \"\",\r\n    knowHivPositiveAfterLostToFollowUp: \"\",\r\n    uprotectedAnalSex: \"\",\r\n  });\r\n  const handleInputChangeRiskAssessmentPartner = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    // if(riskAssessmentPartner.sexPartnerHivPositive==='false' || (e.target.name==='sexPartnerHivPositive' &&  e.target.value==='false')){\r\n    //     setRiskAssessmentPartner ({\r\n    //         sexPartnerHivPositive:'false',\r\n    //         newDiagnosedHivlastThreeMonths:\"\",\r\n    //         currentlyArvForPmtct :\"\",\r\n    //         knowHivPositiveOnArv :\"\",\r\n    //         knowHivPositiveAfterLostToFollowUp:\"\",\r\n    //         uprotectedAnalSex  :\"\",\r\n    //     })\r\n    // }\r\n  };\r\n  // Getting the number count of sexPartRiskCount True\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(\r\n    (x) => x === \"true\"\r\n  );\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: \"\",\r\n    lowerAbdominalPains: \"\",\r\n    urethralDischarge: \"\",\r\n    complaintsOfScrotal: \"\",\r\n    complaintsGenitalSore: \"\",\r\n  });\r\n  const handleInputChangeStiScreening = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of STI True\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter((x) => x === \"true\");\r\n  const [tbScreening, setTbScreening] = useState({\r\n    currentCough: \"\",\r\n    weightLoss: \"\",\r\n    lymphadenopathy: \"\",\r\n    fever: \"\",\r\n    nightSweats: \"\",\r\n  });\r\n  const handleInputChangeTbScreening = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTbScreening({ ...tbScreening, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of TB True\r\n  const actualTBTrue = Object.values(tbScreening);\r\n  const newTbTrue = actualTBTrue.filter((x) => x === \"true\");\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n    //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n    //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n    //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n    //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\r\n\r\n    //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n    //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n    //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n    //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n    //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n    // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n    // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n\r\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.bloodtransInlastThreeMonths =\r\n        riskAssessment.bloodtransInlastThreeMonths\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n    //props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n    // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.experiencePain = riskAssessment.experiencePain\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.abuseDrug = riskAssessment.abuseDrug\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.bloodTransfusion = riskAssessment.bloodTransfusion\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.consistentWeightFeverNightCough =\r\n        riskAssessment.consistentWeightFeverNightCough\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" &&\r\n      (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n    // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.htsClientId = clientId;\r\n      objValues.knowledgeAssessment = knowledgeAssessment;\r\n      objValues.personId = patientID;\r\n      objValues.riskAssessment = riskAssessment;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.tbScreening = tbScreening;\r\n      objValues.sexPartnerRiskAssessment = riskAssessmentPartner;\r\n\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/pre-test-counseling`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"Risk Assesment successful\");\r\n          handleItemClick(\"hiv-test\", \"pre-test-counsel\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"All fields are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>PRE TEST COUNSELING</h2>\r\n          {savingPrediction ? (\r\n            <Stack sx={{ width: \"50%\" }} spacing={2}>\r\n              <Alert severity=\"info\" style={{ fontSize: \"16px\", color: \"000\" }}>\r\n                <b>ML Prediction Result for HTS Patient :</b>{\" \"}\r\n                {predictionRanges(predictionValue[1])}\r\n              </Alert>\r\n            </Stack>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"rgb(0,181,173)\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Knowledge Assessment\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Previously tested HIV negative{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previousTestedHIVNegative\"\r\n                    id=\"previousTestedHIVNegative\"\r\n                    value={knowledgeAssessment.previousTestedHIVNegative}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.previousTestedHIVNegative !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previousTestedHIVNegative}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {knowledgeAssessment.previousTestedHIVNegative === \"true\" && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Time of last HIV Negative test Result</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"timeLastHIVNegativeTestResult\"\r\n                      id=\"timeLastHIVNegativeTestResult\"\r\n                      value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                      onChange={handleInputChangeKnowledgeAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"<1\"> {\"< 1\"} month</option>\r\n                      <option value=\"1-3 Months\">1-3 Months</option>\r\n                      <option value=\"4-6 Months\">4-6 Months</option>\r\n                      <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                      {knowledgeAssessment.previousTestedHIVNegative !==\r\n                        \"true\" && <option value=\"Never\"> Never</option>}\r\n                    </select>\r\n                    {errors.timeLastHIVNegativeTestResult !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.timeLastHIVNegativeTestResult}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {props.patientObj &&\r\n                (props.patientObj.personResponseDto.sex === \"Female\" ||\r\n                  props.patientObj.personResponseDto.sex === \"female\" ||\r\n                  props.patientObj.personResponseDto.sex === \"FEMALE\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Client pregnant </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"clientPregnant\"\r\n                        id=\"clientPregnant\"\r\n                        value={knowledgeAssessment.clientPregnant}\r\n                        onChange={handleInputChangeKnowledgeAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.clientPregnant !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.clientPregnant}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client informed about HIV transmission routes </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformHivTransRoutes\"\r\n                    id=\"clientInformHivTransRoutes\"\r\n                    value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformHivTransRoutes !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformHivTransRoutes}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client informed about risk factors for HIV transmission{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformRiskkHivTrans\"\r\n                    id=\"clientInformRiskkHivTrans\"\r\n                    value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformRiskkHivTrans !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformRiskkHivTrans}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client informed on preventing HIV transmission methods{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformPreventingsHivTrans\"\r\n                    id=\"clientInformPreventingsHivTrans\"\r\n                    value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformPreventingsHivTrans !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformPreventingsHivTrans}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client informed about possible test results </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientInformPossibleTestResult\"\r\n                    id=\"clientInformPossibleTestResult\"\r\n                    value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.clientInformPossibleTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.clientInformPossibleTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Informed consent for HIV testing given </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informConsentHivTest\"\r\n                    id=\"informConsentHivTest\"\r\n                    value={knowledgeAssessment.informConsentHivTest}\r\n                    onChange={handleInputChangeKnowledgeAssessment}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.informConsentHivTest !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.informConsentHivTest}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              {savingResult ? (\r\n                <div\r\n                  style={{\r\n                    display: \"block\",\r\n                    width: 1000,\r\n                    padding: 10,\r\n                  }}\r\n                >\r\n                  <Spinner style={{ width: \"2rem\", height: \"2rem\" }} />\r\n                  <b style={{ color: \"#992E62\", fontSize: \"14px\" }}>\r\n                    {\" \"}\r\n                    <PanToolIcon /> requesting HTS ML predictions...\r\n                  </b>\r\n                </div>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n              {props.patientObj.targetGroup === \"TARGET_GROUP_GEN_POP\" && (\r\n                <>\r\n                  <div\r\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    HIV Risk Assessment (Last 3 months)\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Ever had sexual intercourse{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"everHadSexualIntercourse\"\r\n                        id=\"everHadSexualIntercourse\"\r\n                        value={riskAssessment.everHadSexualIntercourse}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.everHadSexualIntercourse !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.everHadSexualIntercourse}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Blood transfusion in last 3 months{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"bloodtransInlastThreeMonths\"\r\n                        id=\"bloodtransInlastThreeMonths\"\r\n                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.bloodtransInlastThreeMonths !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.bloodtransInlastThreeMonths}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected sex with casual partner in last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                            id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.uprotectedSexWithCasualLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedSexWithCasualLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.uprotectedSexWithCasualLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected sex with regular partner in the last\r\n                            3months <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                            id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {\r\n                                errors.uprotectedSexWithRegularPartnerLastThreeMonths\r\n                              }\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected vaginal sex{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"unprotectedVaginalSex\"\r\n                            id=\"unprotectedVaginalSex\"\r\n                            value={riskAssessment.unprotectedVaginalSex}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.unprotectedVaginalSex !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.unprotectedVaginalSex}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Unprotected Anal sex{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"uprotectedAnalSex\"\r\n                            id=\"uprotectedAnalSex\"\r\n                            value={riskAssessment.uprotectedAnalSex}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.uprotectedAnalSex !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.uprotectedAnalSex}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            STI in last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"stiLastThreeMonths\"\r\n                            id=\"stiLastThreeMonths\"\r\n                            value={riskAssessment.stiLastThreeMonths}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.stiLastThreeMonths !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stiLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex under the influence of drugs or alcohol{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexUnderInfluence\"\r\n                            id=\"sexUnderInfluence\"\r\n                            value={riskAssessment.sexUnderInfluence}\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.sexUnderInfluence !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexUnderInfluence}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                  {riskAssessment.everHadSexualIntercourse !== \"\" &&\r\n                    riskAssessment.everHadSexualIntercourse === \"true\" && (\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            More than 1 sex partner during last 3 months{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                            id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                            value={\r\n                              riskAssessment.moreThanOneSexPartnerLastThreeMonths\r\n                            }\r\n                            onChange={handleInputChangeRiskAssessment}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                          {errors.moreThanOneSexPartnerLastThreeMonths !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                  <Message warning>\r\n                    <h4> Risk assessment score (sum of all 7 answers)</h4>\r\n                    <b>Score : {riskCount.length}</b>\r\n                  </Message>\r\n                  <hr />\r\n                  <br />\r\n                </>\r\n              )}\r\n              {props.patientObj.targetGroup !== \"TARGET_GROUP_GEN_POP\" && (\r\n                <>\r\n                  <div\r\n                    className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      width: \"125%\",\r\n                      height: \"35px\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    HIV Risk Assessment (Last 3 months)\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/your partner experienced lower abdominal pain,\r\n                        smelly discharge, blisters and wounds around you/partner\r\n                        vagina, penis anus or mouth?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"experiencePain\"\r\n                        id=\"experiencePain\"\r\n                        value={riskAssessment.experiencePain}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.experiencePain !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.experiencePain}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner had sex without a condom with someone\r\n                        of unknown HIV status, or you/partner raped by person\r\n                        with unknown HIV status?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"haveSexWithoutCondom\"\r\n                        id=\"haveSexWithoutCondom\"\r\n                        value={riskAssessment.haveSexWithoutCondom}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.haveSexWithoutCondom !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.haveSexWithoutCondom}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you had a condom burst with your partner during\r\n                        sexual intercourse?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"haveCondomBurst\"\r\n                        id=\"haveCondomBurst\"\r\n                        value={riskAssessment.haveCondomBurst}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.haveCondomBurst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.haveCondomBurst}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Do you/partner share needles/syringes, other sharp\r\n                        objects or used abuse drug substances of any kind?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"abuseDrug\"\r\n                        id=\"abuseDrug\"\r\n                        value={riskAssessment.abuseDrug}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.abuseDrug !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.abuseDrug}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner had any blood or blood product\r\n                        transfusion? <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"bloodTransfusion\"\r\n                        id=\"bloodTransfusion\"\r\n                        value={riskAssessment.bloodTransfusion}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.bloodTransfusion !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.bloodTransfusion}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner experienced coughing, weight loss,\r\n                        fever, night sweats consistently?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"consistentWeightFeverNightCough\"\r\n                        id=\"consistentWeightFeverNightCough\"\r\n                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.consistentWeightFeverNightCough !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.consistentWeightFeverNightCough}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Have you/partner paid or sold vaginal, anal or oral sex?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"soldPaidVaginalSex\"\r\n                        id=\"soldPaidVaginalSex\"\r\n                        value={riskAssessment.soldPaidVaginalSex}\r\n                        onChange={handleInputChangeRiskAssessment}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.soldPaidVaginalSex !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.soldPaidVaginalSex}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <Message warning>\r\n                    <h4> HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                    <b>Score :{riskCount.length}</b>\r\n                  </Message>\r\n                  <hr />\r\n                  <br />\r\n                </>\r\n              )}\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#000\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Clinical TB screening\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Current cough </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"currentCough\"\r\n                    id=\"currentCough\"\r\n                    value={tbScreening.currentCough}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.currentCough !== \"\" ? (\r\n                    <span className={classes.error}>{errors.currentCough}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Weight loss </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"weightLoss\"\r\n                    id=\"weightLoss\"\r\n                    value={tbScreening.weightLoss}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.weightLoss !== \"\" ? (\r\n                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lymphadenopathy\"\r\n                    id=\"lymphadenopathy\"\r\n                    value={tbScreening.lymphadenopathy}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.lymphadenopathy !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.lymphadenopathy}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Fever </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={tbScreening.fever}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.fever !== \"\" ? (\r\n                    <span className={classes.error}>{errors.fever}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Night sweats</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"nightSweats\"\r\n                    id=\"nightSweats\"\r\n                    value={tbScreening.nightSweats}\r\n                    onChange={handleInputChangeTbScreening}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.nightSweats !== \"\" ? (\r\n                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  TB Screening score (calculate the sum of the TB assessment) If\r\n                  score {\">= 1\"}, test for Xper MTB RIF or refer to TB service{\" \"}\r\n                </h4>\r\n                <b>Score : {newTbTrue.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartnerHivPositive\"\r\n                    id=\"sexPartnerHivPositive\"\r\n                    value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexPartnerHivPositive !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexPartnerHivPositive}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {riskAssessmentPartner.sexPartnerHivPositive === \"true\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Is sex partner newly diagnosed with HIV and started\r\n                        treatment less than 3-6 months ago?\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                        value={\r\n                          riskAssessmentPartner.newDiagnosedHivlastThreeMonths\r\n                        }\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.newDiagnosedHivlastThreeMonths !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.newDiagnosedHivlastThreeMonths}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Is sex partner pregnant and currently receiving ARV for\r\n                        PMTCT?\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentlyArvForPmtct\"\r\n                        id=\"currentlyArvForPmtct\"\r\n                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.currentlyArvForPmtct !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.currentlyArvForPmtct}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Known HIV positive partner on ARV with an unsurpressed\r\n                        VL\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"knowHivPositiveOnArv\"\r\n                        id=\"knowHivPositiveOnArv\"\r\n                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.knowHivPositiveOnArv !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.knowHivPositiveOnArv}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Known HIV positive recently returned to treatment after\r\n                        being lost to follow up\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                        value={\r\n                          riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp\r\n                        }\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.knowHivPositiveAfterLostToFollowUp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.knowHivPositiveAfterLostToFollowUp}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Unprotected Anal sex</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"uprotectedAnalSex\"\r\n                        id=\"uprotectedAnalSex\"\r\n                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.uprotectedAnalSex !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.uprotectedAnalSex}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score :{sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#014D88\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientObj.personResponseDto.sex === \"Female\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientObj.personResponseDto.sex === \"Male\" && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {\">= \"}1, should be\r\n                  referred for STI test{\" \"}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                  />\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["458","459","460","461","462","463","464","465","466","467"],"import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY TESTED</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div> */}\r\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div> */}\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["468","469","470","471","472","473","474","475","476","477","478","479"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  console.log(\"data2\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n\r\n  const [finalResult, setFinalResult] = useState(\"\");\r\n\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setErrors({ date: \"\", prepOffered: \"\", prepAccepted: \"\" });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    console.log(e.target.value);\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  function CheckTestResult() {\r\n    //Logic to show CD4 Count\r\n    // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n    //     objValues.hivTestResult=\"Negative\"\r\n    // }\r\n  }\r\n  function CheckTestResult2() {\r\n    //Logic to show CD4 Count\r\n    if (initialTest12.result2 === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else if (\r\n      initialTest12.result2 === \"Yes\" &&\r\n      confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    }\r\n    // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n    //     objValues.hivTestResult2=\"Negative\"\r\n    // }\r\n    else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"Yes\"\r\n    ) {\r\n      setShowCD4Count(true);\r\n    } else if (\r\n      confirmatoryTest2.result2 === \"No\" &&\r\n      tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  }\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      (temp.prepOffered = objValues.prepOffered\r\n        ? \"\"\r\n        : \"The Prep Offered field is required.\");\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      objValues.prepOffered === \"true\" &&\r\n      (temp.prepAccepted = objValues.prepAccepted\r\n        ? \"\"\r\n        : \"The Prep Accepted field is required.\");\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    //  initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // track and set final result\r\n  useEffect(() => {\r\n    let result = \"\";\r\n\r\n    if (initialTest1.result === \"No\") {\r\n      result = \"Negative\";\r\n    } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\" &&\r\n        (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if(\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n\r\n    ){\r\n      result = \"Negative\";\r\n    }\r\n    else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    }\r\n\r\n    setFinalResult(result);\r\n  }, [\r\n    initialTest1.result,\r\n    confirmatoryTest.result,\r\n    tieBreakerTest.result,\r\n    initialTest12.result2,\r\n    confirmatoryTest2.result2,\r\n    tieBreakerTest2.result2,\r\n  ]);\r\n  // clear the all other fields if there changes in initialTest1 result is changes\r\n  useEffect(() => {\r\n    setConfirmatoryTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    // clear the prepOffered and prepAccepted fields\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [initialTest1.result]);\r\n\r\n  // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [confirmatoryTest.result]);\r\n\r\n  // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n  useEffect(() => {\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [tieBreakerTest.result]);\r\n\r\n  useEffect(() => {\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [initialTest12.result2]);\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [confirmatoryTest2.result2]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (finalResult === \"\") {\r\n      toast.error(\"Final result is required for submission.\");\r\n      return;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //logic to get Hiv result test\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      objValues.htsClientId = clientId;\r\n      objValues.confirmatoryTest = confirmatoryTest;\r\n      objValues.confirmatoryTest2 = confirmatoryTest2;\r\n      objValues.personId = patientID;\r\n      objValues.test1 = initialTest1;\r\n      objValues.test2 = initialTest12;\r\n      objValues.tieBreakerTest = tieBreakerTest;\r\n      objValues.tieBreakerTest2 = tieBreakerTest2;\r\n      objValues.syphilisTesting = syphills;\r\n      objValues.hepatitisTesting = hepatitis;\r\n\r\n      objValues.cd4 = cd4Count;\r\n      objValues.others = others;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //console.log(response.data)\r\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n          //toast.success(\"HIV test successful\");\r\n          handleItemClick(\"post-test\", \"hiv-test\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    onChange={handleInputChangeInitial}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                        <br/>\r\n                      </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                      confirmatoryTest.result === \"No\" && (\r\n                          <>\r\n                          <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {errors.prepOffered !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepOffered}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {errors.prepAccepted !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepAccepted}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <>\r\n                          <b> Result : </b>\r\n                          <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                          <b> Final Result : </b>\r\n                          <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                        </>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                              <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                  <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Offered{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepOffered\"\r\n                              id=\"prepOffered\"\r\n                              value={objValues.prepOffered}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                          objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Prep Accepted{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"prepAccepted\"\r\n                                  id=\"prepAccepted\"\r\n                                  value={objValues.prepAccepted}\r\n                                  onChange={handleInputChange}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                >\r\n                                  <option value={\"\"}></option>\r\n                                  <option value=\"true\">Yes</option>\r\n                                  <option value=\"false\">No</option>\r\n                                </select>\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 === \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() =>\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </>\r\n                  )}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["480","481"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { useHistory, } from \"react-router-dom\";\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const history = useHistory();\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleDone =()=>{\r\n      history.push('/');\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n      if(props.completed.includes(completedMenu)) {\r\n      }else{\r\n          props.setCompleted([...props.completed, completedMenu])\r\n      }\r\n      props.handleItemClick(page)\r\n  }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  console.log(\"#############\",props.patientObj);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"enr\", props.activePage.activeObject);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  //const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  let temp = { ...errors };\r\n  //console.log(props?.patientObj?.dateVisit)\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    clientCode: \"\",\r\n    age: \"\",\r\n    dob: \"\",\r\n    breastFeeding: \"\",\r\n    dateVisit: props?.patientObj?.dateVisit,\r\n    firstTimeVisit: null,\r\n    indexClient: null,\r\n    numChildren: \"\",\r\n    numWives: \"\",\r\n    pregnant: \"\",\r\n    dateOfBirth: null,\r\n    dateOfRegistration: null,\r\n    deceased: true,\r\n    deceasedDateTime: null,\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    facilityId: \"\",\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    isDateOfBirthEstimated: \"\",\r\n    maritalStatusId: \"\",\r\n    organizationId: \"\",\r\n    otherName: \"\",\r\n    sexId: \"\",\r\n    state: null,\r\n    lga: \"\",\r\n    id: \"\",\r\n    surname: \"\",\r\n    previouslyTested: \"\",\r\n    referredFrom: \"\",\r\n    targetGroup: \"\",\r\n    testingSetting: \"\",\r\n    typeCounseling: \"\",\r\n    relationWithIndexClient:\r\n      props.activePage?.activeObject?.relationWithIndexClient,\r\n    indexClientCode: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    setObjValues(props.activePage.activeObject);\r\n    // if(props.patientObj){\r\n    //     objValues.referredFrom=props.patientObj.referredFrom\r\n    // }\r\n    //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\r\n    //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\r\n  }, [props.patientObj]);\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.targetGroup =\r\n      objValues.targetGroup !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.referredFrom =\r\n      objValues.referredFrom !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested =\r\n      objValues.previouslyTested !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.indexClient =\r\n      objValues.indexClient !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit =\r\n      objValues.firstTimeVisit !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (props.activePage.actionType === \"update\") {\r\n      //e.preventDefault();\r\n      const patientForm = {\r\n        ...props.patientObj,\r\n        clientCode: objValues.clientCode,\r\n        dateVisit: objValues.dateVisit,\r\n        extra: {},\r\n        id: objValues.id,\r\n        firstTimeVisit: objValues.firstTimeVisit,\r\n        indexClient: objValues.indexClient,\r\n        numChildren: objValues.numChildren,\r\n        numWives: objValues.numWives,\r\n        personId: props.patientObj.personId,\r\n        hospitalNumber: objValues.clientCode,\r\n        previouslyTested: objValues.previouslyTested,\r\n        referredFrom: objValues.referredFrom,\r\n        targetGroup: objValues.targetGroup,\r\n        testingSetting: objValues.testingSetting,\r\n        typeCounseling: objValues.typeCounseling,\r\n        breastFeeding: objValues.breastFeeding,\r\n        indexClientCode: objValues.indexClientCode,\r\n        pregnant: objValues.pregnant,\r\n        relationWithIndexClient: objValues.relationWithIndexClient,\r\n      };\r\n\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .put(`${baseUrl}hts/${props.patientObj.id}`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.setPatientObj(response.data);\r\n            toast.success(\"HTS Test successful\");\r\n            if (props.patientAge > 14) {\r\n              handleItemClick(\"pre-test-counsel\", \"basic\");\r\n            } else {\r\n              handleItemClick(\"hiv-test\", \"basic\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (props.activePage.actionType === \"view\") {\r\n      //e.preventDefault();\r\n      setSaving(true);\r\n      if (props.patientAge > 14) {\r\n        setSaving(false);\r\n        handleItemClick(\"pre-test-counsel\", \"basic\");\r\n      } else {\r\n        setSaving(false);\r\n        handleItemClick(\"hiv-test\", \"pre-test-counsel\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Groups <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {kP.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Client Code <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"clientCode\"\r\n                    id=\"clientCode\"\r\n                    value={objValues.clientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={props.activePage.actionType === \"view\"}\r\n                  />\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>{errors.clientCode}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    value={objValues.referredFrom}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min={objValues.dateOfRegistration}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={props.activePage.actionType === \"view\"}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n              {props.patientAge > 9 &&\r\n                (props.patientObj.personResponseDto.sex === \"Male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"MALE\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        min={0}\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {props.patientAge > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Index Testing</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" ||\r\n                (objValues.indexClient === true && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Relationship of the index client</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relationWithIndexClient\"\r\n                          id=\"relationWithIndexClient\"\r\n                          value={objValues.relationWithIndexClient}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Index Client Code/ID</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientCode\"\r\n                          id=\"indexClientCode\"\r\n                          value={objValues.indexClientCode}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          readOnly={props.activePage.actionType === \"view\"}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              {(props.patientObj.personResponseDto.sex === \"Female\" ||\r\n                props.patientObj.personResponseDto.sex === \"female\" ||\r\n                props.patientObj.personResponseDto.sex === \"FEMALE\") && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Pregnant Status</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        value={objValues.pregnant}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {pregnancyStatus.map((value) => (\r\n                            ((props.patientObj.riskStratificationResponseDto.modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" || props.patientObj.riskStratificationResponseDto.modality ===\"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" || props.patientObj.riskStratificationResponseDto.testingSetting===\"TEST_SETTING_CPMTCT\" || props.patientObj.riskStratificationResponseDto.modality ===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\")  && value.code === \"PREGANACY_STATUS_NOT_PREGNANT\") ? (\r\n                                <></>\r\n                            ) : (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                            )\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/*objValues.pregnant!== 73 || objValues.pregnant!== \"73\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )*/}\r\n                </>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>First time visit</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Previously tested within the last 3 months</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Type of Counseling</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["496","497","498","499","500","501","502"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\",\r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            knowledgeAssessment: {},\r\n            personId: patientID,\r\n            riskAssessment: {},\r\n            stiScreening: {},\r\n            tbScreening: {},\r\n            sexPartnerRiskAssessment:{}\r\n        }\r\n    )\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\",\r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n            unprotectedVaginalSex:\"\",\r\n            uprotectedAnalSex:\"\",\r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n        }\r\n    )\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\",\r\n            complaintsGenitalSore  :\"\",\r\n\r\n        }\r\n    )\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough :\"\",\r\n            weightLoss  :\"\",\r\n            lymphadenopathy :\"\",\r\n            fever :\"\",\r\n            nightSweats :\"\",\r\n        }\r\n    )\r\n    useEffect(() => {\r\n\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\r\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\r\n                knowledgeAssessment.previousTestedHIVNegative='true'\r\n            }else{\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})\r\n            }\r\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\r\n        }\r\n    }, [props.patientObj]);\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n\r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const handleInputChangeRiskAssessment = e => {\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});\r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeRiskAssessmentPartner = e => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeStiScreening = e => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});\r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n\r\n    const [tbCount, settbCount] = useState(0);\r\n    const handleInputChangeTbScreening = e => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n\r\n        if(e.target.value==='true') {\r\n            const newcount = tbCount +1\r\n            if(newcount>=0 && newcount <=5){\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        if(e.target.value==='false') {\r\n            const newcount = tbCount -1\r\n            //settbCount(newcount)\r\n            //console.log(newcount)\r\n            if(newcount <=0 ){\r\n\r\n                settbCount(0)\r\n            }else{\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});\r\n    }\r\n     /*****  Validation  */\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\r\n\r\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n\r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n\r\n\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\r\n\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n            setSaving(true);\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n        }\r\n    }\r\n    //console.log(riskAssessmentPartner)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n\r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        {\r\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\r\n                                        }\r\n\r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {sex ==='Female' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                             )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {tbCount}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                 <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                     <select\r\n                                         className=\"form-control\"\r\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                         onChange={handleInputChangeRiskAssessment}\r\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                         disabled={props.activePage.actionType === \"view\"}\r\n                                     >\r\n                                         <option value={\"\"}></option>\r\n                                         <option value=\"true\">Yes</option>\r\n                                         <option value=\"false\">No</option>\r\n\r\n                                     </select>\r\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                     ) : \"\" }\r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>\r\n\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["503","504","505","506","507"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["508","509","510","511","512","513","514","515","516","517"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js",["518","519","520","521","522","523"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n//import SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RiskStratification = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"active\", props.activePage.activeObject);\r\n  //console.log(\"con\", props.patientObj);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [objValues, setObjValues] = useState({\r\n    age: props.patientAge,\r\n    dob: props.patientObj.dateOfBirth,\r\n    visitDate: \"\",\r\n    dateOfBirth: props.patientObj.dateOfBirth,\r\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\r\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    code: \"\",\r\n    id: \"\",\r\n    personId: props.patientObj.id,\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    careProvider: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // everHadSexualIntercourse:\"\",\r\n    // bloodtransInlastThreeMonths:\"\",\r\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n    // unprotectedVaginalSex:\"\",\r\n    // uprotectedAnalSex:\"\",\r\n    // stiLastThreeMonths:\"\",\r\n    // sexUnderInfluence :\"\",\r\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n    // experiencePain:\"\",\r\n    // haveSexWithoutCondom:\"\",\r\n    // abuseDrug:\"\",\r\n    // bloodTransfusion:\"\",\r\n    // consistentWeightFeverNightCough:\"\",\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n\r\n    if (props.activePage.activeObject.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.activePage.activeObject.riskStratificationResponseDto);\r\n\r\n      SettingModality(\r\n        props.activePage.activeObject.riskStratificationResponseDto\r\n          .testingSetting\r\n      );\r\n\r\n      setRiskAssessment(\r\n        props.activePage.activeObject.riskStratificationResponseDto &&\r\n          props.activePage.activeObject.riskStratificationResponseDto\r\n            .riskAssessment\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n        console.log(\"#################### modality\",response.data)\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    props.patientAge > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    //Risk Assement section\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    riskAssessment.lastHivTestDone !== \"\" &&\r\n      riskAssessment.lastHivTestDone !== \"Never\" &&\r\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    //targetGroup\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(riskAssessment)\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n\r\n    objValues.riskAssessment = riskAssessment;\r\n    if (\r\n      props.patientObj.riskStratificationResponseDto &&\r\n      props.patientObj.riskStratificationResponseDto !== null &&\r\n      props.patientObj.personId !== \"\" &&\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      if (validate()) {\r\n        setSaving(true);\r\n        handleItemClick(\"basic\", \"risk\");\r\n\r\n        props.setHideOtherMenu(false);\r\n        axios\r\n          .put(\r\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.riskStratificationResponseDto = response.data;\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      //console.log(\"post\");\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .post(`${baseUrl}risk-stratification`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            handleItemClick(\"basic\", \"risk\");\r\n            props.setHideOtherMenu(false);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"All fields are required\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {\r\n                        (objValues.communityEntryPoint===\"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" && objValues.entryPoint===\"HTS_ENTRY_POINT_COMMUNITY\")?\r\n                            enrollSetting.map((value) => (\r\n                                  (value.code === \"TEST_SETTING_CPMTCT\") ? (\r\n                                      <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                      </option>\r\n                                  ) : (\r\n                                      <></>\r\n\r\n                                  )\r\n\r\n                              ))\r\n                            :\r\n                            enrollSetting.map((value) => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                            ))\r\n\r\n                      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Target Group <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"targetGroup\"\r\n                      id=\"targetGroup\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.targetGroup}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {kP.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.targetGroup !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.targetGroup}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Is this HIV test based on a Clinician/Doctor/Health Care\r\n                      Provider's request ?{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"lastHivTestBasedOnRequest\"\r\n                      id=\"lastHivTestBasedOnRequest\"\r\n                      value={riskAssessment.lastHivTestBasedOnRequest}\r\n                      onChange={handleInputChangeRiskAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHivTestBasedOnRequest}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              {props.patientAge > 15 &&\r\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\r\n                  <>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      HIV Risk Assessment (Last 3 months)\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          When was your last HIV test done?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestDone\"\r\n                          id=\"lastHivTestDone\"\r\n                          value={riskAssessment.lastHivTestDone}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<1\"> {\"< 1\"} month</option>\r\n                          <option value=\"1-3 Months\">1-3 Months</option>\r\n                          <option value=\"4-6 Months\">4-6 Months</option>\r\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                          <option value=\"Never\"> Never</option>\r\n                        </select>\r\n                        {errors.lastHivTestDone !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestDone}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {riskAssessment.lastHivTestDone !== \"\" &&\r\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              What was the result?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"whatWasTheResult\"\r\n                              id=\"whatWasTheResult\"\r\n                              value={riskAssessment.whatWasTheResult}\r\n                              onChange={handleInputChangeRiskAssessment}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"Positive\">Positive</option>\r\n                              <option value=\"Negative\">Negative</option>\r\n                            </select>\r\n                            {errors.whatWasTheResult !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.whatWasTheResult}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal or vaginal\r\n                          or oral sex without a condom with someone who was HIV\r\n                          positive or unaware of their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestVaginalOral\"\r\n                          id=\"lastHivTestVaginalOral\"\r\n                          value={riskAssessment.lastHivTestVaginalOral}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestVaginalOral}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had a blood or\r\n                          blood product transfusion?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestBloodTransfusion\"\r\n                          id=\"lastHivTestBloodTransfusion\"\r\n                          value={riskAssessment.lastHivTestBloodTransfusion}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestBloodTransfusion}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you experienced painful\r\n                          urination, lower abdominal pain, vaginal or penile\r\n                          discharge, pain during sexual intercourse, thick,\r\n                          cloudy, or foul smelling discharge and/or small bumps\r\n                          or blisters near the mouth, penis, vagina, or anal\r\n                          areas? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestPainfulUrination\"\r\n                          id=\"lastHivTestPainfulUrination\"\r\n                          value={riskAssessment.lastHivTestPainfulUrination}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestPainfulUrination}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Have you been diagnosed with TB or currently have any\r\n                          of the following symptoms : cough, fever, weight loss,\r\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosedWithTb\"\r\n                          id=\"diagnosedWithTb\"\r\n                          value={riskAssessment.diagnosedWithTb}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.diagnosedWithTb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.diagnosedWithTb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you ever injected\r\n                          drugs, shared needles or other sharp objects with\r\n                          someone known to be HIV positive or who you didn’t\r\n                          know their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestInjectedDrugs\"\r\n                          id=\"sexUnderInfluence\"\r\n                          value={riskAssessment.lastHivTestInjectedDrugs}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestInjectedDrugs}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal, oral or\r\n                          vaginal sex in exchange for money or other benefits?\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestHadAnal\"\r\n                          id=\"lastHivTestHadAnal\"\r\n                          value={riskAssessment.lastHivTestHadAnal}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestHadAnal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestHadAnal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you been forced to have\r\n                          sex? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestForceToHaveSex\"\r\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                          value={riskAssessment.lastHivTestForceToHaveSex}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestForceToHaveSex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n\r\n                  {/* <Button content='Save ' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskStratification;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["524","525","526","527","528","529","530","531","532","533","534"],"import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label, CardBody, Spinner, Input, Form} from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Label as LabelRibbon, Button} from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n        \"& .card-title\": {\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: \"0.25rem\",\r\n            height: \"41px\",\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\",\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\",\r\n        },\r\n        \"& p\": {\r\n            color: \"red\",\r\n        },\r\n        \"& label\": {\r\n            fontSize: \"14px\",\r\n            color: \"#014d88\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n    const [finalResult, setFinalResult] = useState(\"\");\r\n    const [resultStatus, setResultStatus] = useState(\"\");\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = {...errors};\r\n    //console.log(\"data3\", props.patientObj);\r\n    const patientID =\r\n        props.patientObj && props.patientObj.personResponseDto\r\n            ? props.patientObj.personResponseDto.id\r\n            : \"\";\r\n    const clientId =\r\n        props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = (dob) => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now;\r\n    };\r\n    const patientAge = calculate_age(\r\n        moment(\r\n            props.patientObj.personResponseDto &&\r\n            props.patientObj.personResponseDto.dateOfBirth\r\n                ? props.patientObj.personResponseDto.dateOfBirth\r\n                : 0\r\n        ).format(\"DD-MM-YYYY\")\r\n    );\r\n\r\n    const [objValues, setObjValues] = useState({\r\n        confirmatoryTest: {},\r\n        confirmatoryTest2: {},\r\n        hivTestResult: \"\",\r\n        hivTestResult2: \"\",\r\n        htsClientId: \"\",\r\n        personId: props.patientObj ? props.patientObj.id : \"\",\r\n        test1: {},\r\n        test2: {},\r\n        tieBreakerTest: {},\r\n        tieBreakerTest2: {},\r\n        syphilisTesting: {},\r\n        hepatitisTesting: {},\r\n        others: {},\r\n        cd4: {},\r\n        prepOffered: \"\",\r\n        prepAccepted: \"\",\r\n    });\r\n    const handleInputChange = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setObjValues({...objValues, [e.target.name]: e.target.value});\r\n    };\r\n    const [initialTest1, setInitailTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [initialTest12, setInitailTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeCd4Count = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setCd4Count({...cd4Count, [e.target.name]: e.target.value});\r\n    };\r\n    const [cd4Count, setCd4Count] = useState({\r\n        cd4Count: \"\",\r\n        cd4SemiQuantitative: \"\",\r\n        cd4FlowCyteometry: \"\",\r\n    });\r\n    const handleInputChangeInitial = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeInitial2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeConfirmatory = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest({\r\n            ...confirmatoryTest,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeConfirmatory2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest2({\r\n            ...confirmatoryTest2,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [tieBreakerTest, setTieBreakerTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeTie = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest({...tieBreakerTest, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeTie2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest2({...tieBreakerTest2, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [syphills, setSyphills] = useState({\r\n        syphilisTestResult: \"\",\r\n        // result  :\"\",\r\n    });\r\n    const handleInputChangeSyphills = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setSyphills({...syphills, [e.target.name]: e.target.value});\r\n    };\r\n    const [hepatitis, setHepatitis] = useState({\r\n        hepatitisCTestResult: \"\",\r\n        hepatitisBTestResult: \"\",\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    const handleInputChangeHepatitis = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setHepatitis({...hepatitis, [e.target.name]: e.target.value});\r\n    };\r\n    const [others, setOthers] = useState({\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    useEffect(() => {\r\n        //console.log(props.patientObj)\r\n        if (props.patientObj) {\r\n            setCd4Count(\r\n                props.patientObj && props.patientObj.cd4 !== null\r\n                    ? props.patientObj.cd4\r\n                    : {}\r\n            );\r\n            setInitailTest(\r\n                props.patientObj && props.patientObj.test1 !== null\r\n                    ? props.patientObj.test1\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest(\r\n                props.patientObj && props.patientObj.confirmatoryTest !== null\r\n                    ? props.patientObj.confirmatoryTest\r\n                    : {}\r\n            );\r\n            setTieBreakerTest(\r\n                props.patientObj && props.patientObj.tieBreakerTest !== null\r\n                    ? props.patientObj.tieBreakerTest\r\n                    : {}\r\n            );\r\n            setSyphills(\r\n                props.patientObj && props.patientObj.syphilisTesting !== null\r\n                    ? props.patientObj.syphilisTesting\r\n                    : {}\r\n            );\r\n            setHepatitis(\r\n                props.patientObj && props.patientObj.hepatitisTesting !== null\r\n                    ? props.patientObj.hepatitisTesting\r\n                    : {}\r\n            );\r\n            setOthers(\r\n                props.patientObj && props.patientObj.others !== null\r\n                    ? props.patientObj.others\r\n                    : {}\r\n            );\r\n\r\n            setInitailTest2(\r\n                props.patientObj && props.patientObj.test2 !== null\r\n                    ? props.patientObj.test2\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest2(\r\n                props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n                    ? props.patientObj.confirmatoryTest2\r\n                    : {}\r\n            );\r\n            setTieBreakerTest2(\r\n                props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n                    ? props.patientObj.tieBreakerTest2\r\n                    : {}\r\n            );\r\n            //Logic for cd4 count section to show\r\n            if (\r\n                props.patientObj.hivTestResult !== null &&\r\n                props.patientObj.hivTestResult !== \"\" &&\r\n                props.patientObj.hivTestResult === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n            if (\r\n                props.patientObj.hivTestResult2 !== null &&\r\n                props.patientObj.hivTestResult2 !== \"\" &&\r\n                props.patientObj.hivTestResult2 === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n        }\r\n    }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n    const handleInputChangeOthers = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setOthers({...others, [e.target.name]: e.target.value});\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date !== \"\" &&\r\n        (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        (temp.prepOffered = objValues.prepOffered\r\n            ? \"\"\r\n            : \"The Prep Offered field is required.\");\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        objValues.prepOffered === \"true\" &&\r\n        (temp.prepAccepted = objValues.prepAccepted\r\n            ? \"\"\r\n            : \"The Prep Accepted field is required.\");\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n        // temp.syphilisTestResult = syphills.syphilisTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n\r\n        setErrors({...temp});\r\n        return Object.values(temp).every((x) => x == \"\");\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let result = \"\";\r\n\r\n        if (initialTest1.result === \"No\") {\r\n            result = \"Negative\";\r\n        } else if (\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"No\" &&\r\n            (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n        ) {\r\n            result = \"Negative\";\r\n        }\r\n        else if(\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n\r\n        ){\r\n            result = \"Negative\";\r\n        }\r\n\r\n        setFinalResult(result);\r\n    }, [\r\n        initialTest1.result,\r\n        confirmatoryTest.result,\r\n        tieBreakerTest.result,\r\n        initialTest12.result2,\r\n        confirmatoryTest2.result2,\r\n        tieBreakerTest2.result2,\r\n    ]);\r\n    // clear the all other fields if there changes in initialTest1 result is changes\r\n    useEffect(() => {\r\n        setConfirmatoryTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        // clear the prepOffered and prepAccepted fields\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest1.result]);\r\n\r\n    // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest.result]);\r\n\r\n    // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n    useEffect(() => {\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [tieBreakerTest.result]);\r\n\r\n    useEffect(() => {\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest12.result2]);\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest2.result2]);\r\n\r\n    // log all the  tests\r\n    console.log(\"initialTest1\", initialTest1);\r\n    console.log(\"confirmatoryTest\", confirmatoryTest);\r\n    console.log(\"tieBreakerTest\", tieBreakerTest);\r\n    console.log(\"initialTest12\", initialTest12);\r\n    console.log(\"confirmatoryTest2\", confirmatoryTest2);\r\n    console.log(\"tieBreakerTest2\", tieBreakerTest2);\r\n    console.log(\"finalResult\", finalResult);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(errors);\r\n        if (finalResult === \"\") {\r\n            toast.error(\"Final result is required for submission.\");\r\n            return;\r\n        }\r\n        if (validate()) {\r\n            //logic to get Hiv result test\r\n            setSaving(true);\r\n            if (initialTest12.result2 === \"No\") {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else if (\r\n                initialTest12.result2 === \"Yes\" &&\r\n                confirmatoryTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            }\r\n                // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n                //     objValues.hivTestResult2=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult2 = \"\";\r\n            }\r\n\r\n            if (initialTest1.result === \"No\") {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else if (\r\n                initialTest1.result === \"Yes\" &&\r\n                confirmatoryTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            }\r\n                // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n                //     objValues.hivTestResult=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"No\"\r\n            ) {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult = \"\";\r\n            }\r\n            if (props.activePage.actionType === \"view\") {\r\n                //e.preventDefault();\r\n                handleItemClick(\"post-test\", \"hiv-test\");\r\n            }\r\n            if (props.activePage.actionType === \"update\") {\r\n                objValues.htsClientId = clientId;\r\n                objValues.confirmatoryTest = confirmatoryTest;\r\n                objValues.confirmatoryTest2 = confirmatoryTest2;\r\n                objValues.personId = patientID;\r\n                objValues.test1 = initialTest1;\r\n                objValues.test2 = initialTest12;\r\n                objValues.tieBreakerTest = tieBreakerTest;\r\n                objValues.tieBreakerTest2 = tieBreakerTest2;\r\n                objValues.syphilisTesting = syphills;\r\n                objValues.hepatitisTesting = hepatitis;\r\n\r\n                objValues.cd4 = cd4Count;\r\n                objValues.others = others;\r\n\r\n                //console.log(clientId, objValues)\r\n                axios\r\n                    .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n                        headers: {Authorization: `Bearer ${token}`},\r\n                    })\r\n                    .then((response) => {\r\n                        setSaving(false);\r\n                        props.setPatientObj(response.data);\r\n                        console.log(\"saved\", response.data);\r\n                        //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                        //toast.success(\"HIV test successful\");\r\n                        handleItemClick(\"post-test\", \"hiv-test\");\r\n                    })\r\n                    .catch((error) => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage =\r\n                                error.response.data.apierror &&\r\n                                error.response.data.apierror.message !== \"\"\r\n                                    ? error.response.data.apierror.message\r\n                                    : \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage);\r\n                        } else {\r\n                            toast.error(\"Something went wrong. Please try again...\");\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2 style={{color: \"#000\"}}>REQUEST AND RESULT FORM</h2>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h4 style={{color: \"#fff\"}}>HIV TEST RESULT</h4>\r\n                            </LabelRibbon>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial Test :</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\"> Date </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        id=\"date\"\r\n                                        value={initialTest1.date}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        required\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                    {errors.date !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.date}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                                <div className=\"form-group  col-md-5\">\r\n                                    <FormGroup>\r\n                                        <Label>Result </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"result\"\r\n                                            id=\"result\"\r\n                                            value={initialTest1.result}\r\n                                            onChange={handleInputChangeInitial}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            //disabled={initialTest1.date === \"\" ? true : false}\r\n                                            disabled={props.activePage.actionType === \"view\"}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Yes\">Reactive</option>\r\n                                            <option value=\"No\">Non Reactive</option>\r\n                                        </select>\r\n                                        {errors.result !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.result}</span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result === \"Yes\" && (\r\n                                <>\r\n                                    <h4>Confirmatory Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={confirmatoryTest.date}\r\n                                                onChange={handleInputChangeConfirmatory}\r\n                                                min={initialTest1.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                            {errors.dateOfEac1 !== \"\" ? (\r\n                                                <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {confirmatoryTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={confirmatoryTest.result}\r\n                                                    onChange={handleInputChangeConfirmatory}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest.result === \"No\" && (\r\n                                <>\r\n                                    <h4>Tie Breaker Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={tieBreakerTest.date}\r\n                                                onChange={handleInputChangeTie}\r\n                                                min={confirmatoryTest.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {tieBreakerTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={tieBreakerTest.result}\r\n                                                    onChange={handleInputChangeTie}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    //disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group  col-md-12\">\r\n                                    {initialTest1.result === \"No\" && (\r\n                                        <>\r\n                                            <b> Result : </b>\r\n                                            <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest1.result === \"No\" &&\r\n                                        confirmatoryTest.result === \"No\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {/*{initialTest1.result === \"Yes\" &&*/}\r\n                                    {/*    confirmatoryTest.result === \"No\" &&*/}\r\n                                    {/*    tieBreakerTest.result === \"No\" && (*/}\r\n                                    {/*        <>*/}\r\n                                    {/*            <b> Final Result : </b>*/}\r\n                                    {/*            <LabelRibbon color=\"red\"> Negative</LabelRibbon>*/}\r\n                                    {/*        </>*/}\r\n                                    {/*    )*/}\r\n                                    {/*}*/}\r\n\r\n                                    {initialTest1.result === \"Yes\" &&\r\n                                        confirmatoryTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n                                                <div className=\"row\">\r\n                                                    <h4>RETESTING:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={confirmatoryTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                                readOnly={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                // disabled={\r\n                                                                //   initialTest12.date2 === \"\" ? true : false\r\n                                                                // }\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            tieBreakerTest2.date2 === \"\"\r\n                                                                                ? true\r\n                                                                                : false\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* This is result for Test 1 */}\r\n                                    {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <h4>Retesting:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={tieBreakerTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    initialTest12.date2 === \"\" ? true : false\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   tieBreakerTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {errors.prepOffered !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepOffered}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {errors.prepAccepted !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepAccepted}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"No\" &&\r\n                                        (initialTest1.result === \"Yes\" ||\r\n                                            initialTest1.result !== \"\") && (\r\n                                            <>\r\n                                                <>\r\n                                                    <b> Result : </b>\r\n                                                    <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                                    <b> Final Result : </b>\r\n                                                    <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                                                </>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Offered{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepOffered\"\r\n                                                                id=\"prepOffered\"\r\n                                                                value={objValues.prepOffered}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    {objValues.prepOffered !== \"\" &&\r\n                                                        objValues.prepOffered === \"true\" && (\r\n                                                            <div className=\"form-group  col-md-6\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>\r\n                                                                        Prep Accepted{\" \"}\r\n                                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                                    </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"prepAccepted\"\r\n                                                                        id=\"prepAccepted\"\r\n                                                                        value={objValues.prepAccepted}\r\n                                                                        onChange={handleInputChange}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"true\">Yes</option>\r\n                                                                        <option value=\"false\">No</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* END of  result for Test 1 */}\r\n                                    {/* This is result for Test 2 */}\r\n                                    {initialTest12.result2 === \"No\" && (\r\n                                        <>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                            <br/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group  col-md-5\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Offered{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepOffered\"\r\n                                                            id=\"prepOffered\"\r\n                                                            value={objValues.prepOffered}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                {objValues.prepOffered !== \"\" &&\r\n                                                    objValues.prepOffered === \"true\" && (\r\n                                                        <div className=\"form-group  col-md-5\">\r\n                                                            <FormGroup>\r\n                                                                <Label>\r\n                                                                    Prep Accepted{\" \"}\r\n                                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                                </Label>\r\n                                                                <select\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"prepAccepted\"\r\n                                                                    id=\"prepAccepted\"\r\n                                                                    value={objValues.prepAccepted}\r\n                                                                    onChange={handleInputChange}\r\n                                                                    style={{\r\n                                                                        border: \"1px solid #014D88\",\r\n                                                                        borderRadius: \"0.2rem\",\r\n                                                                    }}\r\n                                                                    disabled={\r\n                                                                        props.activePage.actionType === \"view\"\r\n                                                                    }\r\n                                                                >\r\n                                                                    <option value={\"\"}></option>\r\n                                                                    <option value=\"true\">Yes</option>\r\n                                                                    <option value=\"false\">No</option>\r\n                                                                </select>\r\n                                                            </FormGroup>\r\n                                                        </div>\r\n                                                    )}\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest12.result2 === \"No\" &&\r\n                                        confirmatoryTest2.result2 === \"No\" && (\r\n                                            <>\r\n                                                <b> FinalnResult : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {initialTest12.result2 === \"Yes\" &&\r\n                                        confirmatoryTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                                <br/>\r\n                                            </>\r\n                                        )}\r\n                                    {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"No\" &&\r\n                                        (initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"\") && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {/* END of  result for Test 2*/}\r\n                                </div>\r\n                            </div>\r\n                            {initialTest1.result === \"No\" && (\r\n                                <>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Prep Offered <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"prepOffered\"\r\n                                                    id=\"prepOffered\"\r\n                                                    value={objValues.prepOffered}\r\n                                                    onChange={handleInputChange}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"true\">Yes</option>\r\n                                                    <option value=\"false\">No</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {objValues.prepOffered !== \"\" &&\r\n                                            objValues.prepOffered === \"true\" && (\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Accepted{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepAccepted\"\r\n                                                            id=\"prepAccepted\"\r\n                                                            value={objValues.prepAccepted}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest2.result2 === \"No\" &&\r\n                                tieBreakerTest2.result2 === \"No\" && (\r\n                                    <>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label>\r\n                                                        Prep Offered{\" \"}\r\n                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"prepOffered\"\r\n                                                        id=\"prepOffered\"\r\n                                                        value={objValues.prepOffered}\r\n                                                        onChange={handleInputChange}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={props.activePage.actionType === \"view\"}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"true\">Yes</option>\r\n                                                        <option value=\"false\">No</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {objValues.prepOffered !== \"\" &&\r\n                                                objValues.prepOffered === \"true\" && (\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Accepted{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepAccepted\"\r\n                                                                id=\"prepAccepted\"\r\n                                                                value={objValues.prepAccepted}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                )}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            {showCD4Count && (\r\n                                <>\r\n                                    <LabelRibbon\r\n                                        as=\"a\"\r\n                                        color=\"blue\"\r\n                                        style={{width: \"106%\", height: \"35px\"}}\r\n                                        ribbon\r\n                                    >\r\n                                        <h5 style={{color: \"#fff\"}}>CD4 Count</h5>\r\n                                    </LabelRibbon>\r\n                                    <br/> <br/>\r\n                                    <div className=\"form-group  col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label>CD4 Count </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"cd4Count\"\r\n                                                id=\"cd4Count\"\r\n                                                value={cd4Count.cd4Count}\r\n                                                onChange={handleInputChangeCd4Count}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.2rem\",\r\n                                                }}\r\n                                                disabled={props.activePage.actionType === \"view\"}\r\n                                            >\r\n                                                <option value={\"\"}></option>\r\n                                                <option value=\"Semi-Quantitative\">\r\n                                                    Semi-Quantitative\r\n                                                </option>\r\n                                                <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>CD4 Count Value</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"cd4SemiQuantitative\"\r\n                                                    id=\"cd4SemiQuantitative\"\r\n                                                    value={cd4Count.cd4SemiQuantitative}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"<200\">{\"<200\"}</option>\r\n                                                    <option value=\">=200\">{\">=200\"}</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">CD4 Count Value</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"cd4FlowCyteometry\"\r\n                                                    id=\"cd4FlowCyteometry\"\r\n                                                    value={cd4Count.cd4FlowCyteometry}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-7\"></div>\r\n                                </>\r\n                            )}\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Syphilis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Syphilis test result <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                    </select>\r\n                                    {errors.syphilisTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis B virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisBTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis C virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisCTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            {props.patientObj.riskStratificationResponseDto !== null &&\r\n                                props.patientObj.riskStratificationResponseDto\r\n                                    .communityEntryPoint !== \"\" && (\r\n                                    <>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Longitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"longitude\"\r\n                                                    id=\"longitude\"\r\n                                                    value={others.longitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Latitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"latitude\"\r\n                                                    id=\"latitude\"\r\n                                                    value={others.latitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Adhoc Code</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"adhocCode\"\r\n                                        id=\"adhocCode\"\r\n                                        value={others.adhocCode}\r\n                                        onChange={handleInputChangeOthers}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        readOnly={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            {saving ? <Spinner/> : \"\"}\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-12\">\r\n                                    {patientAge <= 15 ? (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                                            />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() =>\r\n                                                    handleItemClick(\r\n                                                        \"pre-test-counsel\",\r\n                                                        \"pre-test-counsel\"\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                    {props.activePage.actionType === \"update\" && (\r\n                                        <Button\r\n                                            content=\"Update & Continue\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                    {props.activePage.actionType === \"view\" && (\r\n                                        <Button\r\n                                            content=\"Next\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["551","552","553","554"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=(row, actionType)=>{\r\n\r\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\r\n    }\r\n    \r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["555","556","557","558","559","560","561","562"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientnHistory = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n  const handleIEditIndex = (page, activePage) => {\r\n    console.log(page);\r\n    console.log(activePage);\r\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n    //props.handleIClickPage(page)\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-end  mr-2 mt-2\"\r\n        onClick={() => handleItemClickPage(\"add\")}\r\n        //startIcon={<FaUserPlus size=\"10\"/>}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"List of  client contact\"\r\n        columns={[\r\n          { title: \"Name\", field: \"name\" },\r\n          { title: \"Age\", field: \"age\" },\r\n          { title: \"Phone Number\", field: \"phone\" },\r\n          { title: \"Adress\", field: \"address\" },\r\n          // { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={indexClientList\r\n          .filter((b) => b.firstName !== \"\")\r\n          .map((row) => ({\r\n            name: row.firstName + \" \" + row.lastName,\r\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n            phone: row.phoneNumber,\r\n            address: row.address,\r\n            actions: (\r\n              <>\r\n                {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n              </>\r\n            ),\r\n          }))}\r\n        options={{\r\n          headerStyle: {\r\n            //backgroundColor: \"#9F9FA5\",\r\n            color: \"#000\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientnHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["563","564","565","566","567","568","569","570","571","572","573"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst AddIndexContact = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n\r\n  let temp = { ...errors };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    phoneNumber: \"\",\r\n    altPhoneNumber: \"\",\r\n    sex: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n    physicalHurt: \"\",\r\n    threatenToHurt: \"\",\r\n    address: \"\",\r\n    hangOutSpots: \"\",\r\n    relativeToIndexClient: \"\",\r\n    currentlyLiveWithPartner: \"\",\r\n    partnerTestedPositive: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n    notificationMethod: \"\",\r\n    datePartnerCameForTesting: \"\",\r\n    offeredIns: \"\",\r\n    acceptedIns: \"\",\r\n    elicited: \"\",\r\n    stateId: \"\",\r\n    lga: \"\",\r\n    dateTested: \"\",\r\n    currentHivStatus: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    Sex();\r\n    getStates();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setObjValues({ ...objValues, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n      axios\r\n        .post(`${baseUrl}index-elicitation`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          if (\r\n            objValues.offeredIns !== \"No\" &&\r\n            objValues.acceptedIns !== \"No\" &&\r\n            objValues.elicited !== \"No\"\r\n          ) {\r\n            setElicitedCount(elicitedCount + 1);\r\n            setObjValues({\r\n              firstName: \"\",\r\n              middleName: \"\",\r\n              lastName: \"\",\r\n              dob: \"\",\r\n              phoneNumber: \"\",\r\n              altPhoneNumber: \"\",\r\n              sex: \"\",\r\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n              physicalHurt: \"\",\r\n              threatenToHurt: \"\",\r\n              address: \"\",\r\n              hangOutSpots: \"\",\r\n              relativeToIndexClient: \"\",\r\n              currentlyLiveWithPartner: \"\",\r\n              partnerTestedPositive: \"\",\r\n              sexuallyUncomfortable: \"\",\r\n              notificationMethod: \"\",\r\n              datePartnerCameForTesting: \"\",\r\n              age: \"\",\r\n              isDateOfBirthEstimated: false,\r\n              //offeredIns:\"\",\r\n              //acceptedIns:\"\",\r\n              //elicited: \"\",\r\n              stateId: \"\",\r\n              lga: \"\",\r\n              dateTested: \"\",\r\n              currentHivStatus: \"\",\r\n            });\r\n          }\r\n          //handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Index Notification Services - Elicitation\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end  mr-2 mt-2\"\r\n              onClick={() => handleItemClickPage(\"list\")}\r\n              //startIcon={<FaUserPlus size=\"10\"/>}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                {\" \"}\r\n                Back To Client Index List\r\n              </span>\r\n            </Button>\r\n          </h2>\r\n          {elicitedCount === 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Badge badgeContent={elicitedCount} color=\"primary\">\r\n              Elicited Clients\r\n              <PersonIcon color=\"action\" />\r\n            </Badge>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredIns\"\r\n                    id=\"offeredIns\"\r\n                    value={objValues.offeredIns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredIns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredIns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedIns\"\r\n                      id=\"acceptedIns\"\r\n                      value={objValues.acceptedIns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.acceptedIns !== \"\" &&\r\n                objValues.acceptedIns !== \"No\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"elicited\"\r\n                        id=\"elicited\"\r\n                        value={objValues.elicited}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">First Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={objValues.firstName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Middle Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"middleName\"\r\n                        id=\"middleName\"\r\n                        value={objValues.middleName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Last Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={objValues.lastName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-2 col-md-2\">\r\n                    <FormGroup>\r\n                      <Label>Date Of Birth</Label>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Actual\"\r\n                            name=\"dateOfBirth\"\r\n                            defaultChecked\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Actual\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Estimated\"\r\n                            name=\"dateOfBirth\"\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Estimated\r\n                        </label>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Date</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dob\"\r\n                        id=\"dob\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        value={objValues.dob}\r\n                        onChange={handleDobChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Age</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        id=\"age\"\r\n                        value={objValues.age}\r\n                        disabled={ageDisabled}\r\n                        onChange={handleAgeChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Phone Number</Label>\r\n\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.phoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                      {errors.phoneNumber !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.phoneNumber}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Alternative Phone Number</Label>\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"altPhoneNumber\"\r\n                        id=\"altPhoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.altPhoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Sex *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sex\"\r\n                        id=\"sex\"\r\n                        value={objValues.sex}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {sexs.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        State <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"state\"\r\n                        id=\"state\"\r\n                        onChange={getProvinces}\r\n                        value={objValues.stateId}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {states.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.stateId !== \"\" ? (\r\n                        <span className={classes.error}>{errors.stateId}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        LGA <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lga\"\r\n                        id=\"lga\"\r\n                        value={objValues.lga}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {provinces.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.lga !== \"\" ? (\r\n                        <span className={classes.error}>{errors.lga}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Address</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        value={objValues.address}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Hang-out spots</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"hangOutSpots\"\r\n                        id=\"hangOutSpots\"\r\n                        value={objValues.hangOutSpots}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Relationship to Index Client *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relativeToIndexClient\"\r\n                        id=\"relativeToIndexClient\"\r\n                        value={objValues.relativeToIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Do you currently live with this partner? *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentlyLiveWithPartner\"\r\n                        id=\"currentlyLiveWithPartner\"\r\n                        value={objValues.currentlyLiveWithPartner}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value={\"true\"}>Yes</option>\r\n                        <option value={\"false\"}>No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        As far as you know, has this partner ever tested\r\n                        positive for HIV *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"partnerTestedPositive\"\r\n                        id=\"partnerTestedPositive\"\r\n                        value={objValues.partnerTestedPositive}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever hit, kick, slapped or otherwise\r\n                        physical hurt you? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"physicalHurt\"\r\n                        id=\"physicalHurt\"\r\n                        value={objValues.physicalHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to hurt you? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"threatenToHurt\"\r\n                        id=\"threatenToHurt\"\r\n                        value={objValues.threatenToHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to force you to do\r\n                        something sexually that made you uncomfortable ? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sexuallyUncomfortable\"\r\n                        id=\"sexuallyUncomfortable\"\r\n                        value={objValues.sexuallyUncomfortable}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Notification Method selected*</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"notificationMethod\"\r\n                        id=\"notificationMethod\"\r\n                        value={objValues.notificationMethod}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {notificationContact.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">\r\n                        If contract by which date will partner come for testing?\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"datePartnerCameForTesting\"\r\n                        id=\"datePartnerCameForTesting\"\r\n                        value={objValues.datePartnerCameForTesting}\r\n                        onChange={handleInputChange}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      {errors.datePartnerComeForTesting !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.datePartnerComeForTesting}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Status of Index Client{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentHivStatus\"\r\n                        id=\"currentHivStatus\"\r\n                        value={objValues.currentHivStatus}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"negative\">Negative</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"unknown\">Unknown</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.currentHivStatus !== \"\" &&\r\n                    objValues.currentHivStatus === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Date Tested?{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateTested\"\r\n                            id=\"dateTested\"\r\n                            value={objValues.dateTested}\r\n                            onChange={handleInputChange}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save\"\r\n                    icon=\"save\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddIndexContact;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["590","591","592","593","594","595","596","597"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\History\\History.js",["598","599","600","601"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientnHistory = (props) => {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    //patients()\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"view\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  const handleHTSDelete = (row) => {\r\n    console.log(props.patientList);\r\n    axios\r\n      .delete(`${baseUrl}hts/${row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        toast.success(\r\n          `HTS patient with client code ${row.clientCode}, deleted successfully`\r\n        );\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.err(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"HTS HISTORY \"\r\n        columns={[\r\n          // { title: \"HTS ID\", field: \"id\" },\r\n          { title: \"Date\", field: \"date\" },\r\n          { title: \"Pre Test Counseling\", field: \"pre\" },\r\n          { title: \"Recency Test\", field: \"rencency\" },\r\n          { title: \"Post Test\", field: \"post\" },\r\n          // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n          {\r\n            title: \"Request & Result\",\r\n            field: \"requestResult\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={props.loading}\r\n        data={props.patientList.map((row) => ({\r\n          // id: row.id,\r\n          date: row.dateVisit,\r\n          pre: row.knowledgeAssessment ? \"Filled\" : \"Not Filled \",\r\n          requestResult: row.confirmatoryTest ? \"Filled\" : \"Not Filled \",\r\n          rencency: row.recency ? \"Filled\" : \"Not Filled \",\r\n          post: row.postTestCounselingKnowledgeAssessment\r\n            ? \"Filled\"\r\n            : \"Not Filled \",\r\n          //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n          actions: (\r\n            <div>\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  >\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            //backgroundColor: \"#9F9FA5\",\r\n            color: \"#000\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientnHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["602","603","604","605","606","607","608","609"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientnHistory = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n  const handleIEditIndex = (page, activePage) => {\r\n    console.log(page);\r\n    console.log(activePage);\r\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n    //props.handleIClickPage(page)\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-end  mr-2 mt-2\"\r\n        onClick={() => handleItemClickPage(\"add\")}\r\n        //startIcon={<FaUserPlus size=\"10\"/>}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"List of  client contact\"\r\n        columns={[\r\n          { title: \"Name\", field: \"name\" },\r\n          { title: \"Age\", field: \"age\" },\r\n          { title: \"Phone Number\", field: \"phone\" },\r\n          { title: \"Adress\", field: \"address\" },\r\n          //{ title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={indexClientList\r\n          .filter((b) => b.firstName !== \"\")\r\n          .map((row) => ({\r\n            name: row.firstName + \" \" + row.lastName,\r\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n            phone: row.phoneNumber,\r\n            address: row.address,\r\n            actions: (\r\n              <>\r\n                {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n              </>\r\n            ),\r\n          }))}\r\n        options={{\r\n          headerStyle: {\r\n            //backgroundColor: \"#9F9FA5\",\r\n            color: \"#000\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientnHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst AddIndexContact = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\r\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n\r\n  let temp = { ...errors };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n  const [objValues, setObjValues] = useState({\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    phoneNumber: \"\",\r\n    altPhoneNumber: \"\",\r\n    sex: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n    physicalHurt: \"\",\r\n    threatenToHurt: \"\",\r\n    address: \"\",\r\n    hangOutSpots: \"\",\r\n    relativeToIndexClient: \"\",\r\n    currentlyLiveWithPartner: \"\",\r\n    partnerTestedPositive: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n    notificationMethod: \"\",\r\n    datePartnerCameForTesting: \"\",\r\n    offeredIns: \"\",\r\n    acceptedIns: \"\",\r\n    elicited: \"\",\r\n    stateId: \"\",\r\n    lga: \"\",\r\n    dateTested: \"\",\r\n    currentHivStatus: \"\",\r\n  });\r\n  useEffect(() => {\r\n    getStates();\r\n    Sex();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n  }, []);\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //     age_now--;\r\n      // }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setObjValues({ ...objValues, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n\r\n      //console.log(\"obj\", objValues);\r\n      axios\r\n        .post(`${baseUrl}index-elicitation`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\");\r\n\r\n          if (\r\n            objValues.offeredIns !== \"No\" &&\r\n            objValues.acceptedIns !== \"No\" &&\r\n            objValues.elicited !== \"No\"\r\n          ) {\r\n            setElicitedCount(elicitedCount + 1);\r\n            setObjValues({\r\n              firstName: \"\",\r\n              middleName: \"\",\r\n              lastName: \"\",\r\n              dob: \"\",\r\n              phoneNumber: \"\",\r\n              altPhoneNumber: \"\",\r\n              sex: \"\",\r\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n              physicalHurt: \"\",\r\n              threatenToHurt: \"\",\r\n              address: \"\",\r\n              hangOutSpots: \"\",\r\n              relativeToIndexClient: \"\",\r\n              currentlyLiveWithPartner: \"\",\r\n              partnerTestedPositive: \"\",\r\n              sexuallyUncomfortable: \"\",\r\n              notificationMethod: \"\",\r\n              datePartnerCameForTesting: \"\",\r\n              age: \"\",\r\n              isDateOfBirthEstimated: false,\r\n              //offeredIns:\"\",\r\n              //acceptedIns:\"\",\r\n              //elicited: \"\",\r\n              stateId: \"\",\r\n              lga: \"\",\r\n              dateTested: \"\",\r\n              currentHivStatus: \"\",\r\n            });\r\n          }\r\n\r\n          // handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Index Notification Services - Elicitation\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end  mr-2 mt-2\"\r\n              onClick={() => handleItemClickPage(\"list\")}\r\n              //startIcon={<FaUserPlus size=\"10\"/>}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                {\" \"}\r\n                Back To Client Index List\r\n              </span>\r\n            </Button>\r\n          </h2>\r\n          {elicitedCount === 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Badge badgeContent={elicitedCount} color=\"primary\">\r\n              Elicited Clients\r\n              <PersonIcon color=\"action\" />\r\n            </Badge>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredIns\"\r\n                    id=\"offeredIns\"\r\n                    value={objValues.offeredIns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredIns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredIns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedIns\"\r\n                      id=\"acceptedIns\"\r\n                      value={objValues.acceptedIns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.acceptedIns !== \"\" &&\r\n                objValues.acceptedIns !== \"No\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"elicited\"\r\n                        id=\"elicited\"\r\n                        value={objValues.elicited}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">First Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={objValues.firstName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Middle Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"middleName\"\r\n                        id=\"middleName\"\r\n                        value={objValues.middleName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Last Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={objValues.lastName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-2 col-md-2\">\r\n                    <FormGroup>\r\n                      <Label>Date Of Birth</Label>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Actual\"\r\n                            name=\"dateOfBirth\"\r\n                            defaultChecked\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Actual\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Estimated\"\r\n                            name=\"dateOfBirth\"\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Estimated\r\n                        </label>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Date</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dob\"\r\n                        id=\"dob\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        value={objValues.dob}\r\n                        onChange={handleDobChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Age</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        id=\"age\"\r\n                        value={objValues.age}\r\n                        disabled={ageDisabled}\r\n                        onChange={handleAgeChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Phone Number</Label>\r\n\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.phoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                      {errors.phoneNumber !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.phoneNumber}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Alternative Phone Number</Label>\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"altPhoneNumber\"\r\n                        id=\"altPhoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.altPhoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Sex <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sex\"\r\n                        id=\"sex\"\r\n                        value={objValues.sex}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {sexs.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        State <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"state\"\r\n                        id=\"state\"\r\n                        onChange={getProvinces}\r\n                        value={objValues.stateId}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {states.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.stateId !== \"\" ? (\r\n                        <span className={classes.error}>{errors.stateId}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        LGA <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lga\"\r\n                        id=\"lga\"\r\n                        value={objValues.lga}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {provinces.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.lga !== \"\" ? (\r\n                        <span className={classes.error}>{errors.lga}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">\r\n                        Address <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        value={objValues.address}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Hang-out spots</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"hangOutSpots\"\r\n                        id=\"hangOutSpots\"\r\n                        value={objValues.hangOutSpots}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Relationship to Index Client{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relativeToIndexClient\"\r\n                        id=\"relativeToIndexClient\"\r\n                        value={objValues.relativeToIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Do you currently live with this partner?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentlyLiveWithPartner\"\r\n                        id=\"currentlyLiveWithPartner\"\r\n                        value={objValues.currentlyLiveWithPartner}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value={\"true\"}>Yes</option>\r\n                        <option value={\"false\"}>No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        As far as you know, has this partner ever tested\r\n                        positive for HIV{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"partnerTestedPositive\"\r\n                        id=\"partnerTestedPositive\"\r\n                        value={objValues.partnerTestedPositive}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever hit, kick, slapped or otherwise\r\n                        physical hurt you?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"physicalHurt\"\r\n                        id=\"physicalHurt\"\r\n                        value={objValues.physicalHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to hurt you?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"threatenToHurt\"\r\n                        id=\"threatenToHurt\"\r\n                        value={objValues.threatenToHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to force you to do\r\n                        something sexually that made you uncomfortable ?{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sexuallyUncomfortable\"\r\n                        id=\"sexuallyUncomfortable\"\r\n                        value={objValues.sexuallyUncomfortable}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Notification Method selected{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"notificationMethod\"\r\n                        id=\"notificationMethod\"\r\n                        value={objValues.notificationMethod}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {notificationContact.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">\r\n                        If contract by which date will partner come for testing?\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"datePartnerCameForTesting\"\r\n                        id=\"datePartnerCameForTesting\"\r\n                        value={objValues.datePartnerCameForTesting}\r\n                        onChange={handleInputChange}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      {errors.datePartnerComeForTesting !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.datePartnerComeForTesting}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Status of Index Client{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentHivStatus\"\r\n                        id=\"currentHivStatus\"\r\n                        value={objValues.currentHivStatus}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"negative\">Negative</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"unknown\">Unknown</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.currentHivStatus !== \"\" &&\r\n                    objValues.currentHivStatus === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Date Tested?{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateTested\"\r\n                            id=\"dateTested\"\r\n                            value={objValues.dateTested}\r\n                            onChange={handleInputChange}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save\"\r\n                    icon=\"save\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddIndexContact;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["627","628","629","630","631"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n//import SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RiskStratification = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  console.log(\"cons\", props.patientObj);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [objValues, setObjValues] = useState({\r\n    age: props.patientAge,\r\n    dob: props.patientObj.dateOfBirth,\r\n    visitDate: \"\",\r\n    dateOfBirth: props.patientObj.dateOfBirth,\r\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\r\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    code: \"\",\r\n    id: \"\",\r\n    personId: props.patientObj.id,\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    careProvider: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // everHadSexualIntercourse:\"\",\r\n    // bloodtransInlastThreeMonths:\"\",\r\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n    // unprotectedVaginalSex:\"\",\r\n    // uprotectedAnalSex:\"\",\r\n    // stiLastThreeMonths:\"\",\r\n    // sexUnderInfluence :\"\",\r\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n    // experiencePain:\"\",\r\n    // haveSexWithoutCondom:\"\",\r\n    // abuseDrug:\"\",\r\n    // bloodTransfusion:\"\",\r\n    // consistentWeightFeverNightCough:\"\",\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n    if (props.patientObj.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.patientObj.riskStratificationResponseDto);\r\n      SettingModality(\r\n        props.patientObj.riskStratificationResponseDto.testingSetting\r\n      );\r\n      setRiskAssessment(\r\n        props.patientObj.riskStratificationResponseDto &&\r\n          props.patientObj.riskStratificationResponseDto.riskAssessment\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    props.patientAge > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    //Risk Assement section\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    riskAssessment.lastHivTestDone !== \"\" &&\r\n      riskAssessment.lastHivTestDone !== \"Never\" &&\r\n      (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    //targetGroup\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(riskAssessment)\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n\r\n    objValues.riskAssessment = riskAssessment;\r\n    if (\r\n      (props.patientObj.riskStratificationResponseDto &&\r\n        props.patientObj.riskStratificationResponseDto !== null &&\r\n        props.patientObj.personId !== \"\") ||\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      console.log(\"put\");\r\n      axios\r\n        .put(\r\n          `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n          objValues,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.patientObj.riskStratificationResponseDto = response.data;\r\n          objValues.code = response.data.code;\r\n          props.setExtra(objValues);\r\n          //toast.success(\"Risk stratification save succesfully!\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .post(`${baseUrl}risk-stratification`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            handleItemClick(\"basic\", \"risk\");\r\n            props.setHideOtherMenu(false);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"All fields are required\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {enrollSetting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Target Group <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"targetGroup\"\r\n                      id=\"targetGroup\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.targetGroup}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {kP.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.targetGroup !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.targetGroup}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Is this HIV test based on a Clinician/Doctor/Health Care\r\n                      Provider's request ?{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"lastHivTestBasedOnRequest\"\r\n                      id=\"lastHivTestBasedOnRequest\"\r\n                      value={riskAssessment.lastHivTestBasedOnRequest}\r\n                      onChange={handleInputChangeRiskAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHivTestBasedOnRequest}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              {props.patientAge > 15 &&\r\n                riskAssessment.lastHivTestBasedOnRequest === \"false\" && (\r\n                  <>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      HIV Risk Assessment (Last 3 months)\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          When was your last HIV test done?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestDone\"\r\n                          id=\"lastHivTestDone\"\r\n                          value={riskAssessment.lastHivTestDone}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<1\"> {\"< 1\"} month</option>\r\n                          <option value=\"1-3 Months\">1-3 Months</option>\r\n                          <option value=\"4-6 Months\">4-6 Months</option>\r\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                          <option value=\"Never\"> Never</option>\r\n                        </select>\r\n                        {errors.lastHivTestDone !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestDone}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {riskAssessment.lastHivTestDone !== \"\" &&\r\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              What was the result?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"whatWasTheResult\"\r\n                              id=\"whatWasTheResult\"\r\n                              value={riskAssessment.whatWasTheResult}\r\n                              onChange={handleInputChangeRiskAssessment}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"Positive\">Positive</option>\r\n                              <option value=\"Negative\">Negative</option>\r\n                            </select>\r\n                            {errors.whatWasTheResult !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.whatWasTheResult}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal or vaginal\r\n                          or oral sex without a condom with someone who was HIV\r\n                          positive or unaware of their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestVaginalOral\"\r\n                          id=\"lastHivTestVaginalOral\"\r\n                          value={riskAssessment.lastHivTestVaginalOral}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestVaginalOral}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had a blood or\r\n                          blood product transfusion?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestBloodTransfusion\"\r\n                          id=\"lastHivTestBloodTransfusion\"\r\n                          value={riskAssessment.lastHivTestBloodTransfusion}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestBloodTransfusion}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you experienced painful\r\n                          urination, lower abdominal pain, vaginal or penile\r\n                          discharge, pain during sexual intercourse, thick,\r\n                          cloudy, or foul smelling discharge and/or small bumps\r\n                          or blisters near the mouth, penis, vagina, or anal\r\n                          areas? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestPainfulUrination\"\r\n                          id=\"lastHivTestPainfulUrination\"\r\n                          value={riskAssessment.lastHivTestPainfulUrination}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestPainfulUrination}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Have you been diagnosed with TB or currently have any\r\n                          of the following symptoms : cough, fever, weight loss,\r\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosedWithTb\"\r\n                          id=\"diagnosedWithTb\"\r\n                          value={riskAssessment.diagnosedWithTb}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.diagnosedWithTb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.diagnosedWithTb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you ever injected\r\n                          drugs, shared needles or other sharp objects with\r\n                          someone known to be HIV positive or who you didn’t\r\n                          know their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestInjectedDrugs\"\r\n                          id=\"sexUnderInfluence\"\r\n                          value={riskAssessment.lastHivTestInjectedDrugs}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestInjectedDrugs}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal, oral or\r\n                          vaginal sex in exchange for money or other benefits?\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestHadAnal\"\r\n                          id=\"lastHivTestHadAnal\"\r\n                          value={riskAssessment.lastHivTestHadAnal}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestHadAnal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestHadAnal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you been forced to have\r\n                          sex? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestForceToHaveSex\"\r\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                          value={riskAssessment.lastHivTestForceToHaveSex}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestForceToHaveSex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save \"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskStratification;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["632","633","634","635","636","637","638","639","640","641","642","643","644","645"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["646","647","648","649","650","651","652","653","654","655"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["656","657","658","659","660"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["661","662","663","664","665","666","667","668","669","670"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  let temp = { ...errors };\r\n  //console.log(\"data1\", props.patientObj);\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [showCD4Count, setShowCD4Count] = useState(true);\r\n  const [finalResult, setFinalResult] = useState(\"\");\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const patientAge = calculate_age(\r\n    moment(\r\n      props.patientObj.personResponseDto &&\r\n        props.patientObj.personResponseDto.dateOfBirth\r\n        ? props.patientObj.personResponseDto.dateOfBirth\r\n        : 0\r\n    ).format(\"DD-MM-YYYY\")\r\n  );\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    confirmatoryTest: {},\r\n    confirmatoryTest2: {},\r\n    hivTestResult: \"\",\r\n    hivTestResult2: \"\",\r\n    htsClientId: \"\",\r\n    personId: props.patientObj ? props.patientObj.id : \"\",\r\n    test1: {},\r\n    test2: {},\r\n    tieBreakerTest: {},\r\n    tieBreakerTest2: {},\r\n    syphilisTesting: {},\r\n    hepatitisTesting: {},\r\n    others: {},\r\n    cd4: {},\r\n    prepOffered: \"\",\r\n    prepAccepted: \"\",\r\n  });\r\n  const handleInputChange = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [initialTest1, setInitailTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [initialTest12, setInitailTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeCd4Count = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setCd4Count({ ...cd4Count, [e.target.name]: e.target.value });\r\n  };\r\n  const [cd4Count, setCd4Count] = useState({\r\n    cd4Count: \"\",\r\n    cd4SemiQuantitative: \"\",\r\n    cd4FlowCyteometry: \"\",\r\n  });\r\n  const handleInputChangeInitial = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest({ ...initialTest1, [e.target.name]: e.target.value });\r\n      setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeInitial2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    if (e.target.value === \"No\") {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      setConfirmatoryTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      setTieBreakerTest2({\r\n        date: \"\",\r\n        result: \"\",\r\n      });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setInitailTest2({ ...initialTest12, [e.target.name]: e.target.value });\r\n      //This is to show cd4 count section\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeConfirmatory = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest({\r\n      ...confirmatoryTest,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeConfirmatory2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setConfirmatoryTest2({\r\n      ...confirmatoryTest2,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //This is to show cd4 count section\r\n    if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [tieBreakerTest, setTieBreakerTest] = useState({\r\n    date: \"\",\r\n    result: \"\",\r\n  });\r\n  const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n    date2: \"\",\r\n    result2: \"\",\r\n  });\r\n  const handleInputChangeTie = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest({ ...tieBreakerTest, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const handleInputChangeTie2 = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setTieBreakerTest2({ ...tieBreakerTest2, [e.target.name]: e.target.value });\r\n    //This is to show cd4 count section\r\n    if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n      setShowCD4Count(true);\r\n    } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n      setShowCD4Count(false);\r\n    } else {\r\n      setShowCD4Count(true);\r\n    }\r\n  };\r\n  const [syphills, setSyphills] = useState({\r\n    syphilisTestResult: \"\",\r\n    // result  :\"\",\r\n  });\r\n  const handleInputChangeSyphills = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setSyphills({ ...syphills, [e.target.name]: e.target.value });\r\n  };\r\n  const [hepatitis, setHepatitis] = useState({\r\n    hepatitisCTestResult: \"\",\r\n    hepatitisBTestResult: \"\",\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  const handleInputChangeHepatitis = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setHepatitis({ ...hepatitis, [e.target.name]: e.target.value });\r\n  };\r\n  const [others, setOthers] = useState({\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    adhocCode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    //console.log(props.patientObj)\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n      setCd4Count(\r\n        props.patientObj && props.patientObj.cd4 !== null\r\n          ? props.patientObj.cd4\r\n          : {}\r\n      );\r\n      setInitailTest(\r\n        props.patientObj && props.patientObj.test1 !== null\r\n          ? props.patientObj.test1\r\n          : {}\r\n      );\r\n      setConfirmatoryTest(\r\n        props.patientObj && props.patientObj.confirmatoryTest !== null\r\n          ? props.patientObj.confirmatoryTest\r\n          : {}\r\n      );\r\n      setTieBreakerTest(\r\n        props.patientObj && props.patientObj.tieBreakerTest !== null\r\n          ? props.patientObj.tieBreakerTest\r\n          : {}\r\n      );\r\n      setSyphills(\r\n        props.patientObj && props.patientObj.syphilisTesting !== null\r\n          ? props.patientObj.syphilisTesting\r\n          : {}\r\n      );\r\n      setHepatitis(\r\n        props.patientObj && props.patientObj.hepatitisTesting !== null\r\n          ? props.patientObj.hepatitisTesting\r\n          : {}\r\n      );\r\n      setOthers(\r\n        props.patientObj && props.patientObj.others !== null\r\n          ? props.patientObj.others\r\n          : {}\r\n      );\r\n\r\n      setInitailTest2(\r\n        props.patientObj && props.patientObj.test2 !== null\r\n          ? props.patientObj.test2\r\n          : {}\r\n      );\r\n      setConfirmatoryTest2(\r\n        props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n          ? props.patientObj.confirmatoryTest2\r\n          : {}\r\n      );\r\n      setTieBreakerTest2(\r\n        props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n          ? props.patientObj.tieBreakerTest2\r\n          : {}\r\n      );\r\n    }\r\n  }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n  const handleInputChangeOthers = (e) => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setOthers({ ...others, [e.target.name]: e.target.value });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    initialTest1.date !== \"\" &&\r\n      (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      (temp.prepOffered = objValues.prepOffered\r\n        ? \"\"\r\n        : \"The Prep Offered field is required.\");\r\n    initialTest1.date !== \"\" &&\r\n      initialTest1.result === \"No\" &&\r\n      objValues.prepOffered === \"true\" &&\r\n      (temp.prepAccepted = objValues.prepAccepted\r\n        ? \"\"\r\n        : \"The Prep Accepted field is required.\");\r\n    // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n    // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n    // temp.syphilisTestResult = syphills.syphilisTestResult ? \"\" : \"This field is required.\"\r\n    // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\r\n    // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult ? \"\" : \"This field is required.\"\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let result = \"\";\r\n\r\n    if (initialTest1.result === \"No\") {\r\n      result = \"Negative\";\r\n    } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\" &&\r\n        (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Negative\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n    ) {\r\n      result = \"Positive\";\r\n    }\r\n    else if(\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n\r\n    ){\r\n       result = \"Negative\";\r\n    } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\" &&\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n    ) {\r\n      result = \"Negative\";\r\n    }\r\n\r\n    setFinalResult(result);\r\n  }, [\r\n    initialTest1.result,\r\n    confirmatoryTest.result,\r\n    tieBreakerTest.result,\r\n    initialTest12.result2,\r\n    confirmatoryTest2.result2,\r\n    tieBreakerTest2.result2,\r\n  ]);\r\n  // clear the all other fields if there changes in initialTest1 result is changes\r\n  useEffect(() => {\r\n    setConfirmatoryTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    // clear the prepOffered and prepAccepted fields\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [initialTest1.result]);\r\n\r\n  // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest({\r\n      date: \"\",\r\n      result: \"\",\r\n    })\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [confirmatoryTest.result]);\r\n\r\n  // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n  useEffect(() => {\r\n    setInitailTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [tieBreakerTest.result]);\r\n\r\n  useEffect(() => {\r\n    setConfirmatoryTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [initialTest12.result2]);\r\n\r\n  useEffect(() => {\r\n    setTieBreakerTest2({\r\n      date2: \"\",\r\n      result2: \"\",\r\n    });\r\n    setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n  }, [confirmatoryTest2.result2]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (finalResult === \"\") {\r\n      toast.error(\"Final result is required for submission.\");\r\n      return;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //logic to get Hiv result test\r\n      if (initialTest12.result2 === \"No\") {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else if (\r\n        initialTest12.result2 === \"Yes\" &&\r\n        confirmatoryTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      }\r\n      // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n      //     objValues.hivTestResult2=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest2.result2 === \"No\" &&\r\n        tieBreakerTest2.result2 === \"No\"\r\n      ) {\r\n        objValues.hivTestResult2 = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult2 = \"\";\r\n      }\r\n\r\n      if (initialTest1.result === \"No\") {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else if (\r\n        initialTest1.result === \"Yes\" &&\r\n        confirmatoryTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      }\r\n      // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n      //     objValues.hivTestResult=\"Negative\"\r\n      // }\r\n      else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"Yes\"\r\n      ) {\r\n        objValues.hivTestResult = \"Positive\";\r\n      } else if (\r\n        confirmatoryTest.result === \"No\" &&\r\n        tieBreakerTest.result === \"No\"\r\n      ) {\r\n        objValues.hivTestResult = \"Negative\";\r\n      } else {\r\n        objValues.hivTestResult = \"\";\r\n      }\r\n      objValues.htsClientId = clientId;\r\n      objValues.confirmatoryTest = confirmatoryTest;\r\n      objValues.confirmatoryTest2 = confirmatoryTest2;\r\n      objValues.personId = patientID;\r\n      objValues.test1 = initialTest1;\r\n      objValues.test2 = initialTest12;\r\n      objValues.tieBreakerTest = tieBreakerTest;\r\n      objValues.tieBreakerTest2 = tieBreakerTest2;\r\n      objValues.syphilisTesting = syphills;\r\n      objValues.hepatitisTesting = hepatitis;\r\n\r\n      objValues.cd4 = cd4Count;\r\n      objValues.others = others;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //console.log(response.data)\r\n          //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n          //toast.success(\"HIV test successful\");\r\n          handleItemClick(\"post-test\", \"hiv-test\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>REQUEST AND RESULT FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>HIV TEST RESULT</h4>\r\n              </LabelRibbon>\r\n              <br />\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              <h4>Initial Test :</h4>\r\n              <div className=\"form-group mb-3 col-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"\"> Date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    value={initialTest1.date}\r\n                    onChange={handleInputChangeInitial}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.date !== \"\" ? (\r\n                    <span className={classes.error}>{errors.date}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {initialTest1.date && (\r\n                <div className=\"form-group  col-md-5\">\r\n                  <FormGroup>\r\n                    <Label>Result </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"result\"\r\n                      id=\"result\"\r\n                      value={initialTest1.result}\r\n                      onChange={handleInputChangeInitial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={initialTest1.date === \"\" ? true : false}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      <option value=\"Yes\">Reactive</option>\r\n                      <option value=\"No\">Non Reactive</option>\r\n                    </select>\r\n                    {errors.result !== \"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group  col-md-2\"></div>\r\n              {initialTest1.result === \"Yes\" && (\r\n                <>\r\n                  <h4>Confirmatory Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={confirmatoryTest.date}\r\n                        onChange={handleInputChangeConfirmatory}\r\n                        min={initialTest1.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.dateOfEac1 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {confirmatoryTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={confirmatoryTest.result}\r\n                          onChange={handleInputChangeConfirmatory}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={confirmatoryTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              {confirmatoryTest.result === \"No\" && (\r\n                <>\r\n                  <h4>Tie Breaker Test:</h4>\r\n                  <div className=\"form-group mb-3 col-md-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"\"> Date </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={tieBreakerTest.date}\r\n                        onChange={handleInputChangeTie}\r\n                        min={confirmatoryTest.date}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {tieBreakerTest.date && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>Result </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={tieBreakerTest.result}\r\n                          onChange={handleInputChangeTie}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"Yes\">Reactive</option>\r\n                          <option value=\"No\">Non Reactive</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-2\"></div>\r\n                </>\r\n              )}\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-12\">\r\n                  {initialTest1.result === \"No\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                        <br/>\r\n                      </>\r\n                  )}\r\n                  {initialTest1.result === \"No\" &&\r\n                      confirmatoryTest.result === \"No\" && (\r\n                          <>\r\n                          <b> Result : </b>\r\n                        <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest1.result === \"Yes\" &&\r\n                    confirmatoryTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <h4>RETESTING:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={confirmatoryTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* This is result for Test 1 */}\r\n                  {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                                        <LabelRibbon color=\"green\" >\r\n                                                            Negative\r\n                                                        </LabelRibbon>\r\n                                                    )} */}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"Yes\" && (\r\n                      <>\r\n                        <b> Result : </b>\r\n                        <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                        <br />\r\n                        <hr />\r\n\r\n                        <div className=\"row\">\r\n                          <h4>Retesting:</h4>\r\n                          <div className=\"form-group mb-3 col-md-5\">\r\n                            <FormGroup>\r\n                              <Label for=\"\"> Date </Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                name=\"date2\"\r\n                                id=\"date2\"\r\n                                value={initialTest12.date2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                min={tieBreakerTest.date}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.25rem\",\r\n                                }}\r\n                                required\r\n                              />\r\n                              {errors.date2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-5\">\r\n                            <FormGroup>\r\n                              <Label>Result </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"result2\"\r\n                                id=\"result2\"\r\n                                value={initialTest12.result2}\r\n                                onChange={handleInputChangeInitial2}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                disabled={\r\n                                  initialTest12.date2 === \"\" ? true : false\r\n                                }\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"Yes\">Reactive</option>\r\n                                <option value=\"No\">Non Reactive</option>\r\n                              </select>\r\n                              {errors.result2 !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group  col-md-2\"></div>\r\n                          {initialTest12.result2 === \"Yes\" && (\r\n                            <>\r\n                              <h4>Confirmatory Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={confirmatoryTest2.date2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    min={initialTest12.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={confirmatoryTest2.result2}\r\n                                    onChange={handleInputChangeConfirmatory2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      confirmatoryTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                          {confirmatoryTest2.result2 === \"No\" && (\r\n                            <>\r\n                              <h4>Tie Breaker Test 2:</h4>\r\n                              <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label for=\"\"> Date </Label>\r\n                                  <Input\r\n                                    type=\"date\"\r\n                                    name=\"date2\"\r\n                                    id=\"date2\"\r\n                                    value={tieBreakerTest2.date2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    min={confirmatoryTest2.date2}\r\n                                    max={moment(new Date()).format(\r\n                                      \"YYYY-MM-DD\"\r\n                                    )}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.25rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                  <Label>Result </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"result2\"\r\n                                    id=\"result2\"\r\n                                    value={tieBreakerTest2.result2}\r\n                                    onChange={handleInputChangeTie2}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    disabled={\r\n                                      tieBreakerTest2.date2 === \"\"\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Yes\">Reactive</option>\r\n                                    <option value=\"No\">Non Reactive</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {errors.prepOffered !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepOffered}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {errors.prepAccepted !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepAccepted}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {confirmatoryTest.result === \"No\" &&\r\n                    tieBreakerTest.result === \"No\" &&\r\n                    (initialTest1.result === \"Yes\" ||\r\n                      initialTest1.result !== \"\") && (\r\n                      <>\r\n                        <>\r\n                          <b> Result : </b>\r\n                          <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                          <b> Final Result : </b>\r\n                          <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                        </>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Offered{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepOffered\"\r\n                                id=\"prepOffered\"\r\n                                value={objValues.prepOffered}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {objValues.prepOffered !== \"\" &&\r\n                            objValues.prepOffered === \"true\" && (\r\n                              <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                  <Label>\r\n                                    Prep Accepted{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"prepAccepted\"\r\n                                    id=\"prepAccepted\"\r\n                                    value={objValues.prepAccepted}\r\n                                    onChange={handleInputChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                </FormGroup>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {/* END of  result for Test 1 */}\r\n                  {/* This is result for Test 2 */}\r\n                  {initialTest12.result2 === \"No\" && (\r\n                    <>\r\n                      <b> Final Result : </b>\r\n                      <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group  col-md-5\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Offered{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepOffered\"\r\n                              id=\"prepOffered\"\r\n                              value={objValues.prepOffered}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.prepOffered !== \"\" &&\r\n                          objValues.prepOffered === \"true\" && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Prep Accepted{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>\r\n                                </Label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"prepAccepted\"\r\n                                  id=\"prepAccepted\"\r\n                                  value={objValues.prepAccepted}\r\n                                  onChange={handleInputChange}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                >\r\n                                  <option value={\"\"}></option>\r\n                                  <option value=\"true\">Yes</option>\r\n                                  <option value=\"false\">No</option>\r\n                                </select>\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {initialTest12.result2 === \"No\" &&\r\n                    confirmatoryTest2.result2 === \"No\" && (\r\n                      <>\r\n                        <b> FinalnResult : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {initialTest12.result2 === \"Yes\" &&\r\n                    confirmatoryTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b> Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                  {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                                        <LabelRibbon color=\"green\" >\r\n                                                            Negative\r\n                                                        </LabelRibbon>\r\n                                                    )} */}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"Yes\" && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                      </>\r\n                    )}\r\n                  {confirmatoryTest2.result2 === \"No\" &&\r\n                    tieBreakerTest2.result2 === \"No\" &&\r\n                    (initialTest12.result2 === \"Yes\" ||\r\n                      initialTest12.result2 !== \"\") && (\r\n                      <>\r\n                        <b>Final Result : </b>\r\n                        <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* END of  result for Test 2*/}\r\n                </div>\r\n              </div>\r\n              {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* {confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )} */}\r\n              {/* {initialTest1.result === \"No\" && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Prep Offered <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"prepOffered\"\r\n                          id=\"prepOffered\"\r\n                          value={objValues.prepOffered}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {objValues.prepOffered !== \"\" &&\r\n                      objValues.prepOffered === \"true\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Prep Accepted{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"prepAccepted\"\r\n                              id=\"prepAccepted\"\r\n                              value={objValues.prepAccepted}\r\n                              onChange={handleInputChange}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"true\">Yes</option>\r\n                              <option value=\"false\">No</option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              )} */}\r\n              {confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\" && (\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Prep Offered{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"prepOffered\"\r\n                            id=\"prepOffered\"\r\n                            value={objValues.prepOffered}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}></option>\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {objValues.prepOffered !== \"\" &&\r\n                        objValues.prepOffered === \"true\" && (\r\n                          <div className=\"form-group  col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Prep Accepted{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"prepAccepted\"\r\n                                id=\"prepAccepted\"\r\n                                value={objValues.prepAccepted}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}></option>\r\n                                <option value=\"true\">Yes</option>\r\n                                <option value=\"false\">No</option>\r\n                              </select>\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {showCD4Count && (\r\n                <>\r\n                  <LabelRibbon\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{ width: \"106%\", height: \"35px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h5 style={{ color: \"#fff\" }}>CD4 Count</h5>\r\n                  </LabelRibbon>\r\n                  <br /> <br />\r\n                  <div className=\"form-group  col-md-5\">\r\n                    <FormGroup>\r\n                      <Label>CD4 Count </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"cd4Count\"\r\n                        id=\"cd4Count\"\r\n                        value={cd4Count.cd4Count}\r\n                        onChange={handleInputChangeCd4Count}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Semi-Quantitative\">\r\n                          Semi-Quantitative\r\n                        </option>\r\n                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                    <div className=\"form-group  col-md-5\">\r\n                      <FormGroup>\r\n                        <Label>CD4 Count Value</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"cd4SemiQuantitative\"\r\n                          id=\"cd4SemiQuantitative\"\r\n                          value={cd4Count.cd4SemiQuantitative}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<200\">{\"<200\"}</option>\r\n                          <option value=\">=200\">{\">=200\"}</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">CD4 Count Value</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"cd4FlowCyteometry\"\r\n                          id=\"cd4FlowCyteometry\"\r\n                          value={cd4Count.cd4FlowCyteometry}\r\n                          onChange={handleInputChangeCd4Count}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group  col-md-7\"></div>\r\n                </>\r\n              )}\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Syphilis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Syphilis test result <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"syphilisTestResult\"\r\n                    id=\"syphilisTestResult\"\r\n                    value={syphills.syphilisTestResult}\r\n                    onChange={handleInputChangeSyphills}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Reactive</option>\r\n                    <option value=\"No\">Non-Reactive</option>\r\n                  </select>\r\n                  {errors.syphilisTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Hepatitis Testing</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis B virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisBTestResult\"\r\n                    id=\"hepatitisBTestResult\"\r\n                    value={hepatitis.hepatitisBTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisBTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Hepatitis C virus test result{\" \"}\r\n                    <span style={{ color: \"red\" }}> </span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hepatitisCTestResult\"\r\n                    id=\"hepatitisCTestResult\"\r\n                    value={hepatitis.hepatitisCTestResult}\r\n                    onChange={handleInputChangeHepatitis}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Yes\">Positive</option>\r\n                    <option value=\"No\">Negative</option>\r\n                  </select>\r\n                  {errors.hepatitisCTestResult !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>Others</h5>\r\n              </LabelRibbon>\r\n              <br /> <br />\r\n              {props.patientObj.riskStratificationResponseDto !== null &&\r\n                props.patientObj.riskStratificationResponseDto\r\n                  .communityEntryPoint !== \"\" && (\r\n                  <>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Longitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"longitude\"\r\n                          id=\"longitude\"\r\n                          value={others.longitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Latitude</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"latitude\"\r\n                          id=\"latitude\"\r\n                          value={others.latitude}\r\n                          onChange={handleInputChangeOthers}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Adhoc Code</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adhocCode\"\r\n                    id=\"adhocCode\"\r\n                    value={others.adhocCode}\r\n                    onChange={handleInputChangeOthers}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {patientAge <= 15 ? (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"left arrow\"\r\n                        labelPosition=\"left\"\r\n                        style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                        onClick={() =>\r\n                          handleItemClick(\r\n                            \"pre-test-counsel\",\r\n                            \"pre-test-counsel\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </>\r\n                  )}\r\n\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["671","672","673","674","675","676","677"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    //console.log(\"data1\", props.patientObj)\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\", \r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            knowledgeAssessment: {},\r\n            personId: patientID,\r\n            riskAssessment: {},\r\n            stiScreening: {},\r\n            tbScreening: {},\r\n            sexPartnerRiskAssessment:{}\r\n        }\r\n    )\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\", \r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n        }\r\n    )\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n                \r\n        }\r\n    )\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough :\"\",\r\n            weightLoss  :\"\",\r\n            lymphadenopathy :\"\", \r\n            fever :\"\",  \r\n            nightSweats :\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\r\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\r\n                knowledgeAssessment.previousTestedHIVNegative='true'\r\n            }else{\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \r\n            } \r\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\r\n        }\r\n    }, [props.patientObj]);\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    \r\n    const handleInputChangeRiskAssessment = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n   \r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    \r\n    const [tbCount, settbCount] = useState(0);\r\n    const handleInputChangeTbScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        \r\n        if(e.target.value==='true') {\r\n            const newcount = tbCount +1\r\n            if(newcount>=0 && newcount <=5){\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        if(e.target.value==='false') {\r\n            const newcount = tbCount -1\r\n            //settbCount(newcount)\r\n            //console.log(newcount)\r\n            if(newcount <=0 ){\r\n                \r\n                settbCount(0)\r\n            }else{\r\n                settbCount(newcount)\r\n            }\r\n        } \r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \r\n    }\r\n     /*****  Validation  */\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\r\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\r\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\r\n \r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\r\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\r\n            \r\n            \r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\r\n\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\r\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\r\n\r\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n            setSaving(true);\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n        }\r\n    }\r\n    //console.log(riskAssessmentPartner)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n                     \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        {\r\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\r\n                                        }\r\n                                        \r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {sex ==='Female' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                             )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {tbCount}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\r\n                                 <div className=\"form-group  col-md-4\">\r\n                                 <FormGroup>\r\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\r\n                                     <select\r\n                                         className=\"form-control\"\r\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                         onChange={handleInputChangeRiskAssessment}\r\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                     >\r\n                                         <option value={\"\"}></option>\r\n                                         <option value=\"true\">Yes</option>\r\n                                         <option value=\"false\">No</option>\r\n                                         \r\n                                     </select>\r\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                     ) : \"\" }\r\n                                 </FormGroup>\r\n                             </div>\r\n                            )}\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst BasicInfo = (props) => {\r\n  console.log(\"basic\", props.patientObj.clientCode);\r\n  console.log(\"############# Continues model\")\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  //const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  let temp = { ...errors };\r\n  const [clientCodeetail, setclientCodeetail] = useState(\"\");\r\n  const [clientCodeetail2, setclientCodeetail2] = useState(\"\");\r\n  const [clientCodeCheck, setClientCodeCheck] = useState(\"\");\r\n  const [createdCode, setCreatedCode] = useState(\"\");\r\n  const [facilityCode, setFacilityCode] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(null);\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    personId: props.patientObj.personId,\r\n    clientCode:\r\n      props.patientObj && props.patientObj.clientCode\r\n        ? props.patientObj.clientCode\r\n        : \"\",\r\n    breastFeeding:\r\n      props.patientObj && props.patientObj.breastFeeding\r\n        ? props.patientObj.breastFeeding\r\n        : \"\",\r\n    dateVisit:\r\n      props.patientObj && props.patientObj.dateVisit\r\n        ? props.patientObj.dateVisit\r\n        : \"\",\r\n    firstTimeVisit:\r\n      props.patientObj && props.patientObj.firstTimeVisit\r\n        ? props.patientObj.firstTimeVisit\r\n        : \"\",\r\n    indexClient:\r\n      props.patientObj && props.patientObj.indexClient\r\n        ? props.patientObj.indexClient\r\n        : \"\",\r\n    numChildren:\r\n      props.patientObj && props.patientObj.numChildren\r\n        ? props.patientObj.numChildren\r\n        : \"\",\r\n    numWives:\r\n      props.patientObj && props.patientObj.numWives\r\n        ? props.patientObj.numWives\r\n        : \"\",\r\n    pregnant:\r\n      props.patientObj && props.patientObj.pregnant\r\n        ? props.patientObj.pregnant\r\n        : \"\",\r\n    previouslyTested: props.patientObj ? props.patientObj.previouslyTested : \"\",\r\n    referredFrom: props.patientObj ? props.patientObj.referredFrom : \"\",\r\n    riskAssessment:\r\n      props.patientObj && props.patientObj.riskAssessment\r\n        ? props.patientObj.riskAssessment\r\n        : {},\r\n    riskStratificationCode:\r\n      props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n    targetGroup:\r\n      props.patientObj && props.patientObj.targetGroup\r\n        ? props.patientObj.targetGroup\r\n        : \"\",\r\n    testingSetting: props.patientObj ? props.patientObj.testingSetting : \"\",\r\n    typeCounseling: props.patientObj ? props.patientObj.typeCounseling : \"\",\r\n    relationWithIndexClient: props.patientObj\r\n      ? props.patientObj.relationWithIndexClient\r\n      : \"\",\r\n    indexClientCode: \"\",\r\n  });\r\n\r\n  const CreateClientCode = () => {\r\n    let facilityShortCode = \"\";\r\n    axios\r\n      .get(`${baseUrl}hts/get-facility-code`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log('Response Facility Short Code **** ', response.data);\r\n        setFacilityCode(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let visitDate = new Date(props.patientObj.dateVisit);\r\n\r\n    let modality = props.patientObj.modality;\r\n    let modalityCode = \"\";\r\n    if (modality?.includes(\"STI\")) {\r\n      modalityCode = \"STI\";\r\n    } else if (modality?.includes(\"EMERGENCY\")) {\r\n      modalityCode = \"EME\";\r\n    } else if (modality?.includes(\"INDEX\")) {\r\n      modalityCode = \"IND\";\r\n    } else if (modality?.includes(\"INPATIENT\")) {\r\n      modalityCode = \"INP\";\r\n    } else if (modality?.includes(\"PMTCT\")) {\r\n      modalityCode = \"PMTCT\";\r\n    } else if (modality?.includes(\"TB\")) {\r\n      modalityCode = \"TB\";\r\n    } else if (modality?.includes(\"VCT\")) {\r\n      modalityCode = \"VCT\";\r\n    } else if (modality?.includes(\"MOBILE\")) {\r\n      modalityCode = \"MOB\";\r\n    } else if (modality?.includes(\"SNS\")) {\r\n      modalityCode = \"SNS\";\r\n    } else if (modality?.includes(\"OTHER\")) {\r\n      modalityCode = \"OTH\";\r\n    }\r\n\r\n    let month = visitDate.getMonth();\r\n    let year = visitDate.getFullYear();\r\n    let codeCreated =\r\n      \"C\" + facilityCode + \"/\" + modalityCode + \"/\" + month + \"/\" + year + \"/\";\r\n    setCreatedCode(codeCreated);\r\n    setObjValues({ ...objValues, clientCode: createdCode });\r\n    //setObjValues({ ...objValues, clientCode: props.clientCode });\r\n    // console.log('Created Code **** ', createdCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"############# Continues model\")\r\n\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    setObjValues({\r\n      ...props.patientObj,\r\n      clientCode: props.patientObj.clientCode,\r\n    });\r\n    CreateClientCode();\r\n  }, [props.patientObj, facilityCode]);\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"indexClientCode\" && e.target.value !== \"\") {\r\n      async function getIndexClientCode() {\r\n        const indexClientCode = e.target.value;\r\n        const response = await axios.get(\r\n          `${baseUrl}hts/client/${indexClientCode}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== \"Record Not Found\") {\r\n          setclientCodeetail2(\"\");\r\n          setclientCodeetail(response.data);\r\n        } else {\r\n          setclientCodeetail(\"\");\r\n          setclientCodeetail2(response.data);\r\n        }\r\n      }\r\n      getIndexClientCode();\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\";\r\n    temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested = objValues.previouslyTested\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit = objValues.firstTimeVisit\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  //checkClientCode\r\n  //   const checkClientCode = (e) => {\r\n  //     async function getIndexClientCode() {\r\n  //       const indexClientCode = objValues.clientCode;\r\n  //       const response = await axios.get(\r\n  //         `${baseUrl}hts/client/${indexClientCode}`,\r\n  //         {\r\n  //           headers: {\r\n  //             Authorization: `Bearer ${token}`,\r\n  //             \"Content-Type\": \"text/plain\",\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // if(response.data!=='Record Not Found'){\r\n  //       //     setClientCodeCheck(\"Client code already exist\")\r\n  //       // }else{\r\n  //       //     setClientCodeCheck(\"\")\r\n  //       // }\r\n  //     }\r\n  //     getIndexClientCode();\r\n  //   };\r\n  //checkClientCode\r\n  const checkClientCode = (e) => {\r\n    let code = \"\";\r\n    if (e.target.name === \"serialNumber\") {\r\n      code = createdCode + e.target.value;\r\n      setCreatedCode(code);\r\n      console.log(\"Code created is &&&& \", createdCode);\r\n      setObjValues({ ...objValues, clientCode: code });\r\n    }\r\n    async function getIndexClientCode() {\r\n      const indexClientCode = objValues.clientCode;\r\n      console.log(indexClientCode);\r\n      const response = await axios.get(\r\n        `${baseUrl}hts/client/${indexClientCode}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"text/plain\",\r\n          },\r\n        }\r\n      );\r\n    }\r\n    getIndexClientCode();\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const patientForm = {\r\n      clientCode: objValues.clientCode,\r\n      dateVisit: objValues.dateVisit,\r\n      extra: {},\r\n      firstTimeVisit: objValues.firstTimeVisit,\r\n      indexClient: objValues.indexClient,\r\n      numChildren: objValues.numChildren,\r\n      numWives: objValues.numWives,\r\n      personId: props.patientObject.personId,\r\n      hospitalNumber: objValues.clientCode,\r\n      previouslyTested: objValues.previouslyTested,\r\n      referredFrom: objValues.referredFrom,\r\n      targetGroup: objValues.targetGroup,\r\n      testingSetting: objValues.testingSetting,\r\n      typeCounseling: objValues.typeCounseling,\r\n      breastFeeding: objValues.breastFeeding,\r\n      pregnant: objValues.pregnant,\r\n      indexClientCode: objValues.indexClientCode,\r\n      relationWithIndexClient: objValues.relationWithIndexClient,\r\n      riskStratificationCode:\r\n        props.extra && props.extra.code !== \"\" ? props.extra.code : \"\",\r\n    };\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      axios\r\n        .post(`${baseUrl}hts`, patientForm, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"HTS Test successful\");\r\n          if (props.patientAge > 15) {\r\n            handleItemClick(\"pre-test-counsel\", \"basic\");\r\n          } else {\r\n            handleItemClick(\"hiv-test\", \"basic\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"All fields are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM </h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Group <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    disabled\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    {/* <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))} */}\r\n                    {(props.sex === \"Female\" || props.sex === \"female\") && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"MSM\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                      </>\r\n                    )}\r\n\r\n                    {(props.sex === \"Male\" || props.sex === \"male\") && (\r\n                      <>\r\n                        {\" \"}\r\n                        {kP\r\n                          .filter((x) => x.display !== \"FSW\")\r\n                          .map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}{\" \"}\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Serial Number <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"serialNumber\"\r\n                    id=\"serialNumber\"\r\n                    value={serialNumber}\r\n                    //value={Math.floor(Math.random() * 1093328)}\r\n                    onBlur={checkClientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Client Code <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"clientCode\"\r\n                    id=\"clientCode\"\r\n                    value={objValues.clientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    //readOnly={props.activePage.actionType === \"view\"}\r\n                  />\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>{errors.clientCode}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.referredFrom}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min={objValues.dateOfRegistration}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n\r\n              {props.patientAge > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {props.patientAge > 9 &&\r\n                (props.patientObject.gender === \"Male\" ||\r\n                  props.patientObject.gender === \"MALE\" ||\r\n                  props.patientObject.gender === \"male\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        min={0}\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Index Testing <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Relationship of the index client</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relationWithIndexClient\"\r\n                        id=\"relationWithIndexClient\"\r\n                        value={objValues.relationWithIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Index Client Code/ID</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"indexClientCode\"\r\n                        id=\"indexClientCode\"\r\n                        value={objValues.indexClientCode}\r\n                        onBlur={checkClientCode}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      {clientCodeCheck !== \"\" ? (\r\n                        <span className={classes.error}>{clientCodeCheck}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {(props.patientObject.gender === \"female\" ||\r\n                props.patientObject.gender === \"FEMALE\" ||\r\n                props.patientObject.gender === \"Female\") && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Pregnant Status</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        value={objValues.pregnant}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {pregnancyStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* objValues.pregnant === \"\" && (objValues.pregnant!== 73 || objValues.pregnant!== '73') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )*/}\r\n                </>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    First time visit <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Previously tested within the last 3 months{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Type of Counseling <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"risk\", \"risk\")}\r\n                  />\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    type=\"submit\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["698","699"],"import Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\n\r\n\r\nexport const NewlyEnrolledArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART '\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Newly Enrolled on ART by Age',\r\n        data: [\r\n            \r\n            { name: '25 + ', sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n        ]\r\n    }]\r\n};","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["700","701","702","703"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=()=>{\r\n      //window.location.reload(false);\r\n      props.setActivePage({...props.activePage, activePage:\"home\"})\r\n     \r\n    }\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["704","705","706","707","708","709","710","711"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["712","713","714","715","716","717","718","719","720","721","722","723","724"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst AddIndexContact = (props) => {\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [sexs, setSexs] = useState([]);\r\n  const [notificationContact, setNotificationContact] = useState([]);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  const [consent, setConsent] = useState([]);\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [elicitedCount, setElicitedCount] = useState(0);\r\n\r\n  let temp = { ...errors };\r\n  const [objValuesIndex, setObjValuesIndex] = useState({\r\n    htsClientId: null,\r\n    indexNotificationServicesElicitation: {},\r\n    personId: null,\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    phoneNumber: \"\",\r\n    altPhoneNumber: \"\",\r\n    sex: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n    physicalHurt: \"\",\r\n    threatenToHurt: \"\",\r\n    address: \"\",\r\n    hangOutSpots: \"\",\r\n    relativeToIndexClient: \"\",\r\n    currentlyLiveWithPartner: \"\",\r\n    partnerTestedPositive: \"\",\r\n    sexuallyUncomfortable: \"\",\r\n    notificationMethod: \"\",\r\n    datePartnerCameForTesting: \"\",\r\n    offeredIns: \"\",\r\n    acceptedIns: \"\",\r\n    elicited: \"\",\r\n    stateId: \"\",\r\n    lga: \"\",\r\n    dateTested: \"\",\r\n    currentHivStatus: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    Sex();\r\n    getStates();\r\n    NotificationContact();\r\n    IndexTesting();\r\n    Consent();\r\n    if (props.patientObj) {\r\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\r\n        setHivTestDate(props.patientObj.dateVisit);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  function getStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setObjValues({ ...objValues, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(\r\n          response.data.sort((x, y) => {\r\n            return x.id - y.id;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getStates = () => {\r\n    getStateByCountryId(\"1\");\r\n    setObjValues({ ...objValues, countryId: 1 });\r\n  };\r\n\r\n  //Get list of Genders from\r\n  const Sex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSexs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///CONSENT\tYes\t\ten\tCONSENT\r\n  const Consent = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setConsent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const NotificationContact = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotificationContact(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleItemClickPage = (page) => {\r\n    props.handleIClickPage(page);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: name });\r\n    }\r\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n    //     setHideNumChild(true)\r\n    // }else{\r\n    //     setHideNumChild(false)\r\n    // }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      objValues.age = age_now;\r\n\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setObjValues({ ...objValues, age: \"\" });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n\r\n    setObjValues({ ...objValues, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      objValues.isDateOfBirthEstimated = false;\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      objValues.isDateOfBirthEstimated = true;\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setObjValues({ ...objValues, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\r\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.isDateOfBirthEstimated =\r\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\r\n      axios\r\n        .post(`${baseUrl}index-elicitation`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          if (\r\n            objValues.offeredIns !== \"No\" &&\r\n            objValues.acceptedIns !== \"No\" &&\r\n            objValues.elicited !== \"No\"\r\n          ) {\r\n            setElicitedCount(elicitedCount + 1);\r\n            setObjValues({\r\n              firstName: \"\",\r\n              middleName: \"\",\r\n              lastName: \"\",\r\n              dob: \"\",\r\n              phoneNumber: \"\",\r\n              altPhoneNumber: \"\",\r\n              sex: \"\",\r\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\r\n              physicalHurt: \"\",\r\n              threatenToHurt: \"\",\r\n              address: \"\",\r\n              hangOutSpots: \"\",\r\n              relativeToIndexClient: \"\",\r\n              currentlyLiveWithPartner: \"\",\r\n              partnerTestedPositive: \"\",\r\n              sexuallyUncomfortable: \"\",\r\n              notificationMethod: \"\",\r\n              datePartnerCameForTesting: \"\",\r\n              age: \"\",\r\n              isDateOfBirthEstimated: false,\r\n              //offeredIns:\"\",\r\n              //acceptedIns:\"\",\r\n              //elicited: \"\",\r\n              stateId: \"\",\r\n              lga: \"\",\r\n              dateTested: \"\",\r\n              currentHivStatus: \"\",\r\n            });\r\n          }\r\n          //handleItemClickPage('list')\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>\r\n            Index Notification Services - Elicitation\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end  mr-2 mt-2\"\r\n              onClick={() => handleItemClickPage(\"list\")}\r\n              //startIcon={<FaUserPlus size=\"10\"/>}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                {\" \"}\r\n                Back To Client Index List\r\n              </span>\r\n            </Button>\r\n          </h2>\r\n          {elicitedCount === 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Badge badgeContent={elicitedCount} color=\"primary\">\r\n              Elicited Clients\r\n              <PersonIcon color=\"action\" />\r\n            </Badge>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"offeredIns\"\r\n                    id=\"offeredIns\"\r\n                    value={objValues.offeredIns}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {consent.map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.offeredIns !== \"\" ? (\r\n                    <span className={classes.error}>{errors.offeredIns}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"acceptedIns\"\r\n                      id=\"acceptedIns\"\r\n                      value={objValues.acceptedIns}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {consent.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.acceptedIns !== \"\" &&\r\n                objValues.acceptedIns !== \"No\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"elicited\"\r\n                        id=\"elicited\"\r\n                        value={objValues.elicited}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">First Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={objValues.firstName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Middle Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"middleName\"\r\n                        id=\"middleName\"\r\n                        value={objValues.middleName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Last Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={objValues.lastName}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-2 col-md-2\">\r\n                    <FormGroup>\r\n                      <Label>Date Of Birth</Label>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Actual\"\r\n                            name=\"dateOfBirth\"\r\n                            defaultChecked\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Actual\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"radio\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            value=\"Estimated\"\r\n                            name=\"dateOfBirth\"\r\n                            onChange={(e) => handleDateOfBirthChange(e)}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />{\" \"}\r\n                          Estimated\r\n                        </label>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Date</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dob\"\r\n                        id=\"dob\"\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        value={objValues.dob}\r\n                        onChange={handleDobChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Age</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        id=\"age\"\r\n                        value={objValues.age}\r\n                        disabled={ageDisabled}\r\n                        onChange={handleAgeChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Phone Number</Label>\r\n\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.phoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                      {errors.phoneNumber !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.phoneNumber}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Alternative Phone Number</Label>\r\n                      <PhoneInput\r\n                        containerStyle={{\r\n                          width: \"100%\",\r\n                          border: \"1px solid #014D88\",\r\n                        }}\r\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                        country={\"ng\"}\r\n                        placeholder=\"(234)7099999999\"\r\n                        minLength={10}\r\n                        name=\"altPhoneNumber\"\r\n                        id=\"altPhoneNumber\"\r\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                        value={objValues.altPhoneNumber}\r\n                        onChange={(e) => {\r\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\r\n                        }}\r\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Sex *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sex\"\r\n                        id=\"sex\"\r\n                        value={objValues.sex}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {sexs.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        State <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"state\"\r\n                        id=\"state\"\r\n                        onChange={getProvinces}\r\n                        value={objValues.stateId}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {states.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.stateId !== \"\" ? (\r\n                        <span className={classes.error}>{errors.stateId}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        LGA <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lga\"\r\n                        id=\"lga\"\r\n                        value={objValues.lga}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {provinces.map((value, index) => (\r\n                          <option key={index} value={value.id}>\r\n                            {value.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.lga !== \"\" ? (\r\n                        <span className={classes.error}>{errors.lga}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Address</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        value={objValues.address}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">Hang-out spots</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"hangOutSpots\"\r\n                        id=\"hangOutSpots\"\r\n                        value={objValues.hangOutSpots}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Relationship to Index Client *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"relativeToIndexClient\"\r\n                        id=\"relativeToIndexClient\"\r\n                        value={objValues.relativeToIndexClient}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {indexTesting.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Do you currently live with this partner? *</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentlyLiveWithPartner\"\r\n                        id=\"currentlyLiveWithPartner\"\r\n                        value={objValues.currentlyLiveWithPartner}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value={\"true\"}>Yes</option>\r\n                        <option value={\"false\"}>No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        As far as you know, has this partner ever tested\r\n                        positive for HIV *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"partnerTestedPositive\"\r\n                        id=\"partnerTestedPositive\"\r\n                        value={objValues.partnerTestedPositive}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever hit, kick, slapped or otherwise\r\n                        physical hurt you? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"physicalHurt\"\r\n                        id=\"physicalHurt\"\r\n                        value={objValues.physicalHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to hurt you? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"threatenToHurt\"\r\n                        id=\"threatenToHurt\"\r\n                        value={objValues.threatenToHurt}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Has this partner ever threatened to force you to do\r\n                        something sexually that made you uncomfortable ? *\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"sexuallyUncomfortable\"\r\n                        id=\"sexuallyUncomfortable\"\r\n                        value={objValues.sexuallyUncomfortable}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {consent.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Notification Method selected*</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"notificationMethod\"\r\n                        id=\"notificationMethod\"\r\n                        value={objValues.notificationMethod}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {notificationContact.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"\">\r\n                        If contract by which date will partner come for testing?\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"datePartnerCameForTesting\"\r\n                        id=\"datePartnerCameForTesting\"\r\n                        value={objValues.datePartnerCameForTesting}\r\n                        onChange={handleInputChange}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                      {errors.datePartnerComeForTesting !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.datePartnerComeForTesting}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Status of Index Client{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"currentHivStatus\"\r\n                        id=\"currentHivStatus\"\r\n                        value={objValues.currentHivStatus}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"negative\">Negative</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"unknown\">Unknown</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.currentHivStatus !== \"\" &&\r\n                    objValues.currentHivStatus === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"\">\r\n                            Date Tested?{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"dateTested\"\r\n                            id=\"dateTested\"\r\n                            value={objValues.dateTested}\r\n                            onChange={handleInputChange}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <Button\r\n                    content=\"Save\"\r\n                    icon=\"save\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddIndexContact;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js",["725","726"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n//import moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst HTSList = (props) => {\r\n  //const [patientList, setPatientList] = useState([])\r\n  //const [loading, setLoading] = useState(false)\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\r\n  useEffect(() => {\r\n    //patients()\r\n  }, []);\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find HTS Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"HTS Count\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}hts/only/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                //setLoading(false)\r\n                resolve({\r\n                  data:\r\n                    result?.data?.records &&\r\n                    result?.data?.records\r\n                      .filter((client) => {\r\n                        return client.clientCode !== null;\r\n                      })\r\n                      .map((row) => ({\r\n                        //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                        name: row.firstName + \" \" + row.surname,\r\n                        // hospital_number: row.hospitalNumber,\r\n                        clientCode: row.clientCode,\r\n                        gender: row.gender,\r\n                        age: row.age,\r\n                        count: (\r\n                          <Label color=\"blue\" size=\"mini\">\r\n                            {row.htsCount}\r\n                          </Label>\r\n                        ),\r\n                        actions: (\r\n                          <div>\r\n                            {row.htsCount >= 0 && (\r\n                              <>\r\n                                <Link\r\n                                  to={{\r\n                                    pathname: \"/patient-history\",\r\n                                    state: {\r\n                                      patientObject: row,\r\n                                      patientObj: row,\r\n                                      clientCode: row.clientCode,\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <ButtonGroup\r\n                                    variant=\"contained\"\r\n                                    aria-label=\"split button\"\r\n                                    style={{\r\n                                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                                      height: \"30px\",\r\n                                      width: \"215px\",\r\n                                    }}\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <Button\r\n                                      color=\"primary\"\r\n                                      size=\"small\"\r\n                                      aria-label=\"select merge strategy\"\r\n                                      aria-haspopup=\"menu\"\r\n                                      style={{\r\n                                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                                      }}\r\n                                    >\r\n                                      <MdDashboard />\r\n                                    </Button>\r\n                                    <Button\r\n                                      style={{\r\n                                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                                      }}\r\n                                    >\r\n                                      <span\r\n                                        style={{\r\n                                          fontSize: \"12px\",\r\n                                          color: \"#fff\",\r\n                                          fontWeight: \"bolder\",\r\n                                        }}\r\n                                      >\r\n                                        Patient Dashboard\r\n                                      </span>\r\n                                    </Button>\r\n                                  </ButtonGroup>\r\n                                </Link>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        ),\r\n                      })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n                //setLoading(false)\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HTSList;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"./ServicesProvided\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ClientRefferalForm = (props) => {\r\n  const classes = useStyles();\r\n  console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = {...errors};\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  // const [formInfo, setFormInfo] = useState({\r\n  //   dateVisit: \"\",\r\n  //   firstName: props?.patientObj?.personResponseDto?.firstName,\r\n  //   middleName:  props?.patientObj?.personResponseDto?.otherName,\r\n  //   lastName:  props?.patientObj?.personResponseDto?.surname,\r\n  //   hospitalNumber:props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n  //   countryId: \"1\",\r\n  //   stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n  //   province: Number(props?.patientObj?.personResponseDto?.address?.address[0]?.district) ,\r\n  //   address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n  //   landmark: \"\",\r\n  //   phoneNumber:  props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n  //   sexId:  props?.patientObj?.personResponseDto?.gender?.id,\r\n  //   dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   age:  \"\",\r\n  //   dateOfBirth:props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   hivStatus:props?.patientObj?.hivTestResult2 ? props?.patientObj?.hivTestResult2 :\r\n  //       props?.patientObj?.hivTestResult ? props?.patientObj?.hivTestResult : \"\",\r\n  //   referredFromFacility: \"\",\r\n  //   nameOfPersonReferringClient: \"\",\r\n  //   nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n  //   addressOfReferringFacility: \"\",\r\n  //   phoneNoOfReferringFacility: \"\",\r\n  //   referredTo: \"\",\r\n  //   nameOfContactPerson: \"\",\r\n  //   nameOfReceivingFacility: \"\",\r\n  //   addressOfReceivingFacility: \"\",\r\n  //   phoneNoOfReceivingFacility: \"\",\r\n  //   isDateOfBirthEstimated: false,\r\n  //   serviceNeeded: \"\",\r\n  //   comments: \"\",\r\n  //   receivingStateFacility: \"\",\r\n  //   receivingLgaFacility: \"\",\r\n  //   htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n  //   htsClientUuid:props && props.patientObj ? props.patientObj?.uuid : \"\"\r\n  // });\r\n  // const viewReferralInfo = () => {\r\n  //   axios\r\n  //       .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((response) => {\r\n  //         // setObjValues(response.data);\r\n  //         console.log(\" form information\", response.data);\r\n  //         // setFormInfo(response.data);\r\n  //         // setReceivingOrganization(response.data.receivingOrganization);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         //console.log(error);\r\n  //       });\r\n  // };\r\n  // useEffect(() => {\r\n  //   viewReferralInfo();\r\n  // }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    console.log(e.target.value);\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n          <div className=\"form-group  col-md-8\">\r\n            <FormGroup>\r\n              <Label>\r\n                Referral Type <span style={{ color: \"red\" }}> *</span>\r\n              </Label>\r\n              <select\r\n                  className=\"form-control\"\r\n                  name=\"contentDropDown\"\r\n                  id=\"contentDropDown\"\r\n                  onChange={handleContentChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n              >\r\n                <option value={\"\"}>Select Refarral form type</option>\r\n                <option value={\"showReferringUnit\"}>Referral form</option>\r\n                <option value={\"showServiceProviderUnit\"}>\r\n                  Service Provider form\r\n                </option>\r\n              </select>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <Card className={classes.root}>\r\n          {content.showReferringUnit\r\n              && <RefferralUnit\r\n                  patientObj={patientObj}\r\n                  // formInfo={formInfo}\r\n                  // row={props.row}\r\n                  handleClicked={props.handleClicked}\r\n              />}\r\n          {content.showServiceProviderUnit && (\r\n              <CardBody>\r\n                <ServicesProvided\r\n                    patientObj = {patientObj}\r\n                    // formInfo={props.formInfo}\r\n                    // row={props.row}\r\n                />\r\n              </CardBody>\r\n          )}\r\n          {/* recieving facility  */}\r\n        </Card>\r\n        <Modal\r\n            show={open}\r\n            toggle={toggle}\r\n            className=\"fade\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Notification!\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>Are you Sure of the Age entered?</h4>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n  );\r\n};\r\n\r\n\r\nexport default ClientRefferalForm;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js",["763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js",["807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\utility\\index.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js",["832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js",["862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js",["887","888","889","890"],"import React, { useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\n\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Button from '@material-ui/core/Button';\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport PNSList from \"./PNSlist\";\r\n\r\nconst PNSHistory = (props) => {\r\n  const [activePage, setActivePage] = useState(\"list\");\r\n  const handleIClickPage = (activeItem) => {\r\n    setActivePage(activeItem);\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleDone = (row, actionType) => {\r\n    props.setActivePage({\r\n      ...props.activePage,\r\n      activePage: \"home\",\r\n      activeObject: row,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={12}>\r\n          {activePage === \"list\" && (\r\n            <PNSList\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              handleIClickPage={handleIClickPage}\r\n              patientObj={props.patientObj}\r\n              handleItemClick={handleItemClick}\r\n              setRow={props.setRow}\r\n            />\r\n          )}\r\n          {activePage === \"add\" && (\r\n            <AddIndexContact\r\n              activePage={activePage}\r\n              setActivePage={setActivePage}\r\n              handleIClickPage={handleIClickPage}\r\n              patientObj={props.patientObj}\r\n            />\r\n          )}\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"form-group mb-3 col-md-12\">\r\n              <Button\r\n                content=\"Back\"\r\n                icon=\"left arrow\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                onClick={() =>\r\n                  handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                }\r\n              />\r\n              <Button\r\n                content=\"Done\"\r\n                icon=\"list\"\r\n                labelPosition=\"left\"\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                onClick={() => handleDone()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PNSHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js",["891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\utils\\index.js",["917","918"],"export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate(); // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      if (monthGap > 0) {\r\n        return assumedAge;\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge;\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n        if (dateGap > 0) {\r\n          return assumedAge;\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge;\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js",["919","920","921","922","923"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PNSList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"pns\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-pns\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(\r\n        `${baseUrl}hts-personal-notification-service/${recordSelected.id}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>Add New PNS </span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client contact\"\r\n          columns={[\r\n            { title: \"Partner Name\", field: \"date\" },\r\n            { title: \"Partner ID\", field: \"age\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Partner Address\", field: \"address\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.htsClientInformation.partnerName,\r\n              age: row.partnerId,\r\n              // phone: row.phoneNumber,\r\n              address: row.htsClientInformation.partnerAddress,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                        style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                        primary\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown\r\n                          item\r\n                          text=\"Action\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => LoadViewPage(row, \"view\")}\r\n                            >\r\n                              {\" \"}\r\n                              <Icon name=\"eye\" />\r\n                              View\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"update\")}\r\n                            >\r\n                              <Icon name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                              <Icon name=\"delete\" />\r\n                              Delete\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PNSList;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js",["924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"../../NewRegistration/ServicesProvided\";\r\nimport RefferalForm from \"./RefferalUnit\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewClientReferral = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  const [formInfo, setFormInfo] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: \"\",\r\n    comments: \"\",\r\n    receivingStateFacility: \"\",\r\n    receivingLgaFacility: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  const viewReferralInfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFormInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    viewReferralInfo();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group  col-md-8\">\r\n          <FormGroup>\r\n            <Label>\r\n              Referral Type <span style={{ color: \"red\" }}> *</span>\r\n            </Label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"contentDropDown\"\r\n              id=\"contentDropDown\"\r\n              onChange={handleContentChange}\r\n              style={{\r\n                border: \"1px solid #014D88\",\r\n                borderRadius: \"0.2rem\",\r\n              }}\r\n            >\r\n              <option value={\"\"}>Select Refarral form type</option>\r\n              <option value={\"showReferringUnit\"}>Referral form</option>\r\n              <option value={\"showServiceProviderUnit\"}>\r\n                Service Provider form\r\n              </option>\r\n            </select>\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <Card className={classes.root}>\r\n        {content.showReferringUnit && (\r\n          <RefferralUnit\r\n            patientObj={patientObj}\r\n            formInfo={formInfo}\r\n            row={props.row}\r\n            handleItemClick={props.handleItemClick}\r\n            setCompleted={props.setCompleted}\r\n            completed={props.completed}\r\n          />\r\n        )}\r\n        {content.showServiceProviderUnit && (\r\n          <CardBody>\r\n            <ServicesProvided\r\n              patientObj={patientObj}\r\n              formInfo={formInfo}\r\n              row={props.row}\r\n              handleItemClick={props.handleItemClick}\r\n              etCompleted={props.setCompleted}\r\n              completed={props.completed}\r\n            />\r\n          </CardBody>\r\n        )}\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewClientReferral;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js",["957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ServicesProvided.js",["989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js",["1013"],"import React, {Fragment, useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PNSList from \"../../NewRegistration/PartnerNotificationServices/PNSlist\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport ClientRerralList from \"./ClientRerralList\";\r\n\r\nconst ClientReferralHistory = (props) => {\r\n    const [activePage, setActivePage] = useState(\"list\");\r\n    const handleIClickPage = (activeItem) => {\r\n        setActivePage(activeItem);\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const handleDone = (row, actionType) => {\r\n        props.setActivePage({\r\n            ...props.activePage,\r\n            activePage: \"home\",\r\n            activeObject: row,\r\n            actionType: actionType,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {activePage === \"list\" && (\r\n                        <ClientRerralList\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                            handleItemClick={handleItemClick}\r\n                            setRow={props.setRow}\r\n                        />\r\n                    )}\r\n                    {activePage === \"add\" && (\r\n                        <AddIndexContact\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                        />\r\n                    )}\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button\r\n                                content=\"Back\"\r\n                                icon=\"left arrow\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                                onClick={() =>\r\n                                    handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                                }\r\n                            />\r\n                            <Button\r\n                                content=\"Done\"\r\n                                icon=\"list\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                                onClick={() => handleDone()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClientReferralHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js",["1014","1015","1016","1017"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js",["1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js",["1066","1067","1068","1069","1070"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../../../api\";\r\nimport { token as token } from \"./../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FamilyIndexHistory = (props) => {\r\n  let history = useHistory();\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFamilyIndexList([response.data]);\r\n          props.handleItemClick(\"fit-history\");\r\n        } else {\r\n          setFamilyIndexList([]);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListoFFamilyIndexInfo();\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-fit\");\r\n    props.setAction(actionType);\r\n  };\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}hts-family-index-testing/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        getListoFFamilyIndexInfo();\r\n\r\n        toggle();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group mb-3 col-md-12\">\r\n          {console.log(familyIndexList)}\r\n          {familyIndexList.length < 1 && (\r\n            <Button\r\n              content=\"Add New form\"\r\n              icon=\"left add\"\r\n              labelPosition=\"left\"\r\n              style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n              onClick={() => props.handleItemClick(\"fit\")}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            content=\"Done\"\r\n            icon=\"list\"\r\n            labelPosition=\"left\"\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            onClick={() => handleDone()}\r\n          /> */}\r\n        </div>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          // title=''\r\n          columns={[\r\n            // { title: \"HTS ID\", field: \"id\" },\r\n            { title: \"Family Index Client\", field: \"date\" },\r\n            { title: \"Date of Birth\", field: \"pre\" },\r\n            { title: \"Recency Test\", field: \"rencency\" },\r\n            // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={familyIndexList.map((row) => ({\r\n            // id: row.id,\r\n            date: row.indexClientId,\r\n            pre: row.dateOfBirth,\r\n            rencency: row.recencyTesting,\r\n\r\n            //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n            actions: (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    {/* <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  > */}\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* </Button> */}\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          }))}\r\n          options={{\r\n            toolbar: false,\r\n            search: false,\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete ?\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyIndexHistory;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ClientReferral\\RefferalUnit.js",["1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js",["1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js",["1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js",["1163","1164","1165","1166","1167","1168","1169","1170","1171"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\UserInformationCard.js",["1172","1173","1174","1175","1176","1177","1178","1179","1180"],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\palladium\\HTS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPostTestAssessment.js",["1181","1182","1183","1184","1185","1186","1187","1188","1189"],{"ruleId":"1190","severity":1,"message":"1191","line":4,"column":10,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":23},{"ruleId":"1194","replacedBy":"1195"},{"ruleId":"1196","replacedBy":"1197"},{"ruleId":"1190","severity":1,"message":"1198","line":3,"column":19,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1199","line":10,"column":10,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1200","line":10,"column":15,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1201","line":2,"column":10,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1202","line":6,"column":8,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1204","line":5,"column":26,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1205","line":8,"column":16,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1206","line":12,"column":22,"nodeType":"1192","messageId":"1193","endLine":12,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1207","line":22,"column":8,"nodeType":"1192","messageId":"1193","endLine":22,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1208","line":31,"column":7,"nodeType":"1192","messageId":"1193","endLine":31,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1209","line":46,"column":10,"nodeType":"1192","messageId":"1193","endLine":46,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1210","line":46,"column":18,"nodeType":"1192","messageId":"1193","endLine":46,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1211","line":51,"column":10,"nodeType":"1192","messageId":"1193","endLine":51,"endColumn":23},{"ruleId":"1212","severity":1,"message":"1213","line":265,"column":6,"nodeType":"1214","endLine":265,"endColumn":8,"suggestions":"1215"},{"ruleId":"1216","severity":1,"message":"1217","line":335,"column":34,"nodeType":"1218","messageId":"1219","endLine":335,"endColumn":36},{"ruleId":"1190","severity":1,"message":"1220","line":70,"column":10,"nodeType":"1192","messageId":"1193","endLine":70,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":70,"column":21,"nodeType":"1192","messageId":"1193","endLine":70,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1222","line":73,"column":10,"nodeType":"1192","messageId":"1193","endLine":73,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1223","line":77,"column":6,"nodeType":"1214","endLine":77,"endColumn":8,"suggestions":"1224"},{"ruleId":"1216","severity":1,"message":"1217","line":125,"column":25,"nodeType":"1218","messageId":"1219","endLine":125,"endColumn":27},{"ruleId":"1216","severity":1,"message":"1217","line":132,"column":25,"nodeType":"1218","messageId":"1219","endLine":132,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":30,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1204","line":5,"column":26,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1226","line":8,"column":10,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1206","line":12,"column":22,"nodeType":"1192","messageId":"1193","endLine":12,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1227","line":33,"column":8,"nodeType":"1192","messageId":"1193","endLine":33,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1228","line":34,"column":10,"nodeType":"1192","messageId":"1193","endLine":34,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1229","line":34,"column":24,"nodeType":"1192","messageId":"1193","endLine":34,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1230","line":48,"column":9,"nodeType":"1192","messageId":"1193","endLine":48,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1231","line":51,"column":10,"nodeType":"1192","messageId":"1193","endLine":51,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1232","line":67,"column":27,"nodeType":"1192","messageId":"1193","endLine":67,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1233","line":73,"column":9,"nodeType":"1192","messageId":"1193","endLine":73,"endColumn":21},{"ruleId":"1234","severity":1,"message":"1235","line":5,"column":10,"nodeType":"1236","messageId":"1237","endLine":5,"endColumn":24,"fix":"1238"},{"ruleId":"1190","severity":1,"message":"1201","line":26,"column":10,"nodeType":"1192","messageId":"1193","endLine":26,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":29,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1227","line":2,"column":8,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1239","line":4,"column":8,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1240","line":5,"column":52,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":56},{"ruleId":"1190","severity":1,"message":"1241","line":6,"column":13,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1242","line":8,"column":15,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1210","line":95,"column":20,"nodeType":"1192","messageId":"1193","endLine":95,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1243","line":96,"column":12,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1244","line":96,"column":20,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":29},{"ruleId":"1234","severity":1,"message":"1235","line":4,"column":10,"nodeType":"1236","messageId":"1237","endLine":4,"endColumn":24,"fix":"1245"},{"ruleId":"1212","severity":1,"message":"1246","line":41,"column":6,"nodeType":"1214","endLine":41,"endColumn":42,"suggestions":"1247"},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1205","line":13,"column":10,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1250","line":24,"column":19,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1251","line":113,"column":10,"nodeType":"1192","messageId":"1193","endLine":113,"endColumn":26},{"ruleId":"1212","severity":1,"message":"1252","line":179,"column":6,"nodeType":"1214","endLine":179,"endColumn":21,"suggestions":"1253"},{"ruleId":"1216","severity":1,"message":"1217","line":342,"column":24,"nodeType":"1218","messageId":"1219","endLine":342,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":345,"column":31,"nodeType":"1218","messageId":"1219","endLine":345,"endColumn":33},{"ruleId":"1216","severity":1,"message":"1217","line":463,"column":47,"nodeType":"1218","messageId":"1219","endLine":463,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1254","line":87,"column":9,"nodeType":"1192","messageId":"1193","endLine":87,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1255","line":96,"column":21,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":33},{"ruleId":"1212","severity":1,"message":"1256","line":172,"column":6,"nodeType":"1214","endLine":172,"endColumn":48,"suggestions":"1257"},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":6,"column":16,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1258","line":10,"column":10,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1260","line":24,"column":10,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1254","line":100,"column":9,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1261","line":104,"column":10,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1262","line":104,"column":24,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1263","line":108,"column":10,"nodeType":"1192","messageId":"1193","endLine":108,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1264","line":122,"column":27,"nodeType":"1192","messageId":"1193","endLine":122,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1265","line":125,"column":24,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":39},{"ruleId":"1216","severity":1,"message":"1217","line":131,"column":25,"nodeType":"1218","messageId":"1219","endLine":131,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1266","line":164,"column":9,"nodeType":"1192","messageId":"1193","endLine":164,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1267","line":308,"column":9,"nodeType":"1192","messageId":"1193","endLine":308,"endColumn":26},{"ruleId":"1212","severity":1,"message":"1268","line":397,"column":6,"nodeType":"1214","endLine":397,"endColumn":70,"suggestions":"1269"},{"ruleId":"1190","severity":1,"message":"1270","line":632,"column":13,"nodeType":"1192","messageId":"1193","endLine":632,"endColumn":21},{"ruleId":"1216","severity":1,"message":"1217","line":676,"column":24,"nodeType":"1218","messageId":"1219","endLine":676,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":679,"column":31,"nodeType":"1218","messageId":"1219","endLine":679,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1271","line":700,"column":9,"nodeType":"1192","messageId":"1193","endLine":700,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":738,"column":47,"nodeType":"1218","messageId":"1219","endLine":738,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1272","line":754,"column":11,"nodeType":"1192","messageId":"1193","endLine":754,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1273","line":9,"column":3,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":8},{"ruleId":"1190","severity":1,"message":"1240","line":10,"column":3,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":7},{"ruleId":"1190","severity":1,"message":"1242","line":13,"column":16,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1250","line":23,"column":19,"nodeType":"1192","messageId":"1193","endLine":23,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1274","line":97,"column":27,"nodeType":"1192","messageId":"1193","endLine":97,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1275","line":128,"column":28,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1276","line":129,"column":24,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":38},{"ruleId":"1212","severity":1,"message":"1277","line":213,"column":6,"nodeType":"1214","endLine":213,"endColumn":24,"suggestions":"1278"},{"ruleId":"1190","severity":1,"message":"1255","line":222,"column":21,"nodeType":"1192","messageId":"1193","endLine":222,"endColumn":33},{"ruleId":"1279","severity":1,"message":"1280","line":256,"column":5,"nodeType":"1281","messageId":"1219","endLine":256,"endColumn":36},{"ruleId":"1279","severity":1,"message":"1282","line":257,"column":5,"nodeType":"1281","messageId":"1219","endLine":257,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1255","line":112,"column":21,"nodeType":"1192","messageId":"1193","endLine":112,"endColumn":33},{"ruleId":"1283","severity":1,"message":"1284","line":237,"column":32,"nodeType":"1285","messageId":"1286","endLine":237,"endColumn":76,"fix":"1287"},{"ruleId":"1283","severity":1,"message":"1284","line":244,"column":32,"nodeType":"1285","messageId":"1286","endLine":244,"endColumn":73,"fix":"1288"},{"ruleId":"1283","severity":1,"message":"1284","line":252,"column":32,"nodeType":"1285","messageId":"1286","endLine":252,"endColumn":70,"fix":"1289"},{"ruleId":"1283","severity":1,"message":"1284","line":259,"column":32,"nodeType":"1285","messageId":"1286","endLine":259,"endColumn":69,"fix":"1290"},{"ruleId":"1283","severity":1,"message":"1284","line":266,"column":32,"nodeType":"1285","messageId":"1286","endLine":266,"endColumn":69,"fix":"1291"},{"ruleId":"1283","severity":1,"message":"1284","line":268,"column":32,"nodeType":"1285","messageId":"1286","endLine":268,"endColumn":62,"fix":"1292"},{"ruleId":"1212","severity":1,"message":"1293","line":296,"column":6,"nodeType":"1214","endLine":301,"endColumn":4,"suggestions":"1294"},{"ruleId":"1295","severity":1,"message":"1296","line":348,"column":5,"nodeType":"1297","messageId":"1298","endLine":353,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":349,"column":28,"nodeType":"1218","messageId":"1219","endLine":349,"endColumn":30},{"ruleId":"1295","severity":1,"message":"1296","line":355,"column":5,"nodeType":"1297","messageId":"1298","endLine":358,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":356,"column":28,"nodeType":"1218","messageId":"1219","endLine":356,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":360,"column":47,"nodeType":"1218","messageId":"1219","endLine":360,"endColumn":49},{"ruleId":"1299","severity":1,"message":"1300","line":792,"column":31,"nodeType":"1301","messageId":"1302","endLine":792,"endColumn":65},{"ruleId":"1190","severity":1,"message":"1303","line":3,"column":10,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1304","line":3,"column":20,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1199","line":3,"column":25,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1305","line":5,"column":8,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1226","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1306","line":9,"column":8,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1307","line":10,"column":8,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1308","line":11,"column":9,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1309","line":13,"column":7,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1310","line":91,"column":7,"nodeType":"1192","messageId":"1193","endLine":91,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":6,"column":16,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1311","line":99,"column":10,"nodeType":"1192","messageId":"1193","endLine":99,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1312","line":375,"column":12,"nodeType":"1192","messageId":"1193","endLine":375,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1313","line":381,"column":12,"nodeType":"1192","messageId":"1193","endLine":381,"endColumn":28},{"ruleId":"1216","severity":1,"message":"1217","line":437,"column":47,"nodeType":"1218","messageId":"1219","endLine":437,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1314","line":529,"column":6,"nodeType":"1214","endLine":529,"endColumn":27,"suggestions":"1315"},{"ruleId":"1212","severity":1,"message":"1314","line":551,"column":6,"nodeType":"1214","endLine":551,"endColumn":31,"suggestions":"1316"},{"ruleId":"1212","severity":1,"message":"1314","line":568,"column":6,"nodeType":"1214","endLine":568,"endColumn":29,"suggestions":"1317"},{"ruleId":"1212","severity":1,"message":"1314","line":580,"column":6,"nodeType":"1214","endLine":580,"endColumn":29,"suggestions":"1318"},{"ruleId":"1212","severity":1,"message":"1314","line":588,"column":6,"nodeType":"1214","endLine":588,"endColumn":33,"suggestions":"1319"},{"ruleId":"1190","severity":1,"message":"1320","line":3,"column":20,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1250","line":8,"column":18,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1321","line":3,"column":8,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1248","line":4,"column":38,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":4,"column":54,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":7,"column":16,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1249","line":8,"column":8,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1258","line":11,"column":10,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1226","line":14,"column":10,"nodeType":"1192","messageId":"1193","endLine":14,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1322","line":14,"column":28,"nodeType":"1192","messageId":"1193","endLine":14,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":22,"column":8,"nodeType":"1192","messageId":"1193","endLine":22,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1323","line":24,"column":10,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1254","line":96,"column":9,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1263","line":104,"column":10,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":16},{"ruleId":"1212","severity":1,"message":"1324","line":167,"column":6,"nodeType":"1214","endLine":167,"endColumn":24,"suggestions":"1325"},{"ruleId":"1216","severity":1,"message":"1217","line":289,"column":47,"nodeType":"1218","messageId":"1219","endLine":289,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1273","line":3,"column":46,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":52,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":56},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":15,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1250","line":15,"column":18,"nodeType":"1192","messageId":"1193","endLine":15,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1255","line":104,"column":23,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":35},{"ruleId":"1212","severity":1,"message":"1277","line":184,"column":8,"nodeType":"1214","endLine":184,"endColumn":26,"suggestions":"1326"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":53,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1254","line":91,"column":11,"nodeType":"1192","messageId":"1193","endLine":91,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1255","line":102,"column":23,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":35},{"ruleId":"1212","severity":1,"message":"1256","line":193,"column":8,"nodeType":"1214","endLine":193,"endColumn":26,"suggestions":"1327"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":29,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1227","line":2,"column":8,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1239","line":4,"column":8,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1240","line":5,"column":52,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":56},{"ruleId":"1190","severity":1,"message":"1241","line":6,"column":13,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1242","line":8,"column":15,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1210","line":95,"column":20,"nodeType":"1192","messageId":"1193","endLine":95,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1243","line":96,"column":12,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1244","line":96,"column":20,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1250","line":24,"column":19,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1254","line":99,"column":9,"nodeType":"1192","messageId":"1193","endLine":99,"endColumn":16},{"ruleId":"1212","severity":1,"message":"1328","line":180,"column":6,"nodeType":"1214","endLine":180,"endColumn":24,"suggestions":"1329"},{"ruleId":"1216","severity":1,"message":"1217","line":385,"column":47,"nodeType":"1218","messageId":"1219","endLine":385,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":53,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1242","line":6,"column":15,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1330","line":88,"column":12,"nodeType":"1192","messageId":"1193","endLine":88,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1331","line":88,"column":26,"nodeType":"1192","messageId":"1193","endLine":88,"endColumn":41},{"ruleId":"1216","severity":1,"message":"1217","line":411,"column":51,"nodeType":"1218","messageId":"1219","endLine":411,"endColumn":53},{"ruleId":"1212","severity":1,"message":"1314","line":504,"column":8,"nodeType":"1214","endLine":504,"endColumn":29,"suggestions":"1332"},{"ruleId":"1212","severity":1,"message":"1314","line":526,"column":8,"nodeType":"1214","endLine":526,"endColumn":33,"suggestions":"1333"},{"ruleId":"1212","severity":1,"message":"1314","line":543,"column":8,"nodeType":"1214","endLine":543,"endColumn":31,"suggestions":"1334"},{"ruleId":"1212","severity":1,"message":"1314","line":555,"column":8,"nodeType":"1214","endLine":555,"endColumn":31,"suggestions":"1335"},{"ruleId":"1212","severity":1,"message":"1314","line":563,"column":8,"nodeType":"1214","endLine":563,"endColumn":35,"suggestions":"1336"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":6,"column":16,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1255","line":106,"column":21,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":33},{"ruleId":"1283","severity":1,"message":"1284","line":220,"column":32,"nodeType":"1285","messageId":"1286","endLine":220,"endColumn":76,"fix":"1337"},{"ruleId":"1283","severity":1,"message":"1284","line":227,"column":32,"nodeType":"1285","messageId":"1286","endLine":227,"endColumn":73,"fix":"1338"},{"ruleId":"1283","severity":1,"message":"1284","line":235,"column":32,"nodeType":"1285","messageId":"1286","endLine":235,"endColumn":70,"fix":"1339"},{"ruleId":"1283","severity":1,"message":"1284","line":242,"column":32,"nodeType":"1285","messageId":"1286","endLine":242,"endColumn":69,"fix":"1340"},{"ruleId":"1283","severity":1,"message":"1284","line":249,"column":32,"nodeType":"1285","messageId":"1286","endLine":249,"endColumn":69,"fix":"1341"},{"ruleId":"1283","severity":1,"message":"1284","line":251,"column":32,"nodeType":"1285","messageId":"1286","endLine":251,"endColumn":62,"fix":"1342"},{"ruleId":"1212","severity":1,"message":"1293","line":281,"column":6,"nodeType":"1214","endLine":286,"endColumn":4,"suggestions":"1343"},{"ruleId":"1295","severity":1,"message":"1296","line":335,"column":5,"nodeType":"1297","messageId":"1298","endLine":340,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":336,"column":28,"nodeType":"1218","messageId":"1219","endLine":336,"endColumn":30},{"ruleId":"1295","severity":1,"message":"1296","line":342,"column":5,"nodeType":"1297","messageId":"1298","endLine":345,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":343,"column":28,"nodeType":"1218","messageId":"1219","endLine":343,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":347,"column":47,"nodeType":"1218","messageId":"1219","endLine":347,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1320","line":3,"column":20,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1344","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1226","line":7,"column":10,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1250","line":9,"column":18,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1344","line":27,"column":10,"nodeType":"1192","messageId":"1193","endLine":27,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1303","line":29,"column":10,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1345","line":29,"column":28,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1346","line":29,"column":34,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1208","line":56,"column":7,"nodeType":"1192","messageId":"1193","endLine":56,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1347","line":102,"column":9,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":18},{"ruleId":"1212","severity":1,"message":"1348","line":108,"column":6,"nodeType":"1214","endLine":108,"endColumn":8,"suggestions":"1349"},{"ruleId":"1190","severity":1,"message":"1350","line":124,"column":9,"nodeType":"1192","messageId":"1193","endLine":124,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":2,"column":54,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1311","line":98,"column":10,"nodeType":"1192","messageId":"1193","endLine":98,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1351","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1352","line":105,"column":26,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":43},{"ruleId":"1212","severity":1,"message":"1353","line":152,"column":6,"nodeType":"1214","endLine":152,"endColumn":24,"suggestions":"1354"},{"ruleId":"1190","severity":1,"message":"1355","line":168,"column":12,"nodeType":"1192","messageId":"1193","endLine":168,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1356","line":260,"column":9,"nodeType":"1192","messageId":"1193","endLine":260,"endColumn":24},{"ruleId":"1216","severity":1,"message":"1217","line":347,"column":47,"nodeType":"1218","messageId":"1219","endLine":347,"endColumn":49},{"ruleId":"1216","severity":1,"message":"1217","line":354,"column":42,"nodeType":"1218","messageId":"1219","endLine":354,"endColumn":44},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":15,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1357","line":3,"column":35,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":44},{"ruleId":"1190","severity":1,"message":"1358","line":3,"column":46,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":54},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1308","line":9,"column":9,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1359","line":10,"column":9,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1360","line":13,"column":10,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1230","line":35,"column":9,"nodeType":"1192","messageId":"1193","endLine":35,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1361","line":36,"column":10,"nodeType":"1192","messageId":"1193","endLine":36,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1362","line":39,"column":9,"nodeType":"1192","messageId":"1193","endLine":39,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1356","line":42,"column":9,"nodeType":"1192","messageId":"1193","endLine":42,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1363","line":43,"column":11,"nodeType":"1192","messageId":"1193","endLine":43,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1364","line":44,"column":9,"nodeType":"1192","messageId":"1193","endLine":44,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1365","line":51,"column":9,"nodeType":"1192","messageId":"1193","endLine":51,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1366","line":53,"column":9,"nodeType":"1192","messageId":"1193","endLine":53,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1367","line":57,"column":9,"nodeType":"1192","messageId":"1193","endLine":57,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1239","line":2,"column":10,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1204","line":5,"column":26,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1226","line":8,"column":10,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1205","line":8,"column":16,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1206","line":11,"column":22,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1368","line":24,"column":8,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1208","line":29,"column":7,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1369","line":1,"column":28,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":36},{"ruleId":"1234","severity":1,"message":"1235","line":5,"column":10,"nodeType":"1236","messageId":"1237","endLine":5,"endColumn":24,"fix":"1370"},{"ruleId":"1190","severity":1,"message":"1344","line":28,"column":10,"nodeType":"1192","messageId":"1193","endLine":28,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1208","line":56,"column":7,"nodeType":"1192","messageId":"1193","endLine":56,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1344","line":27,"column":10,"nodeType":"1192","messageId":"1193","endLine":27,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1303","line":29,"column":10,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1345","line":29,"column":28,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1346","line":29,"column":34,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1208","line":56,"column":7,"nodeType":"1192","messageId":"1193","endLine":56,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1347","line":102,"column":9,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":18},{"ruleId":"1212","severity":1,"message":"1348","line":108,"column":6,"nodeType":"1214","endLine":108,"endColumn":8,"suggestions":"1371"},{"ruleId":"1190","severity":1,"message":"1350","line":124,"column":9,"nodeType":"1192","messageId":"1193","endLine":124,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":2,"column":54,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1372","line":100,"column":10,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1373","line":100,"column":28,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1374","line":101,"column":10,"nodeType":"1192","messageId":"1193","endLine":101,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1375","line":101,"column":31,"nodeType":"1192","messageId":"1193","endLine":101,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1356","line":107,"column":9,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1351","line":114,"column":10,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1352","line":114,"column":26,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":43},{"ruleId":"1212","severity":1,"message":"1353","line":155,"column":6,"nodeType":"1214","endLine":155,"endColumn":8,"suggestions":"1376"},{"ruleId":"1190","severity":1,"message":"1355","line":171,"column":12,"nodeType":"1192","messageId":"1193","endLine":171,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1377","line":290,"column":13,"nodeType":"1192","messageId":"1193","endLine":290,"endColumn":14},{"ruleId":"1216","severity":1,"message":"1217","line":305,"column":24,"nodeType":"1218","messageId":"1219","endLine":305,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":308,"column":31,"nodeType":"1218","messageId":"1219","endLine":308,"endColumn":33},{"ruleId":"1216","severity":1,"message":"1217","line":340,"column":47,"nodeType":"1218","messageId":"1219","endLine":340,"endColumn":49},{"ruleId":"1216","severity":1,"message":"1217","line":347,"column":42,"nodeType":"1218","messageId":"1219","endLine":347,"endColumn":44},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1250","line":24,"column":19,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1254","line":99,"column":9,"nodeType":"1192","messageId":"1193","endLine":99,"endColumn":16},{"ruleId":"1216","severity":1,"message":"1217","line":378,"column":47,"nodeType":"1218","messageId":"1219","endLine":378,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1255","line":106,"column":21,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":33},{"ruleId":"1283","severity":1,"message":"1284","line":242,"column":32,"nodeType":"1285","messageId":"1286","endLine":242,"endColumn":76,"fix":"1378"},{"ruleId":"1283","severity":1,"message":"1284","line":249,"column":32,"nodeType":"1285","messageId":"1286","endLine":249,"endColumn":73,"fix":"1379"},{"ruleId":"1283","severity":1,"message":"1284","line":257,"column":32,"nodeType":"1285","messageId":"1286","endLine":257,"endColumn":70,"fix":"1380"},{"ruleId":"1283","severity":1,"message":"1284","line":264,"column":32,"nodeType":"1285","messageId":"1286","endLine":264,"endColumn":69,"fix":"1381"},{"ruleId":"1283","severity":1,"message":"1284","line":271,"column":32,"nodeType":"1285","messageId":"1286","endLine":271,"endColumn":69,"fix":"1382"},{"ruleId":"1283","severity":1,"message":"1284","line":273,"column":32,"nodeType":"1285","messageId":"1286","endLine":273,"endColumn":62,"fix":"1383"},{"ruleId":"1212","severity":1,"message":"1293","line":275,"column":6,"nodeType":"1214","endLine":280,"endColumn":4,"suggestions":"1384"},{"ruleId":"1295","severity":1,"message":"1296","line":327,"column":5,"nodeType":"1297","messageId":"1298","endLine":332,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":328,"column":28,"nodeType":"1218","messageId":"1219","endLine":328,"endColumn":30},{"ruleId":"1295","severity":1,"message":"1296","line":334,"column":5,"nodeType":"1297","messageId":"1298","endLine":337,"endColumn":6},{"ruleId":"1216","severity":1,"message":"1217","line":335,"column":28,"nodeType":"1218","messageId":"1219","endLine":335,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":339,"column":47,"nodeType":"1218","messageId":"1219","endLine":339,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":29,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1227","line":2,"column":8,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1239","line":4,"column":8,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1240","line":5,"column":52,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":56},{"ruleId":"1190","severity":1,"message":"1241","line":6,"column":13,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1242","line":8,"column":15,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1210","line":95,"column":20,"nodeType":"1192","messageId":"1193","endLine":95,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1243","line":96,"column":12,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1244","line":96,"column":20,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1254","line":87,"column":9,"nodeType":"1192","messageId":"1193","endLine":87,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1255","line":98,"column":21,"nodeType":"1192","messageId":"1193","endLine":98,"endColumn":33},{"ruleId":"1212","severity":1,"message":"1256","line":186,"column":6,"nodeType":"1214","endLine":186,"endColumn":48,"suggestions":"1385"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":6,"column":16,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1311","line":98,"column":10,"nodeType":"1192","messageId":"1193","endLine":98,"endColumn":21},{"ruleId":"1216","severity":1,"message":"1217","line":390,"column":47,"nodeType":"1218","messageId":"1219","endLine":390,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1314","line":481,"column":6,"nodeType":"1214","endLine":481,"endColumn":27,"suggestions":"1386"},{"ruleId":"1212","severity":1,"message":"1314","line":503,"column":6,"nodeType":"1214","endLine":503,"endColumn":31,"suggestions":"1387"},{"ruleId":"1212","severity":1,"message":"1314","line":520,"column":6,"nodeType":"1214","endLine":520,"endColumn":29,"suggestions":"1388"},{"ruleId":"1212","severity":1,"message":"1314","line":532,"column":6,"nodeType":"1214","endLine":532,"endColumn":29,"suggestions":"1389"},{"ruleId":"1212","severity":1,"message":"1314","line":540,"column":6,"nodeType":"1214","endLine":540,"endColumn":33,"suggestions":"1390"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":16,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1273","line":3,"column":46,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":52,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":56},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":15,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1250","line":15,"column":18,"nodeType":"1192","messageId":"1193","endLine":15,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1255","line":105,"column":23,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":35},{"ruleId":"1212","severity":1,"message":"1277","line":185,"column":8,"nodeType":"1214","endLine":185,"endColumn":26,"suggestions":"1391"},{"ruleId":"1190","severity":1,"message":"1321","line":3,"column":8,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1248","line":4,"column":38,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":4,"column":54,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":7,"column":16,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1249","line":8,"column":8,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1258","line":11,"column":10,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1226","line":14,"column":10,"nodeType":"1192","messageId":"1193","endLine":14,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1322","line":14,"column":28,"nodeType":"1192","messageId":"1193","endLine":14,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":22,"column":8,"nodeType":"1192","messageId":"1193","endLine":22,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1323","line":24,"column":10,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1254","line":102,"column":9,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1263","line":109,"column":10,"nodeType":"1192","messageId":"1193","endLine":109,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1392","line":114,"column":10,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1393","line":115,"column":10,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1264","line":116,"column":27,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1265","line":119,"column":24,"nodeType":"1192","messageId":"1193","endLine":119,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1267","line":177,"column":9,"nodeType":"1192","messageId":"1193","endLine":177,"endColumn":26},{"ruleId":"1212","severity":1,"message":"1394","line":241,"column":6,"nodeType":"1214","endLine":241,"endColumn":38,"suggestions":"1395"},{"ruleId":"1216","severity":1,"message":"1217","line":386,"column":47,"nodeType":"1218","messageId":"1219","endLine":386,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1270","line":428,"column":13,"nodeType":"1192","messageId":"1193","endLine":428,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1306","line":1,"column":8,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1307","line":2,"column":8,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1320","line":3,"column":20,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1344","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1226","line":7,"column":10,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1250","line":9,"column":18,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1344","line":27,"column":10,"nodeType":"1192","messageId":"1193","endLine":27,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1303","line":29,"column":10,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1345","line":29,"column":28,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1346","line":29,"column":34,"nodeType":"1192","messageId":"1193","endLine":29,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1208","line":56,"column":7,"nodeType":"1192","messageId":"1193","endLine":56,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1347","line":102,"column":9,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":18},{"ruleId":"1212","severity":1,"message":"1348","line":108,"column":6,"nodeType":"1214","endLine":108,"endColumn":8,"suggestions":"1396"},{"ruleId":"1190","severity":1,"message":"1350","line":124,"column":9,"nodeType":"1192","messageId":"1193","endLine":124,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":2,"column":54,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1311","line":98,"column":10,"nodeType":"1192","messageId":"1193","endLine":98,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1351","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1352","line":105,"column":26,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":43},{"ruleId":"1212","severity":1,"message":"1353","line":152,"column":6,"nodeType":"1214","endLine":152,"endColumn":24,"suggestions":"1397"},{"ruleId":"1190","severity":1,"message":"1355","line":168,"column":12,"nodeType":"1192","messageId":"1193","endLine":168,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1356","line":260,"column":9,"nodeType":"1192","messageId":"1193","endLine":260,"endColumn":24},{"ruleId":"1216","severity":1,"message":"1217","line":312,"column":24,"nodeType":"1218","messageId":"1219","endLine":312,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":315,"column":31,"nodeType":"1218","messageId":"1219","endLine":315,"endColumn":33},{"ruleId":"1216","severity":1,"message":"1217","line":347,"column":47,"nodeType":"1218","messageId":"1219","endLine":347,"endColumn":49},{"ruleId":"1216","severity":1,"message":"1217","line":354,"column":42,"nodeType":"1218","messageId":"1219","endLine":354,"endColumn":44},{"ruleId":"1234","severity":1,"message":"1235","line":5,"column":10,"nodeType":"1236","messageId":"1237","endLine":5,"endColumn":24,"fix":"1398"},{"ruleId":"1190","severity":1,"message":"1201","line":26,"column":10,"nodeType":"1192","messageId":"1193","endLine":26,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":38,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1227","line":2,"column":8,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1273","line":3,"column":47,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":52},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1241","line":4,"column":13,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1204","line":8,"column":10,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1228","line":11,"column":10,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1229","line":11,"column":24,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":19,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":32,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1400","line":23,"column":8,"nodeType":"1192","messageId":"1193","endLine":23,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1401","line":103,"column":10,"nodeType":"1192","messageId":"1193","endLine":103,"endColumn":12},{"ruleId":"1190","severity":1,"message":"1402","line":103,"column":14,"nodeType":"1192","messageId":"1193","endLine":103,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1244","line":104,"column":18,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1403","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1404","line":105,"column":23,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1209","line":106,"column":10,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1210","line":106,"column":18,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1405","line":107,"column":7,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":11},{"ruleId":"1190","severity":1,"message":"1406","line":110,"column":10,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1407","line":110,"column":19,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1408","line":111,"column":10,"nodeType":"1192","messageId":"1193","endLine":111,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1409","line":111,"column":29,"nodeType":"1192","messageId":"1193","endLine":111,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1410","line":112,"column":10,"nodeType":"1192","messageId":"1193","endLine":112,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1411","line":112,"column":21,"nodeType":"1192","messageId":"1193","endLine":112,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1412","line":113,"column":10,"nodeType":"1192","messageId":"1193","endLine":113,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1413","line":113,"column":18,"nodeType":"1192","messageId":"1193","endLine":113,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1414","line":114,"column":10,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1415","line":114,"column":19,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1251","line":115,"column":10,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1416","line":115,"column":28,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1417","line":118,"column":10,"nodeType":"1192","messageId":"1193","endLine":118,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1248","line":4,"column":38,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":4,"column":54,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1249","line":8,"column":8,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":20,"column":19,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":20,"column":32,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":27,"column":8,"nodeType":"1192","messageId":"1193","endLine":27,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1408","line":122,"column":10,"nodeType":"1192","messageId":"1193","endLine":122,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1410","line":123,"column":10,"nodeType":"1192","messageId":"1193","endLine":123,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1419","line":124,"column":10,"nodeType":"1192","messageId":"1193","endLine":124,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1420","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1421","line":125,"column":34,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1220","line":128,"column":10,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":128,"column":21,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1422","line":132,"column":10,"nodeType":"1192","messageId":"1193","endLine":132,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1423","line":132,"column":31,"nodeType":"1192","messageId":"1193","endLine":132,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1424","line":138,"column":10,"nodeType":"1192","messageId":"1193","endLine":138,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1425","line":138,"column":41,"nodeType":"1192","messageId":"1193","endLine":138,"endColumn":73},{"ruleId":"1190","severity":1,"message":"1426","line":140,"column":21,"nodeType":"1192","messageId":"1193","endLine":140,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1427","line":146,"column":19,"nodeType":"1192","messageId":"1193","endLine":146,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1428","line":151,"column":10,"nodeType":"1192","messageId":"1193","endLine":151,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1429","line":151,"column":24,"nodeType":"1192","messageId":"1193","endLine":151,"endColumn":39},{"ruleId":"1279","severity":1,"message":"1430","line":270,"column":5,"nodeType":"1281","messageId":"1219","endLine":270,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1431","line":275,"column":10,"nodeType":"1192","messageId":"1193","endLine":275,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1432","line":276,"column":10,"nodeType":"1192","messageId":"1193","endLine":276,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1433","line":277,"column":10,"nodeType":"1192","messageId":"1193","endLine":277,"endColumn":21},{"ruleId":"1216","severity":1,"message":"1217","line":365,"column":49,"nodeType":"1218","messageId":"1219","endLine":365,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1434","line":480,"column":9,"nodeType":"1192","messageId":"1193","endLine":480,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1435","line":481,"column":11,"nodeType":"1192","messageId":"1193","endLine":481,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1436","line":528,"column":6,"nodeType":"1214","endLine":528,"endColumn":8,"suggestions":"1437"},{"ruleId":"1190","severity":1,"message":"1271","line":538,"column":9,"nodeType":"1192","messageId":"1193","endLine":538,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1438","line":559,"column":9,"nodeType":"1192","messageId":"1193","endLine":559,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":672,"column":51,"nodeType":"1218","messageId":"1219","endLine":672,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1439","line":677,"column":9,"nodeType":"1192","messageId":"1193","endLine":677,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1440","line":701,"column":9,"nodeType":"1192","messageId":"1193","endLine":701,"endColumn":39},{"ruleId":"1441","severity":1,"message":"1442","line":750,"column":47,"nodeType":"1443","messageId":"1444","endLine":750,"endColumn":49},{"ruleId":"1441","severity":1,"message":"1442","line":759,"column":49,"nodeType":"1443","messageId":"1444","endLine":759,"endColumn":51},{"ruleId":"1441","severity":1,"message":"1442","line":768,"column":49,"nodeType":"1443","messageId":"1444","endLine":768,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1445","line":931,"column":9,"nodeType":"1192","messageId":"1193","endLine":931,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":932,"column":24,"nodeType":"1218","messageId":"1219","endLine":932,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":935,"column":31,"nodeType":"1218","messageId":"1219","endLine":935,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1446","line":968,"column":9,"nodeType":"1192","messageId":"1193","endLine":968,"endColumn":17},{"ruleId":"1216","severity":1,"message":"1217","line":996,"column":47,"nodeType":"1218","messageId":"1219","endLine":996,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1272","line":1062,"column":11,"nodeType":"1192","messageId":"1193","endLine":1062,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":2,"column":54,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1259","line":19,"column":8,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1447","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1448","line":26,"column":8,"nodeType":"1192","messageId":"1193","endLine":26,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1311","line":101,"column":10,"nodeType":"1192","messageId":"1193","endLine":101,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1449","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1450","line":105,"column":25,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1420","line":107,"column":10,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1451","line":107,"column":34,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":59},{"ruleId":"1190","severity":1,"message":"1426","line":117,"column":21,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1427","line":123,"column":19,"nodeType":"1192","messageId":"1193","endLine":123,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1351","line":131,"column":10,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1352","line":131,"column":26,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":43},{"ruleId":"1190","severity":1,"message":"1452","line":251,"column":9,"nodeType":"1192","messageId":"1193","endLine":251,"endColumn":19},{"ruleId":"1212","severity":1,"message":"1453","line":356,"column":6,"nodeType":"1214","endLine":356,"endColumn":24,"suggestions":"1454"},{"ruleId":"1190","severity":1,"message":"1455","line":491,"column":9,"nodeType":"1192","messageId":"1193","endLine":491,"endColumn":34},{"ruleId":"1190","severity":1,"message":"1456","line":504,"column":9,"nodeType":"1192","messageId":"1193","endLine":504,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1457","line":549,"column":9,"nodeType":"1192","messageId":"1193","endLine":549,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1445","line":605,"column":9,"nodeType":"1192","messageId":"1193","endLine":605,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1271","line":628,"column":9,"nodeType":"1192","messageId":"1193","endLine":628,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1272","line":639,"column":11,"nodeType":"1192","messageId":"1193","endLine":639,"endColumn":16},{"ruleId":"1216","severity":1,"message":"1217","line":672,"column":47,"nodeType":"1218","messageId":"1219","endLine":672,"endColumn":49},{"ruleId":"1216","severity":1,"message":"1217","line":690,"column":42,"nodeType":"1218","messageId":"1219","endLine":690,"endColumn":44},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":19,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":32,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1458","line":108,"column":9,"nodeType":"1192","messageId":"1193","endLine":108,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1406","line":116,"column":10,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1407","line":116,"column":19,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1220","line":123,"column":10,"nodeType":"1192","messageId":"1193","endLine":123,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":123,"column":21,"nodeType":"1192","messageId":"1193","endLine":123,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1428","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1429","line":125,"column":24,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1459","line":126,"column":10,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1460","line":126,"column":25,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1461","line":134,"column":10,"nodeType":"1192","messageId":"1193","endLine":134,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1462","line":134,"column":29,"nodeType":"1192","messageId":"1193","endLine":134,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1463","line":135,"column":10,"nodeType":"1192","messageId":"1193","endLine":135,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1464","line":136,"column":10,"nodeType":"1192","messageId":"1193","endLine":136,"endColumn":35},{"ruleId":"1190","severity":1,"message":"1465","line":139,"column":10,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1466","line":219,"column":6,"nodeType":"1214","endLine":219,"endColumn":8,"suggestions":"1467"},{"ruleId":"1190","severity":1,"message":"1271","line":231,"column":9,"nodeType":"1192","messageId":"1193","endLine":231,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1438","line":250,"column":9,"nodeType":"1192","messageId":"1193","endLine":250,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1272","line":294,"column":15,"nodeType":"1192","messageId":"1193","endLine":294,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1445","line":481,"column":9,"nodeType":"1192","messageId":"1193","endLine":481,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":482,"column":24,"nodeType":"1218","messageId":"1219","endLine":482,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":485,"column":31,"nodeType":"1218","messageId":"1219","endLine":485,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1356","line":517,"column":9,"nodeType":"1192","messageId":"1193","endLine":517,"endColumn":24},{"ruleId":"1216","severity":1,"message":"1217","line":579,"column":47,"nodeType":"1218","messageId":"1219","endLine":579,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":38,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1468","line":3,"column":28,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":36},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1320","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1259","line":19,"column":8,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1403","line":100,"column":10,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1404","line":100,"column":23,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1362","line":104,"column":9,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1414","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1254","line":126,"column":8,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1469","line":129,"column":10,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1431","line":130,"column":10,"nodeType":"1192","messageId":"1193","endLine":130,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1470","line":130,"column":25,"nodeType":"1192","messageId":"1193","endLine":130,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1432","line":131,"column":10,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1471","line":131,"column":28,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1433","line":132,"column":10,"nodeType":"1192","messageId":"1193","endLine":132,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1472","line":132,"column":23,"nodeType":"1192","messageId":"1193","endLine":132,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1356","line":134,"column":11,"nodeType":"1192","messageId":"1193","endLine":134,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1272","line":148,"column":15,"nodeType":"1192","messageId":"1193","endLine":148,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1473","line":196,"column":8,"nodeType":"1214","endLine":196,"endColumn":10,"suggestions":"1474"},{"ruleId":"1190","severity":1,"message":"1475","line":253,"column":9,"nodeType":"1192","messageId":"1193","endLine":253,"endColumn":34},{"ruleId":"1190","severity":1,"message":"1271","line":292,"column":9,"nodeType":"1192","messageId":"1193","endLine":292,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":361,"column":47,"nodeType":"1218","messageId":"1219","endLine":361,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1320","line":3,"column":20,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1344","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1226","line":7,"column":10,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1250","line":9,"column":19,"nodeType":"1192","messageId":"1193","endLine":9,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1240","line":2,"column":54,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1242","line":5,"column":16,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1447","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1448","line":24,"column":8,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1311","line":99,"column":10,"nodeType":"1192","messageId":"1193","endLine":99,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1476","line":99,"column":23,"nodeType":"1192","messageId":"1193","endLine":99,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1449","line":103,"column":10,"nodeType":"1192","messageId":"1193","endLine":103,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1450","line":103,"column":25,"nodeType":"1192","messageId":"1193","endLine":103,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1420","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1451","line":105,"column":34,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":59},{"ruleId":"1190","severity":1,"message":"1426","line":111,"column":21,"nodeType":"1192","messageId":"1193","endLine":111,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1427","line":117,"column":19,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1477","line":122,"column":10,"nodeType":"1192","messageId":"1193","endLine":122,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1351","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1352","line":125,"column":26,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":43},{"ruleId":"1279","severity":1,"message":"1478","line":199,"column":7,"nodeType":"1281","messageId":"1219","endLine":199,"endColumn":47},{"ruleId":"1279","severity":1,"message":"1478","line":232,"column":5,"nodeType":"1281","messageId":"1219","endLine":232,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1272","line":254,"column":11,"nodeType":"1192","messageId":"1193","endLine":254,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1479","line":280,"column":9,"nodeType":"1192","messageId":"1193","endLine":280,"endColumn":21},{"ruleId":"1212","severity":1,"message":"1480","line":356,"column":6,"nodeType":"1214","endLine":356,"endColumn":24,"suggestions":"1481"},{"ruleId":"1190","severity":1,"message":"1455","line":488,"column":9,"nodeType":"1192","messageId":"1193","endLine":488,"endColumn":34},{"ruleId":"1190","severity":1,"message":"1457","line":548,"column":9,"nodeType":"1192","messageId":"1193","endLine":548,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1445","line":600,"column":9,"nodeType":"1192","messageId":"1193","endLine":600,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":647,"column":47,"nodeType":"1218","messageId":"1219","endLine":647,"endColumn":49},{"ruleId":"1216","severity":1,"message":"1217","line":666,"column":42,"nodeType":"1218","messageId":"1219","endLine":666,"endColumn":44},{"ruleId":"1216","severity":1,"message":"1482","line":2,"column":27,"nodeType":"1218","messageId":"1219","endLine":2,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1483","line":5,"column":11,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1344","line":27,"column":10,"nodeType":"1192","messageId":"1193","endLine":27,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1241","line":30,"column":8,"nodeType":"1192","messageId":"1193","endLine":30,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1208","line":58,"column":7,"nodeType":"1192","messageId":"1193","endLine":58,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1347","line":109,"column":9,"nodeType":"1192","messageId":"1193","endLine":109,"endColumn":18},{"ruleId":"1212","severity":1,"message":"1348","line":115,"column":6,"nodeType":"1214","endLine":115,"endColumn":8,"suggestions":"1484"},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":38,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1273","line":3,"column":47,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":52},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1241","line":4,"column":13,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1204","line":8,"column":10,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":19,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":32,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1485","line":22,"column":8,"nodeType":"1192","messageId":"1193","endLine":22,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1401","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":12},{"ruleId":"1190","severity":1,"message":"1402","line":105,"column":14,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1244","line":106,"column":18,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1403","line":107,"column":10,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1404","line":107,"column":23,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1209","line":108,"column":10,"nodeType":"1192","messageId":"1193","endLine":108,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1210","line":108,"column":18,"nodeType":"1192","messageId":"1193","endLine":108,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1405","line":109,"column":7,"nodeType":"1192","messageId":"1193","endLine":109,"endColumn":11},{"ruleId":"1190","severity":1,"message":"1406","line":112,"column":10,"nodeType":"1192","messageId":"1193","endLine":112,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1407","line":112,"column":19,"nodeType":"1192","messageId":"1193","endLine":112,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1408","line":113,"column":10,"nodeType":"1192","messageId":"1193","endLine":113,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1409","line":113,"column":29,"nodeType":"1192","messageId":"1193","endLine":113,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1410","line":114,"column":10,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1411","line":114,"column":21,"nodeType":"1192","messageId":"1193","endLine":114,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1412","line":115,"column":10,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1413","line":115,"column":18,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1414","line":116,"column":10,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1415","line":116,"column":19,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1251","line":117,"column":10,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1416","line":117,"column":28,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1417","line":119,"column":10,"nodeType":"1192","messageId":"1193","endLine":119,"endColumn":25},{"ruleId":"1212","severity":1,"message":"1486","line":178,"column":6,"nodeType":"1214","endLine":178,"endColumn":8,"suggestions":"1487"},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":20,"column":19,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":20,"column":32,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":22,"column":8,"nodeType":"1192","messageId":"1193","endLine":22,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1458","line":110,"column":9,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1406","line":118,"column":10,"nodeType":"1192","messageId":"1193","endLine":118,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1407","line":118,"column":19,"nodeType":"1192","messageId":"1193","endLine":118,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1220","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":125,"column":21,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1428","line":128,"column":10,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1429","line":128,"column":24,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1459","line":129,"column":10,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1460","line":129,"column":25,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1461","line":137,"column":10,"nodeType":"1192","messageId":"1193","endLine":137,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1462","line":137,"column":29,"nodeType":"1192","messageId":"1193","endLine":137,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1463","line":138,"column":10,"nodeType":"1192","messageId":"1193","endLine":138,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1464","line":139,"column":10,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":35},{"ruleId":"1190","severity":1,"message":"1488","line":139,"column":37,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":65},{"ruleId":"1190","severity":1,"message":"1465","line":142,"column":10,"nodeType":"1192","messageId":"1193","endLine":142,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1254","line":143,"column":9,"nodeType":"1192","messageId":"1193","endLine":143,"endColumn":16},{"ruleId":"1212","severity":1,"message":"1489","line":225,"column":6,"nodeType":"1214","endLine":225,"endColumn":8,"suggestions":"1490"},{"ruleId":"1190","severity":1,"message":"1271","line":244,"column":9,"nodeType":"1192","messageId":"1193","endLine":244,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1438","line":263,"column":9,"nodeType":"1192","messageId":"1193","endLine":263,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1272","line":307,"column":11,"nodeType":"1192","messageId":"1193","endLine":307,"endColumn":16},{"ruleId":"1212","severity":1,"message":"1473","line":404,"column":6,"nodeType":"1214","endLine":404,"endColumn":8,"suggestions":"1491"},{"ruleId":"1190","severity":1,"message":"1445","line":503,"column":9,"nodeType":"1192","messageId":"1193","endLine":503,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":504,"column":24,"nodeType":"1218","messageId":"1219","endLine":504,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":507,"column":31,"nodeType":"1218","messageId":"1219","endLine":507,"endColumn":33},{"ruleId":"1216","severity":1,"message":"1217","line":593,"column":47,"nodeType":"1218","messageId":"1219","endLine":593,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1492","line":596,"column":9,"nodeType":"1192","messageId":"1193","endLine":596,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":38,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1468","line":3,"column":28,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":36},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1320","line":6,"column":10,"nodeType":"1192","messageId":"1193","endLine":6,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1323","line":18,"column":10,"nodeType":"1192","messageId":"1193","endLine":18,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":19,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":32,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1418","line":23,"column":8,"nodeType":"1192","messageId":"1193","endLine":23,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1403","line":100,"column":10,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1404","line":100,"column":23,"nodeType":"1192","messageId":"1193","endLine":100,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1362","line":104,"column":9,"nodeType":"1192","messageId":"1193","endLine":104,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1414","line":105,"column":10,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1459","line":106,"column":10,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1460","line":106,"column":25,"nodeType":"1192","messageId":"1193","endLine":106,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1431","line":129,"column":10,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1470","line":129,"column":25,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1432","line":130,"column":10,"nodeType":"1192","messageId":"1193","endLine":130,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1471","line":130,"column":28,"nodeType":"1192","messageId":"1193","endLine":130,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1433","line":131,"column":10,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1472","line":131,"column":23,"nodeType":"1192","messageId":"1193","endLine":131,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1438","line":221,"column":9,"nodeType":"1192","messageId":"1193","endLine":221,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1492","line":275,"column":9,"nodeType":"1192","messageId":"1193","endLine":275,"endColumn":20},{"ruleId":"1216","severity":1,"message":"1217","line":338,"column":47,"nodeType":"1218","messageId":"1219","endLine":338,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1493","line":3,"column":8,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1208","line":49,"column":7,"nodeType":"1192","messageId":"1193","endLine":49,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1494","line":96,"column":10,"nodeType":"1192","messageId":"1193","endLine":96,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1495","line":97,"column":10,"nodeType":"1192","messageId":"1193","endLine":97,"endColumn":23},{"ruleId":"1212","severity":1,"message":"1348","line":107,"column":6,"nodeType":"1214","endLine":107,"endColumn":8,"suggestions":"1496"},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":38,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":54,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":19,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":32,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":28,"column":8,"nodeType":"1192","messageId":"1193","endLine":28,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1408","line":123,"column":10,"nodeType":"1192","messageId":"1193","endLine":123,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1410","line":124,"column":10,"nodeType":"1192","messageId":"1193","endLine":124,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1419","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1420","line":126,"column":10,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1421","line":126,"column":34,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1220","line":129,"column":10,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":129,"column":21,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1422","line":133,"column":10,"nodeType":"1192","messageId":"1193","endLine":133,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1423","line":133,"column":31,"nodeType":"1192","messageId":"1193","endLine":133,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1424","line":139,"column":10,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1425","line":139,"column":41,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":73},{"ruleId":"1190","severity":1,"message":"1426","line":141,"column":21,"nodeType":"1192","messageId":"1193","endLine":141,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1427","line":147,"column":19,"nodeType":"1192","messageId":"1193","endLine":147,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1428","line":152,"column":10,"nodeType":"1192","messageId":"1193","endLine":152,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1429","line":152,"column":24,"nodeType":"1192","messageId":"1193","endLine":152,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1497","line":168,"column":10,"nodeType":"1192","messageId":"1193","endLine":168,"endColumn":24},{"ruleId":"1279","severity":1,"message":"1430","line":259,"column":5,"nodeType":"1281","messageId":"1219","endLine":259,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1431","line":265,"column":10,"nodeType":"1192","messageId":"1193","endLine":265,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1432","line":266,"column":10,"nodeType":"1192","messageId":"1193","endLine":266,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1433","line":267,"column":10,"nodeType":"1192","messageId":"1193","endLine":267,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1498","line":309,"column":9,"nodeType":"1192","messageId":"1193","endLine":309,"endColumn":27},{"ruleId":"1216","severity":1,"message":"1217","line":429,"column":49,"nodeType":"1218","messageId":"1219","endLine":429,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1434","line":544,"column":9,"nodeType":"1192","messageId":"1193","endLine":544,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1435","line":545,"column":11,"nodeType":"1192","messageId":"1193","endLine":545,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1499","line":592,"column":6,"nodeType":"1214","endLine":592,"endColumn":8,"suggestions":"1500"},{"ruleId":"1190","severity":1,"message":"1271","line":602,"column":9,"nodeType":"1192","messageId":"1193","endLine":602,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1438","line":623,"column":9,"nodeType":"1192","messageId":"1193","endLine":623,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1501","line":648,"column":9,"nodeType":"1192","messageId":"1193","endLine":648,"endColumn":42},{"ruleId":"1190","severity":1,"message":"1502","line":683,"column":9,"nodeType":"1192","messageId":"1193","endLine":683,"endColumn":51},{"ruleId":"1216","severity":1,"message":"1217","line":727,"column":51,"nodeType":"1218","messageId":"1219","endLine":727,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1439","line":732,"column":9,"nodeType":"1192","messageId":"1193","endLine":732,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1272","line":762,"column":11,"nodeType":"1192","messageId":"1193","endLine":762,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1440","line":774,"column":9,"nodeType":"1192","messageId":"1193","endLine":774,"endColumn":39},{"ruleId":"1441","severity":1,"message":"1442","line":823,"column":47,"nodeType":"1443","messageId":"1444","endLine":823,"endColumn":49},{"ruleId":"1441","severity":1,"message":"1442","line":832,"column":49,"nodeType":"1443","messageId":"1444","endLine":832,"endColumn":51},{"ruleId":"1441","severity":1,"message":"1442","line":841,"column":49,"nodeType":"1443","messageId":"1444","endLine":841,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1445","line":1035,"column":9,"nodeType":"1192","messageId":"1193","endLine":1035,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":1036,"column":24,"nodeType":"1218","messageId":"1219","endLine":1036,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":1039,"column":31,"nodeType":"1218","messageId":"1219","endLine":1039,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1446","line":1072,"column":9,"nodeType":"1192","messageId":"1193","endLine":1072,"endColumn":17},{"ruleId":"1216","severity":1,"message":"1217","line":1100,"column":47,"nodeType":"1218","messageId":"1219","endLine":1100,"endColumn":49},{"ruleId":"1234","severity":1,"message":"1235","line":5,"column":10,"nodeType":"1236","messageId":"1237","endLine":5,"endColumn":24,"fix":"1503"},{"ruleId":"1190","severity":1,"message":"1344","line":28,"column":10,"nodeType":"1192","messageId":"1193","endLine":28,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1208","line":57,"column":7,"nodeType":"1192","messageId":"1193","endLine":57,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1254","line":101,"column":7,"nodeType":"1192","messageId":"1193","endLine":101,"endColumn":14},{"ruleId":"1212","severity":1,"message":"1504","line":132,"column":6,"nodeType":"1214","endLine":132,"endColumn":24,"suggestions":"1505"},{"ruleId":"1190","severity":1,"message":"1248","line":3,"column":37,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":44},{"ruleId":"1190","severity":1,"message":"1240","line":3,"column":53,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":19,"column":18,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1399","line":19,"column":31,"nodeType":"1192","messageId":"1193","endLine":19,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1259","line":20,"column":8,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":21,"column":8,"nodeType":"1192","messageId":"1193","endLine":21,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1458","line":102,"column":11,"nodeType":"1192","messageId":"1193","endLine":102,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1406","line":110,"column":12,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1407","line":110,"column":21,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1220","line":117,"column":12,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1221","line":117,"column":23,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":35},{"ruleId":"1190","severity":1,"message":"1428","line":120,"column":12,"nodeType":"1192","messageId":"1193","endLine":120,"endColumn":24},{"ruleId":"1190","severity":1,"message":"1429","line":120,"column":26,"nodeType":"1192","messageId":"1193","endLine":120,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1459","line":121,"column":12,"nodeType":"1192","messageId":"1193","endLine":121,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1460","line":121,"column":27,"nodeType":"1192","messageId":"1193","endLine":121,"endColumn":43},{"ruleId":"1190","severity":1,"message":"1461","line":126,"column":12,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1462","line":126,"column":31,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1463","line":127,"column":12,"nodeType":"1192","messageId":"1193","endLine":127,"endColumn":34},{"ruleId":"1190","severity":1,"message":"1464","line":128,"column":12,"nodeType":"1192","messageId":"1193","endLine":128,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1465","line":129,"column":12,"nodeType":"1192","messageId":"1193","endLine":129,"endColumn":32},{"ruleId":"1212","severity":1,"message":"1506","line":183,"column":8,"nodeType":"1214","endLine":183,"endColumn":10,"suggestions":"1507"},{"ruleId":"1190","severity":1,"message":"1271","line":194,"column":11,"nodeType":"1192","messageId":"1193","endLine":194,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1438","line":213,"column":11,"nodeType":"1192","messageId":"1193","endLine":213,"endColumn":34},{"ruleId":"1190","severity":1,"message":"1272","line":258,"column":15,"nodeType":"1192","messageId":"1193","endLine":258,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1445","line":424,"column":11,"nodeType":"1192","messageId":"1193","endLine":424,"endColumn":34},{"ruleId":"1216","severity":1,"message":"1217","line":425,"column":28,"nodeType":"1218","messageId":"1219","endLine":425,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":428,"column":35,"nodeType":"1218","messageId":"1219","endLine":428,"endColumn":37},{"ruleId":"1190","severity":1,"message":"1356","line":459,"column":11,"nodeType":"1192","messageId":"1193","endLine":459,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":516,"column":51,"nodeType":"1218","messageId":"1219","endLine":516,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1249","line":4,"column":8,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1250","line":16,"column":19,"nodeType":"1192","messageId":"1193","endLine":16,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1399","line":16,"column":32,"nodeType":"1192","messageId":"1193","endLine":16,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1259","line":17,"column":8,"nodeType":"1192","messageId":"1193","endLine":17,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1418","line":18,"column":8,"nodeType":"1192","messageId":"1193","endLine":18,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1458","line":107,"column":9,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1406","line":115,"column":10,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":17},{"ruleId":"1190","severity":1,"message":"1407","line":115,"column":19,"nodeType":"1192","messageId":"1193","endLine":115,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1220","line":122,"column":10,"nodeType":"1192","messageId":"1193","endLine":122,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1221","line":122,"column":21,"nodeType":"1192","messageId":"1193","endLine":122,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1428","line":125,"column":10,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":22},{"ruleId":"1190","severity":1,"message":"1429","line":125,"column":24,"nodeType":"1192","messageId":"1193","endLine":125,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1459","line":126,"column":10,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1460","line":126,"column":25,"nodeType":"1192","messageId":"1193","endLine":126,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1461","line":134,"column":10,"nodeType":"1192","messageId":"1193","endLine":134,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1462","line":134,"column":29,"nodeType":"1192","messageId":"1193","endLine":134,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1463","line":135,"column":10,"nodeType":"1192","messageId":"1193","endLine":135,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1464","line":136,"column":10,"nodeType":"1192","messageId":"1193","endLine":136,"endColumn":35},{"ruleId":"1190","severity":1,"message":"1465","line":139,"column":10,"nodeType":"1192","messageId":"1193","endLine":139,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1466","line":213,"column":6,"nodeType":"1214","endLine":213,"endColumn":8,"suggestions":"1508"},{"ruleId":"1190","severity":1,"message":"1271","line":226,"column":9,"nodeType":"1192","messageId":"1193","endLine":226,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1438","line":245,"column":9,"nodeType":"1192","messageId":"1193","endLine":245,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1272","line":289,"column":11,"nodeType":"1192","messageId":"1193","endLine":289,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1445","line":458,"column":9,"nodeType":"1192","messageId":"1193","endLine":458,"endColumn":32},{"ruleId":"1216","severity":1,"message":"1217","line":459,"column":24,"nodeType":"1218","messageId":"1219","endLine":459,"endColumn":26},{"ruleId":"1216","severity":1,"message":"1217","line":462,"column":31,"nodeType":"1218","messageId":"1219","endLine":462,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1356","line":493,"column":9,"nodeType":"1192","messageId":"1193","endLine":493,"endColumn":24},{"ruleId":"1216","severity":1,"message":"1217","line":554,"column":47,"nodeType":"1218","messageId":"1219","endLine":554,"endColumn":49},{"ruleId":"1190","severity":1,"message":"1242","line":4,"column":15,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1418","line":7,"column":8,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1249","line":10,"column":8,"nodeType":"1192","messageId":"1193","endLine":10,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1258","line":13,"column":9,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1204","line":13,"column":25,"nodeType":"1192","messageId":"1193","endLine":13,"endColumn":30},{"ruleId":"1190","severity":1,"message":"1226","line":16,"column":9,"nodeType":"1192","messageId":"1193","endLine":16,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1322","line":16,"column":27,"nodeType":"1192","messageId":"1193","endLine":16,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1346","line":20,"column":17,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":21},{"ruleId":"1190","severity":1,"message":"1509","line":20,"column":32,"nodeType":"1192","messageId":"1193","endLine":20,"endColumn":40},{"ruleId":"1190","severity":1,"message":"1259","line":24,"column":8,"nodeType":"1192","messageId":"1193","endLine":24,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1323","line":26,"column":9,"nodeType":"1192","messageId":"1193","endLine":26,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1510","line":28,"column":8,"nodeType":"1192","messageId":"1193","endLine":28,"endColumn":27},{"ruleId":"1190","severity":1,"message":"1210","line":107,"column":20,"nodeType":"1192","messageId":"1193","endLine":107,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1254","line":109,"column":11,"nodeType":"1192","messageId":"1193","endLine":109,"endColumn":18},{"ruleId":"1190","severity":1,"message":"1244","line":110,"column":20,"nodeType":"1192","messageId":"1193","endLine":110,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1265","line":111,"column":26,"nodeType":"1192","messageId":"1193","endLine":111,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1511","line":116,"column":12,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":38},{"ruleId":"1190","severity":1,"message":"1512","line":116,"column":40,"nodeType":"1192","messageId":"1193","endLine":116,"endColumn":69},{"ruleId":"1190","severity":1,"message":"1513","line":117,"column":32,"nodeType":"1192","messageId":"1193","endLine":117,"endColumn":53},{"ruleId":"1190","severity":1,"message":"1514","line":118,"column":12,"nodeType":"1192","messageId":"1193","endLine":118,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1515","line":118,"column":35,"nodeType":"1192","messageId":"1193","endLine":118,"endColumn":57},{"ruleId":"1190","severity":1,"message":"1495","line":119,"column":12,"nodeType":"1192","messageId":"1193","endLine":119,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1516","line":120,"column":12,"nodeType":"1192","messageId":"1193","endLine":120,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1517","line":120,"column":31,"nodeType":"1192","messageId":"1193","endLine":120,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1518","line":121,"column":12,"nodeType":"1192","messageId":"1193","endLine":121,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1519","line":121,"column":31,"nodeType":"1192","messageId":"1193","endLine":121,"endColumn":51},{"ruleId":"1190","severity":1,"message":"1520","line":227,"column":11,"nodeType":"1192","messageId":"1193","endLine":227,"endColumn":41},{"ruleId":"1190","severity":1,"message":"1521","line":230,"column":13,"nodeType":"1192","messageId":"1193","endLine":230,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1522","line":368,"column":11,"nodeType":"1192","messageId":"1193","endLine":368,"endColumn":29},{"ruleId":"1190","severity":1,"message":"1523","line":434,"column":11,"nodeType":"1192","messageId":"1193","endLine":434,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1524","line":446,"column":11,"nodeType":"1192","messageId":"1193","endLine":446,"endColumn":32},{"ruleId":"1190","severity":1,"message":"1270","line":502,"column":19,"nodeType":"1192","messageId":"1193","endLine":502,"endColumn":27},{"ruleId":"1525","severity":1,"message":"1526","line":1570,"column":45,"nodeType":"1527","messageId":"1528","endLine":1570,"endColumn":47},{"ruleId":"1525","severity":1,"message":"1526","line":1571,"column":45,"nodeType":"1527","messageId":"1528","endLine":1571,"endColumn":47},{"ruleId":"1190","severity":1,"message":"1203","line":1,"column":17,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1225","line":1,"column":30,"nodeType":"1192","messageId":"1193","endLine":1,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1239","line":2,"column":10,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":16},{"ruleId":"1190","severity":1,"message":"1201","line":4,"column":10,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":20},{"ruleId":"1190","severity":1,"message":"1204","line":5,"column":26,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":31},{"ruleId":"1190","severity":1,"message":"1226","line":8,"column":10,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":14},{"ruleId":"1190","severity":1,"message":"1205","line":8,"column":16,"nodeType":"1192","messageId":"1193","endLine":8,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1206","line":11,"column":22,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":28},{"ruleId":"1190","severity":1,"message":"1231","line":33,"column":12,"nodeType":"1192","messageId":"1193","endLine":33,"endColumn":25},{"ruleId":"1190","severity":1,"message":"1403","line":15,"column":12,"nodeType":"1192","messageId":"1193","endLine":15,"endColumn":23},{"ruleId":"1190","severity":1,"message":"1404","line":15,"column":25,"nodeType":"1192","messageId":"1193","endLine":15,"endColumn":39},{"ruleId":"1190","severity":1,"message":"1529","line":17,"column":12,"nodeType":"1192","messageId":"1193","endLine":17,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1530","line":17,"column":28,"nodeType":"1192","messageId":"1193","endLine":17,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1531","line":18,"column":12,"nodeType":"1192","messageId":"1193","endLine":18,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1532","line":18,"column":28,"nodeType":"1192","messageId":"1193","endLine":18,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1533","line":83,"column":11,"nodeType":"1192","messageId":"1193","endLine":83,"endColumn":20},{"ruleId":"1216","severity":1,"message":"1217","line":97,"column":51,"nodeType":"1218","messageId":"1219","endLine":97,"endColumn":53},{"ruleId":"1216","severity":1,"message":"1482","line":108,"column":50,"nodeType":"1218","messageId":"1219","endLine":108,"endColumn":52},{"ruleId":"1190","severity":1,"message":"1225","line":2,"column":17,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":26},{"ruleId":"1190","severity":1,"message":"1369","line":2,"column":28,"nodeType":"1192","messageId":"1193","endLine":2,"endColumn":36},{"ruleId":"1190","severity":1,"message":"1227","line":3,"column":8,"nodeType":"1192","messageId":"1193","endLine":3,"endColumn":13},{"ruleId":"1190","severity":1,"message":"1248","line":4,"column":38,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":45},{"ruleId":"1190","severity":1,"message":"1273","line":4,"column":47,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":52},{"ruleId":"1190","severity":1,"message":"1240","line":4,"column":54,"nodeType":"1192","messageId":"1193","endLine":4,"endColumn":58},{"ruleId":"1190","severity":1,"message":"1241","line":5,"column":13,"nodeType":"1192","messageId":"1193","endLine":5,"endColumn":19},{"ruleId":"1190","severity":1,"message":"1204","line":7,"column":10,"nodeType":"1192","messageId":"1193","endLine":7,"endColumn":15},{"ruleId":"1190","severity":1,"message":"1239","line":11,"column":32,"nodeType":"1192","messageId":"1193","endLine":11,"endColumn":38},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1534"],"no-negated-in-lhs",["1535"],"'Router' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'ClientRefferalForm' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'patientObjAge' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["1536"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hivStatus' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'htsResult2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentObject'. Either include it or remove the dependency array.",["1537"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'classes' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'setFamilyIndexList' is assigned a value but never used.","'handleAction' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1538","text":"1539"},"'Button' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'CardContent' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.",{"range":"1540","text":"1539"},"React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["1541"],"'Spinner' is defined but never used.","'SaveIcon' is defined but never used.","'LabelRibbon' is defined but never used.","'targetGroupValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TargetGroupSetup' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1542"],"'history' is assigned a value but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["1543"],"'ToastContainer' is defined but never used.","'PhoneInput' is defined but never used.","'fontWeight' is defined but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'setClientCodeCheck' is assigned a value but never used.","'setSerialNumber' is assigned a value but never used.","'patientAge' is assigned a value but never used.","'facilityShortCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateClientCode', 'country', 'getStates', 'objValues', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1544"],"'response' is assigned a value but never used.","'checkPhoneNumberBasic' is assigned a value but never used.","'limit' is assigned a value but never used.","'Input' is defined but never used.","'setPredictionValue' is assigned a value but never used.","'setSavingPrediction' is assigned a value but never used.","'setSavingRsult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["1545"],"no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","no-useless-computed-key","Unnecessarily computed property [\"rencencyInterpretation\"] found.","Property","unnecessarilyComputedProperty",{"range":"1546","text":"1547"},{"range":"1548","text":"1547"},{"range":"1549","text":"1547"},{"range":"1550","text":"1547"},{"range":"1551","text":"1547"},{"range":"1552","text":"1547"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["1553"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.","'hivTestDate' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","React Hook useEffect has a missing dependency: 'objValues'. Either include it or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1554"],["1555"],["1556"],["1557"],["1558"],"'Card' is defined but never used.","'MatButton' is defined but never used.","'useLocation' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["1559"],["1560"],["1561"],"React Hook useEffect has a missing dependency: 'props.activePage.activeObject.riskStratificationResponseDto'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject.riskStratificationResponseDto', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject.riskStratificationResponseDto' in the reducer.",["1562"],"'resultStatus' is assigned a value but never used.","'setResultStatus' is assigned a value but never used.",["1563"],["1564"],["1565"],["1566"],["1567"],{"range":"1568","text":"1547"},{"range":"1569","text":"1547"},{"range":"1570","text":"1547"},{"range":"1571","text":"1547"},{"range":"1572","text":"1547"},{"range":"1573","text":"1547"},["1574"],"'FaUserPlus' is defined but never used.","'Menu' is defined but never used.","'Icon' is defined but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["1575"],"'handleIEditIndex' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1576"],"'getProvincesId' is defined but never used.","'handleItemClick' is assigned a value but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'toggle' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'ReferralUnit' is defined but never used.","'useState' is defined but never used.",{"range":"1577","text":"1539"},["1578"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["1579"],"'m' is assigned a value but never used.",{"range":"1580","text":"1547"},{"range":"1581","text":"1547"},{"range":"1582","text":"1547"},{"range":"1583","text":"1547"},{"range":"1584","text":"1547"},{"range":"1585","text":"1547"},["1586"],["1587"],["1588"],["1589"],["1590"],["1591"],["1592"],["1593"],"'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateClientCode'. Either include it or remove the dependency array.",["1594"],["1595"],["1596"],{"range":"1597","text":"1539"},"'Message' is defined but never used.","'Cookies' is defined but never used.","'kP' is assigned a value but never used.","'setKP' is assigned a value but never used.","'ageDisabled' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'temp' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","'hospitalNumStatus' is assigned a value but never used.","'setHospitalNumStatus' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'setTargetGroupValue' is assigned a value but never used.","'contentDropDown' is assigned a value but never used.","'Select' is defined but never used.","'provinces' is assigned a value but never used.","'isClientCurrentlyOnHiv' is assigned a value but never used.","'setClientCurrentlyOnHiv' is assigned a value but never used.","'selectedFamilyIndex' is assigned a value but never used.","'setSelectedFamilyIndex' is assigned a value but never used.","'isWillingToHaveChildrenTested' is assigned a value but never used.","'setIsWillingToHaveChildrenTested' is assigned a value but never used.","'setStateInfo' is assigned a value but never used.","'setLgaInfo' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'setFacilityName' is assigned a value but never used.","Duplicate key 'recencyTesting'.","'selectedState' is assigned a value but never used.","'selectedFacility' is assigned a value but never used.","'selectedLga' is assigned a value but never used.","'generateIndexClientId' is assigned a value but never used.","'indexClientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1598"],"'handleInputChangeObject' is assigned a value but never used.","'getProvinces' is assigned a value but never used.","'handleFamilyRelationshipChange' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'handleDateOfBirthChange' is assigned a value but never used.","'validate' is assigned a value but never used.","'Badge' is defined but never used.","'PersonIcon' is defined but never used.","'elicitedCount' is assigned a value but never used.","'setElicitedCount' is assigned a value but never used.","'setIsClientCurrentlyOnHiv' is assigned a value but never used.","'getPNSInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPartnerId', 'getStates', 'htsClientInformation', 'objValues', 'props?.basicInfo?.personResponseDto?.address?.address', and 'props.organizationInfo'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1599"],"'getAllRecordByHTSClientId' is assigned a value but never used.","'viewPnsInfo' is assigned a value but never used.","'handleItemClickPage' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'allFacilities' is assigned a value but never used.","'setAllFacilities' is assigned a value but never used.","'receivingFacility' is assigned a value but never used.","'setReceivingFacility' is assigned a value but never used.","'selectedReceivingState' is assigned a value but never used.","'selectedReceivingFacility' is assigned a value but never used.","'selectedReceivingLga' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders' and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1600"],"'CardBody' is defined but never used.","'facilities1' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'setSelectedLga' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.row.row.id'. Either include it or remove the dependency array.",["1601"],"'handleInputChangeLocation' is assigned a value but never used.","'setHivTestDate' is assigned a value but never used.","'partnerId' is assigned a value but never used.","Duplicate key 'numberOfPartnerIdentifiedFromClientIndex'.","'getPartnerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStates', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'viewPnIsnfo'. Either include them or remove the dependency array.",["1602"],"Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.",["1603"],"'RefferalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'viewReferralInfo'. Either include it or remove the dependency array.",["1604"],"'setSelectedReceivingFacility' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStateByCountryId', 'loadGenders', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1605"],["1606"],"'postPayload' is assigned a value but never used.","'PNSList' is defined but never used.","'serviceMapping' is assigned a value but never used.","'serviceNeeded' is assigned a value but never used.",["1607"],"'familIndexInfo' is assigned a value but never used.","'getFamilyIndexInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getListoFFamilyIndexInfo', 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1608"],"'handleSubmitfamilyIndexRequestDto' is assigned a value but never used.","'handleSubmitfamilyTestingTrackerRequestDTO' is assigned a value but never used.",{"range":"1609","text":"1539"},"React Hook useEffect has a missing dependency: 'getListoFFamilyIndexInfo'. Either include it or remove the dependency array.",["1610"],"React Hook useEffect has a missing dependency: 'loadGenders'. Either include it or remove the dependency array.",["1611"],["1612"],"'LabelSui' is defined but never used.","'UserInformationCard' is defined but never used.","'isUserInformationAvailable' is assigned a value but never used.","'setIsUserInformationAvailable' is assigned a value but never used.","'setKitUserInformation' is assigned a value but never used.","'selectedServiceNeeded' is assigned a value but never used.","'setSelectServiceNeeded' is assigned a value but never used.","'showFreeTextField' is assigned a value but never used.","'setShowFreeTextField' is assigned a value but never used.","'hasConductedHIVST' is assigned a value but never used.","'setHasConductedHIVST' is assigned a value but never used.","'handlePostTestAssessmentChange' is assigned a value but never used.","'newObjectValues' is assigned a value but never used.","'addUserInformation' is assigned a value but never used.","'removeUserInformation' is assigned a value but never used.","'updateUserInformation' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'showOtherInput' is assigned a value but never used.","'setShowOtherInput' is assigned a value but never used.","'validate1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1613","fix":"1614"},{"desc":"1615","fix":"1616"},[156,170],"token",[150,164],{"desc":"1617","fix":"1618"},{"desc":"1619","fix":"1620"},{"desc":"1621","fix":"1622"},{"desc":"1623","fix":"1624"},{"desc":"1625","fix":"1626"},[7583,7609],"\"rencencyInterpretation\"",[7873,7899],[8221,8247],[8501,8527],[8780,8806],[8868,8894],{"desc":"1627","fix":"1628"},{"desc":"1629","fix":"1630"},{"desc":"1631","fix":"1632"},{"desc":"1633","fix":"1634"},{"desc":"1635","fix":"1636"},{"desc":"1637","fix":"1638"},{"desc":"1639","fix":"1640"},{"desc":"1625","fix":"1641"},{"desc":"1642","fix":"1643"},{"desc":"1644","fix":"1645"},{"desc":"1629","fix":"1646"},{"desc":"1631","fix":"1647"},{"desc":"1633","fix":"1648"},{"desc":"1635","fix":"1649"},{"desc":"1637","fix":"1650"},[7119,7145],[7409,7435],[7757,7783],[8037,8063],[8316,8342],[8404,8430],{"desc":"1627","fix":"1651"},{"desc":"1652","fix":"1653"},{"desc":"1654","fix":"1655"},[185,199],{"desc":"1652","fix":"1656"},{"desc":"1657","fix":"1658"},[7845,7871],[8135,8161],[8483,8509],[8763,8789],[9042,9068],[9130,9156],{"desc":"1627","fix":"1659"},{"desc":"1621","fix":"1660"},{"desc":"1629","fix":"1661"},{"desc":"1631","fix":"1662"},{"desc":"1633","fix":"1663"},{"desc":"1635","fix":"1664"},{"desc":"1637","fix":"1665"},{"desc":"1625","fix":"1666"},{"desc":"1667","fix":"1668"},{"desc":"1652","fix":"1669"},{"desc":"1654","fix":"1670"},[156,170],{"desc":"1671","fix":"1672"},{"desc":"1673","fix":"1674"},{"desc":"1675","fix":"1676"},{"desc":"1677","fix":"1678"},{"desc":"1679","fix":"1680"},{"desc":"1652","fix":"1681"},{"desc":"1682","fix":"1683"},{"desc":"1684","fix":"1685"},{"desc":"1677","fix":"1686"},{"desc":"1652","fix":"1687"},{"desc":"1688","fix":"1689"},[191,205],{"desc":"1690","fix":"1691"},{"desc":"1692","fix":"1693"},{"desc":"1675","fix":"1694"},"Update the dependencies array to be: [locationState]",{"range":"1695","text":"1696"},"Update the dependencies array to be: [PatientCurrentObject]",{"range":"1697","text":"1698"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"1699","text":"1700"},"Update the dependencies array to be: [TargetGroupSetup, objValues.age, props]",{"range":"1701","text":"1702"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"1703","text":"1704"},"Update the dependencies array to be: [objValues.age, props.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, objValues, props, country]",{"range":"1705","text":"1706"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"1707","text":"1708"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"1709","text":"1710"},"Update the dependencies array to be: [initialTest1.result, objValues]",{"range":"1711","text":"1712"},"Update the dependencies array to be: [confirmatoryTest.result, objValues]",{"range":"1713","text":"1714"},"Update the dependencies array to be: [objValues, tieBreakerTest.result]",{"range":"1715","text":"1716"},"Update the dependencies array to be: [initialTest12.result2, objValues]",{"range":"1717","text":"1718"},"Update the dependencies array to be: [confirmatoryTest2.result2, objValues]",{"range":"1719","text":"1720"},"Update the dependencies array to be: [props.activePage.activeObject, props.patientObj]",{"range":"1721","text":"1722"},{"range":"1723","text":"1708"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"1724","text":"1725"},"Update the dependencies array to be: [props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",{"range":"1726","text":"1727"},{"range":"1728","text":"1712"},{"range":"1729","text":"1714"},{"range":"1730","text":"1716"},{"range":"1731","text":"1718"},{"range":"1732","text":"1720"},{"range":"1733","text":"1710"},"Update the dependencies array to be: [patients]",{"range":"1734","text":"1735"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"1736","text":"1737"},{"range":"1738","text":"1735"},"Update the dependencies array to be: [getStates]",{"range":"1739","text":"1740"},{"range":"1741","text":"1710"},{"range":"1742","text":"1704"},{"range":"1743","text":"1712"},{"range":"1744","text":"1714"},{"range":"1745","text":"1716"},{"range":"1746","text":"1718"},{"range":"1747","text":"1720"},{"range":"1748","text":"1708"},"Update the dependencies array to be: [props.patientObj, facilityCode, CreateClientCode]",{"range":"1749","text":"1750"},{"range":"1751","text":"1735"},{"range":"1752","text":"1737"},"Update the dependencies array to be: [loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1753","text":"1754"},"Update the dependencies array to be: [getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1755","text":"1756"},"Update the dependencies array to be: [loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1757","text":"1758"},"Update the dependencies array to be: [props.row.row.id]",{"range":"1759","text":"1760"},"Update the dependencies array to be: [getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",{"range":"1761","text":"1762"},{"range":"1763","text":"1735"},"Update the dependencies array to be: [viewReferralInfo]",{"range":"1764","text":"1765"},"Update the dependencies array to be: [getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1766","text":"1767"},{"range":"1768","text":"1760"},{"range":"1769","text":"1735"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1770","text":"1771"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, props.patientObj]",{"range":"1772","text":"1773"},"Update the dependencies array to be: [loadGenders]",{"range":"1774","text":"1775"},{"range":"1776","text":"1758"},[7869,7871],"[locationState]",[2593,2595],"[PatientCurrentObject]",[1510,1546],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[5398,5413],"[TargetGroupSetup, objValues.age, props]",[5512,5554],"[props.patientObj, postTest.hivTestResult, postTest]",[13579,13643],"[objValues.age, props.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, objValues, props, country]",[7034,7052],"[knowledgeAssessment, props.patientObj, riskAssessment]",[9730,9844],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[16228,16249],"[initialTest1.result, objValues]",[16765,16790],"[confirmatoryTest.result, objValues]",[17233,17256],"[objValues, tieBreakerTest.result]",[17505,17528],"[initialTest12.result2, objValues]",[17702,17729],"[confirmatoryTest2.result2, objValues]",[4957,4975],"[props.activePage.activeObject, props.patientObj]",[7252,7270],[7380,7398],"[postTest, props.patientObj]",[5540,5558],"[props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",[17609,17630],[18236,18261],[18774,18797],[19094,19117],[19319,19346],[9301,9415],[3948,3950],"[patients]",[4312,4330],"[getStates, props.patientObj]",[3948,3950],[4485,4487],"[getStates]",[9178,9292],[6349,6391],[15050,15071],[15587,15612],[16055,16078],[16327,16350],[16524,16551],[7331,7349],[7797,7829],"[props.patientObj, facilityCode, CreateClientCode]",[3948,3950],[4312,4330],[16503,16505],"[loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[11291,11309],"[getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[7161,7163],"[loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[6733,6735],"[props.row.row.id]",[11315,11333],"[getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",[4178,4180],[5804,5806],"[viewReferralInfo]",[7842,7844],"[getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[12997,12999],[3914,3916],[19269,19271],"[getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[4570,4588],"[getListoFFamilyIndexInfo, props.patientObj]",[7064,7066],"[loadGenders]",[6959,6961]]