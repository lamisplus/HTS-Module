[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js":"17","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js":"18","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js":"19","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js":"20","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js":"21","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"22","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js":"23","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js":"24","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js":"25","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js":"26","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"27","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js":"28","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"29","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js":"30","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"31","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js":"32","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js":"33","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js":"34","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js":"35","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js":"36","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"37","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"38","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js":"39","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js":"40","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js":"41","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js":"42","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js":"43","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js":"44","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"45","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js":"46","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"47","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js":"48","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"49","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js":"50","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js":"51","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js":"52","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js":"53","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js":"54","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js":"55","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js":"56","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js":"57","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js":"58","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js":"59","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js":"60","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js":"61","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js":"62","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js":"63","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js":"64","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js":"65","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js":"66","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js":"67","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js":"68","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js":"69","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js":"70","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js":"71","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js":"72","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js":"73","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js":"74"},{"size":715,"mtime":1712310613394,"results":"75","hashOfConfig":"76"},{"size":1594,"mtime":1718870139618,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1712310614538,"results":"78","hashOfConfig":"76"},{"size":8947,"mtime":1712310614565,"results":"79","hashOfConfig":"76"},{"size":2920,"mtime":1712310614581,"results":"80","hashOfConfig":"76"},{"size":28111,"mtime":1718871524557,"results":"81","hashOfConfig":"76"},{"size":4072,"mtime":1718870139938,"results":"82","hashOfConfig":"76"},{"size":2890,"mtime":1718870139760,"results":"83","hashOfConfig":"76"},{"size":13914,"mtime":1718870139807,"results":"84","hashOfConfig":"76"},{"size":12541,"mtime":1712310696150,"results":"85","hashOfConfig":"76"},{"size":8939,"mtime":1713955453347,"results":"86","hashOfConfig":"76"},{"size":29981,"mtime":1718870139876,"results":"87","hashOfConfig":"76"},{"size":84124,"mtime":1718870139876,"results":"88","hashOfConfig":"76"},{"size":100249,"mtime":1718874183149,"results":"89","hashOfConfig":"76"},{"size":69116,"mtime":1718870139891,"results":"90","hashOfConfig":"76"},{"size":73301,"mtime":1718870139854,"results":"91","hashOfConfig":"76"},{"size":24683,"mtime":1718871435322,"results":"92","hashOfConfig":"76"},{"size":56699,"mtime":1718870139891,"results":"93","hashOfConfig":"76"},{"size":2102,"mtime":1712310696381,"results":"94","hashOfConfig":"76"},{"size":89359,"mtime":1718870139860,"results":"95","hashOfConfig":"76"},{"size":10066,"mtime":1712310695649,"results":"96","hashOfConfig":"76"},{"size":9782,"mtime":1718870139938,"results":"97","hashOfConfig":"76"},{"size":71674,"mtime":1718870139838,"results":"98","hashOfConfig":"76"},{"size":38514,"mtime":1718870139891,"results":"99","hashOfConfig":"76"},{"size":3172,"mtime":1713872942672,"results":"100","hashOfConfig":"76"},{"size":8685,"mtime":1713879620172,"results":"101","hashOfConfig":"76"},{"size":10609,"mtime":1718870139938,"results":"102","hashOfConfig":"76"},{"size":130790,"mtime":1718870139823,"results":"103","hashOfConfig":"76"},{"size":6540,"mtime":1712310696855,"results":"104","hashOfConfig":"76"},{"size":483,"mtime":1718870421446,"results":"105","hashOfConfig":"76"},{"size":6803,"mtime":1718870139760,"results":"106","hashOfConfig":"76"},{"size":3732,"mtime":1718870139960,"results":"107","hashOfConfig":"76"},{"size":7397,"mtime":1715605205736,"results":"108","hashOfConfig":"76"},{"size":28876,"mtime":1718870139776,"results":"109","hashOfConfig":"76"},{"size":5229,"mtime":1718870139807,"results":"110","hashOfConfig":"76"},{"size":7903,"mtime":1718870139823,"results":"111","hashOfConfig":"76"},{"size":2530,"mtime":1712310696934,"results":"112","hashOfConfig":"76"},{"size":1137,"mtime":1712310697139,"results":"113","hashOfConfig":"76"},{"size":1245,"mtime":1718870139960,"results":"114","hashOfConfig":"76"},{"size":89837,"mtime":1718870139876,"results":"115","hashOfConfig":"76"},{"size":2353,"mtime":1718870139860,"results":"116","hashOfConfig":"76"},{"size":46188,"mtime":1718870139807,"results":"117","hashOfConfig":"76"},{"size":30936,"mtime":1718870139791,"results":"118","hashOfConfig":"76"},{"size":64470,"mtime":1718870139791,"results":"119","hashOfConfig":"76"},{"size":1172,"mtime":1712310697234,"results":"120","hashOfConfig":"76"},{"size":126081,"mtime":1718870139823,"results":"121","hashOfConfig":"76"},{"size":1540,"mtime":1712310697218,"results":"122","hashOfConfig":"76"},{"size":35359,"mtime":1718870139807,"results":"123","hashOfConfig":"76"},{"size":1163,"mtime":1712310697108,"results":"124","hashOfConfig":"76"},{"size":12541,"mtime":1712310695818,"results":"125","hashOfConfig":"76"},{"size":10623,"mtime":1713883031176,"results":"126","hashOfConfig":"76"},{"size":40569,"mtime":1712310695935,"results":"127","hashOfConfig":"76"},{"size":2199,"mtime":1712310695950,"results":"128","hashOfConfig":"76"},{"size":77311,"mtime":1718870139791,"results":"129","hashOfConfig":"76"},{"size":80355,"mtime":1718793031235,"results":"130","hashOfConfig":"76"},{"size":41497,"mtime":1718870139776,"results":"131","hashOfConfig":"76"},{"size":7777,"mtime":1712310695966,"results":"132","hashOfConfig":"76"},{"size":10912,"mtime":1714468215943,"results":"133","hashOfConfig":"76"},{"size":66792,"mtime":1718870139907,"results":"134","hashOfConfig":"76"},{"size":7778,"mtime":1712310696406,"results":"135","hashOfConfig":"76"},{"size":12541,"mtime":1712310696598,"results":"136","hashOfConfig":"76"},{"size":10518,"mtime":1713889916023,"results":"137","hashOfConfig":"76"},{"size":40569,"mtime":1712310696366,"results":"138","hashOfConfig":"76"},{"size":109943,"mtime":1718874360179,"results":"139","hashOfConfig":"76"},{"size":29000,"mtime":1714468215928,"results":"140","hashOfConfig":"76"},{"size":38282,"mtime":1718870139923,"results":"141","hashOfConfig":"76"},{"size":50069,"mtime":1718870139923,"results":"142","hashOfConfig":"76"},{"size":31832,"mtime":1718870139907,"results":"143","hashOfConfig":"76"},{"size":111061,"mtime":1714136064955,"results":"144","hashOfConfig":"76"},{"size":81902,"mtime":1712310696655,"results":"145","hashOfConfig":"76"},{"size":2177,"mtime":1712310696802,"results":"146","hashOfConfig":"76"},{"size":35183,"mtime":1718870139907,"results":"147","hashOfConfig":"76"},{"size":7777,"mtime":1712310696833,"results":"148","hashOfConfig":"76"},{"size":41058,"mtime":1712310696787,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},"1cxhekk",{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"197","usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"153"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225","usedDeprecatedRules":"153"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"153"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"153"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"153"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"153"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"153"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"153"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"153"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"153"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"293","usedDeprecatedRules":"153"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"153"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":"304","usedDeprecatedRules":"153"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"153"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"153"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"153"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"153"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"153"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"153"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"153"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"153"},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\index.js",["328"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["329","330"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\App.js",["331"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["332","333","334","335","336","337","338","339","340","341","342","343","344"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["345","346"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Home.js",["347","348"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatient.js",["349","350"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Others.js",["351","352","353","354","355","356","357","358","359","360"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalForm.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"./ServicesProvided\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ClientRefferalForm = (props) => {\r\n  const classes = useStyles();\r\n  console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = {...errors};\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  // const [formInfo, setFormInfo] = useState({\r\n  //   dateVisit: \"\",\r\n  //   firstName: props?.patientObj?.personResponseDto?.firstName,\r\n  //   middleName:  props?.patientObj?.personResponseDto?.otherName,\r\n  //   lastName:  props?.patientObj?.personResponseDto?.surname,\r\n  //   hospitalNumber:props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n  //   countryId: \"1\",\r\n  //   stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n  //   province: Number(props?.patientObj?.personResponseDto?.address?.address[0]?.district) ,\r\n  //   address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n  //   landmark: \"\",\r\n  //   phoneNumber:  props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]?.value,\r\n  //   sexId:  props?.patientObj?.personResponseDto?.gender?.id,\r\n  //   dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   age:  \"\",\r\n  //   dateOfBirth:props?.patientObj.personResponseDto?.dateOfBirth,\r\n  //   hivStatus:props?.patientObj?.hivTestResult2 ? props?.patientObj?.hivTestResult2 :\r\n  //       props?.patientObj?.hivTestResult ? props?.patientObj?.hivTestResult : \"\",\r\n  //   referredFromFacility: \"\",\r\n  //   nameOfPersonReferringClient: \"\",\r\n  //   nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n  //   addressOfReferringFacility: \"\",\r\n  //   phoneNoOfReferringFacility: \"\",\r\n  //   referredTo: \"\",\r\n  //   nameOfContactPerson: \"\",\r\n  //   nameOfReceivingFacility: \"\",\r\n  //   addressOfReceivingFacility: \"\",\r\n  //   phoneNoOfReceivingFacility: \"\",\r\n  //   isDateOfBirthEstimated: false,\r\n  //   serviceNeeded: \"\",\r\n  //   comments: \"\",\r\n  //   receivingStateFacility: \"\",\r\n  //   receivingLgaFacility: \"\",\r\n  //   htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n  //   htsClientUuid:props && props.patientObj ? props.patientObj?.uuid : \"\"\r\n  // });\r\n  // const viewReferralInfo = () => {\r\n  //   axios\r\n  //       .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       })\r\n  //       .then((response) => {\r\n  //         // setObjValues(response.data);\r\n  //         console.log(\" form information\", response.data);\r\n  //         // setFormInfo(response.data);\r\n  //         // setReceivingOrganization(response.data.receivingOrganization);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         //console.log(error);\r\n  //       });\r\n  // };\r\n  // useEffect(() => {\r\n  //   viewReferralInfo();\r\n  // }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    console.log(e.target.value);\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n          <div className=\"form-group  col-md-8\">\r\n            <FormGroup>\r\n              <Label>\r\n                Referral Type <span style={{ color: \"red\" }}> *</span>\r\n              </Label>\r\n              <select\r\n                  className=\"form-control\"\r\n                  name=\"contentDropDown\"\r\n                  id=\"contentDropDown\"\r\n                  onChange={handleContentChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n              >\r\n                <option value={\"\"}>Select Refarral form type</option>\r\n                <option value={\"showReferringUnit\"}>Referral form</option>\r\n                <option value={\"showServiceProviderUnit\"}>\r\n                  Service Provider form\r\n                </option>\r\n              </select>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <Card className={classes.root}>\r\n          {content.showReferringUnit\r\n              && <RefferralUnit\r\n                  patientObj={patientObj}\r\n                  // formInfo={formInfo}\r\n                  // row={props.row}\r\n                  handleClicked={props.handleClicked}\r\n              />}\r\n          {content.showServiceProviderUnit && (\r\n              <CardBody>\r\n                <ServicesProvided\r\n                    patientObj = {patientObj}\r\n                    // formInfo={props.formInfo}\r\n                    // row={props.row}\r\n                />\r\n              </CardBody>\r\n          )}\r\n          {/* recieving facility  */}\r\n        </Card>\r\n        <Modal\r\n            show={open}\r\n            toggle={toggle}\r\n            className=\"fade\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Notification!\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>Are you Sure of the Age entered?</h4>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n  );\r\n};\r\n\r\n\r\nexport default ClientRefferalForm;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PostTest.js",["397","398","399","400","401"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PreTest.js",["402","403","404","405","406","407","408","409","410","411","412","413","414"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\FamilyIndexTestingForm.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RefferalUnit.js",["472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\HivTestResult.js",["501","502","503","504","505","506","507","508","509","510","511","512","513"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientHtsEnrollment.js",["514","515","516","517","518","519","520","521","522","523","524","525"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RiskStratification.js",["526","527","528","529","530","531","532","533","534","535"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\Index.js",["536","537"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { useHistory, } from \"react-router-dom\";\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const history = useHistory();\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleDone =()=>{\n      history.push('/');\n    }\n    const handleItemClick =(page, completedMenu)=>{        \n      if(props.completed.includes(completedMenu)) {\n      }else{\n          props.setCompleted([...props.completed, completedMenu])\n      }\n      props.handleItemClick(page)\n  }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PnsForm.js",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HTSList.js",["563","564"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport axios from \"axios\";\n\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\n//import moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst HTSList = (props) => {\n  //const [patientList, setPatientList] = useState([])\n  //const [loading, setLoading] = useState(false)\n  const [showPPI, setShowPPI] = useState(true);\n  //const baseUrl2 = \"http://localhost:8282/api/v2/\"\n  useEffect(() => {\n    //patients()\n  }, []);\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find HTS Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          // { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n          { title: \"Client Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"HTS Count\", field: \"count\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}hts/only/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                //setLoading(false)\n                resolve({\n                  data:\n                    result?.data?.records &&\n                    result?.data?.records\n                      .filter((client) => {\n                        return client.clientCode !== null;\n                      })\n                      .map((row) => ({\n                        //name:   row.hivPositive && row.hivPositive===true ? ( <><sup><b style={{color:\"red\"}}><Icon name='circle' size=\"small\"/></b></sup> { \" \" + row.personResponseDto.firstName + \" \" + row.personResponseDto.surname} </>) :row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\n                        name: row.firstName + \" \" + row.surname,\n                        // hospital_number: row.hospitalNumber,\n                        clientCode: row.clientCode,\n                        gender: row.gender,\n                        age: row.age,\n                        count: (\n                          <Label color=\"blue\" size=\"mini\">\n                            {row.htsCount}\n                          </Label>\n                        ),\n                        actions: (\n                          <div>\n                            {row.htsCount >= 0 && (\n                              <>\n                                <Link\n                                  to={{\n                                    pathname: \"/patient-history\",\n                                    state: {\n                                      patientObject: row,\n                                      patientObj: row,\n                                      clientCode: row.clientCode,\n                                    },\n                                  }}\n                                >\n                                  <ButtonGroup\n                                    variant=\"contained\"\n                                    aria-label=\"split button\"\n                                    style={{\n                                      backgroundColor: \"rgb(153, 46, 98)\",\n                                      height: \"30px\",\n                                      width: \"215px\",\n                                    }}\n                                    size=\"large\"\n                                  >\n                                    <Button\n                                      color=\"primary\"\n                                      size=\"small\"\n                                      aria-label=\"select merge strategy\"\n                                      aria-haspopup=\"menu\"\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <MdDashboard />\n                                    </Button>\n                                    <Button\n                                      style={{\n                                        backgroundColor: \"rgb(153, 46, 98)\",\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          fontSize: \"12px\",\n                                          color: \"#fff\",\n                                          fontWeight: \"bolder\",\n                                        }}\n                                      >\n                                        Patient Dashboard\n                                      </span>\n                                    </Button>\n                                  </ButtonGroup>\n                                </Link>\n                              </>\n                            )}\n                          </div>\n                        ),\n                      })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n                //setLoading(false)\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HTSList;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["565","566"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\BasicInfo.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\RecencyTesting.js",["590","591","592","593","594","595","596","597","598","599","600","601","602","603","604"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientReferralHistory.js",["605"],"import React, {Fragment, useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PNSList from \"../../NewRegistration/PartnerNotificationServices/PNSlist\";\r\nimport AddIndexContact from \"../../ContinuesHTSEnrollment/Elicitation/AddIndexContact\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport ClientRerralList from \"./ClientRerralList\";\r\n\r\nconst ClientReferralHistory = (props) => {\r\n    const [activePage, setActivePage] = useState(\"list\");\r\n    const handleIClickPage = (activeItem) => {\r\n        setActivePage(activeItem);\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const handleDone = (row, actionType) => {\r\n        props.setActivePage({\r\n            ...props.activePage,\r\n            activePage: \"home\",\r\n            activeObject: row,\r\n            actionType: actionType,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {activePage === \"list\" && (\r\n                        <ClientRerralList\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                            handleItemClick={handleItemClick}\r\n                            setRow={props.setRow}\r\n                        />\r\n                    )}\r\n                    {activePage === \"add\" && (\r\n                        <AddIndexContact\r\n                            activePage={activePage}\r\n                            setActivePage={setActivePage}\r\n                            handleIClickPage={handleIClickPage}\r\n                            patientObj={props.patientObj}\r\n                        />\r\n                    )}\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button\r\n                                content=\"Back\"\r\n                                icon=\"left arrow\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                                onClick={() =>\r\n                                    handleItemClick(\"recency-testing\", \"recency-testing\")\r\n                                }\r\n                            />\r\n                            <Button\r\n                                content=\"Done\"\r\n                                icon=\"list\"\r\n                                labelPosition=\"left\"\r\n                                style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                                onClick={() => handleDone()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClientReferralHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\Referrall_view_update.js",["606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ServicesProvided from \"../../NewRegistration/ServicesProvided\";\r\nimport RefferalForm from \"./RefferalUnit\";\r\nimport RefferralUnit from \"./RefferalUnit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewClientReferral = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"props.patientObj\", props.patientObj)\r\n  const [content, setContent] = useState({\r\n    showReferringUnit: false,\r\n    showServiceProviderUnit: false,\r\n  });\r\n  const patientObj = props.patientObj;\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [genders, setGenders] = useState([]);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(null);\r\n\r\n  const [contentDropDown, setContentDropDown] = useState(\"\");\r\n  const [formInfo, setFormInfo] = useState({\r\n    dateVisit: \"\",\r\n    firstName: props?.patientObj?.personResponseDto?.firstName,\r\n    middleName: props?.patientObj?.personResponseDto?.otherName,\r\n    lastName: props?.patientObj?.personResponseDto?.surname,\r\n    hospitalNumber:\r\n      props.patientObj?.personResponseDto?.identifier?.identifier[0]?.value,\r\n    countryId: \"1\",\r\n    stateId: props?.patientObj?.personResponseDto?.address?.address[0]?.stateId,\r\n    province: Number(\r\n      props?.patientObj?.personResponseDto?.address?.address[0]?.district\r\n    ),\r\n    address: props?.patientObj?.personResponseDto?.address?.address[0]?.city,\r\n    landmark: \"\",\r\n    phoneNumber:\r\n      props?.patientObj?.personResponseDto?.contactPoint?.contactPoint[0]\r\n        ?.value,\r\n    sexId: props?.patientObj?.personResponseDto?.gender?.id,\r\n    dob: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    age: \"\",\r\n    dateOfBirth: props?.patientObj.personResponseDto?.dateOfBirth,\r\n    hivStatus: props?.patientObj?.hivTestResult2\r\n      ? props?.patientObj?.hivTestResult2\r\n      : props?.patientObj?.hivTestResult\r\n      ? props?.patientObj?.hivTestResult\r\n      : \"\",\r\n    referredFromFacility: \"\",\r\n    nameOfPersonReferringClient: \"\",\r\n    nameOfReferringFacility: Cookies.get(\"facilityName\"),\r\n    addressOfReferringFacility: \"\",\r\n    phoneNoOfReferringFacility: \"\",\r\n    referredTo: \"\",\r\n    nameOfContactPerson: \"\",\r\n    nameOfReceivingFacility: \"\",\r\n    addressOfReceivingFacility: \"\",\r\n    phoneNoOfReceivingFacility: \"\",\r\n    isDateOfBirthEstimated: false,\r\n    serviceNeeded: \"\",\r\n    comments: \"\",\r\n    receivingStateFacility: \"\",\r\n    receivingLgaFacility: \"\",\r\n    htsClientId: props && props.patientObj ? props.patientObj?.id : \"\",\r\n    htsClientUuid: props && props.patientObj ? props.patientObj?.uuid : \"\",\r\n  });\r\n  const viewReferralInfo = () => {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFormInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    viewReferralInfo();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContentDropDown(e.target.value);\r\n    if (e.target.value === \"showReferringUnit\") {\r\n      setContent({\r\n        showReferringUnit: true,\r\n        showServiceProviderUnit: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.value === \"showServiceProviderUnit\") {\r\n      setContent({\r\n        showReferringUnit: false,\r\n        showServiceProviderUnit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group  col-md-8\">\r\n          <FormGroup>\r\n            <Label>\r\n              Referral Type <span style={{ color: \"red\" }}> *</span>\r\n            </Label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"contentDropDown\"\r\n              id=\"contentDropDown\"\r\n              onChange={handleContentChange}\r\n              style={{\r\n                border: \"1px solid #014D88\",\r\n                borderRadius: \"0.2rem\",\r\n              }}\r\n            >\r\n              <option value={\"\"}>Select Refarral form type</option>\r\n              <option value={\"showReferringUnit\"}>Referral form</option>\r\n              <option value={\"showServiceProviderUnit\"}>\r\n                Service Provider form\r\n              </option>\r\n            </select>\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <Card className={classes.root}>\r\n        {content.showReferringUnit && (\r\n          <RefferralUnit\r\n            patientObj={patientObj}\r\n            formInfo={formInfo}\r\n            row={props.row}\r\n            handleItemClick={props.handleItemClick}\r\n            setCompleted={props.setCompleted}\r\n            completed={props.completed}\r\n          />\r\n        )}\r\n        {content.showServiceProviderUnit && (\r\n          <CardBody>\r\n            <ServicesProvided\r\n              patientObj={patientObj}\r\n              formInfo={formInfo}\r\n              row={props.row}\r\n              handleItemClick={props.handleItemClick}\r\n              etCompleted={props.setCompleted}\r\n              completed={props.completed}\r\n            />\r\n          </CardBody>\r\n        )}\r\n        {/* recieving facility  */}\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewClientReferral;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["639","640","641","642","643","644"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ViewEditHivst.js",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["673","674","675","676","677","678","679","680","681","682"],"import React, { Fragment } from \"react\";\n// BS\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Link } from \"react-router-dom\";\n// images\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\n\nconst options = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [20, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [200, 45, 30,20]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 10, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst options2 = {\n  chart: {\n    type: 'column'\n},\n\ntitle: {\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\n},\n\nsubtitle: {\n    text: ''\n},\n\nlegend: {\n    align: 'right',\n    verticalAlign: 'middle',\n    layout: 'vertical'\n},\n\nxAxis: {\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\n    labels: {\n        x: -10\n    }\n},\n\nyAxis: {\n    allowDecimals: false,\n    title: {\n        text: 'Amount'\n    }\n},\n\nseries: [{\n    name: 'Number Eligble',\n    data: [200, 40, 30, 3]\n}, {\n    name: 'Number of Sample Collected',\n    data: [62, 41, 22, 22]\n}, {\n    name: 'Number Tested',\n    data: [2000, 450, 300,200]\n}, {\n  name: 'Number Suppressed',\n  data: [40, 40, 100, 90]\n}],\n\nresponsive: {\n    rules: [{\n        condition: {\n            maxWidth: 500\n        },\n        chartOptions: {\n            legend: {\n                align: 'center',\n                verticalAlign: 'bottom',\n                layout: 'horizontal'\n            },\n            yAxis: {\n                labels: {\n                    align: 'left',\n                    x: 0,\n                    y: -5\n                },\n                title: {\n                    text: null\n                }\n            },\n            subtitle: {\n                text: null\n            },\n            credits: {\n                enabled: false\n            }\n        }\n    }]\n}\n}\nconst Widget = () => {\n  return (\n    <Fragment>     \n      <div className=\"row\">\n       <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-primary text-danger\">\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY TESTED</p>\n                  <h4 className=\"mb-0\">3280</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-warning text-warning\">\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENT ON ART</p>\n                  <h4 className=\"mb-0\">2570</h4>\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body  p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-danger text-danger\">\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">NEWLY POSITIVE</p>\n                  <h4 className=\"mb-0\">50</h4>\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-3 col-lg-3 col-sm-3 col-xs-3\">\n          <div className=\"widget-stat card\">\n            <div className=\"card-body p-4\">\n              <div className=\"media ai-icon\">\n                <span className=\"me-3 bgl-success text-success\">\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                </span>\n                <div className=\"media-body\">\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\n                  <h4 className=\"mb-0\">2340</h4>\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <SummaryView />\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n          />\n        </div> */}\n        {/* <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options2}\n          />\n        </div> */}\n        \n      </div>\n    </Fragment>\n  );\n};\n\nexport default Widget;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["683","684","685","686"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\utility\\index.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\History\\History.js",["687","688","689","690"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { toast } from \"react-toastify\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  let history = useHistory();\n  useEffect(() => {\n    //patients()\n  }, [props.patientObj]);\n\n  const LoadViewPage = (row, actionType) => {\n    props.setActivePage({\n      ...props.activePage,\n      activePage: \"view\",\n      activeObject: row,\n      actionType: actionType,\n    });\n  };\n\n  const handleHTSDelete = (row) => {\n    console.log(props.patientList);\n    axios\n      .delete(`${baseUrl}hts/${row.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response);\n        toast.success(\n          `HTS patient with client code ${row.clientCode}, deleted successfully`\n        );\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"HTS HISTORY \"\n        columns={[\n          // { title: \"HTS ID\", field: \"id\" },\n          { title: \"Date\", field: \"date\" },\n          { title: \"Pre Test Counseling\", field: \"pre\" },\n          { title: \"Recency Test\", field: \"rencency\" },\n          { title: \"Post Test\", field: \"post\" },\n          // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\n          {\n            title: \"Request & Result\",\n            field: \"requestResult\",\n            filtering: false,\n          },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        isLoading={props.loading}\n        data={props.patientList.map((row) => ({\n          // id: row.id,\n          date: row.dateVisit,\n          pre: row.knowledgeAssessment ? \"Filled\" : \"Not Filled \",\n          requestResult: row.confirmatoryTest ? \"Filled\" : \"Not Filled \",\n          rencency: row.recency ? \"Filled\" : \"Not Filled \",\n          post: row.postTestCounselingKnowledgeAssessment\n            ? \"Filled\"\n            : \"Not Filled \",\n          //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\n\n          actions: (\n            <div>\n              <Menu.Menu position=\"right\">\n                <Menu.Item>\n                  <Button\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\n                    primary\n                    onClick={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <Dropdown item text=\"Action\">\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"view\")}\n                        >\n                          {\" \"}\n                          <Icon name=\"eye\" />\n                          View\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => LoadViewPage(row, \"update\")}\n                        >\n                          <Icon name=\"edit\" />\n                          Edit\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={() => handleHTSDelete(row)}>\n                          <Icon name=\"delete\" />\n                          Delete\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Button>\n                </Menu.Item>\n              </Menu.Menu>\n            </div>\n          ),\n        }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContineousRegistrationTesting.js",["691","692","693","694","695","696","697","698","699","700"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\ExistenceClientHIVSTRegistration.js",["701","702","703","704","705","706","707","708","709"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientHistory.js",["710","711","712"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728"],"import React, { useState } from 'react';\n\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\n   } from \"reactstrap\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from 'highcharts';\n import HighchartsReact from 'highcharts-react-official';\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\nimport { Progress } from 'reactstrap';\n\n\n// Load Highcharts modules\n//require(\"highcharts/modules/exporting\")(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n    },\n},\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst SummaryView = (props) => {\n  const classes = useStyles();\n  const [chartValue, setChartValue] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n  const [state, setState] = useState({ activeItem: 'gamepad' })\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n  const { activeItem } = state\n  const chartPage  = e => {\n\n    setChartValue(e)\n  }\n\n  //Menu Icon \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  return (\n    <div  spacing={5} style={{ padding: 20 }} >\n      <Row>\n        <Col md={12}>\n          {/* The second Column Card Layout  */}\n        <Row>\n                 \n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\n                  </CardBody></Card>\n                  </Col>\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n                  <Card><CardBody>\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\n                  </CardBody></Card>\n                  </Col>\n              </Row>\n\n           \n        </Col>\n      </Row>\n\n      \n\n      \n\n    </div>\n  );\n}\n\nexport default SummaryView;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\utils\\index.js",["729","730"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewPnsForm.js",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSHistory.js",["757","758","759","760","761"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RiskStratification.js",["762","763","764","765","766","767","768"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PostTest.js",["769","770","771","772","773"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\ClientReferral\\ReferralUnit.js",["774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\HIVST\\HIVSTPatientRegistration.js",["802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\RecencyTesting.js",["830","831","832","833","834","835","836","837","838","839","840","841","842","843"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["844","845"],"import Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nexport const NewlyEnrolledArtByAge = {\n    chart: {\n        \n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Number of Adults and Children newly enrolled on ART '\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n        point: {\n            valueSuffix: '%'\n        }\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'black'\n            },\n            showInLegend: true\n        }\n    },\n    series: [{\n        name: 'Newly Enrolled on ART by Age',\n        data: [\n            \n            { name: '25 + ', sliced: true, y: 61.41 },\n            { name: '20-24 ', y: 11.84 },\n            { name: '10-19 ', y: 10.85 },\n            { name: '≤ 9 ', y: 4.67 },\n        ]\n    }]\n};","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Others.js",["846","847","848","849","850","851","852","853","854","855"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\PNSlist.js",["856","857","858","859","860"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PNSList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients\r\n  async function patients() {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-personal-notification-service/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"pns\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-pns\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(\r\n        `${baseUrl}hts-personal-notification-service/${recordSelected.id}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>Add New PNS </span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client contact\"\r\n          columns={[\r\n            { title: \"Partner Name\", field: \"date\" },\r\n            { title: \"Partner ID\", field: \"age\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Partner Address\", field: \"address\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.htsClientInformation.partnerName,\r\n              age: row.partnerId,\r\n              // phone: row.phoneNumber,\r\n              address: row.htsClientInformation.partnerAddress,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                        style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                        primary\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown\r\n                          item\r\n                          text=\"Action\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => LoadViewPage(row, \"view\")}\r\n                            >\r\n                              {\" \"}\r\n                              <Icon name=\"eye\" />\r\n                              View\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"update\")}\r\n                            >\r\n                              <Icon name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                              <Icon name=\"delete\" />\r\n                              Delete\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PNSList;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\AddIndexContact.js",["861","862","863","864","865","866","867","868","869","870","871","872","873"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\Index.js",["874","875","876","877"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      //window.location.reload(false);\n      props.setActivePage({...props.activePage, activePage:\"home\"})\n     \n    }\n\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\HivTestResult.js",["878","879","880","881","882","883","884","885","886","887"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\PreTest.js",["888","889","890","891","892","893","894"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    //console.log(\"data1\", props.patientObj)\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \n            } \n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n \n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            \n            \n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                \n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n                                         \n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\BasicInfo.js",["895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\ContinuesHTSEnrollment\\Elicitation\\IndexContactList.js",["914","915","916","917","918","919","920","921"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          //{ title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\ClientRerralList.js",["922","923","924","925"],"import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Dropdown, Icon, Menu } from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\nconst ClientRerralList = (props) => {\r\n  const [indexClientList, setIndexClientList] = useState([]);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [serviceMapping, setServiceMapping] = useState({});\r\n  const [serviceNeeded, setServiceNeeded] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  //const [patientObj, setpatientObj] = useState([])\r\n  const patientId =\r\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\r\n  //const [key, setKey] = useState('home');\r\n  //console.log(props)\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  //get services needed\r\n  const SERVICE_NEEDED = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setServiceNeeded(response.data);\r\n          const mapping = {};\r\n          response.data.forEach((item) => {\r\n            mapping[item.code] = item.display;\r\n          });\r\n          setServiceMapping(mapping);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"Fetch Services error:\", e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    SERVICE_NEEDED();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}hts-client-referral/all/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setIndexClientList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const addNewPns = (e) => {\r\n    e.preventDefault();\r\n    props.handleItemClick(\"client-referral\");\r\n  };\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-referral\");\r\n    props.setRow({ row: row, action: actionType });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    // console.log(row);\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    axios\r\n      .delete(`${baseUrl}hts-client-referral/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        toggle();\r\n        patients();\r\n        // setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        // setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end  mr-2 mt-2\"\r\n          onClick={(e) => addNewPns(e)}\r\n          //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}> Refer Client</span>\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"List of  client submitted referral forms\"\r\n          columns={[\r\n            { title: \"Date visited\", field: \"date\" },\r\n            { title: \"Service needed\", field: \"service\" },\r\n            //   { title: \"Phone Number\", field: \"phone\" },\r\n            { title: \"Receiving Facility\", field: \"receiving\" },\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={indexClientList\r\n            .filter((b) => b.firstName !== \"\")\r\n            .map((row) => ({\r\n              date: row.dateVisit,\r\n              // service: serviceMapping[row.serviceNeeded] || row.serviceNeeded,\r\n                service: Object.values(row.serviceNeeded).join(', '),\r\n              // phone: row.phoneNumber,\r\n              receiving: row.nameOfReceivingFacility,\r\n              actions: (\r\n                <div>\r\n                  <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                      <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                      >\r\n                      <Dropdown\r\n                        item\r\n                        text=\"Action\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                          <Dropdown.Item\r\n                            onClick={(e) => LoadViewPage(row, \"view\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"eye\" />\r\n                            View\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"update\")}\r\n                          >\r\n                            <Icon name=\"edit\" />\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                            <Icon name=\"delete\" />\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                       </Button>\r\n                    </Menu.Item>\r\n                  </Menu.Menu>\r\n                </div>\r\n              ),\r\n            }))}\r\n          options={{\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            //   searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientRerralList;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\ClientReferral\\RefferalUnit.js",["926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\IndexContactList.js",["958","959","960","961","962","963","964","965"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PatientnHistory = (props) => {\n  const [indexClientList, setIndexClientList] = useState([]);\n  //const [patientObj, setpatientObj] = useState([])\n  const patientId =\n    props.patientObj && props.patientObj.id ? props.patientObj.id : null;\n  //const [key, setKey] = useState('home');\n  //console.log(props)\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    axios\n      .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIndexClientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleIEditIndex = (page, activePage) => {\n    console.log(page);\n    console.log(activePage);\n    //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n    //props.handleIClickPage(page)\n  };\n\n  const calculate_age = (dob) => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age_now--;\n    }\n    if (age_now === 0) {\n      return m + \" month(s)\";\n    }\n    return age_now + \" year(s)\";\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\" float-end  mr-2 mt-2\"\n        onClick={() => handleItemClickPage(\"add\")}\n        //startIcon={<FaUserPlus size=\"10\"/>}\n      >\n        <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n      </Button>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MaterialTable\n        icons={tableIcons}\n        title=\"List of  client contact\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Age\", field: \"age\" },\n          { title: \"Phone Number\", field: \"phone\" },\n          { title: \"Adress\", field: \"address\" },\n          // { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        data={indexClientList\n          .filter((b) => b.firstName !== \"\")\n          .map((row) => ({\n            name: row.firstName + \" \" + row.lastName,\n            age: calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n            phone: row.phoneNumber,\n            address: row.address,\n            actions: (\n              <>\n                {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n              </>\n            ),\n          }))}\n        options={{\n          headerStyle: {\n            //backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientnHistory;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Others.js",["966","967","968","969","970","971","972","973","974","975"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\FamilyIndexhIstory.js",["976","977","978","979","980"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../../../api\";\r\nimport { token as token } from \"./../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FamilyIndexHistory = (props) => {\r\n  let history = useHistory();\r\n  const [familyIndexList, setFamilyIndexList] = useState([]);\r\n  const toggle = () => setOpen(!open);\r\n  const [recordSelected, setRecordSelected] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const getListoFFamilyIndexInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hts-family-index-testing/${props.patientObj.id}/hts-client`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setFamilyIndexList([response.data]);\r\n          props.handleItemClick(\"fit-history\");\r\n        } else {\r\n          setFamilyIndexList([]);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"Fetch Facilities error\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListoFFamilyIndexInfo();\r\n  }, [props.patientObj]);\r\n\r\n  const LoadViewPage = (row, actionType) => {\r\n    props.handleItemClick(\"view-fit\");\r\n    props.setAction(actionType);\r\n  };\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecordSelected(row);\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    // setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}hts-family-index-testing/${recordSelected.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        getListoFFamilyIndexInfo();\r\n\r\n        toggle();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"form-group mb-3 col-md-12\">\r\n          {console.log(familyIndexList)}\r\n          {familyIndexList.length < 1 && (\r\n            <Button\r\n              content=\"Add New form\"\r\n              icon=\"left add\"\r\n              labelPosition=\"left\"\r\n              style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n              onClick={() => props.handleItemClick(\"fit\")}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            content=\"Done\"\r\n            icon=\"list\"\r\n            labelPosition=\"left\"\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            onClick={() => handleDone()}\r\n          /> */}\r\n        </div>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          // title=''\r\n          columns={[\r\n            // { title: \"HTS ID\", field: \"id\" },\r\n            { title: \"Family Index Client\", field: \"date\" },\r\n            { title: \"Date of Birth\", field: \"pre\" },\r\n            { title: \"Recency Test\", field: \"rencency\" },\r\n            // { title: \"Index Notification\", field: \"indexNotifiation\", filtering: false },\r\n\r\n            { title: \"Actions\", field: \"actions\", filtering: false },\r\n          ]}\r\n          isLoading={props.loading}\r\n          data={familyIndexList.map((row) => ({\r\n            // id: row.id,\r\n            date: row.indexClientId,\r\n            pre: row.dateOfBirth,\r\n            rencency: row.recencyTesting,\r\n\r\n            //indexNotifiation:row.indexNotificationServicesElicitation ? \"Filled\":\"Not Filled \",\r\n\r\n            actions: (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    {/* <Button\r\n                    style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                    primary\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  > */}\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"view\")}\r\n                        >\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => LoadViewPage(row, \"update\")}\r\n                        >\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadModal(row)}>\r\n                          <Icon name=\"delete\" />\r\n                          Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* </Button> */}\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          }))}\r\n          options={{\r\n            toolbar: false,\r\n            search: false,\r\n            headerStyle: {\r\n              //backgroundColor: \"#9F9FA5\",\r\n              color: \"#000\",\r\n            },\r\n            searchFieldStyle: {\r\n              width: \"200%\",\r\n              margingLeft: \"250px\",\r\n            },\r\n            filtering: false,\r\n            exportButton: false,\r\n            searchFieldAlignment: \"left\",\r\n            pageSizeOptions: [10, 20, 100],\r\n            pageSize: 10,\r\n            debounceInterval: 400,\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete ?\r\n            {/* <b>{row && record.activityName}</b> */}\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(recordSelected)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            Yes\r\n            {/* {saving === false ? \"Yes\" : \"Deleting...\"} */}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            // disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyIndexHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\Elicitation\\AddIndexContact.js",["981","982","983","984","985","986","987","988","989","990","991"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [hivTestDate, setHivTestDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n\n  useEffect(() => {\n    Sex();\n    getStates();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n    if (props.patientObj) {\n      if (props.patientObj.dateVisit && props.patientObj.dateVisit !== \"\") {\n        setHivTestDate(props.patientObj.dateVisit);\n      } else {\n        setHivTestDate(\"\");\n      }\n    }\n  }, [props.patientObj]);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age_now--;\n      }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value === \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value === \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n          //handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(\"Something went wrong. Please try again...\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Sex *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Address</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Relationship to Index Client *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Do you currently live with this partner? *</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ? *\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>Notification Method selected*</Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\PartnerNotificationServices\\ViewFamilyIndexForm.js",["992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistration\\ServicesProvided.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { getAllGenders, alphabetOnly } from \"../../../../utility\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport DualListBox from \"react-dual-listbox\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ServicesProvided = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [genders, setGenders] = useState([]);\r\n    const [serviceNeeded, setServiceNeeded] = useState([]);\r\n    const [selectedServiceNeeded, setSelectServiceNeeded] = useState([]);\r\n\r\n    const [payload, setPayload] = useState({\r\n        nameOfFacilityProvider: props?.formInfo?.nameOfReceivingFacility,\r\n        addressOfFacilityProvider: props?.formInfo?.addressOfReceivingFacility || \"\",\r\n        visitDate: props?.formInfo?.receivingOrganization?.visitDate || \"\",\r\n        comments: props?.formInfo?.comments || \"\",\r\n        clientFirstName: props?.patientObj?.personResponseDto?.firstName,\r\n        clientLastName: props?.patientObj?.personResponseDto?.surname,\r\n        clientMiddleName: props?.patientObj?.personResponseDto?.otherName,\r\n        nameOfServiceProvider: props?.formInfo?.receivingOrganization?.nameOfServiceProvider || \"\",\r\n        signature: props?.formInfo?.receivingOrganization?.signature || \"\",\r\n        phoneNumber: props?.formInfo?.receivingOrganization?.phoneNumber || \"\",\r\n        categoryOfService: props?.formInfo?.receivingOrganization?.categoryOfService\r\n            || {},\r\n        receivingFacilityLgaName: props?.formInfo?.receivingFacilityLgaName,\r\n        receivingFacilityStateName: props?.formInfo?.receivingFacilityStateName\r\n    });\r\n\r\n const history = useHistory();\r\n  const [states1, setStates1] = useState([])\r\n  const [lgas1, setLGAs1] = useState([])\r\n  const [facilities1, setFacilities1] = useState([])\r\n  const [selectedState, setSelectedState] = useState({})\r\n  const [selectedFacility, setSelectedFacility] = useState({});\r\n  const [selectedLga, setSelectedLga] = useState({});\r\n\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n\r\n    const checkNumberLimit = (e) => {\r\n        const limit = 11;\r\n        const acceptedNumber = e.slice(0, limit);\r\n        return acceptedNumber;\r\n    };\r\n    const handleInputChangePhoneNumber = (e, inputName) => {\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n        setPayload({ ...payload, [inputName]: NumberValue });\r\n    };\r\n\r\n\r\n  // ##############################################\r\n\r\n    const SERVICE_NEEDED = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/SERVICE_PROVIDED`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    // create array of objects from the response\r\n                    const serviceNeeded = response.data.map((service) => {\r\n                        return {\r\n                            value: service.display,\r\n                            label: service.display\r\n                        }\r\n                    });\r\n                    setServiceNeeded(serviceNeeded);\r\n                    // console.log(\"serviceNeeded\", serviceNeeded)\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                // handle error\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch the saved serviceNeeded from the backend\r\n        axios.get(`${baseUrl}hts-client-referral/${props.row.row.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n            .then((response) => {\r\n                // Convert the serviceNeeded object into an array of its values\r\n                const serviceNeededArray = Object.values(response.data.serviceNeeded);\r\n\r\n                // Set the serviceNeededArray to selectedServiceNeeded state\r\n                setSelectServiceNeeded(serviceNeededArray);\r\n            })\r\n            .catch((error) => {\r\n                // Handle error...\r\n            });\r\n    }, []);\r\n\r\n\r\n  const loadStates1 = () => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setStates1(response.data);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch states error\" + e);\r\n        });\r\n  };\r\n\r\n\r\n\r\n  const loadLGA1 = (id) => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setLGAs1(response.data);\r\n            // const selectedLga = response.data.find(lga => lga.id === id);\r\n            // setPayload(prevPayload => ({ ...prevPayload, lgaTransferTo: selectedLga ? selectedLga.name : \"\" }));\r\n          }\r\n\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch LGA error\" + e);\r\n        });\r\n  };\r\n\r\n  const loadFacilities1 = (id) => {\r\n    axios.get(`${baseUrl}organisation-units/parent-organisation-units/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setFacilities1(response.data);\r\n\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // console.log(\"Fetch Facilities error\" + e);\r\n        });\r\n  };\r\n\r\n  const handleInputChangeLocation = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if(e.target.name === 'stateTransferTo'){\r\n      let filteredState = states1.filter((each)=>{\r\n        return each.name.toLowerCase()  === e.target.value.toLowerCase()\r\n      })\r\n      setPayload({ ...payload, receivingFacilityStateName : e.target.value });\r\n\r\n      loadLGA1(filteredState[0].id);\r\n    }\r\n    if(e.target.name === 'lgaTransferTo'){\r\n      let filteredState = lgas1.filter((each)=>{\r\n        return each.name.toLowerCase()  === e.target.value.toLowerCase()\r\n      })\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n      loadFacilities1(filteredState[0].id);\r\n\r\n    }\r\n\r\n  };\r\n  // ################################################\r\n  const getGenders = () => {\r\n    getAllGenders()\r\n      .then((res) => {\r\n        setGenders(res);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"error\", e);\r\n      });\r\n    // ;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getGenders();\r\n    loadStates1()\r\n    SERVICE_NEEDED()\r\n  }, []);\r\n\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    if (e) {\r\n      setErrors({ ...errors, phoneNumber: \"\" });\r\n    }\r\n    const limit = 10;\r\n    setPayload({ ...payload, phoneNumber: e.slice(0, limit) });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"nameOfFacilityProvider\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"addressOfFacilityProvider\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientFirstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientMiddleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (e.target.name === \"clientLastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else if (\r\n      e.target.name === \"nameOfServiceProvider\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      const name = alphabetOnly(e.target.value);\r\n      setPayload({ ...payload, [e.target.name]: name });\r\n    } else {\r\n      setPayload({ ...payload, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.nameOfFacilityProvider = payload.nameOfFacilityProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.addressOfFacilityProvider = payload.addressOfFacilityProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.visitDate = payload.visitDate ? \"\" : \"This field is required.\";\r\n    // temp.clientFirstName = payload.clientFirstName\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    // temp.clientLastName = payload.clientLastName\r\n    //   ? \"\"\r\n    //   : \"This field is required.\";\r\n    temp.nameOfServiceProvider = payload.nameOfServiceProvider\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n\r\n    temp.signature = payload.signature ? \"\" : \"This field is required.\";\r\n    temp.phoneNumber = payload.phoneNumber ? \"\" : \"This field is required.\";\r\n\r\n    temp.categoryOfService = payload.categoryOfService\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n     // console.log(\"temp\", temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      htsClientReferralId: props.row.row.id,\r\n      receivingOrganizationDTO: payload\r\n    };\r\n    if (validate()) {\r\n      try {\r\n        setSaving(true);\r\n        await axios.put(`${baseUrl}hts-client-referral/${props.row.row.id}`, data, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setSaving(false);\r\n        toast.success(\"Record saved successfully\", { position: toast.POSITION.BOTTOM_CENTER });\r\n          props.handleItemClick(\"refferal-history\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        const errorMessage = error.response?.data?.apierror?.message || \"Something went wrong, please try again\";\r\n        toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div>\r\n        <h2 style={{ color: \"#000\" }}>Client Referral Form </h2>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n            style={{\r\n              backgroundColor: \"#992E62\",\r\n              width: \"125%\",\r\n              height: \"35px\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Referral Form For Services Provided\r\n          </div>\r\n\r\n          <p style={{ color: \"black\", marginBottom: \"20px\" }}>\r\n            <i>\r\n              Note: This form should be filled out by the organization providing\r\n              the service\r\n            </i>\r\n          </p>\r\n          <div className=\"row\">\r\n            {/*###############################*/}\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">*/}\r\n            {/*      Facility providing service State*/}\r\n            {/*    </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*        type=\"text\"*/}\r\n            {/*        name=\"receivingFacilityStateName\"*/}\r\n            {/*        id=\"receivingFacilityStateName\"*/}\r\n            {/*        value={payload.receivingFacilityStateName}*/}\r\n            {/*        onChange={handleInputChange}*/}\r\n            {/*        style={{*/}\r\n            {/*          border: \"1px solid #014D88\",*/}\r\n            {/*          borderRadius: \"0.2rem\",*/}\r\n            {/*        }}*/}\r\n            {/*        disabled*/}\r\n            {/*    />*/}\r\n            {/*    {errors.nameOfServiceProvider !== \"\" ? (*/}\r\n            {/*        <span className={classes.error}>*/}\r\n            {/*        {errors.nameOfServiceProvider}*/}\r\n            {/*      </span>*/}\r\n            {/*    ) : (*/}\r\n            {/*        \"\"*/}\r\n            {/*    )}*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">*/}\r\n            {/*      Facility providing service LGA*/}\r\n            {/*    </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*        type=\"text\"*/}\r\n            {/*        name=\"receivingFacilityLgaName\"*/}\r\n            {/*        id=\"receivingFacilityLgaName\"*/}\r\n            {/*        value={payload.receivingFacilityLgaName}*/}\r\n            {/*        onChange={handleInputChange}*/}\r\n            {/*        style={{*/}\r\n            {/*          border: \"1px solid #014D88\",*/}\r\n            {/*          borderRadius: \"0.2rem\",*/}\r\n            {/*        }}*/}\r\n            {/*        disabled*/}\r\n            {/*    />*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">Facility providing Service</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"nameOfFacilityProvider\"\r\n                  id=\"nameOfFacilityProvider\"\r\n                  value={payload.nameOfFacilityProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            {/*###############################*/}\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Address of Facility providing the service{\" \"}\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"addressOfFacilityProvider\"\r\n                  id=\"addressOfFacilityProvider\"\r\n                  value={payload.addressOfFacilityProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.addressOfFacilityProvider !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.addressOfFacilityProvider}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"\">\r\n                  Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                </Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"visitDate\"\r\n                  id=\"visitDate\"\r\n                  value={payload.visitDate}\r\n                  onChange={handleInputChange}\r\n                  min={props.formInfo.dateVisit}\r\n                  max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.visitDate !== \"\" ? (\r\n                  <span className={classes.error}>{errors.visitDate}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Client First Name <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientFirstName\"\r\n                  id=\"clientFirstName\"\r\n                  value={payload.clientFirstName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.clientFirstName !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.clientFirstName}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"clientMiddleName\">\r\n                  Client Middle Name\r\n                  {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientMiddleName\"\r\n                  id=\"clientMiddleName\"\r\n                  value={payload.clientMiddleName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"clientLastName\">\r\n                  Client Last Name <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"clientLastName\"\r\n                  id=\"clientLastName\"\r\n                  value={payload.clientLastName}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n                />\r\n                {errors.clientLastName !== \"\" ? (\r\n                  <span className={classes.error}>{errors.clientLastName}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3 col-md-12\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Comments\r\n                  {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"textarea\"\r\n                  rows=\"4\"\r\n                  cols=\"7\"\r\n                  name=\"comments\"\r\n                  id=\"comments\"\r\n                  value={payload.comments}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                    height: \"100px\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {/* {errors.firstName !== \"\" ? (\r\n                  <span className={classes.error}>{errors.firstName}</span>\r\n                ) : (\r\n                  \"\"\r\n                )} */}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Name of service provider\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"nameOfServiceProvider\"\r\n                  id=\"nameOfServiceProvider\"\r\n                  value={payload.nameOfServiceProvider}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.nameOfServiceProvider !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nameOfServiceProvider}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"firstName\">\r\n                  Signature\r\n                  <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"signature\"\r\n                  id=\"signature\"\r\n                  value={payload.signature}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                />\r\n                {errors.signature !== \"\" ? (\r\n                  <span className={classes.error}>{errors.signature}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group  col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                  id=\"phoneNumber\"\r\n                  onChange={(e) => {\r\n                    handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                  }}\r\n                  value={payload.phoneNumber}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                  disabled={props.row.action === \"view\" ? true : false}\r\n                  // required\r\n                />\r\n                {errors.phoneNumber !== \"\" ? (\r\n                  <span className={classes.error}>{errors.phoneNumber}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {/*<div className=\"form-group mb-3 col-md-6\">*/}\r\n            {/*  <FormGroup>*/}\r\n            {/*    <Label for=\"firstName\">Categories of Services </Label>*/}\r\n            {/*    <Input*/}\r\n            {/*      className=\"form-control\"*/}\r\n            {/*      type=\"text\"*/}\r\n            {/*      name=\"serviceCategory\"*/}\r\n            {/*      id=\"serviceCategory\"*/}\r\n            {/*      value={payload.categoryOfService}*/}\r\n            {/*      onChange={handleInputChange}*/}\r\n            {/*      style={{*/}\r\n            {/*        border: \"1px solid #014D88\",*/}\r\n            {/*        borderRadius: \"0.2rem\",*/}\r\n            {/*      }}*/}\r\n            {/*      disabled*/}\r\n            {/*    />*/}\r\n            {/*  </FormGroup>*/}\r\n            {/*</div>*/}\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                      <Label for=\"dualListBox\">\r\n                          Categories of Services\r\n                      </Label>\r\n              <DualListBox\r\n                  options={serviceNeeded}\r\n                  selected={selectedServiceNeeded}\r\n                  onChange={(value) => {\r\n                      // Update selectedServiceNeeded state\r\n                      setSelectServiceNeeded(value);\r\n                      // Convert selectedServiceNeeded array into an object\r\n                      const serviceNeededObject = value.reduce((obj, item, index) => {\r\n                          obj[index] = item;\r\n                          return obj;\r\n                      }, {});\r\n                      // Update serviceNeeded in payload\r\n                      setPayload({ ...payload, categoryOfService: serviceNeededObject });\r\n                  }}\r\n                  // disabled={props.row.action === \"view\" ? true : false}\r\n                  disabled\r\n              />\r\n                  </FormGroup>\r\n              </div>\r\n          </div>\r\n          <br />\r\n\r\n          <br />\r\n\r\n          <br />\r\n          {props.row.action === \"update\" && (\r\n            <div className=\"row\">\r\n              {/*<div className=\"form-group mb-3 col-md-12\">*/}\r\n              {/*  <Button*/}\r\n              {/*    content=\"Done\"*/}\r\n              {/*    type=\"submit\"*/}\r\n              {/*    // icon=\"right arrow\"*/}\r\n              {/*    // labelPosition=\"right\"*/}\r\n              {/*    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}*/}\r\n              {/*    onClick={() => {*/}\r\n              {/*      history.push(\"/\");*/}\r\n              {/*    }}*/}\r\n              {/*    disabled={saving}*/}\r\n              {/*  />*/}\r\n              {/*</div>*/}\r\n              <div className=\"form-group mb-3 mt-5 col-md-6\">\r\n                <Button\r\n                  content=\"Done\"\r\n                  type=\"submit\"\r\n                  // icon=\"right arrow\"\r\n                  // labelPosition=\"right\"\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicesProvided;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RecencyTesting.js",["1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst Recency = (props) => {\r\n  console.log(\"data1\", props.patientObj);\r\n  const classes = useStyles();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [hivTestDate, setHivTestDate] = useState(\"\");\r\n  let temp = { ...errors };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    recency: {},\r\n    personId: patientID,\r\n  });\r\n  const [recency, setRecency] = useState({\r\n    optOutRTRI:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRI\r\n        : \"\",\r\n    optOutRTRITestName:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestName\r\n        : \"\",\r\n    optOutRTRITestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.optOutRTRITestDate\r\n        : \"\",\r\n    rencencyId:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyId\r\n        : \"\",\r\n    controlLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.controlLine\r\n        : \"\",\r\n    verififcationLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.verififcationLine\r\n        : \"\",\r\n    longTermLine:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.longTermLine\r\n        : \"\",\r\n    rencencyInterpretation:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.rencencyInterpretation\r\n        : \"\",\r\n    hasViralLoad:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.hasViralLoad\r\n        : \"\",\r\n    sampleCollectedDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleCollectedDate\r\n        : \"\",\r\n    sampleReferanceNumber:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleReferanceNumber\r\n        : \"\",\r\n    dateSampleSentToPCRLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.dateSampleSentToPCRLab\r\n        : \"\",\r\n    sampleTestDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleTestDate\r\n        : \"\",\r\n    sampleType:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.sampleType\r\n        : \"\",\r\n    receivingPcrLab:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivingPcrLab\r\n        : \"\",\r\n    viralLoadResultClassification:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadResultClassification\r\n        : \"\",\r\n    recencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.recencyResult\r\n        : \"\",\r\n    finalRecencyResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.finalRecencyResult\r\n        : \"\",\r\n    viralLoadConfirmationResult:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.viralLoadConfirmationResult\r\n        : \"\",\r\n    receivedResultDate:\r\n      props.patientObj && props.patientObj.recency !== null\r\n        ? props.patientObj.recency.receivedResultDate\r\n        : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj.recency !== null) {\r\n      // console.log(props.patientObj.recency);\r\n      setRecency(props.patientObj.recency);\r\n    }\r\n    if (props.patientObj) {\r\n      if (\r\n        props.patientObj.confirmatoryTest2 &&\r\n        props.patientObj.confirmatoryTest2.date2 !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest2.date2);\r\n      } else if (\r\n        props.patientObj.confirmatoryTest &&\r\n        props.patientObj.confirmatoryTest.date !== \"\"\r\n      ) {\r\n        setHivTestDate(props.patientObj.confirmatoryTest.date);\r\n      } else {\r\n        setHivTestDate(\"\");\r\n      }\r\n    }\r\n    if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Long Term\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Long Term\" });\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"RTRI Recent\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"RTRI Recent\" });\r\n      //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n    } else if (\r\n      recency.longTermLine === \"false\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Negative\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Negative\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"true\" &&\r\n      recency.controlLine === \"false\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else if (\r\n      recency.longTermLine === \"true\" &&\r\n      recency.verififcationLine === \"false\" &&\r\n      recency.controlLine === \"true\"\r\n    ) {\r\n      recency.rencencyInterpretation = \"Invalid\";\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"Invalid\" });\r\n    } else {\r\n      setRecency({ ...recency, [\"rencencyInterpretation\"]: \"\" });\r\n    }\r\n    if (recency.optOutRTRI === \"true\") {\r\n      setRecency({\r\n        optOutRTRI:\r\n          props.patientObj && props.patientObj.recency !== null\r\n            ? props.patientObj.recency.optOutRTRI\r\n            : \"\",\r\n        optOutRTRITestName: \"\",\r\n        optOutRTRITestDate: \"\",\r\n        rencencyId: \"\",\r\n        controlLine: \"\",\r\n        verififcationLine: \"\",\r\n        longTermLine: \"\",\r\n        rencencyInterpretation: \"\",\r\n        hasViralLoad: \"\",\r\n        sampleCollectedDate: \"\",\r\n        sampleReferanceNumber: \"\",\r\n        dateSampleSentToPCRLab: \"\",\r\n        sampleTestDate: \"\",\r\n        sampleType: \"\",\r\n        receivingPcrLab: \"\",\r\n        viralLoadResultClassification: \"\",\r\n\r\n        recencyResult: \"\",\r\n        finalRecencyResult: \"\",\r\n        viralLoadConfirmationResult: \"\",\r\n        receivedResultDate: \"\",\r\n      });\r\n    }\r\n  }, [\r\n    recency.longTermLine,\r\n    recency.verififcationLine,\r\n    recency.controlLine,\r\n    props.patientObj,\r\n  ]);\r\n  //console.log(props.patientObj)\r\n  const handleInputChangeRecency = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"viralLoadConfirmationResult\") {\r\n      if (e.target.value >= 1000) {\r\n        recency.viralLoadResultClassification = \">=1000\";\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value < 1000) {\r\n        recency.viralLoadResultClassification = \"<1000\";\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    }\r\n    if (e.target.name === \"viralLoadResultClassification\") {\r\n      if (e.target.value === \">=1000\") {\r\n        recency.finalRecencyResult = \"RITA Recent\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"<1000\") {\r\n        recency.finalRecencyResult = \"RITA Long term\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Failed run\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"Invalid viral load result\") {\r\n        recency.finalRecencyResult = \"RITA Inconclusive\";\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRecency({ ...recency, [e.target.name]: e.target.value });\r\n      }\r\n    } else if (e.target.name === \"rencencyId\" && e.target.value !== \"\") {\r\n      const recencyIdNumberValue = checkRecencyLimit(e.target.value);\r\n      setRecency({ ...recency, [e.target.name]: recencyIdNumberValue });\r\n    } else if (e.target.name === \"receivedResultDate\") {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    } else {\r\n      setRecency({ ...recency, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkRecencyLimit = (e) => {\r\n    const limit = 10;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleReferanceNumber = recency.sampleReferanceNumber\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n    }\r\n    // {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n    {\r\n      recency.hasViralLoad == \"true\" &&\r\n        (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\");\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    objValues.htsClientId = clientId;\r\n    objValues.recency = recency;\r\n    objValues.personId = patientID;\r\n    //console.log(recency)\r\n    if (validate() ) {\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/recency`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n          props.setPatientObj(response.data);\r\n          //toast.success(\"Risk Assesment successful\");\r\n          //comment this out for release\r\n          // handleItemClick(\"fit-history\", \"recency-testing\");\r\nhandleItemClick(\"pns-history\", \"recency-testing\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>RECENCY FORM</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h5 style={{ color: \"#fff\" }}>RECENCY</h5>\r\n              </LabelRibbon>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Opt Out of RTRI? <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"optOutRTRI\"\r\n                    id=\"optOutRTRI\"\r\n                    value={recency.optOutRTRI}\r\n                    onChange={handleInputChangeRecency}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8\"></div>\r\n              {recency.optOutRTRI === \"false\" && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"optOutRTRITestName\"\r\n                        id=\"optOutRTRITestName\"\r\n                        value={recency.optOutRTRITestName}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"Asante\">Asante</option>\r\n                        <option value=\"Others\">Others</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Test Date <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"optOutRTRITestDate\"\r\n                        id=\"optOutRTRITestDate\"\r\n                        value={recency.optOutRTRITestDate}\r\n                        onChange={handleInputChangeRecency}\r\n                        min={\r\n                          hivTestDate !== \"\" && hivTestDate !== null\r\n                            ? hivTestDate\r\n                            : \"\"\r\n                        }\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency ID <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyId\"\r\n                        id=\"rencencyId\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyId}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Control Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"controlLine\"\r\n                        id=\"controlLine\"\r\n                        value={recency.controlLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Verification Line{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"verififcationLine\"\r\n                        id=\"verififcationLine\"\r\n                        value={recency.verififcationLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Long Term Line <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"longTermLine\"\r\n                        id=\"longTermLine\"\r\n                        value={recency.longTermLine}\r\n                        onChange={handleInputChangeRecency}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Recency Interpretation{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        name=\"rencencyInterpretation\"\r\n                        id=\"rencencyInterpretation\"\r\n                        type=\"text\"\r\n                        value={recency.rencencyInterpretation}\r\n                        disabled\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  {recency.rencencyInterpretation === \"RTRI Recent\" && (\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Has Viral Load been ordered? </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"hasViralLoad\"\r\n                          id=\"hasViralLoad\"\r\n                          value={recency.hasViralLoad}\r\n                          onChange={handleInputChangeRecency}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {recency.hasViralLoad === \"true\" && (\r\n                    <>\r\n                      <div className=\"row\">\r\n                        <h4>Recency Viral Load Classification :</h4>\r\n                        <br />\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Collected Date</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleCollectedDate\"\r\n                              id=\"sampleCollectedDate\"\r\n                              type=\"date\"\r\n                              value={recency.sampleCollectedDate}\r\n                              min={recency.optOutRTRITestDate}\r\n                              max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Reference Number{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"sampleReferanceNumber\"\r\n                              id=\"sampleReferanceNumber\"\r\n                              type=\"text\"\r\n                              value={recency.sampleReferanceNumber}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            />\r\n                            {errors.sampleReferanceNumber !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleReferanceNumber}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Sample Type{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"sampleType\"\r\n                              id=\"sampleType\"\r\n                              value={recency.sampleType}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"DBS\">DBS</option>\r\n                              <option value=\"Plasma\">Plasma</option>\r\n                            </select>\r\n                            {errors.sampleType !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.sampleType}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Date Recency Sample Sent to PCR Lab</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"dateSampleSentToPCRLab\"\r\n                                id=\"dateSampleSentToPCRLab\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.sampleCollectedDate}\r\n                                value={recency.dateSampleSentToPCRLab}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                            {errors.dateSampleSentToPCRLab !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateSampleSentToPCRLab}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Recency Sample Test Date</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"sampleTestDate\"\r\n                                id=\"sampleTestDate\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.dateSampleSentToPCRLab}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={recency.sampleTestDate}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Receiving PCR Lab</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"receivingPcrLab\"\r\n                              id=\"receivingPcrLab\"\r\n                              type=\"text\"\r\n                              value={recency.receivingPcrLab}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Confirmation Result (copies/ml)\r\n                            </Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadConfirmationResult\"\r\n                              id=\"viralLoadConfirmationResult\"\r\n                              type=\"number\"\r\n                              value={recency.viralLoadConfirmationResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Received Date\r\n                            </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                name=\"receivedResultDate\"\r\n                                id=\"receivedResultDate\"\r\n                                type=\"date\"\r\n                                // min={recency.optOutRTRITestDate}\r\n                                min={recency.sampleTestDate}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={recency.receivedResultDate}\r\n                                onChange={handleInputChangeRecency}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Recency Viral Load Result Classification and\r\n                              Result (copies/ml)\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"viralLoadResultClassification\"\r\n                              id=\"viralLoadResultClassification\"\r\n                              value={recency.viralLoadResultClassification}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value=\">=1000\">{\">= \"} 1000</option>\r\n                              <option value=\"<1000\">{\"< \"} 1000</option>\r\n                              <option value=\"Failed run\">Failed run</option>\r\n                              <option value=\"Invalid viral load result\">\r\n                                Invalid viral load result\r\n                              </option>\r\n                            </select>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </div> */}\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>Final Recency Result</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name=\"finalRecencyResult\"\r\n                              id=\"finalRecencyResult\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              value={recency.finalRecencyResult}\r\n                              onChange={handleInputChangeRecency}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              readOnly={props.activePage.actionType === \"view\"}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"post-test\", \"post-test\")}\r\n                  />\r\n                  <Button\r\n                    content=\"Save & Continue\"\r\n                    icon=\"right arrow\"\r\n                    labelPosition=\"right\"\r\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    onClick={handleSubmit}\r\n                    disabled={\r\n                      props.patientObj?.postTestCounselingKnowledgeAssessment\r\n                        ?.hivTestResult === \"true\" && recency.optOutRTRI === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recency;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\RiskStratification.js",["1081","1082","1083","1084","1085","1086","1087"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n//import SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import PhoneInput from 'react-phone-input-2'\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelRibbon, Message } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n    fontSize: \"12.8px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst RiskStratification = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"active\", props.activePage.activeObject);\r\n  //console.log(\"con\", props.patientObj);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const [entryPointCommunity, setEntryPointCommunity] = useState([]);\r\n  let riskCountQuestion = [];\r\n  const [kP, setKP] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  let temp = { ...errors };\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const [setting, setSetting] = useState([]);\r\n  const [riskCount, setRiskCount] = useState(0);\r\n  const [isPMTCTModality, setIsPMTCTModality] = useState(false);\r\n  const [showRiskAssessment, setShowRiskAssessment] = useState(false);\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    age: props.patientAge,\r\n    dob: props.patientObj.dateOfBirth,\r\n    visitDate: \"\",\r\n    dateOfBirth: props.patientObj.dateOfBirth,\r\n    dateOfRegistration: \"\", //props.patientObj.dateOfRegistration,\r\n    isDateOfBirthEstimated: \"\", //props.patientObj.personResponseDto.isDateOfBirthEstimated\r\n    targetGroup: \"\",\r\n    testingSetting: \"\", //\r\n    modality: \"\", //\r\n    code: \"\",\r\n    id: \"\",\r\n    personId: props.patientObj.id,\r\n    riskAssessment: {},\r\n    entryPoint: \"\",\r\n    careProvider: \"\",\r\n    communityEntryPoint: \"\",\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    // everHadSexualIntercourse:\"\",\r\n    // bloodtransInlastThreeMonths:\"\",\r\n    // uprotectedSexWithCasualLastThreeMonths:\"\",\r\n    // uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\r\n    // unprotectedVaginalSex:\"\",\r\n    // uprotectedAnalSex:\"\",\r\n    // stiLastThreeMonths:\"\",\r\n    // sexUnderInfluence :\"\",\r\n    // moreThanOneSexPartnerLastThreeMonths:\"\",\r\n    // experiencePain:\"\",\r\n    // haveSexWithoutCondom:\"\",\r\n    // abuseDrug:\"\",\r\n    // bloodTransfusion:\"\",\r\n    // consistentWeightFeverNightCough:\"\",\r\n    // soldPaidVaginalSex:\"\",\r\n    //New Question\r\n    lastHivTestForceToHaveSex: \"\",\r\n    lastHivTestHadAnal: \"\",\r\n    lastHivTestInjectedDrugs: \"\",\r\n    whatWasTheResult: \"\",\r\n    lastHivTestDone: \"\",\r\n    diagnosedWithTb: \"\",\r\n    lastHivTestPainfulUrination: \"\",\r\n    lastHivTestBloodTransfusion: \"\",\r\n    lastHivTestVaginalOral: \"\",\r\n    lastHivTestBasedOnRequest: \"\",\r\n  });\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    EntryPoint();\r\n    HTS_ENTRY_POINT_COMMUNITY();\r\n\r\n    if (props.activePage.activeObject.riskStratificationResponseDto !== null) {\r\n      setObjValues(props.activePage.activeObject.riskStratificationResponseDto);\r\n\r\n      SettingModality(\r\n        props.activePage.activeObject.riskStratificationResponseDto\r\n          .testingSetting\r\n      );\r\n\r\n      setRiskAssessment(\r\n        props.activePage.activeObject.riskStratificationResponseDto &&\r\n          props.activePage.activeObject.riskStratificationResponseDto\r\n            .riskAssessment\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const HTS_ENTRY_POINT_COMMUNITY = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT_COMMUNITY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPointCommunity(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Set HTS menu registration\r\n  const getMenuLogic = () => {\r\n    // first logic\r\n    // if (objValues.age !== \"\" && objValues.age <= 15) {\r\n    //   props.setHideOtherMenu(true);\r\n    // } else if (objValues.age !== \"\" && objValues.age > 15) {\r\n    //   props.setHideOtherMenu(true);\r\n    // } else {\r\n    //   props.setHideOtherMenu(true);\r\n    // }\r\n\r\n    // if (objValues.age !== \"\" && objValues.age >= 85) {\r\n    //   toggle();\r\n    // }\r\n\r\n    //secound logic\r\n    props.setHideOtherMenu(false);\r\n  };\r\n\r\n  const checkPMTCTModality = (modality) => {\r\n    console.log(\"modality\", modality);\r\n    if (\r\n      modality === \"TEST_SETTING_CT_PMTCT\" ||\r\n      modality === \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_OTHERS_POST_ANC1_PREGNANT_L&D\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n      modality === \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_PREGNANT_L&D\"\r\n    ) {\r\n      console.log(\"it is PMTCT MODALITY \");\r\n      setIsPMTCTModality(true);\r\n      return true;\r\n    } else {\r\n      console.log(\"it is NOT pmtct modality \");\r\n\r\n      setIsPMTCTModality(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"testingSetting\" && e.target.value !== \"\") {\r\n      SettingModality(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"modality\" && e.target.value !== \"\") {\r\n      //SettingModality(e.target.value)\r\n      if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_EMERGENCY\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (\r\n        e.target.value ===\r\n        \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n      ) {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STANDALONE_HTS_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_PMTCT\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_CT_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_TB_TB\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_STI_STI\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OPD_STI\") {\r\n        //setRiskCount(1)\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else if (e.target.value === \"TEST_SETTING_OUTREACH_INDEX\") {\r\n        setRiskCount(1);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      } else {\r\n        setRiskCount(0);\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      }\r\n\r\n      let ans = checkPMTCTModality(e.target.value);\r\n\r\n      console.log(\"answerrrr\", ans);\r\n      displayRiskAssessment(\r\n        riskAssessment.lastHivTestBasedOnRequest,\r\n        objValues.age,\r\n        ans\r\n      );\r\n    }\r\n\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const displayRiskAssessment = (lastVisit, age, isPMTCTModalityValue) => {\r\n    let SecAge = age !== \"\" ? age : 0;\r\n    let ans;\r\n    console.log(\r\n      \"variable lastVisit\",\r\n      lastVisit,\r\n      \"objValues.age\",\r\n      objValues.age,\r\n      \"isPMTCTModality\",\r\n      isPMTCTModalityValue,\r\n      \"SecAge\",\r\n      SecAge\r\n    );\r\n    // for the section to show\r\n    //  Conditions are : age > 15, riskAssessment.lastHivTestBasedOnRequest === \"false\" and PMTCT Modality === true\r\n    if (lastVisit === \"false\") {\r\n      if (SecAge > 15 && isPMTCTModalityValue) {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      } else if (SecAge > 15) {\r\n        setShowRiskAssessment(true);\r\n        ans = true;\r\n      } else {\r\n        setShowRiskAssessment(false);\r\n        ans = false;\r\n      }\r\n    } else {\r\n      setShowRiskAssessment(false);\r\n      ans = false;\r\n    }\r\n    console.log(\"This is the answer\", ans);\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  //Get list of DSD Model Type\r\n  function SettingModality(settingId) {\r\n    const setting = settingId;\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${setting}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSetting(response.data);\r\n        console.log(\"#################### modality\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n    temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.entryPoint = objValues.entryPoint ? \"\" : \"This field is required.\";\r\n    temp.modality = objValues.modality ? \"\" : \"This field is required.\";\r\n    props.patientAge > 15 &&\r\n      (temp.targetGroup = objValues.targetGroup\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    temp.lastHivTestBasedOnRequest = riskAssessment.lastHivTestBasedOnRequest\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    //Risk Assement section\r\n    objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      (temp.lastHivTestDone = riskAssessment.lastHivTestDone\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n    //objValues.age>15 && riskAssessment.lastHivTestBasedOnRequest==='false' && riskAssessment.lastHivTestDone!==\"\" && riskAssessment.lastHivTestDone!=='Never' && (temp.whatWasTheResult = riskAssessment.whatWasTheResult ? \"\" : \"This field is required.\" )\r\n    objValues.entryPoint !== \"\" &&\r\n      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" &&\r\n      (temp.communityEntryPoint = objValues.communityEntryPoint\r\n        ? \"\"\r\n        : \"This field is required.\");\r\n\r\n    if (\r\n      objValues.age > 15 &&\r\n      riskAssessment.lastHivTestBasedOnRequest === \"false\" &&\r\n      showRiskAssessment\r\n    ) {\r\n      riskAssessment.lastHivTestDone !== \"\" &&\r\n        riskAssessment.lastHivTestDone !== \"Never\" &&\r\n        (temp.whatWasTheResult = riskAssessment.whatWasTheResult\r\n          ? \"\"\r\n          : \"This field is required.\");\r\n\r\n      temp.lastHivTestVaginalOral = riskAssessment.lastHivTestVaginalOral\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestBloodTransfusion =\r\n        riskAssessment.lastHivTestBloodTransfusion\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.lastHivTestPainfulUrination =\r\n        riskAssessment.lastHivTestPainfulUrination\r\n          ? \"\"\r\n          : \"This field is required.\";\r\n\r\n      temp.diagnosedWithTb = riskAssessment.diagnosedWithTb\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestInjectedDrugs = riskAssessment.lastHivTestInjectedDrugs\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestHadAnal = riskAssessment.lastHivTestHadAnal\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n\r\n      temp.lastHivTestForceToHaveSex = riskAssessment.lastHivTestForceToHaveSex\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    }\r\n\r\n    //targetGroup\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  riskCountQuestion = actualRiskCountTrue.filter((x) => x === \"true\");\r\n  const handleInputChangeRiskAssessment = (e) => {\r\n\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   getMenuLogic(objValues);\r\n\r\n    //console.log(riskAssessment)\r\n    props.patientObj.targetGroup = objValues.targetGroup;\r\n    props.patientObj.testingSetting = objValues.testingSetting;\r\n    props.patientObj.dateVisit = objValues.visitDate;\r\n    props.patientObj.modality = objValues.modality;\r\n    props.patientObj.riskStratificationResponseDto = objValues;\r\n    //props.patientObj.riskAssessment =riskAssessment\r\n\r\n    objValues.riskAssessment = riskAssessment;\r\n    if (\r\n      props.patientObj.riskStratificationResponseDto &&\r\n      props.patientObj.riskStratificationResponseDto !== null &&\r\n      props.patientObj.personId !== \"\" &&\r\n      props.patientObj.riskStratificationResponseDto.code !== \"\"\r\n    ) {\r\n      if (validate()) {\r\n        setSaving(true);\r\n        handleItemClick(\"basic\", \"risk\");\r\n\r\n        props.setHideOtherMenu(false);\r\n        axios\r\n          .put(\r\n            `${baseUrl}risk-stratification/${props.patientObj.riskStratificationResponseDto.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.riskStratificationResponseDto = response.data;\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      //console.log(\"post\");\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .post(`${baseUrl}risk-stratification`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            objValues.code = response.data.code;\r\n            props.setExtra(objValues);\r\n            handleItemClick(\"basic\", \"risk\");\r\n            props.setHideOtherMenu(false);\r\n            //toast.success(\"Risk stratification save succesfully!\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"All fields are required\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>RISK STRATIFICATION</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: \"#992E62\",\r\n                  width: \"125%\",\r\n                  height: \"35px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Modality\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Entry Point <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"entryPoint\"\r\n                      id=\"entryPoint\"\r\n                      value={objValues.entryPoint}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {entryPoint.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.entryPoint !== \"\" ? (\r\n                      <span className={classes.error}>{errors.entryPoint}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\" && (\r\n                  <div className=\"form-group  col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Community Entry Point{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"communityEntryPoint\"\r\n                        id=\"communityEntryPoint\"\r\n                        value={objValues.communityEntryPoint}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={props.activePage.actionType === \"view\"}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        {entryPointCommunity.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.communityEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.communityEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">\r\n                      Visit Date <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"visitDate\"\r\n                      id=\"visitDate\"\r\n                      value={objValues.visitDate}\r\n                      onChange={handleInputChange}\r\n                      min=\"1929-12-31\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                    {errors.dateVisit !== \"\" ? (\r\n                      <span className={classes.error}>{errors.dateVisit}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Setting <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"testingSetting\"\r\n                      id=\"testingSetting\"\r\n                      value={objValues.testingSetting}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {objValues.communityEntryPoint ===\r\n                        \"HTS_ENTRY_POINT_COMMUNITY_CPMTCT\" &&\r\n                      objValues.entryPoint === \"HTS_ENTRY_POINT_COMMUNITY\"\r\n                        ? enrollSetting.map((value) =>\r\n                            value.code === \"TEST_SETTING_CPMTCT\" ? (\r\n                              <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                              </option>\r\n                            ) : (\r\n                              <></>\r\n                            )\r\n                          )\r\n                        : enrollSetting.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n\r\n                      {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n                    </select>\r\n                    {errors.testingSetting !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.testingSetting}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Modality <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"modality\"\r\n                      id=\"modality\"\r\n                      value={objValues.modality}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      {setting.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.modality !== \"\" ? (\r\n                      <span className={classes.error}>{errors.modality}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Target Group <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"targetGroup\"\r\n                      id=\"targetGroup\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.targetGroup}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}></option>\r\n                      {kP.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.targetGroup !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.targetGroup}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group  col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Is this HIV test based on a Clinician/Doctor/Health Care\r\n                      Provider's request ?{\" \"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"lastHivTestBasedOnRequest\"\r\n                      id=\"lastHivTestBasedOnRequest\"\r\n                      value={riskAssessment.lastHivTestBasedOnRequest}\r\n                      onChange={handleInputChangeRiskAssessment}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={props.activePage.actionType === \"view\"}\r\n                    >\r\n                      <option value={\"\"}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.lastHivTestBasedOnRequest !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHivTestBasedOnRequest}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <br />\r\n\r\n              {showRiskAssessment && (\r\n                  <>\r\n                    <div\r\n                      className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                      style={{\r\n                        backgroundColor: \"#992E62\",\r\n                        width: \"125%\",\r\n                        height: \"35px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      HIV Risk Assessment (Last 3 months)\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          When was your last HIV test done?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestDone\"\r\n                          id=\"lastHivTestDone\"\r\n                          value={riskAssessment.lastHivTestDone}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"<1\"> {\"< 1\"} month</option>\r\n                          <option value=\"1-3 Months\">1-3 Months</option>\r\n                          <option value=\"4-6 Months\">4-6 Months</option>\r\n                          <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                          <option value=\"Never\"> Never</option>\r\n                        </select>\r\n                        {errors.lastHivTestDone !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestDone}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {riskAssessment.lastHivTestDone !== \"\" &&\r\n                      riskAssessment.lastHivTestDone !== \"Never\" && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              What was the result?{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"whatWasTheResult\"\r\n                              id=\"whatWasTheResult\"\r\n                              value={riskAssessment.whatWasTheResult}\r\n                              onChange={handleInputChangeRiskAssessment}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={props.activePage.actionType === \"view\"}\r\n                            >\r\n                              <option value={\"\"}></option>\r\n                              <option value=\"Positive\">Positive</option>\r\n                              <option value=\"Negative\">Negative</option>\r\n                            </select>\r\n                            {errors.whatWasTheResult !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.whatWasTheResult}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal or vaginal\r\n                          or oral sex without a condom with someone who was HIV\r\n                          positive or unaware of their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestVaginalOral\"\r\n                          id=\"lastHivTestVaginalOral\"\r\n                          value={riskAssessment.lastHivTestVaginalOral}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestVaginalOral !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestVaginalOral}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had a blood or\r\n                          blood product transfusion?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestBloodTransfusion\"\r\n                          id=\"lastHivTestBloodTransfusion\"\r\n                          value={riskAssessment.lastHivTestBloodTransfusion}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestBloodTransfusion !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestBloodTransfusion}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you experienced painful\r\n                          urination, lower abdominal pain, vaginal or penile\r\n                          discharge, pain during sexual intercourse, thick,\r\n                          cloudy, or foul smelling discharge and/or small bumps\r\n                          or blisters near the mouth, penis, vagina, or anal\r\n                          areas? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestPainfulUrination\"\r\n                          id=\"lastHivTestPainfulUrination\"\r\n                          value={riskAssessment.lastHivTestPainfulUrination}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestPainfulUrination !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestPainfulUrination}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Have you been diagnosed with TB or currently have any\r\n                          of the following symptoms : cough, fever, weight loss,\r\n                          night sweats? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosedWithTb\"\r\n                          id=\"diagnosedWithTb\"\r\n                          value={riskAssessment.diagnosedWithTb}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.diagnosedWithTb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.diagnosedWithTb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you ever injected\r\n                          drugs, shared needles or other sharp objects with\r\n                          someone known to be HIV positive or who you didn’t\r\n                          know their HIV status?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestInjectedDrugs\"\r\n                          id=\"sexUnderInfluence\"\r\n                          value={riskAssessment.lastHivTestInjectedDrugs}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestInjectedDrugs !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestInjectedDrugs}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you had anal, oral or\r\n                          vaginal sex in exchange for money or other benefits?\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestHadAnal\"\r\n                          id=\"lastHivTestHadAnal\"\r\n                          value={riskAssessment.lastHivTestHadAnal}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestHadAnal !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestHadAnal}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Since your last HIV test, have you been forced to have\r\n                          sex? <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lastHivTestForceToHaveSex\"\r\n                          id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                          value={riskAssessment.lastHivTestForceToHaveSex}\r\n                          onChange={handleInputChangeRiskAssessment}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lastHivTestForceToHaveSex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lastHivTestForceToHaveSex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n\r\n              <br />\r\n              <Message warning>\r\n                <h4> Risk assessment score </h4>\r\n                <b>\r\n                  Score :\r\n                  {riskCount +\r\n                    (props.patientAge > 15 ? riskCountQuestion.length : 0)}\r\n                </b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n\r\n                  {/* <Button content='Save ' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskStratification;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PostTest.js",["1088","1089","1090","1091","1092"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Label as LabelRibbon, Button, Message } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst PostTest = (props) => {\r\n  console.log(\"post\", props);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const patientID =\r\n    props.patientObj && props.patientObj.personResponseDto\r\n      ? props.patientObj.personResponseDto.id\r\n      : \"\";\r\n  const clientId =\r\n    props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const { postTestCounselingKnowledgeAssessment } = props.patientObj;\r\n\r\n  ///const [errors, setErrors] = useState({});\r\n  const [objValues, setObjValues] = useState({\r\n    htsClientId: clientId,\r\n    postTestCounselingKnowledgeAssessment: {},\r\n    personId: patientID,\r\n  });\r\n\r\n  const [postTest, setPostTest] = useState({\r\n    hivTestResult: \"\",\r\n    hivTestBefore:\r\n      props.activePage.activeObject?.riskStratificationResponseDto\r\n        ?.riskAssessment?.lastHivTestDone !== \"Never\" &&\r\n      props.activePage.activeObject?.riskStratificationResponseDto\r\n        ?.riskAssessment?.whatWasTheResult === \"Positive\"\r\n        ? \"Previously tested positive in HIV care\"\r\n        : postTestCounselingKnowledgeAssessment?.hivTestBefore,\r\n    hivRequestResult: postTestCounselingKnowledgeAssessment?.hivRequestResult,\r\n    hivRequestResultCt:\r\n      postTestCounselingKnowledgeAssessment?.hivRequestResultCt,\r\n    clientReceivedHivTestResult:\r\n      postTestCounselingKnowledgeAssessment?.clientReceivedHivTestResult,\r\n    postTestCounseling:\r\n      postTestCounselingKnowledgeAssessment?.postTestCounseling,\r\n    riskReduction: postTestCounselingKnowledgeAssessment?.riskReduction,\r\n    postTestDisclosure:\r\n      postTestCounselingKnowledgeAssessment?.postTestDisclosure,\r\n    bringPartnerHivtesting:\r\n      postTestCounselingKnowledgeAssessment?.bringPartnerHivtesting,\r\n    childrenHivtesting:\r\n      postTestCounselingKnowledgeAssessment?.childrenHivtesting,\r\n    informationFp: postTestCounselingKnowledgeAssessment?.informationFp,\r\n    partnerFpThanCondom:\r\n      postTestCounselingKnowledgeAssessment?.partnerFpThanCondom,\r\n    partnerFpUseCondom:\r\n      postTestCounselingKnowledgeAssessment?.partnerFpUseCondom,\r\n    correctCondomUse: postTestCounselingKnowledgeAssessment?.correctCondomUse,\r\n    condomProvidedToClient:\r\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClient,\r\n    unprotectedSexRegularPartnerLastThreeMonth:\r\n      postTestCounselingKnowledgeAssessment?.unprotectedSexRegularPartnerLastThreeMonth,\r\n    referredToServices:\r\n      postTestCounselingKnowledgeAssessment?.referredToServices,\r\n    lubricantProvidedToClient:\r\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClient,\r\n    condomProvidedToClientCount:\r\n      postTestCounselingKnowledgeAssessment?.condomProvidedToClientCount,\r\n    lubricantProvidedToClientCount:\r\n      postTestCounselingKnowledgeAssessment?.lubricantProvidedToClientCount,\r\n  });\r\n  const handleInputChangePostTest = (e) => {\r\n    if (e.target.name === \"lubricantProvidedToClientCount\") {\r\n      if (e.target.value >= 0) {\r\n        setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n      }\r\n    } else {\r\n      setPostTest({ ...postTest, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    //console.log(props.patientObj.postTestCounselingKnowledgeAssessment)\r\n    setPostTest({\r\n      ...postTest,\r\n      ...props.patientObj.postTestCounselingKnowledgeAssessment,\r\n    });\r\n\r\n    if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult2?.length > 0 &&\r\n      props.patientObj.hivTestResult2 === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Positive\"\r\n    ) {\r\n      postTest.hivTestResult = \"true\";\r\n      setPostTest({ ...postTest, hivTestResult: \"true\" });\r\n    } else if (\r\n      props.patientObj?.hivTestResult?.length > 0 &&\r\n      props.patientObj.hivTestResult === \"Negative\"\r\n    ) {\r\n      postTest.hivTestResult = \"false\";\r\n      setPostTest({ ...postTest, hivTestResult: \"false\" });\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (props.activePage.actionType === \"view\") {\r\n      //e.preventDefault();\r\n      handleItemClick(\"recency-testing\", \"post-test\");\r\n    }\r\n    if (props.activePage.actionType === \"update\") {\r\n      setSaving(true);\r\n      //e.preventDefault();\r\n\r\n      objValues.htsClientId = clientId;\r\n      objValues.postTestCounselingKnowledgeAssessment = postTest;\r\n      objValues.personId = patientID;\r\n      axios\r\n        .put(`${baseUrl}hts/${clientId}/post-test-counseling`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setSaving(false);\r\n\r\n          props.setPatientObj(response.data);\r\n          toast.success(\"Post Test Assesment successful\");\r\n          if (\r\n            postTest.hivTestResult === \"true\" &&\r\n            props.patientObj.riskStratificationResponseDto.age >= 15\r\n          ) {\r\n            handleItemClick(\"recency-testing\", \"post-test\");\r\n          } else if (postTest.hivTestResult === \"false\") {\r\n            handleItemClick(\"client-referral\", \"post-test\");\r\n          } else {\r\n            handleItemClick(\"client-referral\", \"post-test\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>POST TEST COUNSELING</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <LabelRibbon\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n              </LabelRibbon>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV test result <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={postTest.hivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    // disabled={props.activePage.actionType === \"view\"}\r\n                    disabled={true}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Positive</option>\r\n                    <option value=\"false\">Negative</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been tested for HIV before within this year?{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivTestBefore\"\r\n                    id=\"hivTestBefore\"\r\n                    value={postTest.hivTestBefore}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"Not previously tested\">\r\n                      Not previously tested\r\n                    </option>\r\n                    <option value=\"Previously tested negative\">\r\n                      Previously tested negative\r\n                    </option>\r\n                    <option value=\"Previously tested positive in HIV care\">\r\n                      Previously tested positive in HIV care\r\n                    </option>\r\n                    <option value=\"Previously tested positive not in HIV care\">\r\n                      Previously tested positive not in HIV care\r\n                    </option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>HIV Request and Result form signed by tester </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResult\"\r\n                    id=\"hivRequestResult\"\r\n                    value={postTest.hivRequestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    HIV Request and Result form filled with CT Intake Form{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"hivRequestResultCt\"\r\n                    id=\"hivRequestResultCt\"\r\n                    value={postTest.hivRequestResultCt}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client received HIV test result </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"clientReceivedHivTestResult\"\r\n                    id=\"clientReceivedHivTestResult\"\r\n                    value={postTest.clientReceivedHivTestResult}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test counseling done </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestCounseling\"\r\n                    id=\"postTestCounseling\"\r\n                    value={postTest.postTestCounseling}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Risk reduction plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"riskReduction\"\r\n                    id=\"riskReduction\"\r\n                    value={postTest.riskReduction}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Post test disclosure plan developed </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"postTestDisclosure\"\r\n                    id=\"postTestDisclosure\"\r\n                    value={postTest.postTestDisclosure}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Will bring partner(s) for HIV testing </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"bringPartnerHivtesting\"\r\n                    id=\"bringPartnerHivtesting\"\r\n                    value={postTest.bringPartnerHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Will bring own children {\"<5\"} years for HIV testing{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"childrenHivtesting\"\r\n                    id=\"childrenHivtesting\"\r\n                    value={postTest.childrenHivtesting}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Provided with information on FP and dual contraception{\" \"}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"informationFp\"\r\n                    id=\"informationFp\"\r\n                    value={postTest.informationFp}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Client/Partner use FP methods (other than condom)\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpThanCondom\"\r\n                    id=\"partnerFpThanCondom\"\r\n                    value={postTest.partnerFpThanCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"partnerFpUseCondom\"\r\n                    id=\"partnerFpUseCondom\"\r\n                    value={postTest.partnerFpUseCondom}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Correct condom use demonstrated </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"correctCondomUse\"\r\n                    id=\"correctCondomUse\"\r\n                    value={postTest.correctCondomUse}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Condoms provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"condomProvidedToClient\"\r\n                    id=\"condomProvidedToClient\"\r\n                    value={postTest.condomProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.condomProvidedToClient !== null &&\r\n                postTest.condomProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many condoms were provided to client </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"condomProvidedToClientCount\"\r\n                        id=\"condomProvidedToClientCount\"\r\n                        value={postTest.condomProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Lubricant were provided to client </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"lubricantProvidedToClient\"\r\n                    id=\"lubricantProvidedToClient\"\r\n                    value={postTest.lubricantProvidedToClient}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              {postTest.lubricantProvidedToClient !== null &&\r\n                postTest.lubricantProvidedToClient === \"true\" && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>How many lubricant provided to client </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantProvidedToClientCount\"\r\n                        id=\"lubricantProvidedToClientCount\"\r\n                        value={postTest.lubricantProvidedToClientCount}\r\n                        onChange={handleInputChangePostTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Client referred to other services </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredToServices\"\r\n                    id=\"referredToServices\"\r\n                    value={postTest.referredToServices}\r\n                    onChange={handleInputChangePostTest}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                </FormGroup>\r\n              </div>\r\n              <Message success>\r\n                <h4>\r\n                  If client tests HIV negative, and HIV Risk Assessment Score{\" \"}\r\n                  {\">0\"} or there is evidence for a STI syndrome, recommend\r\n                  re-testing after 3 months\r\n                </h4>\r\n              </Message>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <Button\r\n                    content=\"Back\"\r\n                    icon=\"left arrow\"\r\n                    labelPosition=\"left\"\r\n                    style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n                    onClick={() => handleItemClick(\"hiv-test\", \"hiv-test\")}\r\n                  />\r\n\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      // disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTest;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\HivTestResult.js",["1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103"],"import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label, CardBody, Spinner, Input, Form} from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport {Label as LabelRibbon, Button} from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n        \"& .card-title\": {\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: \"0.25rem\",\r\n            height: \"41px\",\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\",\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\",\r\n        },\r\n        \"& p\": {\r\n            color: \"red\",\r\n        },\r\n        \"& label\": {\r\n            fontSize: \"14px\",\r\n            color: \"#014d88\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nconst HivTestResult = (props) => {\r\n    const [finalResult, setFinalResult] = useState(\"\");\r\n    const [resultStatus, setResultStatus] = useState(\"\");\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = {...errors};\r\n    //console.log(\"data3\", props.patientObj);\r\n    const patientID =\r\n        props.patientObj && props.patientObj.personResponseDto\r\n            ? props.patientObj.personResponseDto.id\r\n            : \"\";\r\n    const clientId =\r\n        props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = (dob) => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now;\r\n    };\r\n    const patientAge = calculate_age(\r\n        moment(\r\n            props.patientObj.personResponseDto &&\r\n            props.patientObj.personResponseDto.dateOfBirth\r\n                ? props.patientObj.personResponseDto.dateOfBirth\r\n                : 0\r\n        ).format(\"DD-MM-YYYY\")\r\n    );\r\n\r\n    const [objValues, setObjValues] = useState({\r\n        confirmatoryTest: {},\r\n        confirmatoryTest2: {},\r\n        hivTestResult: \"\",\r\n        hivTestResult2: \"\",\r\n        htsClientId: \"\",\r\n        personId: props.patientObj ? props.patientObj.id : \"\",\r\n        test1: {},\r\n        test2: {},\r\n        tieBreakerTest: {},\r\n        tieBreakerTest2: {},\r\n        syphilisTesting: {},\r\n        hepatitisTesting: {},\r\n        others: {},\r\n        cd4: {},\r\n        prepOffered: \"\",\r\n        prepAccepted: \"\",\r\n    });\r\n    const handleInputChange = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setObjValues({...objValues, [e.target.name]: e.target.value});\r\n    };\r\n    const [initialTest1, setInitailTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [initialTest12, setInitailTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeCd4Count = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setCd4Count({...cd4Count, [e.target.name]: e.target.value});\r\n    };\r\n    const [cd4Count, setCd4Count] = useState({\r\n        cd4Count: \"\",\r\n        cd4SemiQuantitative: \"\",\r\n        cd4FlowCyteometry: \"\",\r\n    });\r\n    const handleInputChangeInitial = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest({...initialTest1, [e.target.name]: e.target.value});\r\n            setErrors({date: \"\", prepOffered: \"\", prepAccepted: \"\"})\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeInitial2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if (e.target.value === \"No\") {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            setConfirmatoryTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            setTieBreakerTest2({\r\n                date: \"\",\r\n                result: \"\",\r\n            });\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setInitailTest2({...initialTest12, [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [confirmatoryTest, setConfirmatoryTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [confirmatoryTest2, setConfirmatoryTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeConfirmatory = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest({\r\n            ...confirmatoryTest,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest1.result === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeConfirmatory2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setConfirmatoryTest2({\r\n            ...confirmatoryTest2,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        //This is to show cd4 count section\r\n        if (initialTest12.result2 === \"Yes\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [tieBreakerTest, setTieBreakerTest] = useState({\r\n        date: \"\",\r\n        result: \"\",\r\n    });\r\n    const [tieBreakerTest2, setTieBreakerTest2] = useState({\r\n        date2: \"\",\r\n        result2: \"\",\r\n    });\r\n    const handleInputChangeTie = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest({...tieBreakerTest, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest.result === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest.result === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const handleInputChangeTie2 = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setTieBreakerTest2({...tieBreakerTest2, [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"Yes\") {\r\n            setShowCD4Count(true);\r\n        } else if (confirmatoryTest2.result2 === \"No\" && e.target.value === \"No\") {\r\n            setShowCD4Count(false);\r\n        } else {\r\n            setShowCD4Count(true);\r\n        }\r\n    };\r\n    const [syphills, setSyphills] = useState({\r\n        syphilisTestResult: \"\",\r\n        // result  :\"\",\r\n    });\r\n    const handleInputChangeSyphills = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setSyphills({...syphills, [e.target.name]: e.target.value});\r\n    };\r\n    const [hepatitis, setHepatitis] = useState({\r\n        hepatitisCTestResult: \"\",\r\n        hepatitisBTestResult: \"\",\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    const handleInputChangeHepatitis = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setHepatitis({...hepatitis, [e.target.name]: e.target.value});\r\n    };\r\n    const [others, setOthers] = useState({\r\n        longitude: \"\",\r\n        latitude: \"\",\r\n        adhocCode: \"\",\r\n    });\r\n    useEffect(() => {\r\n        //console.log(props.patientObj)\r\n        if (props.patientObj) {\r\n            setCd4Count(\r\n                props.patientObj && props.patientObj.cd4 !== null\r\n                    ? props.patientObj.cd4\r\n                    : {}\r\n            );\r\n            setInitailTest(\r\n                props.patientObj && props.patientObj.test1 !== null\r\n                    ? props.patientObj.test1\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest(\r\n                props.patientObj && props.patientObj.confirmatoryTest !== null\r\n                    ? props.patientObj.confirmatoryTest\r\n                    : {}\r\n            );\r\n            setTieBreakerTest(\r\n                props.patientObj && props.patientObj.tieBreakerTest !== null\r\n                    ? props.patientObj.tieBreakerTest\r\n                    : {}\r\n            );\r\n            setSyphills(\r\n                props.patientObj && props.patientObj.syphilisTesting !== null\r\n                    ? props.patientObj.syphilisTesting\r\n                    : {}\r\n            );\r\n            setHepatitis(\r\n                props.patientObj && props.patientObj.hepatitisTesting !== null\r\n                    ? props.patientObj.hepatitisTesting\r\n                    : {}\r\n            );\r\n            setOthers(\r\n                props.patientObj && props.patientObj.others !== null\r\n                    ? props.patientObj.others\r\n                    : {}\r\n            );\r\n\r\n            setInitailTest2(\r\n                props.patientObj && props.patientObj.test2 !== null\r\n                    ? props.patientObj.test2\r\n                    : {}\r\n            );\r\n            setConfirmatoryTest2(\r\n                props.patientObj && props.patientObj.confirmatoryTest2 !== null\r\n                    ? props.patientObj.confirmatoryTest2\r\n                    : {}\r\n            );\r\n            setTieBreakerTest2(\r\n                props.patientObj && props.patientObj.tieBreakerTest2 !== null\r\n                    ? props.patientObj.tieBreakerTest2\r\n                    : {}\r\n            );\r\n            //Logic for cd4 count section to show\r\n            if (\r\n                props.patientObj.hivTestResult !== null &&\r\n                props.patientObj.hivTestResult !== \"\" &&\r\n                props.patientObj.hivTestResult === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n            if (\r\n                props.patientObj.hivTestResult2 !== null &&\r\n                props.patientObj.hivTestResult2 !== \"\" &&\r\n                props.patientObj.hivTestResult2 === \"Positive\"\r\n            ) {\r\n                setShowCD4Count(true);\r\n            } else {\r\n                setShowCD4Count(false);\r\n            }\r\n        }\r\n    }, [props.patientObj]); //initialTest12, tieBreakerTest2, confirmatoryTest2,\r\n\r\n    const handleInputChangeOthers = (e) => {\r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        setOthers({...others, [e.target.name]: e.target.value});\r\n    };\r\n    const handleItemClick = (page, completedMenu) => {\r\n        props.handleItemClick(page);\r\n        if (props.completed.includes(completedMenu)) {\r\n        } else {\r\n            props.setCompleted([...props.completed, completedMenu]);\r\n        }\r\n    };\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date !== \"\" &&\r\n        (temp.date = initialTest1.result ? \"\" : \"This field is required.\");\r\n\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        (temp.prepOffered = objValues.prepOffered\r\n            ? \"\"\r\n            : \"The Prep Offered field is required.\");\r\n        initialTest1.date !== \"\" &&\r\n        initialTest1.result === \"No\" &&\r\n        objValues.prepOffered === \"true\" &&\r\n        (temp.prepAccepted = objValues.prepAccepted\r\n            ? \"\"\r\n            : \"The Prep Accepted field is required.\");\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n        // temp.syphilisTestResult = syphills.syphilisTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisBTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n        // temp.hepatitisCTestResult = hepatitis.hepatitisBTestResult\r\n        //   ? \"\"\r\n        //   : \"This field is required.\";\r\n\r\n        setErrors({...temp});\r\n        return Object.values(temp).every((x) => x == \"\");\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let result = \"\";\r\n\r\n        if (initialTest1.result === \"No\") {\r\n            result = \"Negative\";\r\n        } else if (\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"No\" &&\r\n            (initialTest1.result === \"Yes\" || initialTest1.result !== \"\")\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Negative\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"Yes\"\r\n        ) {\r\n            result = \"Positive\";\r\n        } else if (\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"No\" &&\r\n            tieBreakerTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n        ) {\r\n            result = \"Negative\";\r\n        }\r\n        else if(\r\n            initialTest1.result === \"Yes\" &&\r\n            confirmatoryTest.result === \"Yes\" &&\r\n            initialTest12.result2 === \"Yes\" &&\r\n            confirmatoryTest2.result2 === \"No\" &&\r\n            tieBreakerTest2.result2 === \"No\"\r\n\r\n        ){\r\n            result = \"Negative\";\r\n        }\r\n\r\n        setFinalResult(result);\r\n    }, [\r\n        initialTest1.result,\r\n        confirmatoryTest.result,\r\n        tieBreakerTest.result,\r\n        initialTest12.result2,\r\n        confirmatoryTest2.result2,\r\n        tieBreakerTest2.result2,\r\n    ]);\r\n    // clear the all other fields if there changes in initialTest1 result is changes\r\n    useEffect(() => {\r\n        setConfirmatoryTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        // clear the prepOffered and prepAccepted fields\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest1.result]);\r\n\r\n    // clear the all other the input fields that follows the initialTest2, if there changes in initialTest12 result is changes\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest({\r\n            date: \"\",\r\n            result: \"\",\r\n        })\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest.result]);\r\n\r\n    // clear all the input fields that follows the confirmatoryTest, if there changes in confirmatoryTest result is changes.\r\n    useEffect(() => {\r\n        setInitailTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [tieBreakerTest.result]);\r\n\r\n    useEffect(() => {\r\n        setConfirmatoryTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [initialTest12.result2]);\r\n\r\n    useEffect(() => {\r\n        setTieBreakerTest2({\r\n            date2: \"\",\r\n            result2: \"\",\r\n        });\r\n        setObjValues({...objValues, prepOffered: \"\", prepAccepted: \"\"})\r\n    }, [confirmatoryTest2.result2]);\r\n\r\n    // log all the  tests\r\n    console.log(\"initialTest1\", initialTest1);\r\n    console.log(\"confirmatoryTest\", confirmatoryTest);\r\n    console.log(\"tieBreakerTest\", tieBreakerTest);\r\n    console.log(\"initialTest12\", initialTest12);\r\n    console.log(\"confirmatoryTest2\", confirmatoryTest2);\r\n    console.log(\"tieBreakerTest2\", tieBreakerTest2);\r\n    console.log(\"finalResult\", finalResult);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(errors);\r\n        if (finalResult === \"\") {\r\n            toast.error(\"Final result is required for submission.\");\r\n            return;\r\n        }\r\n        if (validate()) {\r\n            //logic to get Hiv result test\r\n            setSaving(true);\r\n            if (initialTest12.result2 === \"No\") {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else if (\r\n                initialTest12.result2 === \"Yes\" &&\r\n                confirmatoryTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            }\r\n                // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n                //     objValues.hivTestResult2=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest2.result2 === \"No\" &&\r\n                tieBreakerTest2.result2 === \"No\"\r\n            ) {\r\n                objValues.hivTestResult2 = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult2 = \"\";\r\n            }\r\n\r\n            if (initialTest1.result === \"No\") {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else if (\r\n                initialTest1.result === \"Yes\" &&\r\n                confirmatoryTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            }\r\n                // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n                //     objValues.hivTestResult=\"Negative\"\r\n            // }\r\n            else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"Yes\"\r\n            ) {\r\n                objValues.hivTestResult = \"Positive\";\r\n            } else if (\r\n                confirmatoryTest.result === \"No\" &&\r\n                tieBreakerTest.result === \"No\"\r\n            ) {\r\n                objValues.hivTestResult = \"Negative\";\r\n            } else {\r\n                objValues.hivTestResult = \"\";\r\n            }\r\n            if (props.activePage.actionType === \"view\") {\r\n                //e.preventDefault();\r\n                handleItemClick(\"post-test\", \"hiv-test\");\r\n            }\r\n            if (props.activePage.actionType === \"update\") {\r\n                objValues.htsClientId = clientId;\r\n                objValues.confirmatoryTest = confirmatoryTest;\r\n                objValues.confirmatoryTest2 = confirmatoryTest2;\r\n                objValues.personId = patientID;\r\n                objValues.test1 = initialTest1;\r\n                objValues.test2 = initialTest12;\r\n                objValues.tieBreakerTest = tieBreakerTest;\r\n                objValues.tieBreakerTest2 = tieBreakerTest2;\r\n                objValues.syphilisTesting = syphills;\r\n                objValues.hepatitisTesting = hepatitis;\r\n\r\n                objValues.cd4 = cd4Count;\r\n                objValues.others = others;\r\n\r\n                //console.log(clientId, objValues)\r\n                axios\r\n                    .put(`${baseUrl}hts/${clientId}/request-result`, objValues, {\r\n                        headers: {Authorization: `Bearer ${token}`},\r\n                    })\r\n                    .then((response) => {\r\n                        setSaving(false);\r\n                        props.setPatientObj(response.data);\r\n                        console.log(\"saved\", response.data);\r\n                        //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                        //toast.success(\"HIV test successful\");\r\n                        handleItemClick(\"post-test\", \"hiv-test\");\r\n                    })\r\n                    .catch((error) => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage =\r\n                                error.response.data.apierror &&\r\n                                error.response.data.apierror.message !== \"\"\r\n                                    ? error.response.data.apierror.message\r\n                                    : \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage);\r\n                        } else {\r\n                            toast.error(\"Something went wrong. Please try again...\");\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2 style={{color: \"#000\"}}>REQUEST AND RESULT FORM</h2>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h4 style={{color: \"#fff\"}}>HIV TEST RESULT</h4>\r\n                            </LabelRibbon>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial Test :</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\"> Date </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        id=\"date\"\r\n                                        value={initialTest1.date}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        required\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                    {errors.date !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.date}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                                <div className=\"form-group  col-md-5\">\r\n                                    <FormGroup>\r\n                                        <Label>Result </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"result\"\r\n                                            id=\"result\"\r\n                                            value={initialTest1.result}\r\n                                            onChange={handleInputChangeInitial}\r\n                                            style={{\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0.2rem\",\r\n                                            }}\r\n                                            //disabled={initialTest1.date === \"\" ? true : false}\r\n                                            disabled={props.activePage.actionType === \"view\"}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"Yes\">Reactive</option>\r\n                                            <option value=\"No\">Non Reactive</option>\r\n                                        </select>\r\n                                        {errors.result !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.result}</span>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result === \"Yes\" && (\r\n                                <>\r\n                                    <h4>Confirmatory Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={confirmatoryTest.date}\r\n                                                onChange={handleInputChangeConfirmatory}\r\n                                                min={initialTest1.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                            {errors.dateOfEac1 !== \"\" ? (\r\n                                                <span className={classes.error}>\r\n                          {errors.dateOfEac1}\r\n                        </span>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {confirmatoryTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={confirmatoryTest.result}\r\n                                                    onChange={handleInputChangeConfirmatory}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest.result === \"No\" && (\r\n                                <>\r\n                                    <h4>Tie Breaker Test:</h4>\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                id=\"date\"\r\n                                                value={tieBreakerTest.date}\r\n                                                onChange={handleInputChangeTie}\r\n                                                min={confirmatoryTest.date}\r\n                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.25rem\",\r\n                                                }}\r\n                                                required\r\n                                                readOnly={props.activePage.actionType === \"view\"}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {tieBreakerTest.date && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result\"\r\n                                                    id=\"result\"\r\n                                                    value={tieBreakerTest.result}\r\n                                                    onChange={handleInputChangeTie}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    //disabled={tieBreakerTest.date === \"\" ? true : false}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-2\"></div>\r\n                                </>\r\n                            )}\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group  col-md-12\">\r\n                                    {initialTest1.result === \"No\" && (\r\n                                        <>\r\n                                            <b> Result : </b>\r\n                                            <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest1.result === \"No\" &&\r\n                                        confirmatoryTest.result === \"No\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {/*{initialTest1.result === \"Yes\" &&*/}\r\n                                    {/*    confirmatoryTest.result === \"No\" &&*/}\r\n                                    {/*    tieBreakerTest.result === \"No\" && (*/}\r\n                                    {/*        <>*/}\r\n                                    {/*            <b> Final Result : </b>*/}\r\n                                    {/*            <LabelRibbon color=\"red\"> Negative</LabelRibbon>*/}\r\n                                    {/*        </>*/}\r\n                                    {/*    )*/}\r\n                                    {/*}*/}\r\n\r\n                                    {initialTest1.result === \"Yes\" &&\r\n                                        confirmatoryTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n                                                <div className=\"row\">\r\n                                                    <h4>RETESTING:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={confirmatoryTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                                readOnly={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                // disabled={\r\n                                                                //   initialTest12.date2 === \"\" ? true : false\r\n                                                                // }\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            tieBreakerTest2.date2 === \"\"\r\n                                                                                ? true\r\n                                                                                : false\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* This is result for Test 1 */}\r\n                                    {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Result : </b>\r\n                                                <LabelRibbon color=\"red\">Reactive</LabelRibbon>\r\n                                                <br/>\r\n                                                <hr/>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <h4>Retesting:</h4>\r\n                                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label for=\"\"> Date </Label>\r\n                                                            <Input\r\n                                                                type=\"date\"\r\n                                                                name=\"date2\"\r\n                                                                id=\"date2\"\r\n                                                                value={initialTest12.date2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                min={tieBreakerTest.date}\r\n                                                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.25rem\",\r\n                                                                }}\r\n                                                                required\r\n                                                            />\r\n                                                            {errors.date2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.date2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-5\">\r\n                                                        <FormGroup>\r\n                                                            <Label>Result </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"result2\"\r\n                                                                id=\"result2\"\r\n                                                                value={initialTest12.result2}\r\n                                                                onChange={handleInputChangeInitial2}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    initialTest12.date2 === \"\" ? true : false\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"Yes\">Reactive</option>\r\n                                                                <option value=\"No\">Non Reactive</option>\r\n                                                            </select>\r\n                                                            {errors.result2 !== \"\" ? (\r\n                                                                <span className={classes.error}>\r\n                                  {errors.result2}\r\n                                </span>\r\n                                                            ) : (\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-2\"></div>\r\n                                                    {initialTest12.result2 === \"Yes\" && (\r\n                                                        <>\r\n                                                            <h4>Confirmatory Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={confirmatoryTest2.date2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        min={initialTest12.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={confirmatoryTest2.result2}\r\n                                                                        onChange={handleInputChangeConfirmatory2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   confirmatoryTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {confirmatoryTest2.result2 === \"No\" && (\r\n                                                        <>\r\n                                                            <h4>Tie Breaker Test 2:</h4>\r\n                                                            <div className=\"form-group mb-3 col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label for=\"\"> Date </Label>\r\n                                                                    <Input\r\n                                                                        type=\"date\"\r\n                                                                        name=\"date2\"\r\n                                                                        id=\"date2\"\r\n                                                                        value={tieBreakerTest2.date2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        min={confirmatoryTest2.date2}\r\n                                                                        max={moment(new Date()).format(\r\n                                                                            \"YYYY-MM-DD\"\r\n                                                                        )}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.25rem\",\r\n                                                                        }}\r\n                                                                        required\r\n                                                                        readOnly={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-5\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>Result </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"result2\"\r\n                                                                        id=\"result2\"\r\n                                                                        value={tieBreakerTest2.result2}\r\n                                                                        onChange={handleInputChangeTie2}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        // disabled={\r\n                                                                        //   tieBreakerTest2.date2 === \"\"\r\n                                                                        //     ? true\r\n                                                                        //     : false\r\n                                                                        // }\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"Yes\">Reactive</option>\r\n                                                                        <option value=\"No\">Non Reactive</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                            <div className=\"form-group  col-md-2\"></div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {errors.prepOffered !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepOffered}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {errors.prepAccepted !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepAccepted}</span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {confirmatoryTest.result === \"No\" &&\r\n                                        tieBreakerTest.result === \"No\" &&\r\n                                        (initialTest1.result === \"Yes\" ||\r\n                                            initialTest1.result !== \"\") && (\r\n                                            <>\r\n                                                <>\r\n                                                    <b> Result : </b>\r\n                                                    <LabelRibbon color=\"green\">Non Reactive</LabelRibbon>\r\n                                                    <b> Final Result : </b>\r\n                                                    <LabelRibbon color=\"green\"> Negative</LabelRibbon>\r\n                                                </>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Offered{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepOffered\"\r\n                                                                id=\"prepOffered\"\r\n                                                                value={objValues.prepOffered}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                                disabled={\r\n                                                                    props.activePage.actionType === \"view\"\r\n                                                                }\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                    {objValues.prepOffered !== \"\" &&\r\n                                                        objValues.prepOffered === \"true\" && (\r\n                                                            <div className=\"form-group  col-md-6\">\r\n                                                                <FormGroup>\r\n                                                                    <Label>\r\n                                                                        Prep Accepted{\" \"}\r\n                                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                                    </Label>\r\n                                                                    <select\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"prepAccepted\"\r\n                                                                        id=\"prepAccepted\"\r\n                                                                        value={objValues.prepAccepted}\r\n                                                                        onChange={handleInputChange}\r\n                                                                        style={{\r\n                                                                            border: \"1px solid #014D88\",\r\n                                                                            borderRadius: \"0.2rem\",\r\n                                                                        }}\r\n                                                                        disabled={\r\n                                                                            props.activePage.actionType === \"view\"\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <option value={\"\"}></option>\r\n                                                                        <option value=\"true\">Yes</option>\r\n                                                                        <option value=\"false\">No</option>\r\n                                                                    </select>\r\n                                                                </FormGroup>\r\n                                                            </div>\r\n                                                        )}\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    {/* END of  result for Test 1 */}\r\n                                    {/* This is result for Test 2 */}\r\n                                    {initialTest12.result2 === \"No\" && (\r\n                                        <>\r\n                                            <b> Final Result : </b>\r\n                                            <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            <br/>\r\n                                            <br/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group  col-md-5\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Offered{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepOffered\"\r\n                                                            id=\"prepOffered\"\r\n                                                            value={objValues.prepOffered}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                {objValues.prepOffered !== \"\" &&\r\n                                                    objValues.prepOffered === \"true\" && (\r\n                                                        <div className=\"form-group  col-md-5\">\r\n                                                            <FormGroup>\r\n                                                                <Label>\r\n                                                                    Prep Accepted{\" \"}\r\n                                                                    <span style={{color: \"red\"}}> *</span>\r\n                                                                </Label>\r\n                                                                <select\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"prepAccepted\"\r\n                                                                    id=\"prepAccepted\"\r\n                                                                    value={objValues.prepAccepted}\r\n                                                                    onChange={handleInputChange}\r\n                                                                    style={{\r\n                                                                        border: \"1px solid #014D88\",\r\n                                                                        borderRadius: \"0.2rem\",\r\n                                                                    }}\r\n                                                                    disabled={\r\n                                                                        props.activePage.actionType === \"view\"\r\n                                                                    }\r\n                                                                >\r\n                                                                    <option value={\"\"}></option>\r\n                                                                    <option value=\"true\">Yes</option>\r\n                                                                    <option value=\"false\">No</option>\r\n                                                                </select>\r\n                                                            </FormGroup>\r\n                                                        </div>\r\n                                                    )}\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                    {initialTest12.result2 === \"No\" &&\r\n                                        confirmatoryTest2.result2 === \"No\" && (\r\n                                            <>\r\n                                                <b> FinalnResult : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {initialTest12.result2 === \"Yes\" &&\r\n                                        confirmatoryTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b> Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                                <br/>\r\n                                            </>\r\n                                        )}\r\n                                    {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"Yes\" && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"red\">Positive</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n                                    {confirmatoryTest2.result2 === \"No\" &&\r\n                                        tieBreakerTest2.result2 === \"No\" &&\r\n                                        (initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"Yes\" ||\r\n                                            initialTest12.result2 === \"\") && (\r\n                                            <>\r\n                                                <b>Final Result : </b>\r\n                                                <LabelRibbon color=\"green\">Negative</LabelRibbon>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    {/* END of  result for Test 2*/}\r\n                                </div>\r\n                            </div>\r\n                            {initialTest1.result === \"No\" && (\r\n                                <>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    Prep Offered <span style={{color: \"red\"}}> *</span>\r\n                                                </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"prepOffered\"\r\n                                                    id=\"prepOffered\"\r\n                                                    value={objValues.prepOffered}\r\n                                                    onChange={handleInputChange}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"true\">Yes</option>\r\n                                                    <option value=\"false\">No</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        {objValues.prepOffered !== \"\" &&\r\n                                            objValues.prepOffered === \"true\" && (\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>\r\n                                                            Prep Accepted{\" \"}\r\n                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                        </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"prepAccepted\"\r\n                                                            id=\"prepAccepted\"\r\n                                                            value={objValues.prepAccepted}\r\n                                                            onChange={handleInputChange}\r\n                                                            style={{\r\n                                                                border: \"1px solid #014D88\",\r\n                                                                borderRadius: \"0.2rem\",\r\n                                                            }}\r\n                                                            disabled={props.activePage.actionType === \"view\"}\r\n                                                        >\r\n                                                            <option value={\"\"}></option>\r\n                                                            <option value=\"true\">Yes</option>\r\n                                                            <option value=\"false\">No</option>\r\n                                                        </select>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            {confirmatoryTest2.result2 === \"No\" &&\r\n                                tieBreakerTest2.result2 === \"No\" && (\r\n                                    <>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label>\r\n                                                        Prep Offered{\" \"}\r\n                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                    </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"prepOffered\"\r\n                                                        id=\"prepOffered\"\r\n                                                        value={objValues.prepOffered}\r\n                                                        onChange={handleInputChange}\r\n                                                        style={{\r\n                                                            border: \"1px solid #014D88\",\r\n                                                            borderRadius: \"0.2rem\",\r\n                                                        }}\r\n                                                        disabled={props.activePage.actionType === \"view\"}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        <option value=\"true\">Yes</option>\r\n                                                        <option value=\"false\">No</option>\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            {objValues.prepOffered !== \"\" &&\r\n                                                objValues.prepOffered === \"true\" && (\r\n                                                    <div className=\"form-group  col-md-6\">\r\n                                                        <FormGroup>\r\n                                                            <Label>\r\n                                                                Prep Accepted{\" \"}\r\n                                                                <span style={{color: \"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <select\r\n                                                                className=\"form-control\"\r\n                                                                name=\"prepAccepted\"\r\n                                                                id=\"prepAccepted\"\r\n                                                                value={objValues.prepAccepted}\r\n                                                                onChange={handleInputChange}\r\n                                                                style={{\r\n                                                                    border: \"1px solid #014D88\",\r\n                                                                    borderRadius: \"0.2rem\",\r\n                                                                }}\r\n                                                            >\r\n                                                                <option value={\"\"}></option>\r\n                                                                <option value=\"true\">Yes</option>\r\n                                                                <option value=\"false\">No</option>\r\n                                                            </select>\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                )}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            {showCD4Count && (\r\n                                <>\r\n                                    <LabelRibbon\r\n                                        as=\"a\"\r\n                                        color=\"blue\"\r\n                                        style={{width: \"106%\", height: \"35px\"}}\r\n                                        ribbon\r\n                                    >\r\n                                        <h5 style={{color: \"#fff\"}}>CD4 Count</h5>\r\n                                    </LabelRibbon>\r\n                                    <br/> <br/>\r\n                                    <div className=\"form-group  col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label>CD4 Count </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"cd4Count\"\r\n                                                id=\"cd4Count\"\r\n                                                value={cd4Count.cd4Count}\r\n                                                onChange={handleInputChangeCd4Count}\r\n                                                style={{\r\n                                                    border: \"1px solid #014D88\",\r\n                                                    borderRadius: \"0.2rem\",\r\n                                                }}\r\n                                                disabled={props.activePage.actionType === \"view\"}\r\n                                            >\r\n                                                <option value={\"\"}></option>\r\n                                                <option value=\"Semi-Quantitative\">\r\n                                                    Semi-Quantitative\r\n                                                </option>\r\n                                                <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {cd4Count.cd4Count === \"Semi-Quantitative\" && (\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>CD4 Count Value</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"cd4SemiQuantitative\"\r\n                                                    id=\"cd4SemiQuantitative\"\r\n                                                    value={cd4Count.cd4SemiQuantitative}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.2rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"<200\">{\"<200\"}</option>\r\n                                                    <option value=\">=200\">{\">=200\"}</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    {cd4Count.cd4Count === \"Flow Cyteometry\" && (\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">CD4 Count Value</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"cd4FlowCyteometry\"\r\n                                                    id=\"cd4FlowCyteometry\"\r\n                                                    value={cd4Count.cd4FlowCyteometry}\r\n                                                    onChange={handleInputChangeCd4Count}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    disabled={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"form-group  col-md-7\"></div>\r\n                                </>\r\n                            )}\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Syphilis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Syphilis test result <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                    </select>\r\n                                    {errors.syphilisTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.syphilisTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis B virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisBTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisBTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Hepatitis C virus test result{\" \"}\r\n                                        <span style={{color: \"red\"}}> </span>\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.2rem\",\r\n                                        }}\r\n                                        disabled={props.activePage.actionType === \"view\"}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                    </select>\r\n                                    {errors.hepatitisCTestResult !== \"\" ? (\r\n                                        <span className={classes.error}>\r\n                      {errors.hepatitisCTestResult}\r\n                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon\r\n                                as=\"a\"\r\n                                color=\"blue\"\r\n                                style={{width: \"106%\", height: \"35px\"}}\r\n                                ribbon\r\n                            >\r\n                                <h5 style={{color: \"#fff\"}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            {props.patientObj.riskStratificationResponseDto !== null &&\r\n                                props.patientObj.riskStratificationResponseDto\r\n                                    .communityEntryPoint !== \"\" && (\r\n                                    <>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Longitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"longitude\"\r\n                                                    id=\"longitude\"\r\n                                                    value={others.longitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"\">Latitude</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"latitude\"\r\n                                                    id=\"latitude\"\r\n                                                    value={others.latitude}\r\n                                                    onChange={handleInputChangeOthers}\r\n                                                    style={{\r\n                                                        border: \"1px solid #014D88\",\r\n                                                        borderRadius: \"0.25rem\",\r\n                                                    }}\r\n                                                    readOnly={props.activePage.actionType === \"view\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Adhoc Code</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"adhocCode\"\r\n                                        id=\"adhocCode\"\r\n                                        value={others.adhocCode}\r\n                                        onChange={handleInputChangeOthers}\r\n                                        style={{\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0.25rem\",\r\n                                        }}\r\n                                        readOnly={props.activePage.actionType === \"view\"}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            {saving ? <Spinner/> : \"\"}\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-12\">\r\n                                    {patientAge <= 15 ? (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() => handleItemClick(\"basic\", \"basic\")}\r\n                                            />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Button\r\n                                                content=\"Back\"\r\n                                                icon=\"left arrow\"\r\n                                                labelPosition=\"left\"\r\n                                                style={{backgroundColor: \"#992E62\", color: \"#fff\"}}\r\n                                                onClick={() =>\r\n                                                    handleItemClick(\r\n                                                        \"pre-test-counsel\",\r\n                                                        \"pre-test-counsel\"\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                    {props.activePage.actionType === \"update\" && (\r\n                                        <Button\r\n                                            content=\"Update & Continue\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                    {props.activePage.actionType === \"view\" && (\r\n                                        <Button\r\n                                            content=\"Next\"\r\n                                            icon=\"right arrow\"\r\n                                            labelPosition=\"right\"\r\n                                            style={{backgroundColor: \"#014d88\", color: \"#fff\"}}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\PreTest.js",["1104","1105","1106","1107","1108","1109","1110"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\",\n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\",\n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\",\n            unprotectedVaginalSex:\"\",\n            uprotectedAnalSex:\"\",\n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\",\n            complaintsGenitalSore  :\"\",\n\n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\",\n            fever :\"\",\n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => {\n\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                //setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n                props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult!==\"\" && props.patientObj.riskStratificationResponseDto.riskAssessment.whatWasTheResult==='Positive' ? knowledgeAssessment.previousTestedHIVNegative='false' :\n                knowledgeAssessment.previousTestedHIVNegative='true'\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})\n            }\n            knowledgeAssessment.clientPregnant=props.patientObj.pregnant===73 ? \"true\" :\"\" ;\n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value});\n\n    }\n\n    const handleInputChangeRiskAssessment = e => {\n        setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeRiskAssessmentPartner = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});\n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n\n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => {\n        //setErrors({...temp, [e.target.name]:\"\"})\n\n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n\n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        }\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});\n    }\n     /*****  Validation  */\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           //temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"\n\n        //     temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n        //     temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n        //     temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n        //     temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n        //     temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )\n            // props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")\n            // props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")\n\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")\n            // props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")\n\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")\n\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")\n            props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")\n\n            // temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            // {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n            setSaving(true);\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n\n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n\n        }\n    }\n    //console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n\n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        {\n                                            knowledgeAssessment.previousTestedHIVNegative !== \"true\" && <option value=\"Never\"> Never</option>\n                                        }\n\n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {riskAssessment.everHadSexualIntercourse!==\"\" && riskAssessment.everHadSexualIntercourse==='true' && (\n                                 <div className=\"form-group  col-md-4\">\n                                 <FormGroup>\n                                     <Label>More than 1 sex partner during last 3 months <span style={{ color:\"red\"}}> *</span></Label>\n                                     <select\n                                         className=\"form-control\"\n                                         name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                         value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                         onChange={handleInputChangeRiskAssessment}\n                                         style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                         disabled={props.activePage.actionType === \"view\"}\n                                     >\n                                         <option value={\"\"}></option>\n                                         <option value=\"true\">Yes</option>\n                                         <option value=\"false\">No</option>\n\n                                     </select>\n                                     {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                     <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                     ) : \"\" }\n                                 </FormGroup>\n                             </div>\n                            )}\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse? <span style={{ color:\"red\"}}> *</span> </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>  Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>\n\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={props.activePage.actionType === \"view\"}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n\n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n\n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit} disabled={saving}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\Index.js",["1111","1112","1113","1114"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=(row, actionType)=>{\n\n      props.setActivePage({...props.activePage, activePage:\"home\", activeObject:row, actionType:actionType})\n    }\n    \n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-12\">\n                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('recency-testing','recency-testing')}/>\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\BasicInfo.js",["1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\nimport { getCheckModality } from \"../../../../utility\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n// THIS IS THE VIEW AND UPDATE PAGE\r\nconst BasicInfo = (props) => {\r\n  console.log(\"#############\",props.patientObj);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //console.log(\"enr\", props.activePage.activeObject);\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  //const [hideNumChild, setHideNumChild] = useState(false);\r\n  const [kP, setKP] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [indexTesting, setIndexTesting] = useState([]);\r\n  let temp = { ...errors };\r\n  //console.log(props?.patientObj?.dateVisit)\r\nconst [modalityCheck, setModalityCheck]=useState(\"\")\r\n  const [objValues, setObjValues] = useState({\r\n    active: true,\r\n    clientCode: \"\",\r\n    age: \"\",\r\n    dob: \"\",\r\n    breastFeeding: \"\",\r\n    dateVisit: props?.patientObj?.dateVisit,\r\n    firstTimeVisit: null,\r\n    indexClient: null,\r\n    numChildren: \"\",\r\n    numWives: \"\",\r\n    pregnant: \"\",\r\n    dateOfBirth: null,\r\n    dateOfRegistration: null,\r\n    deceased: true,\r\n    deceasedDateTime: null,\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    facilityId: \"\",\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    isDateOfBirthEstimated: \"\",\r\n    maritalStatusId: \"\",\r\n    organizationId: \"\",\r\n    otherName: \"\",\r\n    sexId: \"\",\r\n    state: null,\r\n    lga: \"\",\r\n    id: \"\",\r\n    surname: \"\",\r\n    previouslyTested: \"\",\r\n    referredFrom: \"\",\r\n    targetGroup: \"\",\r\n    testingSetting: \"\",\r\n    typeCounseling: \"\",\r\n    relationWithIndexClient:\r\n      props.activePage?.activeObject?.relationWithIndexClient,\r\n    indexClientCode: \"\",\r\n    comment: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    KP();\r\n    EnrollmentSetting();\r\n    SourceReferral();\r\n    Genders();\r\n    CounselingType();\r\n    PregnancyStatus();\r\n    IndexTesting();\r\n    setObjValues(props.activePage.activeObject);\r\n    // if(props.patientObj){\r\n    //     objValues.referredFrom=props.patientObj.referredFrom\r\n    // }\r\n    //setObjValues({...objectValues, genderId: props.patientObj.personResponseDto.gender.id})\r\n    //objValues.genderId = props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.gender.id : \"\"\r\n    setModalityCheck(getCheckModality(props?.patientObj?.riskStratificationResponseDto?.modality));\r\n  }, [props.patientObj]);\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of IndexTesting\r\n  const IndexTesting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setIndexTesting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TEST_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Genders from\r\n  const Genders = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/GENDER`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGender(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClientCodeCheck = (e) => {\r\n    axios\r\n    .get(`${baseUrl}hts/clientCodeCheck`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n    .then((response) => {\r\n      //console.log(response.data);\r\n      setGender(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    //HTS FORM VALIDATION\r\n\r\n    temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\";\r\n    temp.typeCounseling = objValues.typeCounseling\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.testingSetting = objValues.testingSetting\r\n      ? \"\"\r\n      : \"This field is required.\";\r\n    temp.targetGroup =\r\n      objValues.targetGroup !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.referredFrom =\r\n      objValues.referredFrom !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.previouslyTested =\r\n      objValues.previouslyTested !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.indexClient =\r\n      objValues.indexClient !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.firstTimeVisit =\r\n      objValues.firstTimeVisit !== \"\" ? \"\" : \"This field is required.\";\r\n    temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleItemClick = (page, completedMenu) => {\r\n    props.handleItemClick(page);\r\n    if (props.completed.includes(completedMenu)) {\r\n    } else {\r\n      props.setCompleted([...props.completed, completedMenu]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (props.activePage.actionType === \"update\") {\r\n      //e.preventDefault();\r\n      const patientForm = {\r\n        ...props.patientObj,\r\n        clientCode: objValues.clientCode,\r\n        dateVisit: objValues.dateVisit,\r\n        extra: {},\r\n        id: objValues.id,\r\n        firstTimeVisit: objValues.firstTimeVisit,\r\n        indexClient: objValues.indexClient,\r\n        numChildren: objValues.numChildren,\r\n        numWives: objValues.numWives,\r\n        personId: props.patientObj.personId,\r\n        hospitalNumber: objValues.clientCode,\r\n        previouslyTested: objValues.previouslyTested,\r\n        referredFrom: objValues.referredFrom,\r\n        targetGroup: objValues.targetGroup,\r\n        testingSetting: objValues.testingSetting,\r\n        typeCounseling: objValues.typeCounseling,\r\n        breastFeeding: objValues.breastFeeding,\r\n        indexClientCode: objValues.indexClientCode,\r\n        pregnant: objValues.pregnant,\r\n        relationWithIndexClient: objValues.relationWithIndexClient,\r\n        comment: objValues.comment,\r\n      };\r\n\r\n      if (validate()) {\r\n        setSaving(true);\r\n        axios\r\n          .put(`${baseUrl}hts/${props.patientObj.id}`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.setPatientObj(response.data);\r\n            toast.success(\"HTS Test successful\");\r\n            if (props.patientAge > 14 && modalityCheck === \"fill\") {\r\n              handleItemClick(\"pre-test-counsel\", \"basic\");\r\n            } else {\r\n              handleItemClick(\"hiv-test\", \"basic\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (props.activePage.actionType === \"view\") {\r\n      //e.preventDefault();\r\n      setSaving(true);\r\n      if (props.patientAge > 14 && modalityCheck === \"fill\") {\r\n        setSaving(false);\r\n        handleItemClick(\"pre-test-counsel\", \"basic\");\r\n      } else {\r\n        setSaving(false);\r\n        handleItemClick(\"hiv-test\", \"basic\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2 style={{ color: \"#000\" }}>CLIENT INTAKE FORM</h2>\r\n          <br />\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Target Groups <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"targetGroup\"\r\n                    id=\"targetGroup\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.targetGroup}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {kP.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.targetGroup !== \"\" ? (\r\n                    <span className={classes.error}>{errors.targetGroup}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Client Code <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"clientCode\"\r\n                    id=\"clientCode\"\r\n                    value={objValues.clientCode}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={props.activePage.actionType === \"view\" || props.activePage.actionType === \"update\"}\r\n                  />\r\n                  {errors.clientCode !== \"\" ? (\r\n                    <span className={classes.error}>{errors.clientCode}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Referred From <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"referredFrom\"\r\n                    id=\"referredFrom\"\r\n                    value={objValues.referredFrom}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {sourceReferral.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.referredFrom !== \"\" ? (\r\n                    <span className={classes.error}>{errors.referredFrom}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Setting <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"testingSetting\"\r\n                    id=\"testingSetting\"\r\n                    value={objValues.testingSetting}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {enrollSetting.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.testingSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.testingSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Visit Date <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateVisit\"\r\n                    id=\"dateVisit\"\r\n                    value={objValues.dateVisit}\r\n                    onChange={handleInputChange}\r\n                    min={objValues.dateOfRegistration}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    readOnly={props.activePage.actionType === \"view\"}\r\n                  />\r\n                  {errors.dateVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n              {props.patientAge > 9 &&\r\n                (props.patientObj.personResponseDto.sex === \"Male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"male\" ||\r\n                  props.patientObj.personResponseDto.sex === \"MALE\") && (\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Number of wives/co-wives</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        min={0}\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        readOnly={props.activePage.actionType === \"view\"}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              {props.patientAge > 9 && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Number of Children {\"<5\"} years</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"numChildren\"\r\n                      id=\"numChildren\"\r\n                      min={0}\r\n                      value={objValues.numChildren}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readOnly={props.activePage.actionType === \"view\"}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Index Testing</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"indexClient\"\r\n                    id=\"indexClient\"\r\n                    value={objValues.indexClient}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.indexClient !== \"\" ? (\r\n                    <span className={classes.error}>{errors.indexClient}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.indexClient === \"true\" ||\r\n                (objValues.indexClient === true && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Relationship of the index client</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relationWithIndexClient\"\r\n                          id=\"relationWithIndexClient\"\r\n                          value={objValues.relationWithIndexClient}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled={props.activePage.actionType === \"view\"}\r\n                        >\r\n                          <option value={\"\"}></option>\r\n                          {indexTesting.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Index Client Code/ID</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"indexClientCode\"\r\n                          id=\"indexClientCode\"\r\n                          value={objValues.indexClientCode}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          readOnly={props.activePage.actionType === \"view\"}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              {(props.patientObj.personResponseDto.sex === \"Female\" ||\r\n                props.patientObj.personResponseDto.sex === \"female\" ||\r\n                props.patientObj.personResponseDto.sex === \"FEMALE\") && (\r\n                <>\r\n                  <div className=\"form-group  col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Pregnant Status</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        value={objValues.pregnant}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        disabled={\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality === \"TEST_SETTING_CPMTCT\" ||\r\n                          props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"\r\n                            ? true\r\n                            : props.activePage.actionType === \"view\"\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {pregnancyStatus.map((value) =>\r\n                          (props.patientObj.riskStratificationResponseDto\r\n                            .modality ===\r\n                            \"TEST_SETTING_OTHERS_PMTCT_(ANC1_ONLY)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_OTHERS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .testingSetting === \"TEST_SETTING_CPMTCT\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\" ||\r\n                            props.patientObj.riskStratificationResponseDto\r\n                              .modality ===\r\n                              \"TEST_SETTING_STANDALONE_HTS_POST_ANC1_BREASTFEEDING\") &&\r\n                          value.code === \"PREGANACY_STATUS_NOT_PREGNANT\" ? (\r\n                            <></>\r\n                          ) : (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/*objValues.pregnant!== 73 || objValues.pregnant!== \"73\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )*/}\r\n                </>\r\n              )}\r\n\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>First time visit</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"firstTimeVisit\"\r\n                    id=\"firstTimeVisit\"\r\n                    value={objValues.firstTimeVisit}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.firstTimeVisit !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.firstTimeVisit}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Previously tested within the last 3 months</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"previouslyTested\"\r\n                    id=\"previouslyTested\"\r\n                    value={objValues.previouslyTested}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    <option value=\"true\">YES</option>\r\n                    <option value=\"false\">NO</option>\r\n                  </select>\r\n                  {errors.previouslyTested !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.previouslyTested}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4\">\r\n                <FormGroup>\r\n                  <Label>Type of Counseling</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"typeCounseling\"\r\n                    id=\"typeCounseling\"\r\n                    value={objValues.typeCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  >\r\n                    <option value={\"\"}></option>\r\n                    {counselingType.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.typeCounseling !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.typeCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                <FormGroup>\r\n                  <Label for=\"firstName\">\r\n                    Comments\r\n                    {/* <span style={{ color: \"red\" }}> *</span> */}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    rows=\"4\"\r\n                    cols=\"7\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    value={objValues.comment}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                      height: \"100px\",\r\n                    }}\r\n                    disabled={props.activePage.actionType === \"view\"}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  {props.activePage.actionType === \"update\" && (\r\n                    <Button\r\n                      content=\"Update & Continue\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                  {props.activePage.actionType === \"view\" && (\r\n                    <Button\r\n                      content=\"Next\"\r\n                      icon=\"right arrow\"\r\n                      labelPosition=\"right\"\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\IndexContactList.js",["1130","1131","1132","1133","1134","1135","1136","1137"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\HTS-Module-HI_Cop_Hackathon_Group_2\\src\\main\\webapp\\jsx\\components\\Patient\\NewRegistrationEnrollement\\Elicitation\\AddIndexContact.js",["1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Button } from \"semantic-ui-react\";\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Badge from \"@mui/material/Badge\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  demo: {\n    backgroundColor: theme.palette.background.default,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"12.8px\",\n  },\n}));\n\nconst AddIndexContact = (props) => {\n  const classes = useStyles();\n\n  const [saving, setSaving] = useState(false);\n  const [sexs, setSexs] = useState([]);\n  const [notificationContact, setNotificationContact] = useState([]);\n  const [ageDisabled, setAgeDisabled] = useState(true);\n  const [indexTesting, setIndexTesting] = useState([]);\n  const [consent, setConsent] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\n  const [states, setStates] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const [elicitedCount, setElicitedCount] = useState(0);\n\n  let temp = { ...errors };\n  const handleItemClick = (page, completedMenu) => {\n    props.handleItemClick(page);\n    if (props.completed.includes(completedMenu)) {\n    } else {\n      props.setCompleted([...props.completed, completedMenu]);\n    }\n  };\n  const [objValuesIndex, setObjValuesIndex] = useState({\n    htsClientId: null,\n    indexNotificationServicesElicitation: {},\n    personId: null,\n  });\n  const handleItemClickPage = (page) => {\n    props.handleIClickPage(page);\n  };\n  const [objValues, setObjValues] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    sex: \"\",\n    htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n    physicalHurt: \"\",\n    threatenToHurt: \"\",\n    address: \"\",\n    hangOutSpots: \"\",\n    relativeToIndexClient: \"\",\n    currentlyLiveWithPartner: \"\",\n    partnerTestedPositive: \"\",\n    sexuallyUncomfortable: \"\",\n    notificationMethod: \"\",\n    datePartnerCameForTesting: \"\",\n    offeredIns: \"\",\n    acceptedIns: \"\",\n    elicited: \"\",\n    stateId: \"\",\n    lga: \"\",\n    dateTested: \"\",\n    currentHivStatus: \"\",\n  });\n  useEffect(() => {\n    getStates();\n    Sex();\n    NotificationContact();\n    IndexTesting();\n    Consent();\n  }, []);\n\n  function getStateByCountryId(getCountryId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setStates(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function getProvincesId(getStateId) {\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  const getProvinces = (e) => {\n    const stateId = e.target.value;\n    setObjValues({ ...objValues, stateId: e.target.value });\n    axios\n      .get(\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setProvinces(\n          response.data.sort((x, y) => {\n            return x.id - y.id;\n          })\n        );\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n\n  const getStates = () => {\n    getStateByCountryId(\"1\");\n    setObjValues({ ...objValues, countryId: 1 });\n  };\n\n  //Get list of Genders from\n  const Sex = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setSexs(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  ///CONSENT\tYes\t\ten\tCONSENT\n  const Consent = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CONSENT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setConsent(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //Get list of IndexTesting\n  const IndexTesting = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setIndexTesting(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const NotificationContact = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setNotificationContact(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    //setErrors({...temp, [e.target.name]:\"\"})\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\n      const name = alphabetOnly(e.target.value);\n      setObjValues({ ...objValues, [e.target.name]: name });\n    }\n    // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n    //     setHideNumChild(true)\n    // }else{\n    //     setHideNumChild(false)\n    // }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  //Date of Birth and Age handle\n  const handleDobChange = (e) => {\n    if (e.target.value) {\n      const today = new Date();\n      const birthDate = new Date(e.target.value);\n      let age_now = today.getFullYear() - birthDate.getFullYear();\n      const m = today.getMonth() - birthDate.getMonth();\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      //     age_now--;\n      // }\n      objValues.age = age_now;\n\n      //setBasicInfo({...basicInfo, age: age_now});\n    } else {\n      setObjValues({ ...objValues, age: \"\" });\n    }\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n    setObjValues({ ...objValues, dob: e.target.value });\n  };\n  const handleDateOfBirthChange = (e) => {\n    if (e.target.value == \"Actual\") {\n      objValues.isDateOfBirthEstimated = false;\n      setAgeDisabled(true);\n    } else if (e.target.value == \"Estimated\") {\n      objValues.isDateOfBirthEstimated = true;\n      setAgeDisabled(false);\n    }\n  };\n  const handleAgeChange = (e) => {\n    if (!ageDisabled && e.target.value) {\n      const currentDate = new Date();\n      currentDate.setDate(15);\n      currentDate.setMonth(5);\n      const estDob = moment(currentDate.toISOString());\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\n      setObjValues({ ...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\") });\n      objValues.dob = moment(dobNew).format(\"YYYY-MM-DD\");\n    }\n    setObjValues({ ...objValues, age: e.target.value });\n  };\n  //End of Date of Birth and Age handling\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n  const alphabetOnly = (value) => {\n    const result = value.replace(/[^a-z]/gi, \"\");\n    return result;\n  };\n  const validate = () => {\n    //HTS FORM VALIDATION\n    //temp.acceptedIns = objValues.acceptedIns ? \"\" : \"This field is required.\"\n    temp.offeredIns = objValues.offeredIns ? \"\" : \"This field is required.\";\n\n    setErrors({ ...temp });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.isDateOfBirthEstimated =\n        objValues.isDateOfBirthEstimated == true ? 1 : 0;\n\n      //console.log(\"obj\", objValues);\n      axios\n        .post(`${baseUrl}index-elicitation`, objValues, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          toast.success(\"Record save successfully\");\n\n          if (\n            objValues.offeredIns !== \"No\" &&\n            objValues.acceptedIns !== \"No\" &&\n            objValues.elicited !== \"No\"\n          ) {\n            setElicitedCount(elicitedCount + 1);\n            setObjValues({\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              dob: \"\",\n              phoneNumber: \"\",\n              altPhoneNumber: \"\",\n              sex: \"\",\n              htsClientId: props && props.patientObj ? props.patientObj.id : \"\",\n              physicalHurt: \"\",\n              threatenToHurt: \"\",\n              address: \"\",\n              hangOutSpots: \"\",\n              relativeToIndexClient: \"\",\n              currentlyLiveWithPartner: \"\",\n              partnerTestedPositive: \"\",\n              sexuallyUncomfortable: \"\",\n              notificationMethod: \"\",\n              datePartnerCameForTesting: \"\",\n              age: \"\",\n              isDateOfBirthEstimated: false,\n              //offeredIns:\"\",\n              //acceptedIns:\"\",\n              //elicited: \"\",\n              stateId: \"\",\n              lga: \"\",\n              dateTested: \"\",\n              currentHivStatus: \"\",\n            });\n          }\n\n          // handleItemClickPage('list')\n        })\n        .catch((error) => {\n          setSaving(false);\n          if (error.response && error.response.data) {\n            let errorMessage =\n              error.response.data.apierror &&\n              error.response.data.apierror.message !== \"\"\n                ? error.response.data.apierror.message\n                : \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          } else {\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardBody>\n          <h2 style={{ color: \"#000\" }}>\n            Index Notification Services - Elicitation\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\" float-end  mr-2 mt-2\"\n              onClick={() => handleItemClickPage(\"list\")}\n              //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n              <span style={{ textTransform: \"capitalize\" }}>\n                {\" \"}\n                Back To Client Index List\n              </span>\n            </Button>\n          </h2>\n          {elicitedCount === 0 ? (\n            \"\"\n          ) : (\n            <Badge badgeContent={elicitedCount} color=\"primary\">\n              Elicited Clients\n              <PersonIcon color=\"action\" />\n            </Badge>\n          )}\n          <br />\n          <br />\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group  col-md-4\">\n                <FormGroup>\n                  <Label>\n                    Offered INS ? <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <select\n                    className=\"form-control\"\n                    name=\"offeredIns\"\n                    id=\"offeredIns\"\n                    value={objValues.offeredIns}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                  >\n                    <option value={\"\"}></option>\n                    {consent.map((value) => (\n                      <option key={value.id} value={value.display}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.offeredIns !== \"\" ? (\n                    <span className={classes.error}>{errors.offeredIns}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.offeredIns !== \"\" && objValues.offeredIns !== \"No\" && (\n                <div className=\"form-group  col-md-4\">\n                  <FormGroup>\n                    <Label>\n                      Accepted INS ? <span style={{ color: \"red\" }}> </span>\n                    </Label>\n                    <select\n                      className=\"form-control\"\n                      name=\"acceptedIns\"\n                      id=\"acceptedIns\"\n                      value={objValues.acceptedIns}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.2rem\",\n                      }}\n                    >\n                      <option value={\"\"}></option>\n                      {consent.map((value) => (\n                        <option key={value.id} value={value.display}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </div>\n              )}\n              {objValues.acceptedIns !== \"\" &&\n                objValues.acceptedIns !== \"No\" && (\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Elicited ? <span style={{ color: \"red\" }}> </span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"elicited\"\n                        id=\"elicited\"\n                        value={objValues.elicited}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"row\">\n              {objValues.elicited !== \"\" && objValues.elicited !== \"No\" && (\n                <>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={objValues.firstName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"middleName\"\n                        id=\"middleName\"\n                        value={objValues.middleName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={objValues.lastName}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-2 col-md-2\">\n                    <FormGroup>\n                      <Label>Date Of Birth</Label>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Actual\"\n                            name=\"dateOfBirth\"\n                            defaultChecked\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Actual\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            value=\"Estimated\"\n                            name=\"dateOfBirth\"\n                            onChange={(e) => handleDateOfBirthChange(e)}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.2rem\",\n                            }}\n                          />{\" \"}\n                          Estimated\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Date</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"date\"\n                        name=\"dob\"\n                        id=\"dob\"\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        value={objValues.dob}\n                        onChange={handleDobChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-3\">\n                    <FormGroup>\n                      <Label>Age</Label>\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        name=\"age\"\n                        id=\"age\"\n                        value={objValues.age}\n                        disabled={ageDisabled}\n                        onChange={handleAgeChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Phone Number</Label>\n\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"phoneNumber\"\n                        id=\"phoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.phoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"phoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                      {errors.phoneNumber !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.phoneNumber}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Alternative Phone Number</Label>\n                      <PhoneInput\n                        containerStyle={{\n                          width: \"100%\",\n                          border: \"1px solid #014D88\",\n                        }}\n                        inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                        country={\"ng\"}\n                        placeholder=\"(234)7099999999\"\n                        minLength={10}\n                        name=\"altPhoneNumber\"\n                        id=\"altPhoneNumber\"\n                        masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                        value={objValues.altPhoneNumber}\n                        onChange={(e) => {\n                          checkPhoneNumberBasic(e, \"altPhoneNumber\");\n                        }}\n                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Sex <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sex\"\n                        id=\"sex\"\n                        value={objValues.sex}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {sexs.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        State <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={getProvinces}\n                        value={objValues.stateId}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {states.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.stateId !== \"\" ? (\n                        <span className={classes.error}>{errors.stateId}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        LGA <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        value={objValues.lga}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {provinces.map((value, index) => (\n                          <option key={index} value={value.id}>\n                            {value.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.lga !== \"\" ? (\n                        <span className={classes.error}>{errors.lga}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        Address <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"address\"\n                        id=\"address\"\n                        value={objValues.address}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">Hang-out spots</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"hangOutSpots\"\n                        id=\"hangOutSpots\"\n                        value={objValues.hangOutSpots}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Relationship to Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"relativeToIndexClient\"\n                        id=\"relativeToIndexClient\"\n                        value={objValues.relativeToIndexClient}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {indexTesting.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Do you currently live with this partner?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentlyLiveWithPartner\"\n                        id=\"currentlyLiveWithPartner\"\n                        value={objValues.currentlyLiveWithPartner}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value={\"true\"}>Yes</option>\n                        <option value={\"false\"}>No</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        As far as you know, has this partner ever tested\n                        positive for HIV{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"partnerTestedPositive\"\n                        id=\"partnerTestedPositive\"\n                        value={objValues.partnerTestedPositive}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever hit, kick, slapped or otherwise\n                        physical hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"physicalHurt\"\n                        id=\"physicalHurt\"\n                        value={objValues.physicalHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to hurt you?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"threatenToHurt\"\n                        id=\"threatenToHurt\"\n                        value={objValues.threatenToHurt}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Has this partner ever threatened to force you to do\n                        something sexually that made you uncomfortable ?{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"sexuallyUncomfortable\"\n                        id=\"sexuallyUncomfortable\"\n                        value={objValues.sexuallyUncomfortable}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {consent.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        Notification Method selected{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"notificationMethod\"\n                        id=\"notificationMethod\"\n                        value={objValues.notificationMethod}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        {notificationContact.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </select>\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <Label for=\"\">\n                        If contract by which date will partner come for testing?\n                      </Label>\n                      <Input\n                        type=\"date\"\n                        name=\"datePartnerCameForTesting\"\n                        id=\"datePartnerCameForTesting\"\n                        value={objValues.datePartnerCameForTesting}\n                        onChange={handleInputChange}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                      />\n                      {errors.datePartnerComeForTesting !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.datePartnerComeForTesting}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group  col-md-4\">\n                    <FormGroup>\n                      <Label>\n                        HIV Status of Index Client{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </Label>\n                      <select\n                        className=\"form-control\"\n                        name=\"currentHivStatus\"\n                        id=\"currentHivStatus\"\n                        value={objValues.currentHivStatus}\n                        onChange={handleInputChange}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.2rem\",\n                        }}\n                      >\n                        <option value={\"\"}></option>\n                        <option value=\"negative\">Negative</option>\n                        <option value=\"positive\">Positive</option>\n                        <option value=\"unknown\">Unknown</option>\n                      </select>\n                    </FormGroup>\n                  </div>\n                  {objValues.currentHivStatus !== \"\" &&\n                    objValues.currentHivStatus === \"positive\" && (\n                      <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"\">\n                            Date Tested?{\" \"}\n                            <span style={{ color: \"red\" }}> *</span>\n                          </Label>\n                          <Input\n                            type=\"date\"\n                            name=\"dateTested\"\n                            id=\"dateTested\"\n                            value={objValues.dateTested}\n                            onChange={handleInputChange}\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                </>\n              )}\n\n              {saving ? <Spinner /> : \"\"}\n              <br />\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                  <Button\n                    content=\"Save\"\n                    icon=\"save\"\n                    labelPosition=\"left\"\n                    style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AddIndexContact;\n",{"ruleId":"1155","severity":1,"message":"1156","line":4,"column":10,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":23},{"ruleId":"1159","replacedBy":"1160"},{"ruleId":"1161","replacedBy":"1162"},{"ruleId":"1155","severity":1,"message":"1163","line":3,"column":19,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1165","line":5,"column":26,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1166","line":8,"column":16,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1167","line":12,"column":22,"nodeType":"1157","messageId":"1158","endLine":12,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1168","line":22,"column":8,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1169","line":31,"column":7,"nodeType":"1157","messageId":"1158","endLine":31,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1170","line":46,"column":10,"nodeType":"1157","messageId":"1158","endLine":46,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1171","line":46,"column":18,"nodeType":"1157","messageId":"1158","endLine":46,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1172","line":51,"column":10,"nodeType":"1157","messageId":"1158","endLine":51,"endColumn":23},{"ruleId":"1173","severity":1,"message":"1174","line":270,"column":6,"nodeType":"1175","endLine":270,"endColumn":8,"suggestions":"1176"},{"ruleId":"1173","severity":1,"message":"1177","line":283,"column":6,"nodeType":"1175","endLine":283,"endColumn":18,"suggestions":"1178"},{"ruleId":"1179","severity":1,"message":"1180","line":352,"column":34,"nodeType":"1181","messageId":"1182","endLine":352,"endColumn":36},{"ruleId":"1179","severity":1,"message":"1180","line":380,"column":38,"nodeType":"1181","messageId":"1182","endLine":380,"endColumn":40},{"ruleId":"1155","severity":1,"message":"1183","line":10,"column":10,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1184","line":10,"column":15,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1185","line":2,"column":10,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1186","line":6,"column":8,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1185","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1187","line":34,"column":8,"nodeType":"1157","messageId":"1158","endLine":34,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1188","line":1,"column":29,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1190","line":4,"column":8,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1191","line":5,"column":52,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":56},{"ruleId":"1155","severity":1,"message":"1192","line":6,"column":13,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1193","line":8,"column":15,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1171","line":95,"column":20,"nodeType":"1157","messageId":"1158","endLine":95,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1194","line":96,"column":12,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1195","line":96,"column":20,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1188","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":38,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1197","line":3,"column":47,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":52},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1192","line":4,"column":13,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1165","line":8,"column":10,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1199","line":11,"column":10,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1200","line":11,"column":24,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1201","line":19,"column":19,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":19,"column":32,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":20,"column":8,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1204","line":23,"column":8,"nodeType":"1157","messageId":"1158","endLine":23,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1205","line":103,"column":10,"nodeType":"1157","messageId":"1158","endLine":103,"endColumn":12},{"ruleId":"1155","severity":1,"message":"1206","line":103,"column":14,"nodeType":"1157","messageId":"1158","endLine":103,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1195","line":104,"column":18,"nodeType":"1157","messageId":"1158","endLine":104,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1207","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1208","line":105,"column":23,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":37},{"ruleId":"1155","severity":1,"message":"1170","line":106,"column":10,"nodeType":"1157","messageId":"1158","endLine":106,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1171","line":106,"column":18,"nodeType":"1157","messageId":"1158","endLine":106,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1209","line":107,"column":7,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":11},{"ruleId":"1155","severity":1,"message":"1210","line":110,"column":10,"nodeType":"1157","messageId":"1158","endLine":110,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1211","line":110,"column":19,"nodeType":"1157","messageId":"1158","endLine":110,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1212","line":111,"column":10,"nodeType":"1157","messageId":"1158","endLine":111,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1213","line":111,"column":29,"nodeType":"1157","messageId":"1158","endLine":111,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1214","line":112,"column":10,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1215","line":112,"column":21,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1216","line":113,"column":10,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1217","line":113,"column":18,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1218","line":114,"column":10,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1219","line":114,"column":19,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1220","line":115,"column":10,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1221","line":115,"column":28,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1222","line":118,"column":10,"nodeType":"1157","messageId":"1158","endLine":118,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1223","line":87,"column":9,"nodeType":"1157","messageId":"1158","endLine":87,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1224","line":96,"column":21,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":33},{"ruleId":"1173","severity":1,"message":"1225","line":171,"column":6,"nodeType":"1175","endLine":171,"endColumn":48,"suggestions":"1226"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1197","line":9,"column":3,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":8},{"ruleId":"1155","severity":1,"message":"1191","line":10,"column":3,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":7},{"ruleId":"1155","severity":1,"message":"1193","line":13,"column":16,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1201","line":23,"column":19,"nodeType":"1157","messageId":"1158","endLine":23,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1227","line":97,"column":27,"nodeType":"1157","messageId":"1158","endLine":97,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1228","line":128,"column":28,"nodeType":"1157","messageId":"1158","endLine":128,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1229","line":129,"column":24,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":38},{"ruleId":"1173","severity":1,"message":"1230","line":220,"column":6,"nodeType":"1175","endLine":220,"endColumn":24,"suggestions":"1231"},{"ruleId":"1155","severity":1,"message":"1224","line":229,"column":21,"nodeType":"1157","messageId":"1158","endLine":229,"endColumn":33},{"ruleId":"1232","severity":1,"message":"1233","line":263,"column":5,"nodeType":"1234","messageId":"1182","endLine":263,"endColumn":36},{"ruleId":"1232","severity":1,"message":"1235","line":264,"column":5,"nodeType":"1234","messageId":"1182","endLine":264,"endColumn":23},{"ruleId":"1179","severity":1,"message":"1180","line":486,"column":29,"nodeType":"1181","messageId":"1182","endLine":486,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1196","line":4,"column":38,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":4,"column":54,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1198","line":8,"column":8,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1201","line":20,"column":19,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":20,"column":32,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":21,"column":8,"nodeType":"1157","messageId":"1158","endLine":21,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1236","line":22,"column":10,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1237","line":23,"column":10,"nodeType":"1157","messageId":"1158","endLine":23,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1238","line":23,"column":16,"nodeType":"1157","messageId":"1158","endLine":23,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1239","line":23,"column":31,"nodeType":"1157","messageId":"1158","endLine":23,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1240","line":24,"column":8,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1241","line":25,"column":8,"nodeType":"1157","messageId":"1158","endLine":25,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1242","line":27,"column":8,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1212","line":122,"column":10,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1214","line":123,"column":10,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1243","line":124,"column":10,"nodeType":"1157","messageId":"1158","endLine":124,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1244","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1245","line":125,"column":34,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":57},{"ruleId":"1155","severity":1,"message":"1246","line":128,"column":10,"nodeType":"1157","messageId":"1158","endLine":128,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":128,"column":21,"nodeType":"1157","messageId":"1158","endLine":128,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1248","line":132,"column":10,"nodeType":"1157","messageId":"1158","endLine":132,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1249","line":132,"column":31,"nodeType":"1157","messageId":"1158","endLine":132,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1250","line":138,"column":10,"nodeType":"1157","messageId":"1158","endLine":138,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1251","line":138,"column":41,"nodeType":"1157","messageId":"1158","endLine":138,"endColumn":73},{"ruleId":"1155","severity":1,"message":"1252","line":140,"column":21,"nodeType":"1157","messageId":"1158","endLine":140,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1253","line":146,"column":19,"nodeType":"1157","messageId":"1158","endLine":146,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1254","line":151,"column":10,"nodeType":"1157","messageId":"1158","endLine":151,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1255","line":151,"column":24,"nodeType":"1157","messageId":"1158","endLine":151,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1256","line":164,"column":10,"nodeType":"1157","messageId":"1158","endLine":164,"endColumn":36},{"ruleId":"1155","severity":1,"message":"1257","line":164,"column":38,"nodeType":"1157","messageId":"1158","endLine":164,"endColumn":67},{"ruleId":"1155","severity":1,"message":"1258","line":168,"column":5,"nodeType":"1157","messageId":"1158","endLine":168,"endColumn":40},{"ruleId":"1155","severity":1,"message":"1259","line":169,"column":5,"nodeType":"1157","messageId":"1158","endLine":169,"endColumn":43},{"ruleId":"1155","severity":1,"message":"1260","line":174,"column":10,"nodeType":"1157","messageId":"1158","endLine":174,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1261","line":175,"column":10,"nodeType":"1157","messageId":"1158","endLine":175,"endColumn":26},{"ruleId":"1232","severity":1,"message":"1262","line":276,"column":5,"nodeType":"1234","messageId":"1182","endLine":276,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1263","line":281,"column":10,"nodeType":"1157","messageId":"1158","endLine":281,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1264","line":282,"column":10,"nodeType":"1157","messageId":"1158","endLine":282,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1265","line":283,"column":10,"nodeType":"1157","messageId":"1158","endLine":283,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1266","line":333,"column":9,"nodeType":"1157","messageId":"1158","endLine":333,"endColumn":34},{"ruleId":"1179","severity":1,"message":"1180","line":371,"column":49,"nodeType":"1181","messageId":"1182","endLine":371,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1267","line":486,"column":9,"nodeType":"1157","messageId":"1158","endLine":486,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1268","line":487,"column":11,"nodeType":"1157","messageId":"1158","endLine":487,"endColumn":24},{"ruleId":"1173","severity":1,"message":"1269","line":534,"column":6,"nodeType":"1175","endLine":534,"endColumn":8,"suggestions":"1270"},{"ruleId":"1155","severity":1,"message":"1271","line":544,"column":9,"nodeType":"1157","messageId":"1158","endLine":544,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1272","line":565,"column":9,"nodeType":"1157","messageId":"1158","endLine":565,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1273","line":700,"column":9,"nodeType":"1157","messageId":"1158","endLine":700,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1274","line":724,"column":9,"nodeType":"1157","messageId":"1158","endLine":724,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1275","line":770,"column":9,"nodeType":"1157","messageId":"1158","endLine":770,"endColumn":29},{"ruleId":"1276","severity":1,"message":"1277","line":773,"column":47,"nodeType":"1278","messageId":"1279","endLine":773,"endColumn":49},{"ruleId":"1276","severity":1,"message":"1277","line":782,"column":49,"nodeType":"1278","messageId":"1279","endLine":782,"endColumn":51},{"ruleId":"1276","severity":1,"message":"1277","line":791,"column":49,"nodeType":"1278","messageId":"1279","endLine":791,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1280","line":954,"column":9,"nodeType":"1157","messageId":"1158","endLine":954,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":955,"column":24,"nodeType":"1181","messageId":"1182","endLine":955,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":958,"column":31,"nodeType":"1181","messageId":"1182","endLine":958,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1281","line":991,"column":9,"nodeType":"1157","messageId":"1158","endLine":991,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1180","line":1019,"column":47,"nodeType":"1181","messageId":"1182","endLine":1019,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1282","line":1083,"column":11,"nodeType":"1157","messageId":"1158","endLine":1083,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1201","line":19,"column":19,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":19,"column":32,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":20,"column":8,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1242","line":21,"column":8,"nodeType":"1157","messageId":"1158","endLine":21,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1283","line":108,"column":9,"nodeType":"1157","messageId":"1158","endLine":108,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1210","line":116,"column":10,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1211","line":116,"column":19,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1246","line":123,"column":10,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":123,"column":21,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1254","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1255","line":125,"column":24,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1284","line":126,"column":10,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1285","line":126,"column":25,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1286","line":134,"column":10,"nodeType":"1157","messageId":"1158","endLine":134,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1287","line":134,"column":29,"nodeType":"1157","messageId":"1158","endLine":134,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1288","line":135,"column":10,"nodeType":"1157","messageId":"1158","endLine":135,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1289","line":136,"column":10,"nodeType":"1157","messageId":"1158","endLine":136,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1290","line":139,"column":10,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":30},{"ruleId":"1173","severity":1,"message":"1291","line":219,"column":6,"nodeType":"1175","endLine":219,"endColumn":8,"suggestions":"1292"},{"ruleId":"1155","severity":1,"message":"1271","line":231,"column":9,"nodeType":"1157","messageId":"1158","endLine":231,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1272","line":250,"column":9,"nodeType":"1157","messageId":"1158","endLine":250,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1282","line":294,"column":15,"nodeType":"1157","messageId":"1158","endLine":294,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1280","line":481,"column":9,"nodeType":"1157","messageId":"1158","endLine":481,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":482,"column":24,"nodeType":"1181","messageId":"1182","endLine":482,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":485,"column":31,"nodeType":"1181","messageId":"1182","endLine":485,"endColumn":33},{"ruleId":"1179","severity":1,"message":"1180","line":579,"column":47,"nodeType":"1181","messageId":"1182","endLine":579,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":6,"column":16,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1293","line":99,"column":10,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1294","line":116,"column":9,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1295","line":375,"column":12,"nodeType":"1157","messageId":"1158","endLine":375,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1296","line":381,"column":12,"nodeType":"1157","messageId":"1158","endLine":381,"endColumn":28},{"ruleId":"1179","severity":1,"message":"1180","line":437,"column":47,"nodeType":"1181","messageId":"1182","endLine":437,"endColumn":49},{"ruleId":"1173","severity":1,"message":"1297","line":529,"column":6,"nodeType":"1175","endLine":529,"endColumn":27,"suggestions":"1298"},{"ruleId":"1173","severity":1,"message":"1297","line":551,"column":6,"nodeType":"1175","endLine":551,"endColumn":31,"suggestions":"1299"},{"ruleId":"1173","severity":1,"message":"1297","line":568,"column":6,"nodeType":"1175","endLine":568,"endColumn":29,"suggestions":"1300"},{"ruleId":"1173","severity":1,"message":"1297","line":580,"column":6,"nodeType":"1175","endLine":580,"endColumn":29,"suggestions":"1301"},{"ruleId":"1173","severity":1,"message":"1297","line":588,"column":6,"nodeType":"1175","endLine":588,"endColumn":33,"suggestions":"1302"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1165","line":5,"column":26,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1303","line":8,"column":10,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1167","line":13,"column":22,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1189","line":34,"column":8,"nodeType":"1157","messageId":"1158","endLine":34,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1199","line":35,"column":10,"nodeType":"1157","messageId":"1158","endLine":35,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1200","line":35,"column":24,"nodeType":"1157","messageId":"1158","endLine":35,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1304","line":49,"column":9,"nodeType":"1157","messageId":"1158","endLine":49,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1305","line":52,"column":10,"nodeType":"1157","messageId":"1158","endLine":52,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1306","line":70,"column":27,"nodeType":"1157","messageId":"1158","endLine":70,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1307","line":76,"column":9,"nodeType":"1157","messageId":"1158","endLine":76,"endColumn":21},{"ruleId":"1179","severity":1,"message":"1180","line":165,"column":34,"nodeType":"1181","messageId":"1182","endLine":165,"endColumn":36},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1166","line":13,"column":10,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1201","line":24,"column":19,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1220","line":116,"column":10,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":26},{"ruleId":"1173","severity":1,"message":"1308","line":182,"column":6,"nodeType":"1175","endLine":182,"endColumn":21,"suggestions":"1309"},{"ruleId":"1179","severity":1,"message":"1180","line":421,"column":24,"nodeType":"1181","messageId":"1182","endLine":421,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":424,"column":31,"nodeType":"1181","messageId":"1182","endLine":424,"endColumn":33},{"ruleId":"1179","severity":1,"message":"1180","line":547,"column":47,"nodeType":"1181","messageId":"1182","endLine":547,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1310","line":3,"column":20,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1201","line":8,"column":18,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":2,"column":54,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1203","line":19,"column":8,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1311","line":21,"column":8,"nodeType":"1157","messageId":"1158","endLine":21,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1312","line":26,"column":8,"nodeType":"1157","messageId":"1158","endLine":26,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1293","line":101,"column":10,"nodeType":"1157","messageId":"1158","endLine":101,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1313","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1314","line":105,"column":25,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1244","line":107,"column":10,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1315","line":107,"column":34,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":59},{"ruleId":"1155","severity":1,"message":"1252","line":117,"column":21,"nodeType":"1157","messageId":"1158","endLine":117,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1253","line":123,"column":19,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1316","line":131,"column":10,"nodeType":"1157","messageId":"1158","endLine":131,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1317","line":131,"column":26,"nodeType":"1157","messageId":"1158","endLine":131,"endColumn":43},{"ruleId":"1155","severity":1,"message":"1318","line":251,"column":9,"nodeType":"1157","messageId":"1158","endLine":251,"endColumn":19},{"ruleId":"1173","severity":1,"message":"1319","line":356,"column":6,"nodeType":"1175","endLine":356,"endColumn":24,"suggestions":"1320"},{"ruleId":"1155","severity":1,"message":"1321","line":504,"column":9,"nodeType":"1157","messageId":"1158","endLine":504,"endColumn":34},{"ruleId":"1155","severity":1,"message":"1322","line":517,"column":9,"nodeType":"1157","messageId":"1158","endLine":517,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1323","line":562,"column":9,"nodeType":"1157","messageId":"1158","endLine":562,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1280","line":636,"column":9,"nodeType":"1157","messageId":"1158","endLine":636,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1271","line":659,"column":9,"nodeType":"1157","messageId":"1158","endLine":659,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1282","line":670,"column":11,"nodeType":"1157","messageId":"1158","endLine":670,"endColumn":16},{"ruleId":"1179","severity":1,"message":"1180","line":703,"column":47,"nodeType":"1181","messageId":"1182","endLine":703,"endColumn":49},{"ruleId":"1179","severity":1,"message":"1180","line":721,"column":42,"nodeType":"1181","messageId":"1182","endLine":721,"endColumn":44},{"ruleId":"1324","severity":1,"message":"1325","line":5,"column":10,"nodeType":"1326","messageId":"1327","endLine":5,"endColumn":24,"fix":"1328"},{"ruleId":"1155","severity":1,"message":"1185","line":26,"column":10,"nodeType":"1157","messageId":"1158","endLine":26,"endColumn":20},{"ruleId":"1324","severity":1,"message":"1325","line":5,"column":10,"nodeType":"1326","messageId":"1327","endLine":5,"endColumn":24,"fix":"1329"},{"ruleId":"1155","severity":1,"message":"1185","line":26,"column":10,"nodeType":"1157","messageId":"1158","endLine":26,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":6,"column":16,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1330","line":10,"column":10,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1203","line":20,"column":8,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1331","line":24,"column":10,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1223","line":100,"column":9,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1332","line":104,"column":10,"nodeType":"1157","messageId":"1158","endLine":104,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1333","line":104,"column":24,"nodeType":"1157","messageId":"1158","endLine":104,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1334","line":108,"column":10,"nodeType":"1157","messageId":"1158","endLine":108,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1335","line":122,"column":27,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1336","line":125,"column":24,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":39},{"ruleId":"1179","severity":1,"message":"1180","line":131,"column":25,"nodeType":"1181","messageId":"1182","endLine":131,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1294","line":164,"column":9,"nodeType":"1157","messageId":"1158","endLine":164,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1337","line":308,"column":9,"nodeType":"1157","messageId":"1158","endLine":308,"endColumn":26},{"ruleId":"1173","severity":1,"message":"1338","line":412,"column":6,"nodeType":"1175","endLine":412,"endColumn":70,"suggestions":"1339"},{"ruleId":"1155","severity":1,"message":"1340","line":642,"column":13,"nodeType":"1157","messageId":"1158","endLine":642,"endColumn":21},{"ruleId":"1179","severity":1,"message":"1180","line":686,"column":24,"nodeType":"1181","messageId":"1182","endLine":686,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":689,"column":31,"nodeType":"1181","messageId":"1182","endLine":689,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1271","line":710,"column":9,"nodeType":"1157","messageId":"1158","endLine":710,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":748,"column":47,"nodeType":"1181","messageId":"1182","endLine":748,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1282","line":764,"column":11,"nodeType":"1157","messageId":"1158","endLine":764,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1224","line":112,"column":21,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":33},{"ruleId":"1341","severity":1,"message":"1342","line":242,"column":32,"nodeType":"1343","messageId":"1344","endLine":242,"endColumn":76,"fix":"1345"},{"ruleId":"1341","severity":1,"message":"1342","line":249,"column":32,"nodeType":"1343","messageId":"1344","endLine":249,"endColumn":73,"fix":"1346"},{"ruleId":"1341","severity":1,"message":"1342","line":257,"column":32,"nodeType":"1343","messageId":"1344","endLine":257,"endColumn":70,"fix":"1347"},{"ruleId":"1341","severity":1,"message":"1342","line":264,"column":32,"nodeType":"1343","messageId":"1344","endLine":264,"endColumn":69,"fix":"1348"},{"ruleId":"1341","severity":1,"message":"1342","line":271,"column":32,"nodeType":"1343","messageId":"1344","endLine":271,"endColumn":69,"fix":"1349"},{"ruleId":"1341","severity":1,"message":"1342","line":273,"column":32,"nodeType":"1343","messageId":"1344","endLine":273,"endColumn":62,"fix":"1350"},{"ruleId":"1173","severity":1,"message":"1351","line":301,"column":6,"nodeType":"1175","endLine":306,"endColumn":4,"suggestions":"1352"},{"ruleId":"1353","severity":1,"message":"1354","line":353,"column":5,"nodeType":"1355","messageId":"1356","endLine":358,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":354,"column":28,"nodeType":"1181","messageId":"1182","endLine":354,"endColumn":30},{"ruleId":"1353","severity":1,"message":"1354","line":360,"column":5,"nodeType":"1355","messageId":"1356","endLine":363,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":361,"column":28,"nodeType":"1181","messageId":"1182","endLine":361,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":365,"column":47,"nodeType":"1181","messageId":"1182","endLine":365,"endColumn":49},{"ruleId":"1357","severity":1,"message":"1358","line":797,"column":31,"nodeType":"1359","messageId":"1360","endLine":797,"endColumn":65},{"ruleId":"1155","severity":1,"message":"1361","line":3,"column":8,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":38,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1197","line":3,"column":47,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":52},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1192","line":4,"column":13,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1165","line":8,"column":10,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1201","line":19,"column":19,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":19,"column":32,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":20,"column":8,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1362","line":22,"column":8,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1205","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":12},{"ruleId":"1155","severity":1,"message":"1206","line":105,"column":14,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1195","line":106,"column":18,"nodeType":"1157","messageId":"1158","endLine":106,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1207","line":107,"column":10,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1208","line":107,"column":23,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":37},{"ruleId":"1155","severity":1,"message":"1170","line":108,"column":10,"nodeType":"1157","messageId":"1158","endLine":108,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1171","line":108,"column":18,"nodeType":"1157","messageId":"1158","endLine":108,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1209","line":109,"column":7,"nodeType":"1157","messageId":"1158","endLine":109,"endColumn":11},{"ruleId":"1155","severity":1,"message":"1210","line":112,"column":10,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1211","line":112,"column":19,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1212","line":113,"column":10,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1213","line":113,"column":29,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1214","line":114,"column":10,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1215","line":114,"column":21,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1216","line":115,"column":10,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1217","line":115,"column":18,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1218","line":116,"column":10,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1219","line":116,"column":19,"nodeType":"1157","messageId":"1158","endLine":116,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1220","line":117,"column":10,"nodeType":"1157","messageId":"1158","endLine":117,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1221","line":117,"column":28,"nodeType":"1157","messageId":"1158","endLine":117,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1222","line":119,"column":10,"nodeType":"1157","messageId":"1158","endLine":119,"endColumn":25},{"ruleId":"1173","severity":1,"message":"1363","line":178,"column":6,"nodeType":"1175","endLine":178,"endColumn":8,"suggestions":"1364"},{"ruleId":"1155","severity":1,"message":"1246","line":70,"column":10,"nodeType":"1157","messageId":"1158","endLine":70,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":70,"column":21,"nodeType":"1157","messageId":"1158","endLine":70,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1365","line":73,"column":10,"nodeType":"1157","messageId":"1158","endLine":73,"endColumn":20},{"ruleId":"1173","severity":1,"message":"1366","line":77,"column":6,"nodeType":"1175","endLine":77,"endColumn":8,"suggestions":"1367"},{"ruleId":"1179","severity":1,"message":"1180","line":107,"column":25,"nodeType":"1181","messageId":"1182","endLine":107,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1180","line":114,"column":25,"nodeType":"1181","messageId":"1182","endLine":114,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1193","line":4,"column":15,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1242","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1198","line":10,"column":8,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1330","line":13,"column":9,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1303","line":16,"column":9,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1368","line":16,"column":27,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1203","line":24,"column":8,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1369","line":108,"column":11,"nodeType":"1157","messageId":"1158","endLine":108,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1336","line":115,"column":26,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1370","line":120,"column":12,"nodeType":"1157","messageId":"1158","endLine":120,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1371","line":120,"column":43,"nodeType":"1157","messageId":"1158","endLine":120,"endColumn":72},{"ruleId":"1155","severity":1,"message":"1372","line":121,"column":12,"nodeType":"1157","messageId":"1158","endLine":121,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1373","line":121,"column":32,"nodeType":"1157","messageId":"1158","endLine":121,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1374","line":122,"column":12,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1375","line":123,"column":12,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1376","line":123,"column":31,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1377","line":221,"column":11,"nodeType":"1157","messageId":"1158","endLine":221,"endColumn":16},{"ruleId":"1179","severity":1,"message":"1180","line":276,"column":51,"nodeType":"1181","messageId":"1182","endLine":276,"endColumn":53},{"ruleId":"1179","severity":1,"message":"1180","line":296,"column":51,"nodeType":"1181","messageId":"1182","endLine":296,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1378","line":547,"column":11,"nodeType":"1157","messageId":"1158","endLine":547,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1379","line":556,"column":11,"nodeType":"1157","messageId":"1158","endLine":556,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1340","line":603,"column":19,"nodeType":"1157","messageId":"1158","endLine":603,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1380","line":652,"column":11,"nodeType":"1157","messageId":"1158","endLine":652,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1381","line":664,"column":11,"nodeType":"1157","messageId":"1158","endLine":664,"endColumn":35},{"ruleId":"1179","severity":1,"message":"1180","line":730,"column":28,"nodeType":"1181","messageId":"1182","endLine":730,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":733,"column":35,"nodeType":"1181","messageId":"1182","endLine":733,"endColumn":37},{"ruleId":"1382","severity":1,"message":"1383","line":1912,"column":45,"nodeType":"1384","messageId":"1385","endLine":1912,"endColumn":47},{"ruleId":"1382","severity":1,"message":"1383","line":1913,"column":45,"nodeType":"1384","messageId":"1385","endLine":1913,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1386","line":3,"column":10,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1387","line":3,"column":20,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1183","line":3,"column":25,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1388","line":5,"column":8,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1303","line":6,"column":10,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1389","line":9,"column":8,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1390","line":10,"column":8,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1391","line":11,"column":9,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1392","line":13,"column":7,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1393","line":91,"column":7,"nodeType":"1157","messageId":"1158","endLine":91,"endColumn":15},{"ruleId":"1324","severity":1,"message":"1325","line":4,"column":10,"nodeType":"1326","messageId":"1327","endLine":4,"endColumn":24,"fix":"1394"},{"ruleId":"1155","severity":1,"message":"1395","line":29,"column":10,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1396","line":30,"column":10,"nodeType":"1157","messageId":"1158","endLine":30,"endColumn":23},{"ruleId":"1173","severity":1,"message":"1397","line":47,"column":6,"nodeType":"1175","endLine":47,"endColumn":42,"suggestions":"1398"},{"ruleId":"1155","severity":1,"message":"1399","line":1,"column":28,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":36},{"ruleId":"1324","severity":1,"message":"1325","line":5,"column":10,"nodeType":"1326","messageId":"1327","endLine":5,"endColumn":24,"fix":"1400"},{"ruleId":"1155","severity":1,"message":"1401","line":28,"column":10,"nodeType":"1157","messageId":"1158","endLine":28,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1169","line":56,"column":7,"nodeType":"1157","messageId":"1158","endLine":56,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1190","line":2,"column":10,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1165","line":5,"column":26,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1303","line":8,"column":10,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1166","line":8,"column":16,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1167","line":11,"column":22,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1402","line":24,"column":8,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1403","line":28,"column":10,"nodeType":"1157","messageId":"1158","endLine":28,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1169","line":31,"column":7,"nodeType":"1157","messageId":"1158","endLine":31,"endColumn":16},{"ruleId":"1179","severity":1,"message":"1180","line":312,"column":64,"nodeType":"1181","messageId":"1182","endLine":312,"endColumn":66},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1188","line":1,"column":30,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1190","line":2,"column":10,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1185","line":4,"column":10,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1165","line":5,"column":26,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":31},{"ruleId":"1155","severity":1,"message":"1303","line":8,"column":10,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1166","line":8,"column":16,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1167","line":11,"column":22,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1305","line":33,"column":12,"nodeType":"1157","messageId":"1158","endLine":33,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1401","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1169","line":55,"column":7,"nodeType":"1157","messageId":"1158","endLine":55,"endColumn":16},{"ruleId":"1173","severity":1,"message":"1404","line":105,"column":6,"nodeType":"1175","endLine":105,"endColumn":24,"suggestions":"1405"},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":15,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1406","line":3,"column":35,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":44},{"ruleId":"1155","severity":1,"message":"1407","line":3,"column":46,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":54},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1391","line":9,"column":9,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1408","line":10,"column":9,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1409","line":13,"column":10,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1304","line":35,"column":9,"nodeType":"1157","messageId":"1158","endLine":35,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1410","line":36,"column":10,"nodeType":"1157","messageId":"1158","endLine":36,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1411","line":39,"column":9,"nodeType":"1157","messageId":"1158","endLine":39,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1412","line":42,"column":9,"nodeType":"1157","messageId":"1158","endLine":42,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1413","line":43,"column":11,"nodeType":"1157","messageId":"1158","endLine":43,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1414","line":44,"column":9,"nodeType":"1157","messageId":"1158","endLine":44,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1415","line":51,"column":9,"nodeType":"1157","messageId":"1158","endLine":51,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1416","line":53,"column":9,"nodeType":"1157","messageId":"1158","endLine":53,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1417","line":57,"column":9,"nodeType":"1157","messageId":"1158","endLine":57,"endColumn":20},{"ruleId":"1179","severity":1,"message":"1418","line":3,"column":27,"nodeType":"1181","messageId":"1182","endLine":3,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1419","line":6,"column":11,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":2,"column":54,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1311","line":21,"column":8,"nodeType":"1157","messageId":"1158","endLine":21,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1312","line":24,"column":8,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1293","line":99,"column":10,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1420","line":99,"column":23,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":37},{"ruleId":"1155","severity":1,"message":"1313","line":103,"column":10,"nodeType":"1157","messageId":"1158","endLine":103,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1314","line":103,"column":25,"nodeType":"1157","messageId":"1158","endLine":103,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1244","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1315","line":105,"column":34,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":59},{"ruleId":"1155","severity":1,"message":"1252","line":111,"column":21,"nodeType":"1157","messageId":"1158","endLine":111,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1253","line":117,"column":19,"nodeType":"1157","messageId":"1158","endLine":117,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1421","line":122,"column":10,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1316","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1317","line":125,"column":26,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":43},{"ruleId":"1232","severity":1,"message":"1422","line":199,"column":7,"nodeType":"1234","messageId":"1182","endLine":199,"endColumn":47},{"ruleId":"1232","severity":1,"message":"1422","line":232,"column":5,"nodeType":"1234","messageId":"1182","endLine":232,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1282","line":253,"column":11,"nodeType":"1157","messageId":"1158","endLine":253,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1423","line":278,"column":9,"nodeType":"1157","messageId":"1158","endLine":278,"endColumn":21},{"ruleId":"1173","severity":1,"message":"1424","line":354,"column":6,"nodeType":"1175","endLine":354,"endColumn":24,"suggestions":"1425"},{"ruleId":"1155","severity":1,"message":"1321","line":499,"column":9,"nodeType":"1157","messageId":"1158","endLine":499,"endColumn":34},{"ruleId":"1155","severity":1,"message":"1323","line":559,"column":9,"nodeType":"1157","messageId":"1158","endLine":559,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1280","line":630,"column":9,"nodeType":"1157","messageId":"1158","endLine":630,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":677,"column":47,"nodeType":"1181","messageId":"1182","endLine":677,"endColumn":49},{"ruleId":"1179","severity":1,"message":"1180","line":696,"column":42,"nodeType":"1181","messageId":"1182","endLine":696,"endColumn":44},{"ruleId":"1155","severity":1,"message":"1310","line":3,"column":20,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1426","line":4,"column":8,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1401","line":6,"column":10,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1303","line":7,"column":10,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1201","line":9,"column":19,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1201","line":24,"column":19,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1223","line":99,"column":9,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1427","line":145,"column":10,"nodeType":"1157","messageId":"1158","endLine":145,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1428","line":146,"column":10,"nodeType":"1157","messageId":"1158","endLine":146,"endColumn":28},{"ruleId":"1179","severity":1,"message":"1180","line":432,"column":47,"nodeType":"1181","messageId":"1182","endLine":432,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1223","line":87,"column":9,"nodeType":"1157","messageId":"1158","endLine":87,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1224","line":98,"column":21,"nodeType":"1157","messageId":"1158","endLine":98,"endColumn":33},{"ruleId":"1173","severity":1,"message":"1225","line":186,"column":6,"nodeType":"1175","endLine":186,"endColumn":48,"suggestions":"1429"},{"ruleId":"1155","severity":1,"message":"1198","line":4,"column":8,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1201","line":16,"column":19,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":16,"column":32,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":17,"column":8,"nodeType":"1157","messageId":"1158","endLine":17,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1242","line":18,"column":8,"nodeType":"1157","messageId":"1158","endLine":18,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1283","line":107,"column":9,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1210","line":115,"column":10,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1211","line":115,"column":19,"nodeType":"1157","messageId":"1158","endLine":115,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1246","line":122,"column":10,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":122,"column":21,"nodeType":"1157","messageId":"1158","endLine":122,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1254","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1255","line":125,"column":24,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1284","line":126,"column":10,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1285","line":126,"column":25,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1286","line":134,"column":10,"nodeType":"1157","messageId":"1158","endLine":134,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1287","line":134,"column":29,"nodeType":"1157","messageId":"1158","endLine":134,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1288","line":135,"column":10,"nodeType":"1157","messageId":"1158","endLine":135,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1289","line":136,"column":10,"nodeType":"1157","messageId":"1158","endLine":136,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1290","line":139,"column":10,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":30},{"ruleId":"1173","severity":1,"message":"1291","line":213,"column":6,"nodeType":"1175","endLine":213,"endColumn":8,"suggestions":"1430"},{"ruleId":"1155","severity":1,"message":"1271","line":226,"column":9,"nodeType":"1157","messageId":"1158","endLine":226,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1272","line":245,"column":9,"nodeType":"1157","messageId":"1158","endLine":245,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1282","line":289,"column":11,"nodeType":"1157","messageId":"1158","endLine":289,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1280","line":458,"column":9,"nodeType":"1157","messageId":"1158","endLine":458,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":459,"column":24,"nodeType":"1181","messageId":"1182","endLine":459,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":462,"column":31,"nodeType":"1181","messageId":"1182","endLine":462,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1412","line":493,"column":9,"nodeType":"1157","messageId":"1158","endLine":493,"endColumn":24},{"ruleId":"1179","severity":1,"message":"1180","line":554,"column":47,"nodeType":"1181","messageId":"1182","endLine":554,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1193","line":4,"column":15,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1242","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1198","line":10,"column":8,"nodeType":"1157","messageId":"1158","endLine":10,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1330","line":13,"column":9,"nodeType":"1157","messageId":"1158","endLine":13,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1303","line":16,"column":9,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1368","line":16,"column":27,"nodeType":"1157","messageId":"1158","endLine":16,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1203","line":24,"column":8,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1336","line":113,"column":26,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1370","line":118,"column":12,"nodeType":"1157","messageId":"1158","endLine":118,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1371","line":118,"column":43,"nodeType":"1157","messageId":"1158","endLine":118,"endColumn":72},{"ruleId":"1155","severity":1,"message":"1372","line":119,"column":12,"nodeType":"1157","messageId":"1158","endLine":119,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1373","line":119,"column":32,"nodeType":"1157","messageId":"1158","endLine":119,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1374","line":120,"column":12,"nodeType":"1157","messageId":"1158","endLine":120,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1375","line":121,"column":12,"nodeType":"1157","messageId":"1158","endLine":121,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1376","line":121,"column":31,"nodeType":"1157","messageId":"1158","endLine":121,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1377","line":213,"column":11,"nodeType":"1157","messageId":"1158","endLine":213,"endColumn":16},{"ruleId":"1179","severity":1,"message":"1180","line":268,"column":51,"nodeType":"1181","messageId":"1182","endLine":268,"endColumn":53},{"ruleId":"1179","severity":1,"message":"1180","line":288,"column":55,"nodeType":"1181","messageId":"1182","endLine":288,"endColumn":57},{"ruleId":"1155","severity":1,"message":"1378","line":537,"column":11,"nodeType":"1157","messageId":"1158","endLine":537,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1379","line":546,"column":11,"nodeType":"1157","messageId":"1158","endLine":546,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1340","line":599,"column":19,"nodeType":"1157","messageId":"1158","endLine":599,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1380","line":648,"column":11,"nodeType":"1157","messageId":"1158","endLine":648,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1381","line":660,"column":11,"nodeType":"1157","messageId":"1158","endLine":660,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1431","line":677,"column":19,"nodeType":"1157","messageId":"1158","endLine":677,"endColumn":31},{"ruleId":"1179","severity":1,"message":"1180","line":726,"column":28,"nodeType":"1181","messageId":"1182","endLine":726,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":735,"column":35,"nodeType":"1181","messageId":"1182","endLine":735,"endColumn":37},{"ruleId":"1382","severity":1,"message":"1383","line":1875,"column":45,"nodeType":"1384","messageId":"1385","endLine":1875,"endColumn":47},{"ruleId":"1382","severity":1,"message":"1383","line":1876,"column":45,"nodeType":"1384","messageId":"1385","endLine":1876,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1224","line":106,"column":21,"nodeType":"1157","messageId":"1158","endLine":106,"endColumn":33},{"ruleId":"1341","severity":1,"message":"1342","line":242,"column":32,"nodeType":"1343","messageId":"1344","endLine":242,"endColumn":76,"fix":"1432"},{"ruleId":"1341","severity":1,"message":"1342","line":249,"column":32,"nodeType":"1343","messageId":"1344","endLine":249,"endColumn":73,"fix":"1433"},{"ruleId":"1341","severity":1,"message":"1342","line":257,"column":32,"nodeType":"1343","messageId":"1344","endLine":257,"endColumn":70,"fix":"1434"},{"ruleId":"1341","severity":1,"message":"1342","line":264,"column":32,"nodeType":"1343","messageId":"1344","endLine":264,"endColumn":69,"fix":"1435"},{"ruleId":"1341","severity":1,"message":"1342","line":271,"column":32,"nodeType":"1343","messageId":"1344","endLine":271,"endColumn":69,"fix":"1436"},{"ruleId":"1341","severity":1,"message":"1342","line":273,"column":32,"nodeType":"1343","messageId":"1344","endLine":273,"endColumn":62,"fix":"1437"},{"ruleId":"1173","severity":1,"message":"1351","line":275,"column":6,"nodeType":"1175","endLine":280,"endColumn":4,"suggestions":"1438"},{"ruleId":"1353","severity":1,"message":"1354","line":327,"column":5,"nodeType":"1355","messageId":"1356","endLine":332,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":328,"column":28,"nodeType":"1181","messageId":"1182","endLine":328,"endColumn":30},{"ruleId":"1353","severity":1,"message":"1354","line":334,"column":5,"nodeType":"1355","messageId":"1356","endLine":337,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":335,"column":28,"nodeType":"1181","messageId":"1182","endLine":335,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":339,"column":47,"nodeType":"1181","messageId":"1182","endLine":339,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1389","line":1,"column":8,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1390","line":2,"column":8,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1188","line":1,"column":29,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1190","line":4,"column":8,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1191","line":5,"column":52,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":56},{"ruleId":"1155","severity":1,"message":"1192","line":6,"column":13,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1193","line":8,"column":15,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1171","line":95,"column":20,"nodeType":"1157","messageId":"1158","endLine":95,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1194","line":96,"column":12,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1195","line":96,"column":20,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1401","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1192","line":30,"column":8,"nodeType":"1157","messageId":"1158","endLine":30,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1169","line":58,"column":7,"nodeType":"1157","messageId":"1158","endLine":58,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1439","line":109,"column":9,"nodeType":"1157","messageId":"1158","endLine":109,"endColumn":18},{"ruleId":"1173","severity":1,"message":"1440","line":115,"column":6,"nodeType":"1175","endLine":115,"endColumn":8,"suggestions":"1441"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":2,"column":54,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1293","line":98,"column":10,"nodeType":"1157","messageId":"1158","endLine":98,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1316","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1317","line":105,"column":26,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":43},{"ruleId":"1173","severity":1,"message":"1442","line":152,"column":6,"nodeType":"1175","endLine":152,"endColumn":24,"suggestions":"1443"},{"ruleId":"1155","severity":1,"message":"1444","line":168,"column":12,"nodeType":"1157","messageId":"1158","endLine":168,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1412","line":260,"column":9,"nodeType":"1157","messageId":"1158","endLine":260,"endColumn":24},{"ruleId":"1179","severity":1,"message":"1180","line":312,"column":24,"nodeType":"1181","messageId":"1182","endLine":312,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":315,"column":31,"nodeType":"1181","messageId":"1182","endLine":315,"endColumn":33},{"ruleId":"1179","severity":1,"message":"1180","line":347,"column":47,"nodeType":"1181","messageId":"1182","endLine":347,"endColumn":49},{"ruleId":"1179","severity":1,"message":"1180","line":354,"column":42,"nodeType":"1181","messageId":"1182","endLine":354,"endColumn":44},{"ruleId":"1155","severity":1,"message":"1310","line":3,"column":20,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1401","line":6,"column":10,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1303","line":7,"column":10,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1201","line":9,"column":18,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":6,"column":16,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1293","line":98,"column":10,"nodeType":"1157","messageId":"1158","endLine":98,"endColumn":21},{"ruleId":"1179","severity":1,"message":"1180","line":392,"column":47,"nodeType":"1181","messageId":"1182","endLine":392,"endColumn":49},{"ruleId":"1173","severity":1,"message":"1297","line":481,"column":6,"nodeType":"1175","endLine":481,"endColumn":27,"suggestions":"1445"},{"ruleId":"1173","severity":1,"message":"1297","line":503,"column":6,"nodeType":"1175","endLine":503,"endColumn":31,"suggestions":"1446"},{"ruleId":"1173","severity":1,"message":"1297","line":520,"column":6,"nodeType":"1175","endLine":520,"endColumn":29,"suggestions":"1447"},{"ruleId":"1173","severity":1,"message":"1297","line":532,"column":6,"nodeType":"1175","endLine":532,"endColumn":29,"suggestions":"1448"},{"ruleId":"1173","severity":1,"message":"1297","line":540,"column":6,"nodeType":"1175","endLine":540,"endColumn":33,"suggestions":"1449"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1197","line":3,"column":46,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":52,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":56},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":15,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1201","line":15,"column":18,"nodeType":"1157","messageId":"1158","endLine":15,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1224","line":105,"column":23,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":35},{"ruleId":"1173","severity":1,"message":"1230","line":185,"column":8,"nodeType":"1175","endLine":185,"endColumn":26,"suggestions":"1450"},{"ruleId":"1155","severity":1,"message":"1451","line":3,"column":8,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1196","line":4,"column":38,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":4,"column":54,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":7,"column":16,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1198","line":8,"column":8,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1330","line":11,"column":10,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1303","line":14,"column":10,"nodeType":"1157","messageId":"1158","endLine":14,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1368","line":14,"column":28,"nodeType":"1157","messageId":"1158","endLine":14,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":22,"column":8,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1452","line":24,"column":10,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1223","line":100,"column":9,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1334","line":107,"column":10,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1453","line":112,"column":10,"nodeType":"1157","messageId":"1158","endLine":112,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1454","line":113,"column":10,"nodeType":"1157","messageId":"1158","endLine":113,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1455","line":114,"column":10,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1336","line":117,"column":24,"nodeType":"1157","messageId":"1158","endLine":117,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1337","line":176,"column":9,"nodeType":"1157","messageId":"1158","endLine":176,"endColumn":26},{"ruleId":"1173","severity":1,"message":"1456","line":242,"column":6,"nodeType":"1175","endLine":242,"endColumn":38,"suggestions":"1457"},{"ruleId":"1179","severity":1,"message":"1180","line":384,"column":47,"nodeType":"1181","messageId":"1182","endLine":384,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1401","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1386","line":29,"column":10,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1458","line":29,"column":28,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1237","line":29,"column":34,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1169","line":56,"column":7,"nodeType":"1157","messageId":"1158","endLine":56,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1439","line":102,"column":9,"nodeType":"1157","messageId":"1158","endLine":102,"endColumn":18},{"ruleId":"1173","severity":1,"message":"1440","line":108,"column":6,"nodeType":"1175","endLine":108,"endColumn":8,"suggestions":"1459"},{"ruleId":"1155","severity":1,"message":"1460","line":124,"column":9,"nodeType":"1157","messageId":"1158","endLine":124,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1169","line":49,"column":7,"nodeType":"1157","messageId":"1158","endLine":49,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1461","line":96,"column":10,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1374","line":97,"column":10,"nodeType":"1157","messageId":"1158","endLine":97,"endColumn":23},{"ruleId":"1173","severity":1,"message":"1440","line":107,"column":6,"nodeType":"1175","endLine":107,"endColumn":8,"suggestions":"1462"},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1201","line":20,"column":19,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":20,"column":32,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":21,"column":8,"nodeType":"1157","messageId":"1158","endLine":21,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1242","line":22,"column":8,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1283","line":110,"column":9,"nodeType":"1157","messageId":"1158","endLine":110,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1210","line":118,"column":10,"nodeType":"1157","messageId":"1158","endLine":118,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1211","line":118,"column":19,"nodeType":"1157","messageId":"1158","endLine":118,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1246","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":125,"column":21,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1254","line":128,"column":10,"nodeType":"1157","messageId":"1158","endLine":128,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1255","line":128,"column":24,"nodeType":"1157","messageId":"1158","endLine":128,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1284","line":129,"column":10,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1285","line":129,"column":25,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1286","line":137,"column":10,"nodeType":"1157","messageId":"1158","endLine":137,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1287","line":137,"column":29,"nodeType":"1157","messageId":"1158","endLine":137,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1288","line":138,"column":10,"nodeType":"1157","messageId":"1158","endLine":138,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1289","line":139,"column":10,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":35},{"ruleId":"1155","severity":1,"message":"1463","line":139,"column":37,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":65},{"ruleId":"1155","severity":1,"message":"1290","line":142,"column":10,"nodeType":"1157","messageId":"1158","endLine":142,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1223","line":143,"column":9,"nodeType":"1157","messageId":"1158","endLine":143,"endColumn":16},{"ruleId":"1173","severity":1,"message":"1464","line":225,"column":6,"nodeType":"1175","endLine":225,"endColumn":8,"suggestions":"1465"},{"ruleId":"1155","severity":1,"message":"1271","line":244,"column":9,"nodeType":"1157","messageId":"1158","endLine":244,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1272","line":263,"column":9,"nodeType":"1157","messageId":"1158","endLine":263,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1282","line":307,"column":11,"nodeType":"1157","messageId":"1158","endLine":307,"endColumn":16},{"ruleId":"1173","severity":1,"message":"1466","line":404,"column":6,"nodeType":"1175","endLine":404,"endColumn":8,"suggestions":"1467"},{"ruleId":"1155","severity":1,"message":"1280","line":503,"column":9,"nodeType":"1157","messageId":"1158","endLine":503,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":504,"column":24,"nodeType":"1181","messageId":"1182","endLine":504,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":507,"column":31,"nodeType":"1181","messageId":"1182","endLine":507,"endColumn":33},{"ruleId":"1179","severity":1,"message":"1180","line":593,"column":47,"nodeType":"1181","messageId":"1182","endLine":593,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1468","line":596,"column":9,"nodeType":"1157","messageId":"1158","endLine":596,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1401","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1386","line":29,"column":10,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1458","line":29,"column":28,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1237","line":29,"column":34,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1169","line":56,"column":7,"nodeType":"1157","messageId":"1158","endLine":56,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1439","line":102,"column":9,"nodeType":"1157","messageId":"1158","endLine":102,"endColumn":18},{"ruleId":"1173","severity":1,"message":"1440","line":108,"column":6,"nodeType":"1175","endLine":108,"endColumn":8,"suggestions":"1469"},{"ruleId":"1155","severity":1,"message":"1460","line":124,"column":9,"nodeType":"1157","messageId":"1158","endLine":124,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1188","line":1,"column":29,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":13},{"ruleId":"1155","severity":1,"message":"1190","line":4,"column":8,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1191","line":5,"column":52,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":56},{"ruleId":"1155","severity":1,"message":"1192","line":6,"column":13,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1193","line":8,"column":15,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1171","line":95,"column":20,"nodeType":"1157","messageId":"1158","endLine":95,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1194","line":96,"column":12,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1195","line":96,"column":20,"nodeType":"1157","messageId":"1158","endLine":96,"endColumn":29},{"ruleId":"1324","severity":1,"message":"1325","line":5,"column":10,"nodeType":"1326","messageId":"1327","endLine":5,"endColumn":24,"fix":"1470"},{"ruleId":"1155","severity":1,"message":"1401","line":28,"column":10,"nodeType":"1157","messageId":"1158","endLine":28,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1169","line":57,"column":7,"nodeType":"1157","messageId":"1158","endLine":57,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1223","line":101,"column":7,"nodeType":"1157","messageId":"1158","endLine":101,"endColumn":14},{"ruleId":"1173","severity":1,"message":"1471","line":132,"column":6,"nodeType":"1175","endLine":132,"endColumn":24,"suggestions":"1472"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":2,"column":54,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1293","line":98,"column":10,"nodeType":"1157","messageId":"1158","endLine":98,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1316","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1317","line":105,"column":26,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":43},{"ruleId":"1173","severity":1,"message":"1442","line":152,"column":6,"nodeType":"1175","endLine":152,"endColumn":24,"suggestions":"1473"},{"ruleId":"1155","severity":1,"message":"1444","line":168,"column":12,"nodeType":"1157","messageId":"1158","endLine":168,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1412","line":260,"column":9,"nodeType":"1157","messageId":"1158","endLine":260,"endColumn":24},{"ruleId":"1179","severity":1,"message":"1180","line":347,"column":47,"nodeType":"1181","messageId":"1182","endLine":347,"endColumn":49},{"ruleId":"1179","severity":1,"message":"1180","line":354,"column":42,"nodeType":"1181","messageId":"1182","endLine":354,"endColumn":44},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1201","line":19,"column":19,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1202","line":19,"column":32,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":20,"column":8,"nodeType":"1157","messageId":"1158","endLine":20,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1242","line":28,"column":8,"nodeType":"1157","messageId":"1158","endLine":28,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1212","line":123,"column":10,"nodeType":"1157","messageId":"1158","endLine":123,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1214","line":124,"column":10,"nodeType":"1157","messageId":"1158","endLine":124,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1243","line":125,"column":10,"nodeType":"1157","messageId":"1158","endLine":125,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1244","line":126,"column":10,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1245","line":126,"column":34,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":57},{"ruleId":"1155","severity":1,"message":"1246","line":129,"column":10,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1247","line":129,"column":21,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1248","line":133,"column":10,"nodeType":"1157","messageId":"1158","endLine":133,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1249","line":133,"column":31,"nodeType":"1157","messageId":"1158","endLine":133,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1250","line":139,"column":10,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1251","line":139,"column":41,"nodeType":"1157","messageId":"1158","endLine":139,"endColumn":73},{"ruleId":"1155","severity":1,"message":"1252","line":141,"column":21,"nodeType":"1157","messageId":"1158","endLine":141,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1253","line":147,"column":19,"nodeType":"1157","messageId":"1158","endLine":147,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1254","line":152,"column":10,"nodeType":"1157","messageId":"1158","endLine":152,"endColumn":22},{"ruleId":"1155","severity":1,"message":"1255","line":152,"column":24,"nodeType":"1157","messageId":"1158","endLine":152,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1474","line":168,"column":10,"nodeType":"1157","messageId":"1158","endLine":168,"endColumn":24},{"ruleId":"1232","severity":1,"message":"1262","line":261,"column":5,"nodeType":"1234","messageId":"1182","endLine":261,"endColumn":19},{"ruleId":"1155","severity":1,"message":"1263","line":267,"column":10,"nodeType":"1157","messageId":"1158","endLine":267,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1264","line":268,"column":10,"nodeType":"1157","messageId":"1158","endLine":268,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1265","line":269,"column":10,"nodeType":"1157","messageId":"1158","endLine":269,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1475","line":309,"column":9,"nodeType":"1157","messageId":"1158","endLine":309,"endColumn":27},{"ruleId":"1179","severity":1,"message":"1180","line":429,"column":49,"nodeType":"1181","messageId":"1182","endLine":429,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1267","line":544,"column":9,"nodeType":"1157","messageId":"1158","endLine":544,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1268","line":545,"column":11,"nodeType":"1157","messageId":"1158","endLine":545,"endColumn":24},{"ruleId":"1173","severity":1,"message":"1476","line":592,"column":6,"nodeType":"1175","endLine":592,"endColumn":8,"suggestions":"1477"},{"ruleId":"1155","severity":1,"message":"1271","line":602,"column":9,"nodeType":"1157","messageId":"1158","endLine":602,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1272","line":623,"column":9,"nodeType":"1157","messageId":"1158","endLine":623,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1478","line":648,"column":9,"nodeType":"1157","messageId":"1158","endLine":648,"endColumn":42},{"ruleId":"1155","severity":1,"message":"1479","line":699,"column":9,"nodeType":"1157","messageId":"1158","endLine":699,"endColumn":51},{"ruleId":"1179","severity":1,"message":"1180","line":743,"column":51,"nodeType":"1181","messageId":"1182","endLine":743,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1273","line":748,"column":9,"nodeType":"1157","messageId":"1158","endLine":748,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1282","line":778,"column":11,"nodeType":"1157","messageId":"1158","endLine":778,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1274","line":789,"column":9,"nodeType":"1157","messageId":"1158","endLine":789,"endColumn":39},{"ruleId":"1276","severity":1,"message":"1277","line":838,"column":47,"nodeType":"1278","messageId":"1279","endLine":838,"endColumn":49},{"ruleId":"1276","severity":1,"message":"1277","line":847,"column":49,"nodeType":"1278","messageId":"1279","endLine":847,"endColumn":51},{"ruleId":"1276","severity":1,"message":"1277","line":856,"column":49,"nodeType":"1278","messageId":"1279","endLine":856,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1280","line":1050,"column":9,"nodeType":"1157","messageId":"1158","endLine":1050,"endColumn":32},{"ruleId":"1179","severity":1,"message":"1180","line":1051,"column":24,"nodeType":"1181","messageId":"1182","endLine":1051,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":1054,"column":31,"nodeType":"1181","messageId":"1182","endLine":1054,"endColumn":33},{"ruleId":"1155","severity":1,"message":"1281","line":1087,"column":9,"nodeType":"1157","messageId":"1158","endLine":1087,"endColumn":17},{"ruleId":"1179","severity":1,"message":"1180","line":1115,"column":47,"nodeType":"1181","messageId":"1182","endLine":1115,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":38,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1480","line":3,"column":28,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":36},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1310","line":6,"column":10,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1203","line":19,"column":8,"nodeType":"1157","messageId":"1158","endLine":19,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1207","line":100,"column":10,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1208","line":100,"column":23,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":37},{"ruleId":"1155","severity":1,"message":"1411","line":104,"column":9,"nodeType":"1157","messageId":"1158","endLine":104,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1218","line":105,"column":10,"nodeType":"1157","messageId":"1158","endLine":105,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1223","line":126,"column":8,"nodeType":"1157","messageId":"1158","endLine":126,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1481","line":129,"column":10,"nodeType":"1157","messageId":"1158","endLine":129,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1263","line":130,"column":10,"nodeType":"1157","messageId":"1158","endLine":130,"endColumn":23},{"ruleId":"1155","severity":1,"message":"1482","line":130,"column":25,"nodeType":"1157","messageId":"1158","endLine":130,"endColumn":41},{"ruleId":"1155","severity":1,"message":"1264","line":131,"column":10,"nodeType":"1157","messageId":"1158","endLine":131,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1483","line":131,"column":28,"nodeType":"1157","messageId":"1158","endLine":131,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1265","line":132,"column":10,"nodeType":"1157","messageId":"1158","endLine":132,"endColumn":21},{"ruleId":"1155","severity":1,"message":"1484","line":132,"column":23,"nodeType":"1157","messageId":"1158","endLine":132,"endColumn":37},{"ruleId":"1155","severity":1,"message":"1412","line":134,"column":11,"nodeType":"1157","messageId":"1158","endLine":134,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1282","line":148,"column":15,"nodeType":"1157","messageId":"1158","endLine":148,"endColumn":20},{"ruleId":"1173","severity":1,"message":"1466","line":196,"column":8,"nodeType":"1175","endLine":196,"endColumn":10,"suggestions":"1485"},{"ruleId":"1155","severity":1,"message":"1486","line":253,"column":9,"nodeType":"1157","messageId":"1158","endLine":253,"endColumn":34},{"ruleId":"1155","severity":1,"message":"1271","line":292,"column":9,"nodeType":"1157","messageId":"1158","endLine":292,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":361,"column":47,"nodeType":"1181","messageId":"1182","endLine":361,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":6,"column":16,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1224","line":106,"column":21,"nodeType":"1157","messageId":"1158","endLine":106,"endColumn":33},{"ruleId":"1341","severity":1,"message":"1342","line":220,"column":32,"nodeType":"1343","messageId":"1344","endLine":220,"endColumn":76,"fix":"1487"},{"ruleId":"1341","severity":1,"message":"1342","line":227,"column":32,"nodeType":"1343","messageId":"1344","endLine":227,"endColumn":73,"fix":"1488"},{"ruleId":"1341","severity":1,"message":"1342","line":235,"column":32,"nodeType":"1343","messageId":"1344","endLine":235,"endColumn":70,"fix":"1489"},{"ruleId":"1341","severity":1,"message":"1342","line":242,"column":32,"nodeType":"1343","messageId":"1344","endLine":242,"endColumn":69,"fix":"1490"},{"ruleId":"1341","severity":1,"message":"1342","line":249,"column":32,"nodeType":"1343","messageId":"1344","endLine":249,"endColumn":69,"fix":"1491"},{"ruleId":"1341","severity":1,"message":"1342","line":251,"column":32,"nodeType":"1343","messageId":"1344","endLine":251,"endColumn":62,"fix":"1492"},{"ruleId":"1173","severity":1,"message":"1351","line":281,"column":6,"nodeType":"1175","endLine":286,"endColumn":4,"suggestions":"1493"},{"ruleId":"1353","severity":1,"message":"1354","line":335,"column":5,"nodeType":"1355","messageId":"1356","endLine":340,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":336,"column":28,"nodeType":"1181","messageId":"1182","endLine":336,"endColumn":30},{"ruleId":"1353","severity":1,"message":"1354","line":342,"column":5,"nodeType":"1355","messageId":"1356","endLine":345,"endColumn":6},{"ruleId":"1179","severity":1,"message":"1180","line":343,"column":28,"nodeType":"1181","messageId":"1182","endLine":343,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":347,"column":47,"nodeType":"1181","messageId":"1182","endLine":347,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1196","line":3,"column":38,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1201","line":24,"column":19,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":30},{"ruleId":"1155","severity":1,"message":"1223","line":99,"column":9,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1427","line":114,"column":10,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":25},{"ruleId":"1173","severity":1,"message":"1494","line":183,"column":6,"nodeType":"1175","endLine":183,"endColumn":24,"suggestions":"1495"},{"ruleId":"1179","severity":1,"message":"1180","line":470,"column":47,"nodeType":"1181","messageId":"1182","endLine":470,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":54,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1223","line":91,"column":9,"nodeType":"1157","messageId":"1158","endLine":91,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1224","line":102,"column":21,"nodeType":"1157","messageId":"1158","endLine":102,"endColumn":33},{"ruleId":"1173","severity":1,"message":"1225","line":198,"column":6,"nodeType":"1175","endLine":198,"endColumn":24,"suggestions":"1496"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":53,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":57},{"ruleId":"1155","severity":1,"message":"1193","line":6,"column":15,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1497","line":88,"column":12,"nodeType":"1157","messageId":"1158","endLine":88,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1498","line":88,"column":26,"nodeType":"1157","messageId":"1158","endLine":88,"endColumn":41},{"ruleId":"1179","severity":1,"message":"1180","line":411,"column":51,"nodeType":"1181","messageId":"1182","endLine":411,"endColumn":53},{"ruleId":"1173","severity":1,"message":"1297","line":504,"column":8,"nodeType":"1175","endLine":504,"endColumn":29,"suggestions":"1499"},{"ruleId":"1173","severity":1,"message":"1297","line":526,"column":8,"nodeType":"1175","endLine":526,"endColumn":33,"suggestions":"1500"},{"ruleId":"1173","severity":1,"message":"1297","line":543,"column":8,"nodeType":"1175","endLine":543,"endColumn":31,"suggestions":"1501"},{"ruleId":"1173","severity":1,"message":"1297","line":555,"column":8,"nodeType":"1175","endLine":555,"endColumn":31,"suggestions":"1502"},{"ruleId":"1173","severity":1,"message":"1297","line":563,"column":8,"nodeType":"1175","endLine":563,"endColumn":35,"suggestions":"1503"},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":16,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1197","line":3,"column":46,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":51},{"ruleId":"1155","severity":1,"message":"1191","line":3,"column":52,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":56},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":15,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1201","line":15,"column":18,"nodeType":"1157","messageId":"1158","endLine":15,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1224","line":104,"column":23,"nodeType":"1157","messageId":"1158","endLine":104,"endColumn":35},{"ruleId":"1173","severity":1,"message":"1230","line":184,"column":8,"nodeType":"1175","endLine":184,"endColumn":26,"suggestions":"1504"},{"ruleId":"1155","severity":1,"message":"1310","line":3,"column":20,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1401","line":6,"column":10,"nodeType":"1157","messageId":"1158","endLine":6,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1303","line":7,"column":10,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1201","line":9,"column":18,"nodeType":"1157","messageId":"1158","endLine":9,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1451","line":3,"column":8,"nodeType":"1157","messageId":"1158","endLine":3,"endColumn":17},{"ruleId":"1155","severity":1,"message":"1196","line":4,"column":38,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":45},{"ruleId":"1155","severity":1,"message":"1191","line":4,"column":54,"nodeType":"1157","messageId":"1158","endLine":4,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":7,"column":16,"nodeType":"1157","messageId":"1158","endLine":7,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1198","line":8,"column":8,"nodeType":"1157","messageId":"1158","endLine":8,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1330","line":11,"column":10,"nodeType":"1157","messageId":"1158","endLine":11,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1303","line":14,"column":10,"nodeType":"1157","messageId":"1158","endLine":14,"endColumn":14},{"ruleId":"1155","severity":1,"message":"1368","line":14,"column":28,"nodeType":"1157","messageId":"1158","endLine":14,"endColumn":39},{"ruleId":"1155","severity":1,"message":"1203","line":22,"column":8,"nodeType":"1157","messageId":"1158","endLine":22,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1452","line":24,"column":10,"nodeType":"1157","messageId":"1158","endLine":24,"endColumn":15},{"ruleId":"1155","severity":1,"message":"1223","line":99,"column":9,"nodeType":"1157","messageId":"1158","endLine":99,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1334","line":107,"column":10,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":16},{"ruleId":"1173","severity":1,"message":"1505","line":172,"column":6,"nodeType":"1175","endLine":172,"endColumn":24,"suggestions":"1506"},{"ruleId":"1155","severity":1,"message":"1507","line":272,"column":9,"nodeType":"1157","messageId":"1158","endLine":272,"endColumn":30},{"ruleId":"1179","severity":1,"message":"1180","line":308,"column":47,"nodeType":"1181","messageId":"1182","endLine":308,"endColumn":49},{"ruleId":"1155","severity":1,"message":"1401","line":27,"column":10,"nodeType":"1157","messageId":"1158","endLine":27,"endColumn":20},{"ruleId":"1155","severity":1,"message":"1386","line":29,"column":10,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":18},{"ruleId":"1155","severity":1,"message":"1458","line":29,"column":28,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":32},{"ruleId":"1155","severity":1,"message":"1237","line":29,"column":34,"nodeType":"1157","messageId":"1158","endLine":29,"endColumn":38},{"ruleId":"1155","severity":1,"message":"1169","line":56,"column":7,"nodeType":"1157","messageId":"1158","endLine":56,"endColumn":16},{"ruleId":"1155","severity":1,"message":"1439","line":102,"column":9,"nodeType":"1157","messageId":"1158","endLine":102,"endColumn":18},{"ruleId":"1173","severity":1,"message":"1440","line":108,"column":6,"nodeType":"1175","endLine":108,"endColumn":8,"suggestions":"1508"},{"ruleId":"1155","severity":1,"message":"1460","line":124,"column":9,"nodeType":"1157","messageId":"1158","endLine":124,"endColumn":25},{"ruleId":"1155","severity":1,"message":"1164","line":1,"column":17,"nodeType":"1157","messageId":"1158","endLine":1,"endColumn":28},{"ruleId":"1155","severity":1,"message":"1191","line":2,"column":54,"nodeType":"1157","messageId":"1158","endLine":2,"endColumn":58},{"ruleId":"1155","severity":1,"message":"1193","line":5,"column":16,"nodeType":"1157","messageId":"1158","endLine":5,"endColumn":27},{"ruleId":"1155","severity":1,"message":"1509","line":100,"column":10,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1510","line":100,"column":28,"nodeType":"1157","messageId":"1158","endLine":100,"endColumn":47},{"ruleId":"1155","severity":1,"message":"1511","line":101,"column":10,"nodeType":"1157","messageId":"1158","endLine":101,"endColumn":29},{"ruleId":"1155","severity":1,"message":"1512","line":101,"column":31,"nodeType":"1157","messageId":"1158","endLine":101,"endColumn":53},{"ruleId":"1155","severity":1,"message":"1412","line":107,"column":9,"nodeType":"1157","messageId":"1158","endLine":107,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1316","line":114,"column":10,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":24},{"ruleId":"1155","severity":1,"message":"1317","line":114,"column":26,"nodeType":"1157","messageId":"1158","endLine":114,"endColumn":43},{"ruleId":"1173","severity":1,"message":"1442","line":155,"column":6,"nodeType":"1175","endLine":155,"endColumn":8,"suggestions":"1513"},{"ruleId":"1155","severity":1,"message":"1444","line":171,"column":12,"nodeType":"1157","messageId":"1158","endLine":171,"endColumn":26},{"ruleId":"1155","severity":1,"message":"1514","line":290,"column":13,"nodeType":"1157","messageId":"1158","endLine":290,"endColumn":14},{"ruleId":"1179","severity":1,"message":"1180","line":305,"column":24,"nodeType":"1181","messageId":"1182","endLine":305,"endColumn":26},{"ruleId":"1179","severity":1,"message":"1180","line":308,"column":31,"nodeType":"1181","messageId":"1182","endLine":308,"endColumn":33},{"ruleId":"1179","severity":1,"message":"1180","line":340,"column":47,"nodeType":"1181","messageId":"1182","endLine":340,"endColumn":49},{"ruleId":"1179","severity":1,"message":"1180","line":347,"column":42,"nodeType":"1181","messageId":"1182","endLine":347,"endColumn":44},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1515"],"no-negated-in-lhs",["1516"],"'Router' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'useHistory' is defined but never used.","'Sticky' is defined but never used.","'ClientRefferalForm' is defined but never used.","'useStyles' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'patientObjAge' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationState'. Either include it or remove the dependency array.","ArrayExpression",["1517"],"React Hook useEffect has a missing dependency: 'modalityCheck'. Either include it or remove the dependency array.",["1518"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tab' is defined but never used.","'Tabs' is defined but never used.","'makeStyles' is defined but never used.","'VisualisationHome' is defined but never used.","'momentLocalizer' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'CardContent' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'Spinner' is defined but never used.","'Input' is defined but never used.","'SaveIcon' is defined but never used.","'token' is defined but never used.","'baseUrl' is defined but never used.","'LabelRibbon' is defined but never used.","'Message' is defined but never used.","'PhoneInput' is defined but never used.","'Cookies' is defined but never used.","'kP' is assigned a value but never used.","'setKP' is assigned a value but never used.","'ageDisabled' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'temp' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","'hospitalNumStatus' is assigned a value but never used.","'setHospitalNumStatus' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'targetGroupValue' is assigned a value but never used.","'setTargetGroupValue' is assigned a value but never used.","'contentDropDown' is assigned a value but never used.","'history' is assigned a value but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["1519"],"'setPredictionValue' is assigned a value but never used.","'setSavingPrediction' is assigned a value but never used.","'setSavingRsult' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'knowledgeAssessment' and 'riskAssessment'. Either include them or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["1520"],"no-dupe-keys","Duplicate key 'consistentWeightFeverNightCough'.","ObjectExpression","Duplicate key 'soldPaidVaginalSex'.","'Table' is defined but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'LabelSui' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'Select' is defined but never used.","'provinces' is assigned a value but never used.","'isClientCurrentlyOnHiv' is assigned a value but never used.","'setClientCurrentlyOnHiv' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'selectedFamilyIndex' is assigned a value but never used.","'setSelectedFamilyIndex' is assigned a value but never used.","'isWillingToHaveChildrenTested' is assigned a value but never used.","'setIsWillingToHaveChildrenTested' is assigned a value but never used.","'setStateInfo' is assigned a value but never used.","'setLgaInfo' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'setFacilityName' is assigned a value but never used.","'arrayFamilyIndexRequestDto' is assigned a value but never used.","'setArrayFamilyIndexRequestDto' is assigned a value but never used.","'arrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'setArrayFamilyTestingTrackerRequestDTO' is assigned a value but never used.","'addIndexTracker' is assigned a value but never used.","'addIndexTracker2' is assigned a value but never used.","Duplicate key 'recencyTesting'.","'selectedState' is assigned a value but never used.","'selectedFacility' is assigned a value but never used.","'selectedLga' is assigned a value but never used.","'validateAddFamilyINdexDTO' is assigned a value but never used.","'generateIndexClientId' is assigned a value but never used.","'indexClientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1521"],"'checkPhoneNumberBasic' is assigned a value but never used.","'handleInputChangeObject' is assigned a value but never used.","'getProvinces' is assigned a value but never used.","'handleFamilyRelationshipChange' is assigned a value but never used.","'convertCodeToDisplay' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'handleDateOfBirthChange' is assigned a value but never used.","'validate' is assigned a value but never used.","'limit' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'allFacilities' is assigned a value but never used.","'setAllFacilities' is assigned a value but never used.","'receivingFacility' is assigned a value but never used.","'setReceivingFacility' is assigned a value but never used.","'selectedReceivingState' is assigned a value but never used.","'selectedReceivingFacility' is assigned a value but never used.","'selectedReceivingLga' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadGenders' and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1522"],"'hivTestDate' is assigned a value but never used.","'patientAge' is assigned a value but never used.","'CheckTestResult' is defined but never used.","'CheckTestResult2' is defined but never used.","React Hook useEffect has a missing dependency: 'objValues'. Either include it or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1523"],["1524"],["1525"],["1526"],["1527"],"'Link' is defined but never used.","'classes' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'setFamilyIndexList' is assigned a value but never used.","'handleAction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TargetGroupSetup' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1528"],"'Card' is defined but never used.","'Badge' is defined but never used.","'PersonIcon' is defined but never used.","'elicitedCount' is assigned a value but never used.","'setElicitedCount' is assigned a value but never used.","'setIsClientCurrentlyOnHiv' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'getPNSInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPartnerId', 'getStates', 'htsClientInformation', 'objValues', 'props?.basicInfo?.personResponseDto?.address?.address', and 'props.organizationInfo'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1529"],"'getAllRecordByHTSClientId' is assigned a value but never used.","'viewPnsInfo' is assigned a value but never used.","'handleItemClickPage' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1530","text":"1531"},{"range":"1532","text":"1531"},"'ToastContainer' is defined but never used.","'fontWeight' is defined but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'setClientCodeCheck' is assigned a value but never used.","'setSerialNumber' is assigned a value but never used.","'facilityShortCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateClientCode', 'country', 'getStates', 'objValues', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1533"],"'response' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"rencencyInterpretation\"] found.","Property","unnecessarilyComputedProperty",{"range":"1534","text":"1535"},{"range":"1536","text":"1535"},{"range":"1537","text":"1535"},{"range":"1538","text":"1535"},{"range":"1539","text":"1535"},{"range":"1540","text":"1535"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["1541"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'PNSList' is defined but never used.","'RefferalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'viewReferralInfo'. Either include it or remove the dependency array.",["1542"],"'htsResult2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentObject'. Either include it or remove the dependency array.",["1543"],"'useLocation' is defined but never used.","'patient' is assigned a value but never used.","'otherTestKitUserInfoAvailable' is assigned a value but never used.","'setIsUserInformationAvailable' is assigned a value but never used.","'kitUserInformation' is assigned a value but never used.","'setKitUserInformation' is assigned a value but never used.","'serviceNeeded' is assigned a value but never used.","'hasConductedHIVST' is assigned a value but never used.","'setHasConductedHIVST' is assigned a value but never used.","'style' is assigned a value but never used.","'updateUserInformation' is assigned a value but never used.","'clearUserInformationList' is assigned a value but never used.","'setAge' is assigned a value but never used.","'handleDateOfBirthChange1' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Dropdown' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","'options' is assigned a value but never used.","'options2' is assigned a value but never used.",{"range":"1544","text":"1531"},"'lastVisitCount' is assigned a value but never used.","'checkModality' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'patients' and 'patientsCurrentHts'. Either include them or remove the dependency array.",["1545"],"'useState' is defined but never used.",{"range":"1546","text":"1531"},"'FaUserPlus' is defined but never used.","'ReferralUnit' is defined but never used.","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'FetchHivstHistory'. Either include it or remove the dependency array.",["1547"],"'CardTitle' is defined but never used.","'CardText' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'toggle' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","'setHivTestDate' is assigned a value but never used.","'partnerId' is assigned a value but never used.","Duplicate key 'numberOfPartnerIdentifiedFromClientIndex'.","'getPartnerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStates', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'viewPnIsnfo'. Either include them or remove the dependency array.",["1548"],"'AddIndexContact' is defined but never used.","'isPMTCTModality' is assigned a value but never used.","'showRiskAssessment' is assigned a value but never used.",["1549"],["1550"],"'userInfoList' is assigned a value but never used.",{"range":"1551","text":"1535"},{"range":"1552","text":"1535"},{"range":"1553","text":"1535"},{"range":"1554","text":"1535"},{"range":"1555","text":"1535"},{"range":"1556","text":"1535"},["1557"],"'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["1558"],"React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1559"],"'getProvincesId' is defined but never used.",["1560"],["1561"],["1562"],["1563"],["1564"],["1565"],"'MatButton' is defined but never used.","'Modal' is defined but never used.","'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","'clientCodeCheck' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateClientCode'. Either include it or remove the dependency array.",["1566"],"'Menu' is defined but never used.",["1567"],"'handleIEditIndex' is assigned a value but never used.","'serviceMapping' is assigned a value but never used.",["1568"],"'setSelectedReceivingFacility' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStateByCountryId', 'loadGenders', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1569"],"React Hook useEffect has a missing dependency: 'props.row.row.id'. Either include it or remove the dependency array.",["1570"],"'postPayload' is assigned a value but never used.",["1571"],{"range":"1572","text":"1531"},"React Hook useEffect has a missing dependency: 'getListoFFamilyIndexInfo'. Either include it or remove the dependency array.",["1573"],["1574"],"'familIndexInfo' is assigned a value but never used.","'getFamilyIndexInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getListoFFamilyIndexInfo', 'loadGenders', 'props?.basicInfo?.personResponseDto?.address?.address', 'props.organizationInfo', and 'props?.patientObj?.personResponseDto?.address?.address'. Either include them or remove the dependency array.",["1575"],"'handleSubmitfamilyIndexRequestDto' is assigned a value but never used.","'handleSubmitfamilyTestingTrackerRequestDTO' is assigned a value but never used.","'CardBody' is defined but never used.","'facilities1' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'setSelectedLga' is assigned a value but never used.",["1576"],"'handleInputChangeLocation' is assigned a value but never used.",{"range":"1577","text":"1535"},{"range":"1578","text":"1535"},{"range":"1579","text":"1535"},{"range":"1580","text":"1535"},{"range":"1581","text":"1535"},{"range":"1582","text":"1535"},["1583"],"React Hook useEffect has a missing dependency: 'props.activePage.activeObject.riskStratificationResponseDto'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject.riskStratificationResponseDto', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject.riskStratificationResponseDto' in the reducer.",["1584"],["1585"],"'resultStatus' is assigned a value but never used.","'setResultStatus' is assigned a value but never used.",["1586"],["1587"],["1588"],["1589"],["1590"],["1591"],"React Hook useEffect has a missing dependency: 'props.activePage.activeObject'. Either include it or remove the dependency array. If 'setObjValues' needs the current value of 'props.activePage.activeObject', you can also switch to useReducer instead of useState and read 'props.activePage.activeObject' in the reducer.",["1592"],"'handleClientCodeCheck' is assigned a value but never used.",["1593"],"'stateUnitOptions' is assigned a value but never used.","'setStateUnitOptions' is assigned a value but never used.","'districtUnitOptions' is assigned a value but never used.","'setDistrictUnitOptions' is assigned a value but never used.",["1594"],"'m' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1595","fix":"1596"},{"desc":"1597","fix":"1598"},{"desc":"1599","fix":"1600"},{"desc":"1601","fix":"1602"},{"desc":"1603","fix":"1604"},{"desc":"1605","fix":"1606"},{"desc":"1607","fix":"1608"},{"desc":"1609","fix":"1610"},{"desc":"1611","fix":"1612"},{"desc":"1613","fix":"1614"},{"desc":"1615","fix":"1616"},{"desc":"1617","fix":"1618"},{"desc":"1619","fix":"1620"},[152,166],"token",[156,170],{"desc":"1621","fix":"1622"},[7777,7803],"\"rencencyInterpretation\"",[8067,8093],[8415,8441],[8695,8721],[8974,9000],[9062,9088],{"desc":"1623","fix":"1624"},{"desc":"1625","fix":"1626"},{"desc":"1627","fix":"1628"},[150,164],{"desc":"1629","fix":"1630"},[181,195],{"desc":"1631","fix":"1632"},{"desc":"1633","fix":"1634"},{"desc":"1599","fix":"1635"},{"desc":"1605","fix":"1636"},[7845,7871],[8135,8161],[8483,8509],[8763,8789],[9042,9068],[9130,9156],{"desc":"1623","fix":"1637"},{"desc":"1638","fix":"1639"},{"desc":"1640","fix":"1641"},{"desc":"1607","fix":"1642"},{"desc":"1609","fix":"1643"},{"desc":"1611","fix":"1644"},{"desc":"1613","fix":"1645"},{"desc":"1615","fix":"1646"},{"desc":"1601","fix":"1647"},{"desc":"1648","fix":"1649"},{"desc":"1638","fix":"1650"},{"desc":"1638","fix":"1651"},{"desc":"1652","fix":"1653"},{"desc":"1654","fix":"1655"},{"desc":"1638","fix":"1656"},[191,205],{"desc":"1657","fix":"1658"},{"desc":"1640","fix":"1659"},{"desc":"1660","fix":"1661"},{"desc":"1654","fix":"1662"},[7119,7145],[7409,7435],[7757,7783],[8037,8063],[8316,8342],[8404,8430],{"desc":"1623","fix":"1663"},{"desc":"1664","fix":"1665"},{"desc":"1666","fix":"1667"},{"desc":"1607","fix":"1668"},{"desc":"1609","fix":"1669"},{"desc":"1611","fix":"1670"},{"desc":"1613","fix":"1671"},{"desc":"1615","fix":"1672"},{"desc":"1601","fix":"1673"},{"desc":"1674","fix":"1675"},{"desc":"1638","fix":"1676"},{"desc":"1677","fix":"1678"},"Update the dependencies array to be: [locationState]",{"range":"1679","text":"1680"},"Update the dependencies array to be: [modalityCheck, patientObj]",{"range":"1681","text":"1682"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"1683","text":"1684"},"Update the dependencies array to be: [knowledgeAssessment, props.patientObj, riskAssessment]",{"range":"1685","text":"1686"},"Update the dependencies array to be: [loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1687","text":"1688"},"Update the dependencies array to be: [loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1689","text":"1690"},"Update the dependencies array to be: [initialTest1.result, objValues]",{"range":"1691","text":"1692"},"Update the dependencies array to be: [confirmatoryTest.result, objValues]",{"range":"1693","text":"1694"},"Update the dependencies array to be: [objValues, tieBreakerTest.result]",{"range":"1695","text":"1696"},"Update the dependencies array to be: [initialTest12.result2, objValues]",{"range":"1697","text":"1698"},"Update the dependencies array to be: [confirmatoryTest2.result2, objValues]",{"range":"1699","text":"1700"},"Update the dependencies array to be: [TargetGroupSetup, objValues.age, props]",{"range":"1701","text":"1702"},"Update the dependencies array to be: [getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",{"range":"1703","text":"1704"},"Update the dependencies array to be: [objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",{"range":"1705","text":"1706"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"1707","text":"1708"},"Update the dependencies array to be: [viewReferralInfo]",{"range":"1709","text":"1710"},"Update the dependencies array to be: [PatientCurrentObject]",{"range":"1711","text":"1712"},"Update the dependencies array to be: [props.patientObj, props.activePage, patients, patientsCurrentHts]",{"range":"1713","text":"1714"},"Update the dependencies array to be: [FetchHivstHistory, props.patientObj]",{"range":"1715","text":"1716"},"Update the dependencies array to be: [getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",{"range":"1717","text":"1718"},{"range":"1719","text":"1684"},{"range":"1720","text":"1690"},{"range":"1721","text":"1708"},"Update the dependencies array to be: [patients]",{"range":"1722","text":"1723"},"Update the dependencies array to be: [getStates, props.patientObj]",{"range":"1724","text":"1725"},{"range":"1726","text":"1692"},{"range":"1727","text":"1694"},{"range":"1728","text":"1696"},{"range":"1729","text":"1698"},{"range":"1730","text":"1700"},{"range":"1731","text":"1686"},"Update the dependencies array to be: [props.patientObj, facilityCode, CreateClientCode]",{"range":"1732","text":"1733"},{"range":"1734","text":"1723"},{"range":"1735","text":"1723"},"Update the dependencies array to be: [getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1736","text":"1737"},"Update the dependencies array to be: [props.row.row.id]",{"range":"1738","text":"1739"},{"range":"1740","text":"1723"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, props.patientObj]",{"range":"1741","text":"1742"},{"range":"1743","text":"1725"},"Update the dependencies array to be: [getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",{"range":"1744","text":"1745"},{"range":"1746","text":"1739"},{"range":"1747","text":"1708"},"Update the dependencies array to be: [props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",{"range":"1748","text":"1749"},"Update the dependencies array to be: [postTest, props.patientObj]",{"range":"1750","text":"1751"},{"range":"1752","text":"1692"},{"range":"1753","text":"1694"},{"range":"1754","text":"1696"},{"range":"1755","text":"1698"},{"range":"1756","text":"1700"},{"range":"1757","text":"1686"},"Update the dependencies array to be: [props.activePage.activeObject, props?.patientObj]",{"range":"1758","text":"1759"},{"range":"1760","text":"1723"},"Update the dependencies array to be: [getStates]",{"range":"1761","text":"1762"},[8014,8016],"[locationState]",[8411,8423],"[modalityCheck, patientObj]",[5510,5552],"[props.patientObj, postTest.hivTestResult, postTest]",[7292,7310],"[knowledgeAssessment, props.patientObj, riskAssessment]",[16561,16563],"[loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[7161,7163],"[loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[16228,16249],"[initialTest1.result, objValues]",[16765,16790],"[confirmatoryTest.result, objValues]",[17233,17256],"[objValues, tieBreakerTest.result]",[17505,17528],"[initialTest12.result2, objValues]",[17702,17729],"[confirmatoryTest2.result2, objValues]",[5538,5553],"[TargetGroupSetup, objValues.age, props]",[11320,11338],"[getPartnerId, getStates, htsClientInformation, objValues, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props.patientObj]",[14334,14398],"[objValues.age, props?.patientObj, props.extra.age, facilityCode, getStates, CreateClientCode, props, objValues, country]",[9924,10038],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[5804,5806],"[viewReferralInfo]",[2632,2634],"[PatientCurrentObject]",[1808,1844],"[props.patientObj, props.activePage, patients, patientsCurrentHts]",[3739,3757],"[FetchHivstHistory, props.patientObj]",[11349,11367],"[getStates, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj, viewPnIsnfo]",[6349,6391],[6959,6961],[9178,9292],[4178,4180],"[patients]",[4161,4179],"[getStates, props.patientObj]",[15000,15021],[15541,15566],[16012,16035],[16287,16310],[16487,16514],[7147,7165],[7942,7974],"[props.patientObj, facilityCode, CreateClientCode]",[3841,3843],[3914,3916],[7842,7844],"[getStateByCountryId, loadGenders, props?.patientObj?.personResponseDto?.address?.address]",[12997,12999],"[props.row.row.id]",[3841,3843],[4570,4588],"[getListoFFamilyIndexInfo, props.patientObj]",[4161,4179],[19343,19345],"[getListoFFamilyIndexInfo, loadGenders, props?.basicInfo?.personResponseDto?.address?.address, props.organizationInfo, props?.patientObj?.personResponseDto?.address?.address]",[6733,6735],[9301,9415],[5680,5698],"[props.activePage.activeObject.riskStratificationResponseDto, props.patientObj]",[6919,6937],"[postTest, props.patientObj]",[17609,17630],[18236,18261],[18774,18797],[19094,19117],[19319,19346],[7069,7087],[5223,5241],"[props.activePage.activeObject, props?.patientObj]",[3841,3843],[4331,4333],"[getStates]"]